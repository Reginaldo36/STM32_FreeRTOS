ARM GAS  /tmp/cc4r6sqw.s 			page 1


   1              		.cpu cortex-m3
   2              		.arch armv7-m
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1	@ Tag_ABI_FP_denormal
   5              		.eabi_attribute 21, 1	@ Tag_ABI_FP_exceptions
   6              		.eabi_attribute 23, 3	@ Tag_ABI_FP_number_model
   7              		.eabi_attribute 24, 1	@ Tag_ABI_align8_needed
   8              		.eabi_attribute 25, 1	@ Tag_ABI_align8_preserved
   9              		.eabi_attribute 26, 1	@ Tag_ABI_enum_size
  10              		.eabi_attribute 30, 4	@ Tag_ABI_optimization_goals
  11              		.eabi_attribute 34, 1	@ Tag_CPU_unaligned_access
  12              		.eabi_attribute 18, 4	@ Tag_ABI_PCS_wchar_t
  13              		.file	"main.c"
  14              	@ GNU C17 (GNU Arm Embedded Toolchain 10.3-2021.10) version 10.3.1 20210824 (release) (arm-none-eab
  15              	@	compiled by GNU C version 4.8.4, GMP version 6.1.0, MPFR version 3.1.4, MPC version 1.0.3, isl ve
  16              	
  17              	@ GGC heuristics: --param ggc-min-expand=100 --param ggc-min-heapsize=131072
  18              	@ options passed:  -I . -I ../8-LCD-TEMP-STP_Motor_IR
  19              	@ -I ../stm32f10x_lib/CMSIS/CM3/CoreSupport
  20              	@ -I ../stm32f10x_lib/CMSIS/CM3/DeviceSupport/ST/STM32F10x
  21              	@ -I ../stm32f10x_lib/STM32F10x_StdPeriph_Driver/inc
  22              	@ -I ../stm32f10x_lib/STM32F10x_StdPeriph_Driver -I ../freertos/include
  23              	@ -I ../freertos/portable/GCC/ARM_CM3 -imultilib thumb/v7-m/nofp
  24              	@ -iprefix /usr/bin/../lib/gcc/arm-none-eabi/10.3.1/
  25              	@ -isysroot /usr/bin/../arm-none-eabi -D__USES_INITFINI__ -D STM32F10X_MD
  26              	@ -D USE_STDPERIPH_DRIVER -D HSE_VALUE=8000000 -D RUN_FROM_FLASH=1
  27              	@ ../8-LCD-TEMP-STP_Motor_IR/main.c -mcpu=cortex-m3 -mthumb
  28              	@ -mfloat-abi=soft -mlibarch=armv7-m -march=armv7-m
  29              	@ -auxbase-strip ../8-LCD-TEMP-STP_Motor_IR/main.o -g -gdwarf-2 -Os -Wall
  30              	@ -fomit-frame-pointer -fverbose-asm
  31              	@ options enabled:  -faggressive-loop-optimizations -fallocation-dce
  32              	@ -fauto-inc-dec -fbranch-count-reg -fcaller-saves -fcode-hoisting
  33              	@ -fcombine-stack-adjustments -fcompare-elim -fcprop-registers
  34              	@ -fcrossjumping -fcse-follow-jumps -fdefer-pop
  35              	@ -fdelete-null-pointer-checks -fdevirtualize -fdevirtualize-speculatively
  36              	@ -fdwarf2-cfi-asm -fearly-inlining -feliminate-unused-debug-symbols
  37              	@ -feliminate-unused-debug-types -fexpensive-optimizations
  38              	@ -fforward-propagate -ffp-int-builtin-inexact -ffunction-cse -fgcse
  39              	@ -fgcse-lm -fgnu-unique -fguess-branch-probability -fhoist-adjacent-loads
  40              	@ -fident -fif-conversion -fif-conversion2 -findirect-inlining -finline
  41              	@ -finline-atomics -finline-functions -finline-functions-called-once
  42              	@ -finline-small-functions -fipa-bit-cp -fipa-cp -fipa-icf
  43              	@ -fipa-icf-functions -fipa-icf-variables -fipa-profile -fipa-pure-const
  44              	@ -fipa-ra -fipa-reference -fipa-reference-addressable -fipa-sra
  45              	@ -fipa-stack-alignment -fipa-vrp -fira-hoist-pressure
  46              	@ -fira-share-save-slots -fira-share-spill-slots
  47              	@ -fisolate-erroneous-paths-dereference -fivopts -fkeep-static-consts
  48              	@ -fleading-underscore -flifetime-dse -flra-remat -fmath-errno
  49              	@ -fmerge-constants -fmerge-debug-strings -fmove-loop-invariants
  50              	@ -fomit-frame-pointer -foptimize-sibling-calls -fpartial-inlining
  51              	@ -fpeephole -fpeephole2 -fplt -fprefetch-loop-arrays -freg-struct-return
  52              	@ -freorder-blocks -freorder-functions -frerun-cse-after-loop
  53              	@ -fsched-critical-path-heuristic -fsched-dep-count-heuristic
  54              	@ -fsched-group-heuristic -fsched-interblock -fsched-last-insn-heuristic
  55              	@ -fsched-pressure -fsched-rank-heuristic -fsched-spec
  56              	@ -fsched-spec-insn-heuristic -fsched-stalled-insns-dep -fschedule-insns2
  57              	@ -fsection-anchors -fsemantic-interposition -fshow-column
ARM GAS  /tmp/cc4r6sqw.s 			page 2


  58              	@ -fshrink-wrap-separate -fsigned-zeros -fsplit-ivs-in-unroller
  59              	@ -fsplit-wide-types -fssa-backprop -fssa-phiopt -fstdarg-opt
  60              	@ -fstore-merging -fstrict-aliasing -fstrict-volatile-bitfields
  61              	@ -fsync-libcalls -fthread-jumps -ftoplevel-reorder -ftrapping-math
  62              	@ -ftree-bit-ccp -ftree-builtin-call-dce -ftree-ccp -ftree-ch
  63              	@ -ftree-coalesce-vars -ftree-copy-prop -ftree-cselim -ftree-dce
  64              	@ -ftree-dominator-opts -ftree-dse -ftree-forwprop -ftree-fre
  65              	@ -ftree-loop-distribute-patterns -ftree-loop-if-convert -ftree-loop-im
  66              	@ -ftree-loop-ivcanon -ftree-loop-optimize -ftree-parallelize-loops=
  67              	@ -ftree-phiprop -ftree-pre -ftree-pta -ftree-reassoc -ftree-scev-cprop
  68              	@ -ftree-sink -ftree-slsr -ftree-sra -ftree-switch-conversion
  69              	@ -ftree-tail-merge -ftree-ter -ftree-vrp -funit-at-a-time -fvar-tracking
  70              	@ -fvar-tracking-assignments -fverbose-asm -fzero-initialized-in-bss
  71              	@ -masm-syntax-unified -mbe32 -mfix-cortex-m3-ldrd -mlittle-endian
  72              	@ -mpic-data-is-text-relative -msched-prolog -mthumb -munaligned-access
  73              	@ -mvectorize-with-neon-quad
  74              	
  75              		.text
  76              	.Ltext0:
  77              		.cfi_sections	.debug_frame
  78              		.align	1
  79              		.syntax unified
  80              		.thumb
  81              		.thumb_func
  82              		.type	task2, %function
  83              	task2:
  84              	.LVL0:
  85              	.LFB53:
  86              		.file 1 "../8-LCD-TEMP-STP_Motor_IR/main.c"
   1:../8-LCD-TEMP-STP_Motor_IR/main.c **** /*
   2:../8-LCD-TEMP-STP_Motor_IR/main.c ****  * Projeto LCD
   3:../8-LCD-TEMP-STP_Motor_IR/main.c ****  *		Modificações necessárias: 
   4:../8-LCD-TEMP-STP_Motor_IR/main.c ****  *		  FreeRTOSConfig:
   5:../8-LCD-TEMP-STP_Motor_IR/main.c ****  *			 TICK_RATE_HZ definido em (100000)Hz -> 1µs
   6:../8-LCD-TEMP-STP_Motor_IR/main.c ****  *
   7:../8-LCD-TEMP-STP_Motor_IR/main.c ****  *	Clock do sistema: 
   8:../8-LCD-TEMP-STP_Motor_IR/main.c ****  *		72Mhz
   9:../8-LCD-TEMP-STP_Motor_IR/main.c ****  *	
  10:../8-LCD-TEMP-STP_Motor_IR/main.c ****  *	Lib construída para Arduíno UNO:
  11:../8-LCD-TEMP-STP_Motor_IR/main.c ****  *		myLcd.h
  12:../8-LCD-TEMP-STP_Motor_IR/main.c ****  *			#define delayMicroseconds(X)   vTaskDelay(X)
  13:../8-LCD-TEMP-STP_Motor_IR/main.c ****  *			#define delay(X)  vTaskDelay(X)
  14:../8-LCD-TEMP-STP_Motor_IR/main.c ****  * */
  15:../8-LCD-TEMP-STP_Motor_IR/main.c **** 
  16:../8-LCD-TEMP-STP_Motor_IR/main.c **** // FreeRTOS: 
  17:../8-LCD-TEMP-STP_Motor_IR/main.c **** 
  18:../8-LCD-TEMP-STP_Motor_IR/main.c **** #include "FreeRTOS.h"
  19:../8-LCD-TEMP-STP_Motor_IR/main.c **** #include "queue.h"
  20:../8-LCD-TEMP-STP_Motor_IR/main.c **** #include "task.h"
  21:../8-LCD-TEMP-STP_Motor_IR/main.c **** 
  22:../8-LCD-TEMP-STP_Motor_IR/main.c **** #include <stdlib.h> // funçao itoa
  23:../8-LCD-TEMP-STP_Motor_IR/main.c **** 
  24:../8-LCD-TEMP-STP_Motor_IR/main.c **** #define __delay_ms( TEMPO ) vTaskDelay(pdMS_TO_TICKS( TEMPO ))
  25:../8-LCD-TEMP-STP_Motor_IR/main.c **** #define __delay( TEMPO ) vTaskDelay( TEMPO )
  26:../8-LCD-TEMP-STP_Motor_IR/main.c **** #define TICKS_Q pdMS_TO_TICKS(10)
  27:../8-LCD-TEMP-STP_Motor_IR/main.c **** 
  28:../8-LCD-TEMP-STP_Motor_IR/main.c **** #include "stm32f10x.h"
ARM GAS  /tmp/cc4r6sqw.s 			page 3


  29:../8-LCD-TEMP-STP_Motor_IR/main.c **** #include "stm32f10x_tim.h"
  30:../8-LCD-TEMP-STP_Motor_IR/main.c **** #include "Me.h"
  31:../8-LCD-TEMP-STP_Motor_IR/main.c **** 
  32:../8-LCD-TEMP-STP_Motor_IR/main.c **** #include "myLcd.h"
  33:../8-LCD-TEMP-STP_Motor_IR/main.c **** #include "Serial.h"
  34:../8-LCD-TEMP-STP_Motor_IR/main.c **** #include "adc.h"
  35:../8-LCD-TEMP-STP_Motor_IR/main.c **** #include "infraRed.h"
  36:../8-LCD-TEMP-STP_Motor_IR/main.c **** 
  37:../8-LCD-TEMP-STP_Motor_IR/main.c **** #define BIN 2
  38:../8-LCD-TEMP-STP_Motor_IR/main.c **** #define OCT 8
  39:../8-LCD-TEMP-STP_Motor_IR/main.c **** #define DEC 10
  40:../8-LCD-TEMP-STP_Motor_IR/main.c **** #define HEX 16
  41:../8-LCD-TEMP-STP_Motor_IR/main.c **** 
  42:../8-LCD-TEMP-STP_Motor_IR/main.c **** // Vadc * 3.3 * 10 / 4096 (12 bits) 
  43:../8-LCD-TEMP-STP_Motor_IR/main.c **** #define ADC_Const 0.008056
  44:../8-LCD-TEMP-STP_Motor_IR/main.c **** #define VEL_ANIMACAO 15
  45:../8-LCD-TEMP-STP_Motor_IR/main.c **** 
  46:../8-LCD-TEMP-STP_Motor_IR/main.c **** 
  47:../8-LCD-TEMP-STP_Motor_IR/main.c **** // Codigos IR - Botoes:
  48:../8-LCD-TEMP-STP_Motor_IR/main.c **** #define CR_NUM_0 0xffe7feb9
  49:../8-LCD-TEMP-STP_Motor_IR/main.c **** #define CR_NUM_1 0xffe7fbb9
  50:../8-LCD-TEMP-STP_Motor_IR/main.c **** #define CR_NUM_4 0xffe7faf9
  51:../8-LCD-TEMP-STP_Motor_IR/main.c **** 
  52:../8-LCD-TEMP-STP_Motor_IR/main.c **** #define CR_B4 0xffe7fbb9
  53:../8-LCD-TEMP-STP_Motor_IR/main.c **** #define CR_B7 0xfc3ffe30
  54:../8-LCD-TEMP-STP_Motor_IR/main.c **** #define CR_B8 0xfc3ffe30
  55:../8-LCD-TEMP-STP_Motor_IR/main.c **** #define CR_B9 0xf83ffe30
  56:../8-LCD-TEMP-STP_Motor_IR/main.c **** 
  57:../8-LCD-TEMP-STP_Motor_IR/main.c **** // Quantidade max de elementos fila:
  58:../8-LCD-TEMP-STP_Motor_IR/main.c **** #define ELEMENTOS_FILA_LCD 2
  59:../8-LCD-TEMP-STP_Motor_IR/main.c **** #define ELEMENTOS_FILA_SM 1
  60:../8-LCD-TEMP-STP_Motor_IR/main.c **** #define ELEMENTOS_FILA_PWM 1
  61:../8-LCD-TEMP-STP_Motor_IR/main.c **** 
  62:../8-LCD-TEMP-STP_Motor_IR/main.c **** static QueueHandle_t LCD_Show_queue; 
  63:../8-LCD-TEMP-STP_Motor_IR/main.c **** static QueueHandle_t STMotor_queue; 
  64:../8-LCD-TEMP-STP_Motor_IR/main.c **** static QueueHandle_t PWM_data_queue; 
  65:../8-LCD-TEMP-STP_Motor_IR/main.c **** 
  66:../8-LCD-TEMP-STP_Motor_IR/main.c **** void LCD16x2_init(){
  67:../8-LCD-TEMP-STP_Motor_IR/main.c **** 
  68:../8-LCD-TEMP-STP_Motor_IR/main.c **** 	RCC->APB2ENR |= (1<<2);
  69:../8-LCD-TEMP-STP_Motor_IR/main.c **** 	GPIOA->CRL	 = 0x33333300; // Hab PA(2-7) out PP
  70:../8-LCD-TEMP-STP_Motor_IR/main.c **** 
  71:../8-LCD-TEMP-STP_Motor_IR/main.c **** 	set_bit(IO,RS);   set_bit(IO,RS);
  72:../8-LCD-TEMP-STP_Motor_IR/main.c **** 	set_bit(IO,EN);   set_bit(IO,D4);
  73:../8-LCD-TEMP-STP_Motor_IR/main.c **** 	set_bit(IO,D5);   set_bit(IO,D6);
  74:../8-LCD-TEMP-STP_Motor_IR/main.c **** 	set_bit(IO,D7);   disp_init();
  75:../8-LCD-TEMP-STP_Motor_IR/main.c **** 	disp_cmd(0x0C);
  76:../8-LCD-TEMP-STP_Motor_IR/main.c **** 
  77:../8-LCD-TEMP-STP_Motor_IR/main.c **** // Animação no visor:
  78:../8-LCD-TEMP-STP_Motor_IR/main.c **** 	disp_text("----------------", 0 ,0);
  79:../8-LCD-TEMP-STP_Motor_IR/main.c **** 	disp_text("================", 1, 0);
  80:../8-LCD-TEMP-STP_Motor_IR/main.c **** 
  81:../8-LCD-TEMP-STP_Motor_IR/main.c **** 	for (u8 i=0 ; i<16 ; i++){
  82:../8-LCD-TEMP-STP_Motor_IR/main.c **** 		__delay_ms(VEL_ANIMACAO);
  83:../8-LCD-TEMP-STP_Motor_IR/main.c **** 		disp_text("=", 0 ,i);
  84:../8-LCD-TEMP-STP_Motor_IR/main.c **** 		disp_text("-", 1 , 16 - i);
  85:../8-LCD-TEMP-STP_Motor_IR/main.c **** 	}
ARM GAS  /tmp/cc4r6sqw.s 			page 4


  86:../8-LCD-TEMP-STP_Motor_IR/main.c **** 	__delay_ms(VEL_ANIMACAO); 
  87:../8-LCD-TEMP-STP_Motor_IR/main.c **** 	disp_clear();
  88:../8-LCD-TEMP-STP_Motor_IR/main.c **** }
  89:../8-LCD-TEMP-STP_Motor_IR/main.c **** 
  90:../8-LCD-TEMP-STP_Motor_IR/main.c **** static void task1(void *args __attribute((unused))) {
  91:../8-LCD-TEMP-STP_Motor_IR/main.c **** 
  92:../8-LCD-TEMP-STP_Motor_IR/main.c **** 	/* [2---]
  93:../8-LCD-TEMP-STP_Motor_IR/main.c **** 	 *
  94:../8-LCD-TEMP-STP_Motor_IR/main.c **** 	 * Tarefa dedicada em mostrar informações no LCD 16x2.
  95:../8-LCD-TEMP-STP_Motor_IR/main.c **** 	 * Informações de temperatura, ficando aberto para mais
  96:../8-LCD-TEMP-STP_Motor_IR/main.c **** 	 * funcionalidades
  97:../8-LCD-TEMP-STP_Motor_IR/main.c **** 	 * 
  98:../8-LCD-TEMP-STP_Motor_IR/main.c **** 	 * */
  99:../8-LCD-TEMP-STP_Motor_IR/main.c **** 
 100:../8-LCD-TEMP-STP_Motor_IR/main.c **** 	LCD16x2_init();
 101:../8-LCD-TEMP-STP_Motor_IR/main.c **** 	RCC->APB2ENR |= 1<<3;
 102:../8-LCD-TEMP-STP_Motor_IR/main.c **** 	GPIOB->CRH |= 0x4<<0; // Input Pull
 103:../8-LCD-TEMP-STP_Motor_IR/main.c **** 	GPIOB->ODR |= 1<<8; // Pull-up
 104:../8-LCD-TEMP-STP_Motor_IR/main.c **** 	int msg_buf_rev, BUFF = 0;
 105:../8-LCD-TEMP-STP_Motor_IR/main.c **** 
 106:../8-LCD-TEMP-STP_Motor_IR/main.c **** 	char Float_point[6];
 107:../8-LCD-TEMP-STP_Motor_IR/main.c **** 	u8 ent_atual=1;
 108:../8-LCD-TEMP-STP_Motor_IR/main.c **** 
 109:../8-LCD-TEMP-STP_Motor_IR/main.c **** #define MAX_MENU 3
 110:../8-LCD-TEMP-STP_Motor_IR/main.c **** 
 111:../8-LCD-TEMP-STP_Motor_IR/main.c **** 	u8 RD = 0;
 112:../8-LCD-TEMP-STP_Motor_IR/main.c **** 	u32 code_ir;
 113:../8-LCD-TEMP-STP_Motor_IR/main.c **** 	char word_IR[8];
 114:../8-LCD-TEMP-STP_Motor_IR/main.c **** 
 115:../8-LCD-TEMP-STP_Motor_IR/main.c **** 	while(1){
 116:../8-LCD-TEMP-STP_Motor_IR/main.c **** // ----------- FILAS
 117:../8-LCD-TEMP-STP_Motor_IR/main.c **** 		if (xQueueReceive(LCD_Show_queue, 
 118:../8-LCD-TEMP-STP_Motor_IR/main.c **** 					&msg_buf_rev, pdMS_TO_TICKS(10)))
 119:../8-LCD-TEMP-STP_Motor_IR/main.c **** 			BUFF = msg_buf_rev;
 120:../8-LCD-TEMP-STP_Motor_IR/main.c **** 
 121:../8-LCD-TEMP-STP_Motor_IR/main.c **** 
 122:../8-LCD-TEMP-STP_Motor_IR/main.c **** 		code_ir = 0xffffff;
 123:../8-LCD-TEMP-STP_Motor_IR/main.c **** 		if (xQueuePeek(STMotor_queue, &code_ir, pdMS_TO_TICKS(10)))
 124:../8-LCD-TEMP-STP_Motor_IR/main.c **** 			itoa (code_ir, word_IR, 16);
 125:../8-LCD-TEMP-STP_Motor_IR/main.c **** 
 126:../8-LCD-TEMP-STP_Motor_IR/main.c **** // ----------- FILAS
 127:../8-LCD-TEMP-STP_Motor_IR/main.c **** 
 128:../8-LCD-TEMP-STP_Motor_IR/main.c **** 		while (RD > 12){
 129:../8-LCD-TEMP-STP_Motor_IR/main.c **** 			
 130:../8-LCD-TEMP-STP_Motor_IR/main.c **** 		RD = 0;
 131:../8-LCD-TEMP-STP_Motor_IR/main.c **** 		disp_clear();
 132:../8-LCD-TEMP-STP_Motor_IR/main.c **** 		} RD ++;
 133:../8-LCD-TEMP-STP_Motor_IR/main.c **** 
 134:../8-LCD-TEMP-STP_Motor_IR/main.c **** 
 135:../8-LCD-TEMP-STP_Motor_IR/main.c **** 
 136:../8-LCD-TEMP-STP_Motor_IR/main.c **** 		if ((GPIOB->IDR & (1<<8)) || code_ir == CR_B4){{
 137:../8-LCD-TEMP-STP_Motor_IR/main.c **** 			ent_atual ++;
 138:../8-LCD-TEMP-STP_Motor_IR/main.c **** 		}
 139:../8-LCD-TEMP-STP_Motor_IR/main.c **** 
 140:../8-LCD-TEMP-STP_Motor_IR/main.c **** 		if (ent_atual > MAX_MENU )
 141:../8-LCD-TEMP-STP_Motor_IR/main.c **** 			ent_atual = 1;
 142:../8-LCD-TEMP-STP_Motor_IR/main.c **** 		disp_clear();
ARM GAS  /tmp/cc4r6sqw.s 			page 5


 143:../8-LCD-TEMP-STP_Motor_IR/main.c **** 		}
 144:../8-LCD-TEMP-STP_Motor_IR/main.c **** 
 145:../8-LCD-TEMP-STP_Motor_IR/main.c **** 
 146:../8-LCD-TEMP-STP_Motor_IR/main.c **** 
 147:../8-LCD-TEMP-STP_Motor_IR/main.c **** 		if (ent_atual == 1 ){
 148:../8-LCD-TEMP-STP_Motor_IR/main.c **** 				disp_text("Temperatura - C", 0, 0); 
 149:../8-LCD-TEMP-STP_Motor_IR/main.c **** 
 150:../8-LCD-TEMP-STP_Motor_IR/main.c **** 				floatToString((float) BUFF * ADC_Const, Float_point, 2);
 151:../8-LCD-TEMP-STP_Motor_IR/main.c **** 				disp_text(Float_point, 1, 6);
 152:../8-LCD-TEMP-STP_Motor_IR/main.c **** 		} 
 153:../8-LCD-TEMP-STP_Motor_IR/main.c **** 		if (ent_atual == 2 ){
 154:../8-LCD-TEMP-STP_Motor_IR/main.c **** 			disp_text("----------------", 0 ,0);
 155:../8-LCD-TEMP-STP_Motor_IR/main.c **** 			disp_text("================", 1, 0);
 156:../8-LCD-TEMP-STP_Motor_IR/main.c **** 
 157:../8-LCD-TEMP-STP_Motor_IR/main.c **** 			for (u8 i=0 ; i<16 ; i++){
 158:../8-LCD-TEMP-STP_Motor_IR/main.c **** 				__delay_ms(10);
 159:../8-LCD-TEMP-STP_Motor_IR/main.c **** 				disp_text("=", 0 ,i);
 160:../8-LCD-TEMP-STP_Motor_IR/main.c **** 				disp_text("-", 1 , 15 - i);
 161:../8-LCD-TEMP-STP_Motor_IR/main.c **** 			}
 162:../8-LCD-TEMP-STP_Motor_IR/main.c **** 		}
 163:../8-LCD-TEMP-STP_Motor_IR/main.c **** 
 164:../8-LCD-TEMP-STP_Motor_IR/main.c **** 		if (ent_atual == 3 ){
 165:../8-LCD-TEMP-STP_Motor_IR/main.c **** 			disp_text("--- IR Hex Code", 0, 0); 
 166:../8-LCD-TEMP-STP_Motor_IR/main.c **** 			disp_text( word_IR, 1, 4);
 167:../8-LCD-TEMP-STP_Motor_IR/main.c **** 			__delay_ms(100);
 168:../8-LCD-TEMP-STP_Motor_IR/main.c **** 		}
 169:../8-LCD-TEMP-STP_Motor_IR/main.c **** 	}
 170:../8-LCD-TEMP-STP_Motor_IR/main.c **** }
 171:../8-LCD-TEMP-STP_Motor_IR/main.c **** 
 172:../8-LCD-TEMP-STP_Motor_IR/main.c **** static void task2(void *args __attribute ((unused))){
  87              		.loc 1 172 53 view -0
  88              		.cfi_startproc
  89              		@ Volatile: function does not return.
  90              		@ args = 0, pretend = 0, frame = 0
  91              		@ frame_needed = 0, uses_anonymous_args = 0
 173:../8-LCD-TEMP-STP_Motor_IR/main.c **** 	RCC->APB2ENR |= (1<<4); // En GPIOC
  92              		.loc 1 173 2 view .LVU1
  93              	@ ../8-LCD-TEMP-STP_Motor_IR/main.c:173: 	RCC->APB2ENR |= (1<<4); // En GPIOC
  94              		.loc 1 173 15 is_stmt 0 view .LVU2
  95 0000 094A     		ldr	r2, .L3	@ tmp120,
  96              	@ ../8-LCD-TEMP-STP_Motor_IR/main.c:172: static void task2(void *args __attribute ((unused))){
 172:../8-LCD-TEMP-STP_Motor_IR/main.c **** 	RCC->APB2ENR |= (1<<4); // En GPIOC
  97              		.loc 1 172 53 view .LVU3
  98 0002 08B5     		push	{r3, lr}	@
  99              	.LCFI0:
 100              		.cfi_def_cfa_offset 8
 101              		.cfi_offset 3, -8
 102              		.cfi_offset 14, -4
 103              	@ ../8-LCD-TEMP-STP_Motor_IR/main.c:173: 	RCC->APB2ENR |= (1<<4); // En GPIOC
 104              		.loc 1 173 15 view .LVU4
 105 0004 9369     		ldr	r3, [r2, #24]	@ _1, MEM[(struct RCC_TypeDef *)1073876992B].APB2ENR
 106              	@ ../8-LCD-TEMP-STP_Motor_IR/main.c:174: 	GPIOC->CRH	|= (0b11<< 20); // PC13 out PP 
 174:../8-LCD-TEMP-STP_Motor_IR/main.c **** 	GPIOC->CRH	|= (0b11<< 20); // PC13 out PP 
 107              		.loc 1 174 13 view .LVU5
 108 0006 094C     		ldr	r4, .L3+4	@ tmp122,
 109              	@ ../8-LCD-TEMP-STP_Motor_IR/main.c:173: 	RCC->APB2ENR |= (1<<4); // En GPIOC
 173:../8-LCD-TEMP-STP_Motor_IR/main.c **** 	RCC->APB2ENR |= (1<<4); // En GPIOC
ARM GAS  /tmp/cc4r6sqw.s 			page 6


 110              		.loc 1 173 15 view .LVU6
 111 0008 43F01003 		orr	r3, r3, #16	@ _2, _1,
 112 000c 9361     		str	r3, [r2, #24]	@ _2, MEM[(struct RCC_TypeDef *)1073876992B].APB2ENR
 113              		.loc 1 174 2 is_stmt 1 view .LVU7
 114              	@ ../8-LCD-TEMP-STP_Motor_IR/main.c:174: 	GPIOC->CRH	|= (0b11<< 20); // PC13 out PP 
 115              		.loc 1 174 13 is_stmt 0 view .LVU8
 116 000e 6368     		ldr	r3, [r4, #4]	@ _3, MEM[(struct GPIO_TypeDef *)1073811456B].CRH
 117 0010 43F44013 		orr	r3, r3, #3145728	@ _4, _3,
 118 0014 6360     		str	r3, [r4, #4]	@ _4, MEM[(struct GPIO_TypeDef *)1073811456B].CRH
 119              	.LVL1:
 120              	.L2:
 175:../8-LCD-TEMP-STP_Motor_IR/main.c **** 
 176:../8-LCD-TEMP-STP_Motor_IR/main.c **** 	while(1){
 121              		.loc 1 176 2 is_stmt 1 discriminator 1 view .LVU9
 177:../8-LCD-TEMP-STP_Motor_IR/main.c **** 		GPIOC->ODR	^= (1<<13);
 122              		.loc 1 177 3 discriminator 1 view .LVU10
 123              	@ ../8-LCD-TEMP-STP_Motor_IR/main.c:177: 		GPIOC->ODR	^= (1<<13);
 124              		.loc 1 177 14 is_stmt 0 discriminator 1 view .LVU11
 125 0016 E368     		ldr	r3, [r4, #12]	@ _5, MEM[(struct GPIO_TypeDef *)1073811456B].ODR
 126              	@ ../8-LCD-TEMP-STP_Motor_IR/main.c:178: 		__delay_ms(50);
 178:../8-LCD-TEMP-STP_Motor_IR/main.c **** 		__delay_ms(50);
 127              		.loc 1 178 3 discriminator 1 view .LVU12
 128 0018 41F28830 		movw	r0, #5000	@,
 129              	@ ../8-LCD-TEMP-STP_Motor_IR/main.c:177: 		GPIOC->ODR	^= (1<<13);
 177:../8-LCD-TEMP-STP_Motor_IR/main.c **** 		GPIOC->ODR	^= (1<<13);
 130              		.loc 1 177 14 discriminator 1 view .LVU13
 131 001c 83F40053 		eor	r3, r3, #8192	@ _6, _5,
 132 0020 E360     		str	r3, [r4, #12]	@ _6, MEM[(struct GPIO_TypeDef *)1073811456B].ODR
 133              		.loc 1 178 3 is_stmt 1 discriminator 1 view .LVU14
 134 0022 FFF7FEFF 		bl	vTaskDelay		@
 135              	.LVL2:
 176:../8-LCD-TEMP-STP_Motor_IR/main.c **** 		GPIOC->ODR	^= (1<<13);
 136              		.loc 1 176 7 discriminator 1 view .LVU15
 137 0026 F6E7     		b	.L2		@
 138              	.L4:
 139              		.align	2
 140              	.L3:
 141 0028 00100240 		.word	1073876992
 142 002c 00100140 		.word	1073811456
 143              		.cfi_endproc
 144              	.LFE53:
 145              		.size	task2, .-task2
 146              		.align	1
 147              		.syntax unified
 148              		.thumb
 149              		.thumb_func
 150              		.type	task6, %function
 151              	task6:
 152              	.LVL3:
 153              	.LFB57:
 179:../8-LCD-TEMP-STP_Motor_IR/main.c **** 	}
 180:../8-LCD-TEMP-STP_Motor_IR/main.c **** }
 181:../8-LCD-TEMP-STP_Motor_IR/main.c **** 
 182:../8-LCD-TEMP-STP_Motor_IR/main.c **** 
 183:../8-LCD-TEMP-STP_Motor_IR/main.c ****  void task3(void *args __attribute ((unused))){
 184:../8-LCD-TEMP-STP_Motor_IR/main.c **** 	/* [1---]
 185:../8-LCD-TEMP-STP_Motor_IR/main.c **** 	 *
ARM GAS  /tmp/cc4r6sqw.s 			page 7


 186:../8-LCD-TEMP-STP_Motor_IR/main.c **** 	 * Tarefa dedicada a leitura do sensor de temperatura
 187:../8-LCD-TEMP-STP_Motor_IR/main.c **** 	 * usando ADC9 -> PB1
 188:../8-LCD-TEMP-STP_Motor_IR/main.c **** 	 *
 189:../8-LCD-TEMP-STP_Motor_IR/main.c **** 	 * O valor amostrado deve ser transmitido a cada 500ms
 190:../8-LCD-TEMP-STP_Motor_IR/main.c **** 	 * usando área de memória compartilhada. -> [2---]
 191:../8-LCD-TEMP-STP_Motor_IR/main.c **** 	 *
 192:../8-LCD-TEMP-STP_Motor_IR/main.c **** 	 * */
 193:../8-LCD-TEMP-STP_Motor_IR/main.c **** 
 194:../8-LCD-TEMP-STP_Motor_IR/main.c **** 	ADC9_Configuration();
 195:../8-LCD-TEMP-STP_Motor_IR/main.c **** 	u32 Valor_ADC_normalizado; 
 196:../8-LCD-TEMP-STP_Motor_IR/main.c **** 
 197:../8-LCD-TEMP-STP_Motor_IR/main.c **** 	while(1){
 198:../8-LCD-TEMP-STP_Motor_IR/main.c **** 
 199:../8-LCD-TEMP-STP_Motor_IR/main.c **** 		Valor_ADC_normalizado = ADC2->DR;
 200:../8-LCD-TEMP-STP_Motor_IR/main.c **** 
 201:../8-LCD-TEMP-STP_Motor_IR/main.c **** 		if(uxQueueMessagesWaiting(LCD_Show_queue) <= ELEMENTOS_FILA_LCD){
 202:../8-LCD-TEMP-STP_Motor_IR/main.c **** 				xQueueSend(LCD_Show_queue, &Valor_ADC_normalizado, pdMS_TO_TICKS(10));
 203:../8-LCD-TEMP-STP_Motor_IR/main.c **** 		}
 204:../8-LCD-TEMP-STP_Motor_IR/main.c **** 		__delay_ms(500);
 205:../8-LCD-TEMP-STP_Motor_IR/main.c **** 		
 206:../8-LCD-TEMP-STP_Motor_IR/main.c **** 	}
 207:../8-LCD-TEMP-STP_Motor_IR/main.c **** }
 208:../8-LCD-TEMP-STP_Motor_IR/main.c **** 
 209:../8-LCD-TEMP-STP_Motor_IR/main.c **** static void task4(void *args __attribute ((unused))){
 210:../8-LCD-TEMP-STP_Motor_IR/main.c **** 	/* 
 211:../8-LCD-TEMP-STP_Motor_IR/main.c **** 	 * Tarefa dedicada a controlar um motor de passos usando
 212:../8-LCD-TEMP-STP_Motor_IR/main.c **** 	 * os pinos PB 15, 14, 13 e 12 
 213:../8-LCD-TEMP-STP_Motor_IR/main.c **** 	 *
 214:../8-LCD-TEMP-STP_Motor_IR/main.c **** 	 * A sequência deve ser mantida por causa da manipulação
 215:../8-LCD-TEMP-STP_Motor_IR/main.c **** 	 * bit a bit, definida no arquivo de cabeçalho Me.h
 216:../8-LCD-TEMP-STP_Motor_IR/main.c **** 	 *
 217:../8-LCD-TEMP-STP_Motor_IR/main.c **** 	 * Essa função receberá comandos da tarefa 5 -
 218:../8-LCD-TEMP-STP_Motor_IR/main.c **** 	 * decodificadora de infravermelho. 
 219:../8-LCD-TEMP-STP_Motor_IR/main.c **** 	 *
 220:../8-LCD-TEMP-STP_Motor_IR/main.c **** 	 * */
 221:../8-LCD-TEMP-STP_Motor_IR/main.c **** 
 222:../8-LCD-TEMP-STP_Motor_IR/main.c **** 	RCC->APB2ENR |= (1<<3); // En GPIOC
 223:../8-LCD-TEMP-STP_Motor_IR/main.c **** 	GPIOB->CRH	|= (0x3333<< 16); 
 224:../8-LCD-TEMP-STP_Motor_IR/main.c **** 	u32 code_ir; 
 225:../8-LCD-TEMP-STP_Motor_IR/main.c **** 
 226:../8-LCD-TEMP-STP_Motor_IR/main.c **** #define STP 6
 227:../8-LCD-TEMP-STP_Motor_IR/main.c **** 
 228:../8-LCD-TEMP-STP_Motor_IR/main.c **** 	while(1){
 229:../8-LCD-TEMP-STP_Motor_IR/main.c **** 		if (xQueueReceive(STMotor_queue, &code_ir, pdMS_TO_TICKS(10))) {
 230:../8-LCD-TEMP-STP_Motor_IR/main.c **** 
 231:../8-LCD-TEMP-STP_Motor_IR/main.c **** 			if (code_ir == CR_B7){
 232:../8-LCD-TEMP-STP_Motor_IR/main.c **** 				for (u32 i=0 ; i<=STP *360 ; i++){
 233:../8-LCD-TEMP-STP_Motor_IR/main.c **** 					controlarMotorPasso(i);
 234:../8-LCD-TEMP-STP_Motor_IR/main.c **** 					__delay(140);
 235:../8-LCD-TEMP-STP_Motor_IR/main.c **** 				}
 236:../8-LCD-TEMP-STP_Motor_IR/main.c **** 			}
 237:../8-LCD-TEMP-STP_Motor_IR/main.c **** 			if (code_ir == CR_B9){
 238:../8-LCD-TEMP-STP_Motor_IR/main.c **** 				for (u32 i=STP  *360+90 ; i>0 ; i--){
 239:../8-LCD-TEMP-STP_Motor_IR/main.c **** 					controlarMotorPasso(i);
 240:../8-LCD-TEMP-STP_Motor_IR/main.c **** 					__delay(130);
 241:../8-LCD-TEMP-STP_Motor_IR/main.c **** 				}
 242:../8-LCD-TEMP-STP_Motor_IR/main.c **** 				
ARM GAS  /tmp/cc4r6sqw.s 			page 8


 243:../8-LCD-TEMP-STP_Motor_IR/main.c **** 			}
 244:../8-LCD-TEMP-STP_Motor_IR/main.c **** 				// Stepp_end();
 245:../8-LCD-TEMP-STP_Motor_IR/main.c **** 		}
 246:../8-LCD-TEMP-STP_Motor_IR/main.c **** 	}
 247:../8-LCD-TEMP-STP_Motor_IR/main.c **** 
 248:../8-LCD-TEMP-STP_Motor_IR/main.c **** }
 249:../8-LCD-TEMP-STP_Motor_IR/main.c **** 
 250:../8-LCD-TEMP-STP_Motor_IR/main.c **** static void task5(void *args __attribute ((unused))){
 251:../8-LCD-TEMP-STP_Motor_IR/main.c **** 
 252:../8-LCD-TEMP-STP_Motor_IR/main.c **** 	/*
 253:../8-LCD-TEMP-STP_Motor_IR/main.c **** 	 * Tarefa responsável por decodificar dados recebido por
 254:../8-LCD-TEMP-STP_Motor_IR/main.c **** 	 * um sensor IR, localizado em:
 255:../8-LCD-TEMP-STP_Motor_IR/main.c **** 	 *		 PB6 
 256:../8-LCD-TEMP-STP_Motor_IR/main.c **** 	 *
 257:../8-LCD-TEMP-STP_Motor_IR/main.c **** 	 * Essa função enviará também, comandos para o display de
 258:../8-LCD-TEMP-STP_Motor_IR/main.c **** 	 * forma secundária, usando o 
 259:../8-LCD-TEMP-STP_Motor_IR/main.c **** 	 *		xQueuePeek para inspecionar a fila sem remover os
 260:../8-LCD-TEMP-STP_Motor_IR/main.c **** 	 *		dados
 261:../8-LCD-TEMP-STP_Motor_IR/main.c **** 	 *
 262:../8-LCD-TEMP-STP_Motor_IR/main.c **** 	 *	Para facilitar a idendificação dos códigos, será
 263:../8-LCD-TEMP-STP_Motor_IR/main.c **** 	 *	enviado pela USART
 264:../8-LCD-TEMP-STP_Motor_IR/main.c **** 	 * */
 265:../8-LCD-TEMP-STP_Motor_IR/main.c **** 
 266:../8-LCD-TEMP-STP_Motor_IR/main.c **** 	USART_init();
 267:../8-LCD-TEMP-STP_Motor_IR/main.c **** 	IR_Init();
 268:../8-LCD-TEMP-STP_Motor_IR/main.c **** 	char word_IR[8];
 269:../8-LCD-TEMP-STP_Motor_IR/main.c **** 
 270:../8-LCD-TEMP-STP_Motor_IR/main.c **** 	u32 code_ir;
 271:../8-LCD-TEMP-STP_Motor_IR/main.c **** 
 272:../8-LCD-TEMP-STP_Motor_IR/main.c **** 	while(1){
 273:../8-LCD-TEMP-STP_Motor_IR/main.c **** 		code_ir = 0xFFFFFFFF;
 274:../8-LCD-TEMP-STP_Motor_IR/main.c **** 		code_ir = IR_Read();
 275:../8-LCD-TEMP-STP_Motor_IR/main.c **** 		
 276:../8-LCD-TEMP-STP_Motor_IR/main.c **** 		// Converte os dados numéricos para string
 277:../8-LCD-TEMP-STP_Motor_IR/main.c **** 		// itoa (code_ir, word_IR, 10); 
 278:../8-LCD-TEMP-STP_Motor_IR/main.c **** 
 279:../8-LCD-TEMP-STP_Motor_IR/main.c **** 		if (code_ir != 0xffffffff){
 280:../8-LCD-TEMP-STP_Motor_IR/main.c **** 
 281:../8-LCD-TEMP-STP_Motor_IR/main.c **** 			USARTSend("\r\nCodigo: 0x");
 282:../8-LCD-TEMP-STP_Motor_IR/main.c **** 			itoa (code_ir, word_IR, 16);
 283:../8-LCD-TEMP-STP_Motor_IR/main.c **** 			USARTSend(word_IR);
 284:../8-LCD-TEMP-STP_Motor_IR/main.c **** 			
 285:../8-LCD-TEMP-STP_Motor_IR/main.c **** 			if (code_ir == CR_B7 || code_ir == CR_NUM_0){
 286:../8-LCD-TEMP-STP_Motor_IR/main.c **** 				// Testa se a fila está cheia
 287:../8-LCD-TEMP-STP_Motor_IR/main.c **** 				if( uxQueueMessagesWaiting( STMotor_queue ) <= ELEMENTOS_FILA_SM ){
 288:../8-LCD-TEMP-STP_Motor_IR/main.c **** 					xQueueSend(STMotor_queue, &code_ir, pdMS_TO_TICKS(10));
 289:../8-LCD-TEMP-STP_Motor_IR/main.c **** 				}
 290:../8-LCD-TEMP-STP_Motor_IR/main.c **** 			}
 291:../8-LCD-TEMP-STP_Motor_IR/main.c **** 
 292:../8-LCD-TEMP-STP_Motor_IR/main.c **** 			if (code_ir == CR_NUM_4 || code_ir == CR_NUM_1){
 293:../8-LCD-TEMP-STP_Motor_IR/main.c **** 				// Testa se a fila está cheia
 294:../8-LCD-TEMP-STP_Motor_IR/main.c **** 				if( uxQueueMessagesWaiting( PWM_data_queue ) <= ELEMENTOS_FILA_PWM ){
 295:../8-LCD-TEMP-STP_Motor_IR/main.c **** 					xQueueSend(PWM_data_queue, &code_ir, pdMS_TO_TICKS(10));
 296:../8-LCD-TEMP-STP_Motor_IR/main.c **** 			}
 297:../8-LCD-TEMP-STP_Motor_IR/main.c **** 		 }
 298:../8-LCD-TEMP-STP_Motor_IR/main.c **** 	  }
 299:../8-LCD-TEMP-STP_Motor_IR/main.c **** 		__delay(250);
ARM GAS  /tmp/cc4r6sqw.s 			page 9


 300:../8-LCD-TEMP-STP_Motor_IR/main.c **** 	}
 301:../8-LCD-TEMP-STP_Motor_IR/main.c **** }
 302:../8-LCD-TEMP-STP_Motor_IR/main.c **** 
 303:../8-LCD-TEMP-STP_Motor_IR/main.c **** static void task6(void *args __attribute((unused))) {
 154              		.loc 1 303 53 view -0
 155              		.cfi_startproc
 156              		@ args = 0, pretend = 0, frame = 8
 157              		@ frame_needed = 0, uses_anonymous_args = 0
 304:../8-LCD-TEMP-STP_Motor_IR/main.c **** 	// configure_PWM_TIM2();
 305:../8-LCD-TEMP-STP_Motor_IR/main.c ****    GPIOB->CRH &= ~(0xf << 8 ); // ip analogico PA10
 158              		.loc 1 305 4 view .LVU17
 159              	@ ../8-LCD-TEMP-STP_Motor_IR/main.c:303: static void task6(void *args __attribute((unused))) {
 303:../8-LCD-TEMP-STP_Motor_IR/main.c **** 	// configure_PWM_TIM2();
 160              		.loc 1 303 53 is_stmt 0 view .LVU18
 161 0030 F7B5     		push	{r0, r1, r2, r4, r5, r6, r7, lr}	@
 162              	.LCFI1:
 163              		.cfi_def_cfa_offset 32
 164              		.cfi_offset 4, -20
 165              		.cfi_offset 5, -16
 166              		.cfi_offset 6, -12
 167              		.cfi_offset 7, -8
 168              		.cfi_offset 14, -4
 169              	@ ../8-LCD-TEMP-STP_Motor_IR/main.c:305:    GPIOB->CRH &= ~(0xf << 8 ); // ip analogico PA10
 170              		.loc 1 305 15 view .LVU19
 171 0032 124A     		ldr	r2, .L14	@ tmp120,
 172              	@ ../8-LCD-TEMP-STP_Motor_IR/main.c:309:    u16 cicle_duty = 0xfff /2; 
 306:../8-LCD-TEMP-STP_Motor_IR/main.c **** 
 307:../8-LCD-TEMP-STP_Motor_IR/main.c **** 	u32 code_ir = 0x0; 
 308:../8-LCD-TEMP-STP_Motor_IR/main.c **** 
 309:../8-LCD-TEMP-STP_Motor_IR/main.c ****    u16 cicle_duty = 0xfff /2; 
 173              		.loc 1 309 8 view .LVU20
 174 0034 40F2FF74 		movw	r4, #2047	@ cicle_duty,
 175              	@ ../8-LCD-TEMP-STP_Motor_IR/main.c:305:    GPIOB->CRH &= ~(0xf << 8 ); // ip analogico PA10
 305:../8-LCD-TEMP-STP_Motor_IR/main.c **** 
 176              		.loc 1 305 15 view .LVU21
 177 0038 5368     		ldr	r3, [r2, #4]	@ _1, MEM[(struct GPIO_TypeDef *)1073810432B].CRH
 178              	@ ../8-LCD-TEMP-STP_Motor_IR/main.c:313: 		if ( xQueueReceive(PWM_data_queue, &code_ir, pdMS_TO_TIC
 310:../8-LCD-TEMP-STP_Motor_IR/main.c **** 		// TIM2->CCR1 = vpwm; 
 311:../8-LCD-TEMP-STP_Motor_IR/main.c **** 
 312:../8-LCD-TEMP-STP_Motor_IR/main.c ****    while(1){
 313:../8-LCD-TEMP-STP_Motor_IR/main.c **** 		if ( xQueueReceive(PWM_data_queue, &code_ir, pdMS_TO_TICKS(10))) {
 179              		.loc 1 313 8 view .LVU22
 180 003a 114D     		ldr	r5, .L14+4	@ tmp124,
 181              	@ ../8-LCD-TEMP-STP_Motor_IR/main.c:305:    GPIOB->CRH &= ~(0xf << 8 ); // ip analogico PA10
 305:../8-LCD-TEMP-STP_Motor_IR/main.c **** 
 182              		.loc 1 305 15 view .LVU23
 183 003c 23F47063 		bic	r3, r3, #3840	@ _2, _1,
 184 0040 5360     		str	r3, [r2, #4]	@ _2, MEM[(struct GPIO_TypeDef *)1073810432B].CRH
 307:../8-LCD-TEMP-STP_Motor_IR/main.c **** 
 185              		.loc 1 307 2 is_stmt 1 view .LVU24
 186              	@ ../8-LCD-TEMP-STP_Motor_IR/main.c:307: 	u32 code_ir = 0x0; 
 307:../8-LCD-TEMP-STP_Motor_IR/main.c **** 
 187              		.loc 1 307 6 is_stmt 0 view .LVU25
 188 0042 0023     		movs	r3, #0	@ tmp122,
 189              	@ ../8-LCD-TEMP-STP_Motor_IR/main.c:315: 			if( code_ir == CR_NUM_4)
 314:../8-LCD-TEMP-STP_Motor_IR/main.c **** 
 315:../8-LCD-TEMP-STP_Motor_IR/main.c **** 			if( code_ir == CR_NUM_4)
ARM GAS  /tmp/cc4r6sqw.s 			page 10


 190              		.loc 1 315 6 view .LVU26
 191 0044 0F4E     		ldr	r6, .L14+8	@ tmp134,
 192              	@ ../8-LCD-TEMP-STP_Motor_IR/main.c:318: 			if( code_ir == CR_NUM_1)
 316:../8-LCD-TEMP-STP_Motor_IR/main.c **** 				 cicle_duty +=3;
 317:../8-LCD-TEMP-STP_Motor_IR/main.c **** 
 318:../8-LCD-TEMP-STP_Motor_IR/main.c **** 			if( code_ir == CR_NUM_1)
 193              		.loc 1 318 6 view .LVU27
 194 0046 104F     		ldr	r7, .L14+12	@ tmp135,
 195              	@ ../8-LCD-TEMP-STP_Motor_IR/main.c:307: 	u32 code_ir = 0x0; 
 307:../8-LCD-TEMP-STP_Motor_IR/main.c **** 
 196              		.loc 1 307 6 view .LVU28
 197 0048 0193     		str	r3, [sp, #4]	@ tmp122, code_ir
 309:../8-LCD-TEMP-STP_Motor_IR/main.c **** 		// TIM2->CCR1 = vpwm; 
 198              		.loc 1 309 4 is_stmt 1 view .LVU29
 199              	.LVL4:
 200              	.L9:
 312:../8-LCD-TEMP-STP_Motor_IR/main.c **** 		if ( xQueueReceive(PWM_data_queue, &code_ir, pdMS_TO_TICKS(10))) {
 201              		.loc 1 312 4 view .LVU30
 313:../8-LCD-TEMP-STP_Motor_IR/main.c **** 
 202              		.loc 1 313 3 view .LVU31
 203              	@ ../8-LCD-TEMP-STP_Motor_IR/main.c:313: 		if ( xQueueReceive(PWM_data_queue, &code_ir, pdMS_TO_TIC
 313:../8-LCD-TEMP-STP_Motor_IR/main.c **** 
 204              		.loc 1 313 8 is_stmt 0 view .LVU32
 205 004a 4FF47A72 		mov	r2, #1000	@,
 206 004e 2868     		ldr	r0, [r5]	@, PWM_data_queue
 207 0050 01A9     		add	r1, sp, #4	@,,
 208 0052 FFF7FEFF 		bl	xQueueReceive		@
 209              	.LVL5:
 210              	@ ../8-LCD-TEMP-STP_Motor_IR/main.c:313: 		if ( xQueueReceive(PWM_data_queue, &code_ir, pdMS_TO_TIC
 313:../8-LCD-TEMP-STP_Motor_IR/main.c **** 
 211              		.loc 1 313 6 view .LVU33
 212 0056 48B1     		cbz	r0, .L6	@ tmp136,
 315:../8-LCD-TEMP-STP_Motor_IR/main.c **** 				 cicle_duty +=3;
 213              		.loc 1 315 4 is_stmt 1 view .LVU34
 214              	@ ../8-LCD-TEMP-STP_Motor_IR/main.c:315: 			if( code_ir == CR_NUM_4)
 315:../8-LCD-TEMP-STP_Motor_IR/main.c **** 				 cicle_duty +=3;
 215              		.loc 1 315 16 is_stmt 0 view .LVU35
 216 0058 019B     		ldr	r3, [sp, #4]	@ code_ir.17_5, code_ir
 217              	@ ../8-LCD-TEMP-STP_Motor_IR/main.c:315: 			if( code_ir == CR_NUM_4)
 315:../8-LCD-TEMP-STP_Motor_IR/main.c **** 				 cicle_duty +=3;
 218              		.loc 1 315 6 view .LVU36
 219 005a B342     		cmp	r3, r6	@ code_ir.17_5, tmp134
 220 005c 0AD1     		bne	.L7		@,
 316:../8-LCD-TEMP-STP_Motor_IR/main.c **** 
 221              		.loc 1 316 6 is_stmt 1 view .LVU37
 222              	@ ../8-LCD-TEMP-STP_Motor_IR/main.c:316: 				 cicle_duty +=3;
 316:../8-LCD-TEMP-STP_Motor_IR/main.c **** 
 223              		.loc 1 316 17 is_stmt 0 view .LVU38
 224 005e 0334     		adds	r4, r4, #3	@ tmp126, cicle_duty,
 225              	.LVL6:
 226              	.L13:
 227              	@ ../8-LCD-TEMP-STP_Motor_IR/main.c:319: 				 cicle_duty -=3;
 319:../8-LCD-TEMP-STP_Motor_IR/main.c **** 				 cicle_duty -=3;
 228              		.loc 1 319 17 view .LVU39
 229 0060 A4B2     		uxth	r4, r4	@ cicle_duty, tmp128
 230              	.LVL7:
 231              	.L8:
ARM GAS  /tmp/cc4r6sqw.s 			page 11


 320:../8-LCD-TEMP-STP_Motor_IR/main.c **** 
 321:../8-LCD-TEMP-STP_Motor_IR/main.c **** 			if(cicle_duty >= 0xfff)
 232              		.loc 1 321 4 is_stmt 1 view .LVU40
 233              	@ ../8-LCD-TEMP-STP_Motor_IR/main.c:322: 				cicle_duty = 0;
 322:../8-LCD-TEMP-STP_Motor_IR/main.c **** 				cicle_duty = 0;
 234              		.loc 1 322 16 is_stmt 0 view .LVU41
 235 0062 40F6FE73 		movw	r3, #4094	@ tmp131,
 236 0066 9C42     		cmp	r4, r3	@ cicle_duty, tmp131
 237 0068 88BF     		it	hi		@
 238 006a 0024     		movhi	r4, #0	@, cicle_duty,
 239              	.LVL8:
 240              	.L6:
 323:../8-LCD-TEMP-STP_Motor_IR/main.c **** 		}
 324:../8-LCD-TEMP-STP_Motor_IR/main.c **** 
 325:../8-LCD-TEMP-STP_Motor_IR/main.c ****       
 326:../8-LCD-TEMP-STP_Motor_IR/main.c ****       TIM2->CCR1 = cicle_duty; 
 241              		.loc 1 326 7 is_stmt 1 view .LVU42
 242              	@ ../8-LCD-TEMP-STP_Motor_IR/main.c:326:       TIM2->CCR1 = cicle_duty; 
 243              		.loc 1 326 18 is_stmt 0 view .LVU43
 244 006c 4FF08043 		mov	r3, #1073741824	@ tmp132,
 245 0070 9C86     		strh	r4, [r3, #52]	@ movhi	@ cicle_duty, MEM[(struct TIM_TypeDef *)1073741824B].CCR1
 312:../8-LCD-TEMP-STP_Motor_IR/main.c **** 		if ( xQueueReceive(PWM_data_queue, &code_ir, pdMS_TO_TICKS(10))) {
 246              		.loc 1 312 9 is_stmt 1 view .LVU44
 247              	@ ../8-LCD-TEMP-STP_Motor_IR/main.c:313: 		if ( xQueueReceive(PWM_data_queue, &code_ir, pdMS_TO_TIC
 313:../8-LCD-TEMP-STP_Motor_IR/main.c **** 
 248              		.loc 1 313 6 is_stmt 0 view .LVU45
 249 0072 EAE7     		b	.L9		@
 250              	.L7:
 318:../8-LCD-TEMP-STP_Motor_IR/main.c **** 				 cicle_duty -=3;
 251              		.loc 1 318 4 is_stmt 1 view .LVU46
 252              	@ ../8-LCD-TEMP-STP_Motor_IR/main.c:318: 			if( code_ir == CR_NUM_1)
 318:../8-LCD-TEMP-STP_Motor_IR/main.c **** 				 cicle_duty -=3;
 253              		.loc 1 318 6 is_stmt 0 view .LVU47
 254 0074 BB42     		cmp	r3, r7	@ code_ir.17_5, tmp135
 255 0076 F4D1     		bne	.L8		@,
 319:../8-LCD-TEMP-STP_Motor_IR/main.c **** 
 256              		.loc 1 319 6 is_stmt 1 view .LVU48
 257              	@ ../8-LCD-TEMP-STP_Motor_IR/main.c:319: 				 cicle_duty -=3;
 319:../8-LCD-TEMP-STP_Motor_IR/main.c **** 
 258              		.loc 1 319 17 is_stmt 0 view .LVU49
 259 0078 033C     		subs	r4, r4, #3	@ tmp128, cicle_duty,
 260              	.LVL9:
 319:../8-LCD-TEMP-STP_Motor_IR/main.c **** 
 261              		.loc 1 319 17 view .LVU50
 262 007a F1E7     		b	.L13		@
 263              	.L15:
 264              		.align	2
 265              	.L14:
 266 007c 000C0140 		.word	1073810432
 267 0080 00000000 		.word	.LANCHOR0
 268 0084 F9FAE7FF 		.word	-1574151
 269 0088 B9FBE7FF 		.word	-1573959
 270              		.cfi_endproc
 271              	.LFE57:
 272              		.size	task6, .-task6
 273              		.align	1
 274              		.global	configure_PWM_TIM2
ARM GAS  /tmp/cc4r6sqw.s 			page 12


 275              		.syntax unified
 276              		.thumb
 277              		.thumb_func
 278              		.type	configure_PWM_TIM2, %function
 279              	configure_PWM_TIM2:
 280              	.LFB34:
 281              		.file 2 "../8-LCD-TEMP-STP_Motor_IR/Me.h"
   1:../8-LCD-TEMP-STP_Motor_IR/Me.h **** #include <math.h>
   2:../8-LCD-TEMP-STP_Motor_IR/Me.h **** #define __IO volatile
   3:../8-LCD-TEMP-STP_Motor_IR/Me.h **** 
   4:../8-LCD-TEMP-STP_Motor_IR/Me.h **** void SystemInit (void);
   5:../8-LCD-TEMP-STP_Motor_IR/Me.h **** void nvic_IntDisble(u8 IRQn);
   6:../8-LCD-TEMP-STP_Motor_IR/Me.h **** void nvic_intEnable(u8 IRQn);
   7:../8-LCD-TEMP-STP_Motor_IR/Me.h **** void set_system_clock_to_25Mhz (void);
   8:../8-LCD-TEMP-STP_Motor_IR/Me.h **** void set_system_clock_to_72Mhz(void);
   9:../8-LCD-TEMP-STP_Motor_IR/Me.h **** void Delay ( __IO u32 T );
  10:../8-LCD-TEMP-STP_Motor_IR/Me.h **** void enable_TIM3_delay (void);
  11:../8-LCD-TEMP-STP_Motor_IR/Me.h **** void ADC1_configure();
  12:../8-LCD-TEMP-STP_Motor_IR/Me.h **** 
  13:../8-LCD-TEMP-STP_Motor_IR/Me.h **** void configure_PWM_TIM2(){
 282              		.loc 2 13 26 is_stmt 1 view -0
 283              		.cfi_startproc
 284              		@ args = 0, pretend = 0, frame = 0
 285              		@ frame_needed = 0, uses_anonymous_args = 0
 286              		@ link register save eliminated.
  14:../8-LCD-TEMP-STP_Motor_IR/Me.h **** /* Configurado com o exemplo do datasheet pag "387 / 1136" */
  15:../8-LCD-TEMP-STP_Motor_IR/Me.h **** 
  16:../8-LCD-TEMP-STP_Motor_IR/Me.h ****    RCC->APB2ENR |= 0b101 << 0 ; /*Habilita o AFIO GPIOA */
 287              		.loc 2 16 4 view .LVU52
 288              	@ ../8-LCD-TEMP-STP_Motor_IR/Me.h:16:    RCC->APB2ENR |= 0b101 << 0 ; /*Habilita o AFIO GPIOA */
 289              		.loc 2 16 17 is_stmt 0 view .LVU53
 290 008c 284B     		ldr	r3, .L17	@ tmp141,
 291 008e 9A69     		ldr	r2, [r3, #24]	@ _1, MEM[(struct RCC_TypeDef *)1073876992B].APB2ENR
 292 0090 42F00502 		orr	r2, r2, #5	@ _2, _1,
 293 0094 9A61     		str	r2, [r3, #24]	@ _2, MEM[(struct RCC_TypeDef *)1073876992B].APB2ENR
  17:../8-LCD-TEMP-STP_Motor_IR/Me.h ****    RCC->APB1ENR |= 1 << 0; /*Habilita o TIMER 2 - CH na GPIO_A */
 294              		.loc 2 17 4 is_stmt 1 view .LVU54
 295              	@ ../8-LCD-TEMP-STP_Motor_IR/Me.h:17:    RCC->APB1ENR |= 1 << 0; /*Habilita o TIMER 2 - CH na GPIO_
 296              		.loc 2 17 17 is_stmt 0 view .LVU55
 297 0096 DA69     		ldr	r2, [r3, #28]	@ _3, MEM[(struct RCC_TypeDef *)1073876992B].APB1ENR
 298 0098 42F00102 		orr	r2, r2, #1	@ _4, _3,
 299 009c DA61     		str	r2, [r3, #28]	@ _4, MEM[(struct RCC_TypeDef *)1073876992B].APB1ENR
  18:../8-LCD-TEMP-STP_Motor_IR/Me.h **** 
  19:../8-LCD-TEMP-STP_Motor_IR/Me.h ****    GPIOA->CRL |= (0x0B << 0) ; /* AF O_PP pino PA0 */
 300              		.loc 2 19 4 is_stmt 1 view .LVU56
 301              	@ ../8-LCD-TEMP-STP_Motor_IR/Me.h:19:    GPIOA->CRL |= (0x0B << 0) ; /* AF O_PP pino PA0 */
 302              		.loc 2 19 15 is_stmt 0 view .LVU57
 303 009e 254A     		ldr	r2, .L17+4	@ tmp145,
 304 00a0 1368     		ldr	r3, [r2]	@ _5, MEM[(struct GPIO_TypeDef *)1073809408B].CRL
 305 00a2 43F00B03 		orr	r3, r3, #11	@ _6, _5,
 306 00a6 1360     		str	r3, [r2]	@ _6, MEM[(struct GPIO_TypeDef *)1073809408B].CRL
  20:../8-LCD-TEMP-STP_Motor_IR/Me.h **** 	AFIO->MAPR &= ~( 0b11 << 6);
 307              		.loc 2 20 2 is_stmt 1 view .LVU58
 308              	@ ../8-LCD-TEMP-STP_Motor_IR/Me.h:20: 	AFIO->MAPR &= ~( 0b11 << 6);
 309              		.loc 2 20 13 is_stmt 0 view .LVU59
 310 00a8 234B     		ldr	r3, .L17+8	@ tmp147,
 311 00aa 5A68     		ldr	r2, [r3, #4]	@ _7, MEM[(struct AFIO_TypeDef *)1073807360B].MAPR
ARM GAS  /tmp/cc4r6sqw.s 			page 13


 312 00ac 22F0C002 		bic	r2, r2, #192	@ _8, _7,
 313 00b0 5A60     		str	r2, [r3, #4]	@ _8, MEM[(struct AFIO_TypeDef *)1073807360B].MAPR
  21:../8-LCD-TEMP-STP_Motor_IR/Me.h ****    AFIO->MAPR &= ~( 0b11 << 8); /* [bit 26:24] SWJ_CFG [nota_2]
 314              		.loc 2 21 4 is_stmt 1 view .LVU60
 315              	@ ../8-LCD-TEMP-STP_Motor_IR/Me.h:21:    AFIO->MAPR &= ~( 0b11 << 8); /* [bit 26:24] SWJ_CFG [nota_
 316              		.loc 2 21 15 is_stmt 0 view .LVU61
 317 00b2 5A68     		ldr	r2, [r3, #4]	@ _9, MEM[(struct AFIO_TypeDef *)1073807360B].MAPR
 318 00b4 22F44072 		bic	r2, r2, #768	@ _10, _9,
 319 00b8 5A60     		str	r2, [r3, #4]	@ _10, MEM[(struct AFIO_TypeDef *)1073807360B].MAPR
  22:../8-LCD-TEMP-STP_Motor_IR/Me.h ****                  [bit 8] TIM3_REMAP[1:0]: TIM2 remapping [nota_3]*/ 
  23:../8-LCD-TEMP-STP_Motor_IR/Me.h **** 
  24:../8-LCD-TEMP-STP_Motor_IR/Me.h **** 	TIM2->CCMR1 |= 0b110 << 4; /*Bits 6:4 OC1M: Output compare 1 mode
 320              		.loc 2 24 2 is_stmt 1 view .LVU62
 321              	@ ../8-LCD-TEMP-STP_Motor_IR/Me.h:24: 	TIM2->CCMR1 |= 0b110 << 4; /*Bits 6:4 OC1M: Output compare 1
 322              		.loc 2 24 14 is_stmt 0 view .LVU63
 323 00ba 4FF08043 		mov	r3, #1073741824	@ tmp151,
 324 00be 1A8B     		ldrh	r2, [r3, #24]	@, MEM[(struct TIM_TypeDef *)1073741824B].CCMR1
 325 00c0 92B2     		uxth	r2, r2	@ _11, MEM[(struct TIM_TypeDef *)1073741824B].CCMR1
 326 00c2 42F06002 		orr	r2, r2, #96	@ _12, _11,
 327 00c6 1A83     		strh	r2, [r3, #24]	@ movhi	@ _12, MEM[(struct TIM_TypeDef *)1073741824B].CCMR1
  25:../8-LCD-TEMP-STP_Motor_IR/Me.h ****                                   110: PWM mode 1 */
  26:../8-LCD-TEMP-STP_Motor_IR/Me.h ****    TIM2->CCMR1 |= 1UL << 3; /* Bit 3 OC1PE: Output compare 1 preload enable**/
 328              		.loc 2 26 4 is_stmt 1 view .LVU64
 329              	@ ../8-LCD-TEMP-STP_Motor_IR/Me.h:26:    TIM2->CCMR1 |= 1UL << 3; /* Bit 3 OC1PE: Output compare 1 
 330              		.loc 2 26 16 is_stmt 0 view .LVU65
 331 00c8 1A8B     		ldrh	r2, [r3, #24]	@, MEM[(struct TIM_TypeDef *)1073741824B].CCMR1
 332 00ca 92B2     		uxth	r2, r2	@ _13, MEM[(struct TIM_TypeDef *)1073741824B].CCMR1
 333 00cc 42F00802 		orr	r2, r2, #8	@ _14, _13,
 334 00d0 1A83     		strh	r2, [r3, #24]	@ movhi	@ _14, MEM[(struct TIM_TypeDef *)1073741824B].CCMR1
  27:../8-LCD-TEMP-STP_Motor_IR/Me.h **** 
  28:../8-LCD-TEMP-STP_Motor_IR/Me.h **** 
  29:../8-LCD-TEMP-STP_Motor_IR/Me.h ****    TIM2->PSC = 709; /* 249;  25/250 - 1 => 0.1KHz  */
 335              		.loc 2 29 4 is_stmt 1 view .LVU66
 336              	@ ../8-LCD-TEMP-STP_Motor_IR/Me.h:29:    TIM2->PSC = 709; /* 249;  25/250 - 1 => 0.1KHz  */
 337              		.loc 2 29 14 is_stmt 0 view .LVU67
 338 00d2 40F2C522 		movw	r2, #709	@ tmp165,
 339 00d6 1A85     		strh	r2, [r3, #40]	@ movhi	@ tmp165, MEM[(struct TIM_TypeDef *)1073741824B].PSC
  30:../8-LCD-TEMP-STP_Motor_IR/Me.h ****    TIM2->ARR = 999; /* PWM period = (999 + 1) * 100KHz = 0.01 */
 340              		.loc 2 30 4 is_stmt 1 view .LVU68
 341              	@ ../8-LCD-TEMP-STP_Motor_IR/Me.h:30:    TIM2->ARR = 999; /* PWM period = (999 + 1) * 100KHz = 0.01
 342              		.loc 2 30 14 is_stmt 0 view .LVU69
 343 00d8 40F2E732 		movw	r2, #999	@ tmp168,
 344 00dc 9A85     		strh	r2, [r3, #44]	@ movhi	@ tmp168, MEM[(struct TIM_TypeDef *)1073741824B].ARR
  31:../8-LCD-TEMP-STP_Motor_IR/Me.h ****    TIM2->CR1 &= ~(1<<4);
 345              		.loc 2 31 4 is_stmt 1 view .LVU70
 346              	@ ../8-LCD-TEMP-STP_Motor_IR/Me.h:31:    TIM2->CR1 &= ~(1<<4);
 347              		.loc 2 31 14 is_stmt 0 view .LVU71
 348 00de 1A88     		ldrh	r2, [r3]	@, MEM[(struct TIM_TypeDef *)1073741824B].CR1
 349 00e0 22F01002 		bic	r2, r2, #16	@ _16, MEM[(struct TIM_TypeDef *)1073741824B].CR1,
 350 00e4 1204     		lsls	r2, r2, #16	@ _16, _16,
 351 00e6 120C     		lsrs	r2, r2, #16	@ _16, _16,
 352 00e8 1A80     		strh	r2, [r3]	@ movhi	@ _16, MEM[(struct TIM_TypeDef *)1073741824B].CR1
  32:../8-LCD-TEMP-STP_Motor_IR/Me.h ****    TIM2->CR1 |= 1<<7;/*Bit 7 ARPE: Auto-reload preload enable */
 353              		.loc 2 32 4 is_stmt 1 view .LVU72
 354              	@ ../8-LCD-TEMP-STP_Motor_IR/Me.h:32:    TIM2->CR1 |= 1<<7;/*Bit 7 ARPE: Auto-reload preload enable
 355              		.loc 2 32 14 is_stmt 0 view .LVU73
 356 00ea 1A88     		ldrh	r2, [r3]	@, MEM[(struct TIM_TypeDef *)1073741824B].CR1
ARM GAS  /tmp/cc4r6sqw.s 			page 14


 357 00ec 92B2     		uxth	r2, r2	@ _17, MEM[(struct TIM_TypeDef *)1073741824B].CR1
 358 00ee 42F08002 		orr	r2, r2, #128	@ _18, _17,
 359 00f2 1A80     		strh	r2, [r3]	@ movhi	@ _18, MEM[(struct TIM_TypeDef *)1073741824B].CR1
  33:../8-LCD-TEMP-STP_Motor_IR/Me.h ****    TIM2->CCMR1 |= 1UL << 3; /* Bit 3 OC1PE: Output compare 1 preload enable - ---- CONSEGUIIIIIII *
 360              		.loc 2 33 4 is_stmt 1 view .LVU74
 361              	@ ../8-LCD-TEMP-STP_Motor_IR/Me.h:33:    TIM2->CCMR1 |= 1UL << 3; /* Bit 3 OC1PE: Output compare 1 
 362              		.loc 2 33 16 is_stmt 0 view .LVU75
 363 00f4 1A8B     		ldrh	r2, [r3, #24]	@, MEM[(struct TIM_TypeDef *)1073741824B].CCMR1
 364 00f6 92B2     		uxth	r2, r2	@ _19, MEM[(struct TIM_TypeDef *)1073741824B].CCMR1
 365 00f8 42F00802 		orr	r2, r2, #8	@ _20, _19,
 366 00fc 1A83     		strh	r2, [r3, #24]	@ movhi	@ _20, MEM[(struct TIM_TypeDef *)1073741824B].CCMR1
  34:../8-LCD-TEMP-STP_Motor_IR/Me.h ****    TIM2->EGR |=1<<0;
 367              		.loc 2 34 4 is_stmt 1 view .LVU76
 368              	@ ../8-LCD-TEMP-STP_Motor_IR/Me.h:34:    TIM2->EGR |=1<<0;
 369              		.loc 2 34 14 is_stmt 0 view .LVU77
 370 00fe 9A8A     		ldrh	r2, [r3, #20]	@, MEM[(struct TIM_TypeDef *)1073741824B].EGR
 371 0100 92B2     		uxth	r2, r2	@ _21, MEM[(struct TIM_TypeDef *)1073741824B].EGR
 372 0102 42F00102 		orr	r2, r2, #1	@ _22, _21,
 373 0106 9A82     		strh	r2, [r3, #20]	@ movhi	@ _22, MEM[(struct TIM_TypeDef *)1073741824B].EGR
  35:../8-LCD-TEMP-STP_Motor_IR/Me.h **** 
  36:../8-LCD-TEMP-STP_Motor_IR/Me.h ****    TIM2->CCER |= 1<<0; /*Bit 0 CC1E: Capture/Compare 1 output enable*/
 374              		.loc 2 36 4 is_stmt 1 view .LVU78
 375              	@ ../8-LCD-TEMP-STP_Motor_IR/Me.h:36:    TIM2->CCER |= 1<<0; /*Bit 0 CC1E: Capture/Compare 1 output
 376              		.loc 2 36 15 is_stmt 0 view .LVU79
 377 0108 1A8C     		ldrh	r2, [r3, #32]	@, MEM[(struct TIM_TypeDef *)1073741824B].CCER
 378 010a 92B2     		uxth	r2, r2	@ _23, MEM[(struct TIM_TypeDef *)1073741824B].CCER
 379 010c 42F00102 		orr	r2, r2, #1	@ _24, _23,
 380 0110 1A84     		strh	r2, [r3, #32]	@ movhi	@ _24, MEM[(struct TIM_TypeDef *)1073741824B].CCER
  37:../8-LCD-TEMP-STP_Motor_IR/Me.h ****    TIM2->CCER &= ~(1<<1); /*Bit 1 CC1P: Capture/Compare 1 output polarity
 381              		.loc 2 37 4 is_stmt 1 view .LVU80
 382              	@ ../8-LCD-TEMP-STP_Motor_IR/Me.h:37:    TIM2->CCER &= ~(1<<1); /*Bit 1 CC1P: Capture/Compare 1 out
 383              		.loc 2 37 15 is_stmt 0 view .LVU81
 384 0112 1A8C     		ldrh	r2, [r3, #32]	@, MEM[(struct TIM_TypeDef *)1073741824B].CCER
 385 0114 22F00202 		bic	r2, r2, #2	@ _26, MEM[(struct TIM_TypeDef *)1073741824B].CCER,
 386 0118 1204     		lsls	r2, r2, #16	@ _26, _26,
 387 011a 120C     		lsrs	r2, r2, #16	@ _26, _26,
 388 011c 1A84     		strh	r2, [r3, #32]	@ movhi	@ _26, MEM[(struct TIM_TypeDef *)1073741824B].CCER
  38:../8-LCD-TEMP-STP_Motor_IR/Me.h ****                             0: OC1 active high. */
  39:../8-LCD-TEMP-STP_Motor_IR/Me.h **** 
  40:../8-LCD-TEMP-STP_Motor_IR/Me.h ****    TIM2->CR1 |= 1<<0; //Habilita o clock
 389              		.loc 2 40 4 is_stmt 1 view .LVU82
 390              	@ ../8-LCD-TEMP-STP_Motor_IR/Me.h:40:    TIM2->CR1 |= 1<<0; //Habilita o clock
 391              		.loc 2 40 14 is_stmt 0 view .LVU83
 392 011e 1A88     		ldrh	r2, [r3]	@, MEM[(struct TIM_TypeDef *)1073741824B].CR1
 393 0120 92B2     		uxth	r2, r2	@ _27, MEM[(struct TIM_TypeDef *)1073741824B].CR1
 394 0122 42F00102 		orr	r2, r2, #1	@ _28, _27,
 395 0126 1A80     		strh	r2, [r3]	@ movhi	@ _28, MEM[(struct TIM_TypeDef *)1073741824B].CR1
  41:../8-LCD-TEMP-STP_Motor_IR/Me.h ****    TIM2->CCR1 = 00;
 396              		.loc 2 41 4 is_stmt 1 view .LVU84
 397              	@ ../8-LCD-TEMP-STP_Motor_IR/Me.h:41:    TIM2->CCR1 = 00;
 398              		.loc 2 41 15 is_stmt 0 view .LVU85
 399 0128 0022     		movs	r2, #0	@ tmp210,
 400 012a 9A86     		strh	r2, [r3, #52]	@ movhi	@ tmp210, MEM[(struct TIM_TypeDef *)1073741824B].CCR1
 401              	@ ../8-LCD-TEMP-STP_Motor_IR/Me.h:42: }
  42:../8-LCD-TEMP-STP_Motor_IR/Me.h **** }
 402              		.loc 2 42 1 view .LVU86
 403 012c 7047     		bx	lr	@
ARM GAS  /tmp/cc4r6sqw.s 			page 15


 404              	.L18:
 405 012e 00BF     		.align	2
 406              	.L17:
 407 0130 00100240 		.word	1073876992
 408 0134 00080140 		.word	1073809408
 409 0138 00000140 		.word	1073807360
 410              		.cfi_endproc
 411              	.LFE34:
 412              		.size	configure_PWM_TIM2, .-configure_PWM_TIM2
 413              		.align	1
 414              		.global	ADC1_configure
 415              		.syntax unified
 416              		.thumb
 417              		.thumb_func
 418              		.type	ADC1_configure, %function
 419              	ADC1_configure:
 420              	.LFB35:
  43:../8-LCD-TEMP-STP_Motor_IR/Me.h **** 
  44:../8-LCD-TEMP-STP_Motor_IR/Me.h **** void ADC1_configure(){
 421              		.loc 2 44 22 is_stmt 1 view -0
 422              		.cfi_startproc
 423              		@ args = 0, pretend = 0, frame = 0
 424              		@ frame_needed = 0, uses_anonymous_args = 0
 425              		@ link register save eliminated.
  45:../8-LCD-TEMP-STP_Motor_IR/Me.h **** 	RCC->APB2ENR |= 1UL<<2 ; // Hab. GPIOA
 426              		.loc 2 45 2 view .LVU88
 427              	@ ../8-LCD-TEMP-STP_Motor_IR/Me.h:45: 	RCC->APB2ENR |= 1UL<<2 ; // Hab. GPIOA
 428              		.loc 2 45 15 is_stmt 0 view .LVU89
 429 013c 1F4B     		ldr	r3, .L24	@ tmp141,
 430              	@ ../8-LCD-TEMP-STP_Motor_IR/Me.h:46: 	GPIOA->CRL &= ~(0x0F << 4); // Define A1 Input Analogic
  46:../8-LCD-TEMP-STP_Motor_IR/Me.h **** 	GPIOA->CRL &= ~(0x0F << 4); // Define A1 Input Analogic
 431              		.loc 2 46 13 view .LVU90
 432 013e 2049     		ldr	r1, .L24+4	@ tmp143,
 433              	@ ../8-LCD-TEMP-STP_Motor_IR/Me.h:45: 	RCC->APB2ENR |= 1UL<<2 ; // Hab. GPIOA
  45:../8-LCD-TEMP-STP_Motor_IR/Me.h **** 	RCC->APB2ENR |= 1UL<<2 ; // Hab. GPIOA
 434              		.loc 2 45 15 view .LVU91
 435 0140 9A69     		ldr	r2, [r3, #24]	@ _1, MEM[(struct RCC_TypeDef *)1073876992B].APB2ENR
 436 0142 42F00402 		orr	r2, r2, #4	@ _2, _1,
 437 0146 9A61     		str	r2, [r3, #24]	@ _2, MEM[(struct RCC_TypeDef *)1073876992B].APB2ENR
 438              		.loc 2 46 2 is_stmt 1 view .LVU92
 439              	@ ../8-LCD-TEMP-STP_Motor_IR/Me.h:46: 	GPIOA->CRL &= ~(0x0F << 4); // Define A1 Input Analogic
 440              		.loc 2 46 13 is_stmt 0 view .LVU93
 441 0148 0A68     		ldr	r2, [r1]	@ _3, MEM[(struct GPIO_TypeDef *)1073809408B].CRL
 442 014a 22F0F002 		bic	r2, r2, #240	@ _4, _3,
 443 014e 0A60     		str	r2, [r1]	@ _4, MEM[(struct GPIO_TypeDef *)1073809408B].CRL
  47:../8-LCD-TEMP-STP_Motor_IR/Me.h **** 	
  48:../8-LCD-TEMP-STP_Motor_IR/Me.h **** 	RCC->APB2ENR |= (1<<9); // Bit 9 ADC1EN: ADC 1 
 444              		.loc 2 48 2 is_stmt 1 view .LVU94
 445              	@ ../8-LCD-TEMP-STP_Motor_IR/Me.h:48: 	RCC->APB2ENR |= (1<<9); // Bit 9 ADC1EN: ADC 1 
 446              		.loc 2 48 15 is_stmt 0 view .LVU95
 447 0150 9A69     		ldr	r2, [r3, #24]	@ _5, MEM[(struct RCC_TypeDef *)1073876992B].APB2ENR
 448 0152 42F40072 		orr	r2, r2, #512	@ _6, _5,
 449 0156 9A61     		str	r2, [r3, #24]	@ _6, MEM[(struct RCC_TypeDef *)1073876992B].APB2ENR
  49:../8-LCD-TEMP-STP_Motor_IR/Me.h **** 									// interface clock enable
  50:../8-LCD-TEMP-STP_Motor_IR/Me.h **** 
  51:../8-LCD-TEMP-STP_Motor_IR/Me.h **** 	RCC->CFGR	|= (0b10 << 14); // Bits 15:14 ADCPRE:
 450              		.loc 2 51 2 is_stmt 1 view .LVU96
ARM GAS  /tmp/cc4r6sqw.s 			page 16


 451              	@ ../8-LCD-TEMP-STP_Motor_IR/Me.h:51: 	RCC->CFGR	|= (0b10 << 14); // Bits 15:14 ADCPRE:
 452              		.loc 2 51 12 is_stmt 0 view .LVU97
 453 0158 5A68     		ldr	r2, [r3, #4]	@ _7, MEM[(struct RCC_TypeDef *)1073876992B].CFGR
 454 015a 42F40042 		orr	r2, r2, #32768	@ _8, _7,
 455 015e 5A60     		str	r2, [r3, #4]	@ _8, MEM[(struct RCC_TypeDef *)1073876992B].CFGR
  52:../8-LCD-TEMP-STP_Motor_IR/Me.h **** 										  // ADC prescaler 10:
  53:../8-LCD-TEMP-STP_Motor_IR/Me.h **** 										  //    PCLK2 divided by 6
  54:../8-LCD-TEMP-STP_Motor_IR/Me.h **** 	// Enable End of Conversion (EOC) interrupt
  55:../8-LCD-TEMP-STP_Motor_IR/Me.h **** 	ADC1->CR1 |= (1 << 5);
 456              		.loc 2 55 2 is_stmt 1 view .LVU98
 457              	@ ../8-LCD-TEMP-STP_Motor_IR/Me.h:55: 	ADC1->CR1 |= (1 << 5);
 458              		.loc 2 55 12 is_stmt 0 view .LVU99
 459 0160 A3F56C43 		sub	r3, r3, #60416	@ tmp149, tmp149,
 460 0164 5A68     		ldr	r2, [r3, #4]	@ _9, MEM[(struct ADC_TypeDef *)1073816576B].CR1
 461 0166 42F02002 		orr	r2, r2, #32	@ _10, _9,
 462 016a 5A60     		str	r2, [r3, #4]	@ _10, MEM[(struct ADC_TypeDef *)1073816576B].CR1
  56:../8-LCD-TEMP-STP_Motor_IR/Me.h **** 
  57:../8-LCD-TEMP-STP_Motor_IR/Me.h **** 	// One conversion
  58:../8-LCD-TEMP-STP_Motor_IR/Me.h **** 	ADC1->SQR1 = 0x00000000;
 463              		.loc 2 58 2 is_stmt 1 view .LVU100
 464              	@ ../8-LCD-TEMP-STP_Motor_IR/Me.h:58: 	ADC1->SQR1 = 0x00000000;
 465              		.loc 2 58 13 is_stmt 0 view .LVU101
 466 016c 0022     		movs	r2, #0	@ tmp152,
 467 016e DA62     		str	r2, [r3, #44]	@ tmp152, MEM[(struct ADC_TypeDef *)1073816576B].SQR1
  59:../8-LCD-TEMP-STP_Motor_IR/Me.h **** 
  60:../8-LCD-TEMP-STP_Motor_IR/Me.h **** 	// Choose the analog channel to read
  61:../8-LCD-TEMP-STP_Motor_IR/Me.h **** 	// Since we want channel 10 to be the first
  62:../8-LCD-TEMP-STP_Motor_IR/Me.h **** 	//   conversion we write 10 to SQ1 bits (3:0)
  63:../8-LCD-TEMP-STP_Motor_IR/Me.h **** 	//   which is in SQR3 register. For multiple conversions
  64:../8-LCD-TEMP-STP_Motor_IR/Me.h **** 	//   keep writing the channel numbers to SQx bits.
  65:../8-LCD-TEMP-STP_Motor_IR/Me.h **** 	 ADC1->SQR3 = (10 << 0);
 468              		.loc 2 65 3 is_stmt 1 view .LVU102
 469              	@ ../8-LCD-TEMP-STP_Motor_IR/Me.h:65: 	 ADC1->SQR3 = (10 << 0);
 470              		.loc 2 65 14 is_stmt 0 view .LVU103
 471 0170 0A22     		movs	r2, #10	@ tmp154,
 472 0172 5A63     		str	r2, [r3, #52]	@ tmp154, MEM[(struct ADC_TypeDef *)1073816576B].SQR3
  66:../8-LCD-TEMP-STP_Motor_IR/Me.h **** 
  67:../8-LCD-TEMP-STP_Motor_IR/Me.h **** 	// Set up software trigger to start conversion
  68:../8-LCD-TEMP-STP_Motor_IR/Me.h **** 	ADC1->CR2 |= (7 << 17);  // Select SWSTART as trigger
 473              		.loc 2 68 2 is_stmt 1 view .LVU104
 474              	@ ../8-LCD-TEMP-STP_Motor_IR/Me.h:68: 	ADC1->CR2 |= (7 << 17);  // Select SWSTART as trigger
 475              		.loc 2 68 12 is_stmt 0 view .LVU105
 476 0174 9A68     		ldr	r2, [r3, #8]	@ _11, MEM[(struct ADC_TypeDef *)1073816576B].CR2
 477 0176 42F46022 		orr	r2, r2, #917504	@ _12, _11,
 478 017a 9A60     		str	r2, [r3, #8]	@ _12, MEM[(struct ADC_TypeDef *)1073816576B].CR2
  69:../8-LCD-TEMP-STP_Motor_IR/Me.h **** 	ADC1->CR2 |= (1 << 20);  // Enable external trigger
 479              		.loc 2 69 2 is_stmt 1 view .LVU106
 480              	@ ../8-LCD-TEMP-STP_Motor_IR/Me.h:69: 	ADC1->CR2 |= (1 << 20);  // Enable external trigger
 481              		.loc 2 69 12 is_stmt 0 view .LVU107
 482 017c 9A68     		ldr	r2, [r3, #8]	@ _13, MEM[(struct ADC_TypeDef *)1073816576B].CR2
 483 017e 42F48012 		orr	r2, r2, #1048576	@ _14, _13,
 484 0182 9A60     		str	r2, [r3, #8]	@ _14, MEM[(struct ADC_TypeDef *)1073816576B].CR2
  70:../8-LCD-TEMP-STP_Motor_IR/Me.h **** 
  71:../8-LCD-TEMP-STP_Motor_IR/Me.h **** 	// Enable continuous conversion
  72:../8-LCD-TEMP-STP_Motor_IR/Me.h **** 	ADC1->CR2 |= (1 << 1);
 485              		.loc 2 72 2 is_stmt 1 view .LVU108
 486              	@ ../8-LCD-TEMP-STP_Motor_IR/Me.h:72: 	ADC1->CR2 |= (1 << 1);
ARM GAS  /tmp/cc4r6sqw.s 			page 17


 487              		.loc 2 72 12 is_stmt 0 view .LVU109
 488 0184 9A68     		ldr	r2, [r3, #8]	@ _15, MEM[(struct ADC_TypeDef *)1073816576B].CR2
 489 0186 42F00202 		orr	r2, r2, #2	@ _16, _15,
 490 018a 9A60     		str	r2, [r3, #8]	@ _16, MEM[(struct ADC_TypeDef *)1073816576B].CR2
  73:../8-LCD-TEMP-STP_Motor_IR/Me.h **** 
  74:../8-LCD-TEMP-STP_Motor_IR/Me.h **** 	// enable_interrupt(ADC1_2_IRQn);
  75:../8-LCD-TEMP-STP_Motor_IR/Me.h **** 
  76:../8-LCD-TEMP-STP_Motor_IR/Me.h **** 	// Enable A/D conversion
  77:../8-LCD-TEMP-STP_Motor_IR/Me.h **** 	ADC1->CR2 |= (1 << 0);
 491              		.loc 2 77 2 is_stmt 1 view .LVU110
 492              	@ ../8-LCD-TEMP-STP_Motor_IR/Me.h:77: 	ADC1->CR2 |= (1 << 0);
 493              		.loc 2 77 12 is_stmt 0 view .LVU111
 494 018c 9A68     		ldr	r2, [r3, #8]	@ _17, MEM[(struct ADC_TypeDef *)1073816576B].CR2
 495 018e 42F00102 		orr	r2, r2, #1	@ _18, _17,
 496 0192 9A60     		str	r2, [r3, #8]	@ _18, MEM[(struct ADC_TypeDef *)1073816576B].CR2
  78:../8-LCD-TEMP-STP_Motor_IR/Me.h **** 
  79:../8-LCD-TEMP-STP_Motor_IR/Me.h **** 	// Calibration reset and start
  80:../8-LCD-TEMP-STP_Motor_IR/Me.h **** 	//    Optional for better accuracy.
  81:../8-LCD-TEMP-STP_Motor_IR/Me.h **** 	ADC1->CR2 |= (1 << 3);
 497              		.loc 2 81 2 is_stmt 1 view .LVU112
 498              	@ ../8-LCD-TEMP-STP_Motor_IR/Me.h:81: 	ADC1->CR2 |= (1 << 3);
 499              		.loc 2 81 12 is_stmt 0 view .LVU113
 500 0194 9A68     		ldr	r2, [r3, #8]	@ _19, MEM[(struct ADC_TypeDef *)1073816576B].CR2
 501 0196 42F00802 		orr	r2, r2, #8	@ _20, _19,
 502 019a 9A60     		str	r2, [r3, #8]	@ _20, MEM[(struct ADC_TypeDef *)1073816576B].CR2
  82:../8-LCD-TEMP-STP_Motor_IR/Me.h **** 	while((ADC1->CR2 & (1 << 3)));
 503              		.loc 2 82 2 is_stmt 1 view .LVU114
 504              	.L20:
 505              		.loc 2 82 31 discriminator 1 view .LVU115
 506              		.loc 2 82 7 discriminator 1 view .LVU116
 507              	@ ../8-LCD-TEMP-STP_Motor_IR/Me.h:82: 	while((ADC1->CR2 & (1 << 3)));
 508              		.loc 2 82 13 is_stmt 0 discriminator 1 view .LVU117
 509 019c 9A68     		ldr	r2, [r3, #8]	@ _21, MEM[(struct ADC_TypeDef *)1073816576B].CR2
 510              	@ ../8-LCD-TEMP-STP_Motor_IR/Me.h:82: 	while((ADC1->CR2 & (1 << 3)));
 511              		.loc 2 82 7 discriminator 1 view .LVU118
 512 019e 1107     		lsls	r1, r2, #28	@, _21,
 513 01a0 FCD4     		bmi	.L20		@,
  83:../8-LCD-TEMP-STP_Motor_IR/Me.h **** 	ADC1->CR2 |= (1 << 2);
 514              		.loc 2 83 2 is_stmt 1 view .LVU119
 515              	@ ../8-LCD-TEMP-STP_Motor_IR/Me.h:83: 	ADC1->CR2 |= (1 << 2);
 516              		.loc 2 83 12 is_stmt 0 view .LVU120
 517 01a2 9A68     		ldr	r2, [r3, #8]	@ _23, MEM[(struct ADC_TypeDef *)1073816576B].CR2
 518 01a4 42F00402 		orr	r2, r2, #4	@ _24, _23,
 519 01a8 9A60     		str	r2, [r3, #8]	@ _24, MEM[(struct ADC_TypeDef *)1073816576B].CR2
  84:../8-LCD-TEMP-STP_Motor_IR/Me.h **** 	while((ADC1->CR2 & (1 << 2)));
 520              		.loc 2 84 2 is_stmt 1 view .LVU121
 521              	@ ../8-LCD-TEMP-STP_Motor_IR/Me.h:84: 	while((ADC1->CR2 & (1 << 2)));
 522              		.loc 2 84 13 is_stmt 0 view .LVU122
 523 01aa 064B     		ldr	r3, .L24+8	@ tmp169,
 524              	.L21:
 525              		.loc 2 84 31 is_stmt 1 discriminator 1 view .LVU123
 526              		.loc 2 84 7 discriminator 1 view .LVU124
 527              	@ ../8-LCD-TEMP-STP_Motor_IR/Me.h:84: 	while((ADC1->CR2 & (1 << 2)));
 528              		.loc 2 84 13 is_stmt 0 discriminator 1 view .LVU125
 529 01ac 9A68     		ldr	r2, [r3, #8]	@ _25, MEM[(struct ADC_TypeDef *)1073816576B].CR2
 530              	@ ../8-LCD-TEMP-STP_Motor_IR/Me.h:84: 	while((ADC1->CR2 & (1 << 2)));
 531              		.loc 2 84 7 discriminator 1 view .LVU126
ARM GAS  /tmp/cc4r6sqw.s 			page 18


 532 01ae 5207     		lsls	r2, r2, #29	@, _25,
 533 01b0 FCD4     		bmi	.L21		@,
  85:../8-LCD-TEMP-STP_Motor_IR/Me.h **** 
  86:../8-LCD-TEMP-STP_Motor_IR/Me.h **** 	// Start conversion with software trigger
  87:../8-LCD-TEMP-STP_Motor_IR/Me.h **** 	ADC1->CR2 |= (1<<22);
 534              		.loc 2 87 2 is_stmt 1 view .LVU127
 535              	@ ../8-LCD-TEMP-STP_Motor_IR/Me.h:87: 	ADC1->CR2 |= (1<<22);
 536              		.loc 2 87 12 is_stmt 0 view .LVU128
 537 01b2 9A68     		ldr	r2, [r3, #8]	@ _27, MEM[(struct ADC_TypeDef *)1073816576B].CR2
 538 01b4 42F48002 		orr	r2, r2, #4194304	@ _28, _27,
 539 01b8 9A60     		str	r2, [r3, #8]	@ _28, MEM[(struct ADC_TypeDef *)1073816576B].CR2
 540              	@ ../8-LCD-TEMP-STP_Motor_IR/Me.h:90: }
  88:../8-LCD-TEMP-STP_Motor_IR/Me.h **** 	//
  89:../8-LCD-TEMP-STP_Motor_IR/Me.h **** 	// Leitura  ADC1->DR  -> Data Register
  90:../8-LCD-TEMP-STP_Motor_IR/Me.h **** }
 541              		.loc 2 90 1 view .LVU129
 542 01ba 7047     		bx	lr	@
 543              	.L25:
 544              		.align	2
 545              	.L24:
 546 01bc 00100240 		.word	1073876992
 547 01c0 00080140 		.word	1073809408
 548 01c4 00240140 		.word	1073816576
 549              		.cfi_endproc
 550              	.LFE35:
 551              		.size	ADC1_configure, .-ADC1_configure
 552              		.align	1
 553              		.global	set_system_clock_to_72Mhz
 554              		.syntax unified
 555              		.thumb
 556              		.thumb_func
 557              		.type	set_system_clock_to_72Mhz, %function
 558              	set_system_clock_to_72Mhz:
 559              	.LFB36:
  91:../8-LCD-TEMP-STP_Motor_IR/Me.h **** 
  92:../8-LCD-TEMP-STP_Motor_IR/Me.h **** void set_system_clock_to_72Mhz(void)
  93:../8-LCD-TEMP-STP_Motor_IR/Me.h **** {
 560              		.loc 2 93 1 is_stmt 1 view -0
 561              		.cfi_startproc
 562              		@ args = 0, pretend = 0, frame = 0
 563              		@ frame_needed = 0, uses_anonymous_args = 0
 564              		@ link register save eliminated.
  94:../8-LCD-TEMP-STP_Motor_IR/Me.h ****    // Necessary wait states for Flash for high speeds
  95:../8-LCD-TEMP-STP_Motor_IR/Me.h ****    FLASH->ACR = 0x12;
 565              		.loc 2 95 4 view .LVU131
 566              	@ ../8-LCD-TEMP-STP_Motor_IR/Me.h:95:    FLASH->ACR = 0x12;
 567              		.loc 2 95 15 is_stmt 0 view .LVU132
 568 01c8 1222     		movs	r2, #18	@ tmp140,
 569 01ca 1B4B     		ldr	r3, .L33	@ tmp139,
 570 01cc 1A60     		str	r2, [r3]	@ tmp140, MEM[(struct FLASH_TypeDef *)1073881088B].ACR
  96:../8-LCD-TEMP-STP_Motor_IR/Me.h ****    // Enable HSE
  97:../8-LCD-TEMP-STP_Motor_IR/Me.h ****    RCC->CR |= (1 << 16);
 571              		.loc 2 97 4 is_stmt 1 view .LVU133
 572              	@ ../8-LCD-TEMP-STP_Motor_IR/Me.h:97:    RCC->CR |= (1 << 16);
 573              		.loc 2 97 12 is_stmt 0 view .LVU134
 574 01ce A3F58053 		sub	r3, r3, #4096	@ tmp141, tmp141,
 575 01d2 1A68     		ldr	r2, [r3]	@ _1, MEM[(struct RCC_TypeDef *)1073876992B].CR
ARM GAS  /tmp/cc4r6sqw.s 			page 19


 576 01d4 42F48032 		orr	r2, r2, #65536	@ _2, _1,
 577 01d8 1A60     		str	r2, [r3]	@ _2, MEM[(struct RCC_TypeDef *)1073876992B].CR
  98:../8-LCD-TEMP-STP_Motor_IR/Me.h ****    // Wait untill HSE settles down
  99:../8-LCD-TEMP-STP_Motor_IR/Me.h ****    while (!(RCC->CR & (1 << 17)));
 578              		.loc 2 99 4 is_stmt 1 view .LVU135
 579              	.L27:
 580              		.loc 2 99 34 discriminator 1 view .LVU136
 581              		.loc 2 99 10 discriminator 1 view .LVU137
 582              	@ ../8-LCD-TEMP-STP_Motor_IR/Me.h:99:    while (!(RCC->CR & (1 << 17)));
 583              		.loc 2 99 16 is_stmt 0 discriminator 1 view .LVU138
 584 01da 1A68     		ldr	r2, [r3]	@ _3, MEM[(struct RCC_TypeDef *)1073876992B].CR
 585              	@ ../8-LCD-TEMP-STP_Motor_IR/Me.h:99:    while (!(RCC->CR & (1 << 17)));
 586              		.loc 2 99 10 discriminator 1 view .LVU139
 587 01dc 9103     		lsls	r1, r2, #14	@, _3,
 588 01de FCD5     		bpl	.L27		@,
 100:../8-LCD-TEMP-STP_Motor_IR/Me.h ****    // Set PREDIV2 division factor to 5
 101:../8-LCD-TEMP-STP_Motor_IR/Me.h ****    RCC->CFGR2 |= (0b0100 << 4);
 589              		.loc 2 101 4 is_stmt 1 view .LVU140
 590              	@ ../8-LCD-TEMP-STP_Motor_IR/Me.h:101:    RCC->CFGR2 |= (0b0100 << 4);
 591              		.loc 2 101 15 is_stmt 0 view .LVU141
 592 01e0 DA6A     		ldr	r2, [r3, #44]	@ _5, MEM[(struct RCC_TypeDef *)1073876992B].CFGR2
 593 01e2 42F04002 		orr	r2, r2, #64	@ _6, _5,
 594 01e6 DA62     		str	r2, [r3, #44]	@ _6, MEM[(struct RCC_TypeDef *)1073876992B].CFGR2
 102:../8-LCD-TEMP-STP_Motor_IR/Me.h ****    // Set PLL2 multiplication factor to 8
 103:../8-LCD-TEMP-STP_Motor_IR/Me.h ****    RCC->CFGR2 |= (0b0110 << 8);
 595              		.loc 2 103 4 is_stmt 1 view .LVU142
 596              	@ ../8-LCD-TEMP-STP_Motor_IR/Me.h:103:    RCC->CFGR2 |= (0b0110 << 8);
 597              		.loc 2 103 15 is_stmt 0 view .LVU143
 598 01e8 DA6A     		ldr	r2, [r3, #44]	@ _7, MEM[(struct RCC_TypeDef *)1073876992B].CFGR2
 599 01ea 42F4C062 		orr	r2, r2, #1536	@ _8, _7,
 600 01ee DA62     		str	r2, [r3, #44]	@ _8, MEM[(struct RCC_TypeDef *)1073876992B].CFGR2
 104:../8-LCD-TEMP-STP_Motor_IR/Me.h ****    // Enable PLL2
 105:../8-LCD-TEMP-STP_Motor_IR/Me.h ****    RCC->CR |= (1 << 26);
 601              		.loc 2 105 4 is_stmt 1 view .LVU144
 602              	@ ../8-LCD-TEMP-STP_Motor_IR/Me.h:105:    RCC->CR |= (1 << 26);
 603              		.loc 2 105 12 is_stmt 0 view .LVU145
 604 01f0 1A68     		ldr	r2, [r3]	@ _9, MEM[(struct RCC_TypeDef *)1073876992B].CR
 605 01f2 42F08062 		orr	r2, r2, #67108864	@ _10, _9,
 606 01f6 1A60     		str	r2, [r3]	@ _10, MEM[(struct RCC_TypeDef *)1073876992B].CR
 106:../8-LCD-TEMP-STP_Motor_IR/Me.h ****    // Wait untill PLL2 settles down
 107:../8-LCD-TEMP-STP_Motor_IR/Me.h **** 	// while (!(RCC->CR & (1 << 27)));
 108:../8-LCD-TEMP-STP_Motor_IR/Me.h ****    // Set PLL2 as PREDIV1 clock source
 109:../8-LCD-TEMP-STP_Motor_IR/Me.h ****    RCC->CFGR2 |= (1 << 16);
 607              		.loc 2 109 4 is_stmt 1 view .LVU146
 608              	@ ../8-LCD-TEMP-STP_Motor_IR/Me.h:109:    RCC->CFGR2 |= (1 << 16);
 609              		.loc 2 109 15 is_stmt 0 view .LVU147
 610 01f8 DA6A     		ldr	r2, [r3, #44]	@ _11, MEM[(struct RCC_TypeDef *)1073876992B].CFGR2
 611 01fa 42F48032 		orr	r2, r2, #65536	@ _12, _11,
 612 01fe DA62     		str	r2, [r3, #44]	@ _12, MEM[(struct RCC_TypeDef *)1073876992B].CFGR2
 110:../8-LCD-TEMP-STP_Motor_IR/Me.h ****    // Set PREDIV1 division factor to 5
 111:../8-LCD-TEMP-STP_Motor_IR/Me.h ****    RCC->CFGR2 |= (0b0100 << 0);
 613              		.loc 2 111 4 is_stmt 1 view .LVU148
 614              	@ ../8-LCD-TEMP-STP_Motor_IR/Me.h:111:    RCC->CFGR2 |= (0b0100 << 0);
 615              		.loc 2 111 15 is_stmt 0 view .LVU149
 616 0200 DA6A     		ldr	r2, [r3, #44]	@ _13, MEM[(struct RCC_TypeDef *)1073876992B].CFGR2
 617 0202 42F00402 		orr	r2, r2, #4	@ _14, _13,
 618 0206 DA62     		str	r2, [r3, #44]	@ _14, MEM[(struct RCC_TypeDef *)1073876992B].CFGR2
ARM GAS  /tmp/cc4r6sqw.s 			page 20


 112:../8-LCD-TEMP-STP_Motor_IR/Me.h ****    // Select Prediv1 as PLL source
 113:../8-LCD-TEMP-STP_Motor_IR/Me.h ****    RCC->CFGR |= (1 << 16);
 619              		.loc 2 113 4 is_stmt 1 view .LVU150
 620              	@ ../8-LCD-TEMP-STP_Motor_IR/Me.h:113:    RCC->CFGR |= (1 << 16);
 621              		.loc 2 113 14 is_stmt 0 view .LVU151
 622 0208 5A68     		ldr	r2, [r3, #4]	@ _15, MEM[(struct RCC_TypeDef *)1073876992B].CFGR
 623 020a 42F48032 		orr	r2, r2, #65536	@ _16, _15,
 624 020e 5A60     		str	r2, [r3, #4]	@ _16, MEM[(struct RCC_TypeDef *)1073876992B].CFGR
 114:../8-LCD-TEMP-STP_Motor_IR/Me.h ****    // Set PLL1 multiplication factor to 9
 115:../8-LCD-TEMP-STP_Motor_IR/Me.h ****    RCC->CFGR |= (0b0111 << 18);
 625              		.loc 2 115 4 is_stmt 1 view .LVU152
 626              	@ ../8-LCD-TEMP-STP_Motor_IR/Me.h:115:    RCC->CFGR |= (0b0111 << 18);
 627              		.loc 2 115 14 is_stmt 0 view .LVU153
 628 0210 5A68     		ldr	r2, [r3, #4]	@ _17, MEM[(struct RCC_TypeDef *)1073876992B].CFGR
 629 0212 42F4E012 		orr	r2, r2, #1835008	@ _18, _17,
 630 0216 5A60     		str	r2, [r3, #4]	@ _18, MEM[(struct RCC_TypeDef *)1073876992B].CFGR
 116:../8-LCD-TEMP-STP_Motor_IR/Me.h ****    // Set APB1 to 36MHz
 117:../8-LCD-TEMP-STP_Motor_IR/Me.h ****    RCC->CFGR |= 1 << 10;
 631              		.loc 2 117 4 is_stmt 1 view .LVU154
 632              	@ ../8-LCD-TEMP-STP_Motor_IR/Me.h:117:    RCC->CFGR |= 1 << 10;
 633              		.loc 2 117 14 is_stmt 0 view .LVU155
 634 0218 5A68     		ldr	r2, [r3, #4]	@ _19, MEM[(struct RCC_TypeDef *)1073876992B].CFGR
 635 021a 42F48062 		orr	r2, r2, #1024	@ _20, _19,
 636 021e 5A60     		str	r2, [r3, #4]	@ _20, MEM[(struct RCC_TypeDef *)1073876992B].CFGR
 118:../8-LCD-TEMP-STP_Motor_IR/Me.h ****    // Enable PLL
 119:../8-LCD-TEMP-STP_Motor_IR/Me.h ****    RCC->CR |= (1 << 24);
 637              		.loc 2 119 4 is_stmt 1 view .LVU156
 638              	@ ../8-LCD-TEMP-STP_Motor_IR/Me.h:119:    RCC->CR |= (1 << 24);
 639              		.loc 2 119 12 is_stmt 0 view .LVU157
 640 0220 1A68     		ldr	r2, [r3]	@ _21, MEM[(struct RCC_TypeDef *)1073876992B].CR
 641 0222 42F08072 		orr	r2, r2, #16777216	@ _22, _21,
 642 0226 1A60     		str	r2, [r3]	@ _22, MEM[(struct RCC_TypeDef *)1073876992B].CR
 120:../8-LCD-TEMP-STP_Motor_IR/Me.h ****    // Wait untill PLL settles down
 121:../8-LCD-TEMP-STP_Motor_IR/Me.h ****    while (!(RCC->CR & (1 << 25)));
 643              		.loc 2 121 4 is_stmt 1 view .LVU158
 644              	.L28:
 645              		.loc 2 121 34 discriminator 1 view .LVU159
 646              		.loc 2 121 10 discriminator 1 view .LVU160
 647              	@ ../8-LCD-TEMP-STP_Motor_IR/Me.h:121:    while (!(RCC->CR & (1 << 25)));
 648              		.loc 2 121 16 is_stmt 0 discriminator 1 view .LVU161
 649 0228 1A68     		ldr	r2, [r3]	@ _23, MEM[(struct RCC_TypeDef *)1073876992B].CR
 650              	@ ../8-LCD-TEMP-STP_Motor_IR/Me.h:121:    while (!(RCC->CR & (1 << 25)));
 651              		.loc 2 121 10 discriminator 1 view .LVU162
 652 022a 9201     		lsls	r2, r2, #6	@, _23,
 653 022c FCD5     		bpl	.L28		@,
 122:../8-LCD-TEMP-STP_Motor_IR/Me.h ****    // Finally, choose PLL as the system clock
 123:../8-LCD-TEMP-STP_Motor_IR/Me.h ****    RCC->CFGR |= (0b10 << 0);
 654              		.loc 2 123 4 is_stmt 1 view .LVU163
 655              	@ ../8-LCD-TEMP-STP_Motor_IR/Me.h:123:    RCC->CFGR |= (0b10 << 0);
 656              		.loc 2 123 14 is_stmt 0 view .LVU164
 657 022e 5A68     		ldr	r2, [r3, #4]	@ _25, MEM[(struct RCC_TypeDef *)1073876992B].CFGR
 658 0230 42F00202 		orr	r2, r2, #2	@ _26, _25,
 659 0234 5A60     		str	r2, [r3, #4]	@ _26, MEM[(struct RCC_TypeDef *)1073876992B].CFGR
 660              	@ ../8-LCD-TEMP-STP_Motor_IR/Me.h:124: } 
 124:../8-LCD-TEMP-STP_Motor_IR/Me.h **** } 
 661              		.loc 2 124 1 view .LVU165
 662 0236 7047     		bx	lr	@
ARM GAS  /tmp/cc4r6sqw.s 			page 21


 663              	.L34:
 664              		.align	2
 665              	.L33:
 666 0238 00200240 		.word	1073881088
 667              		.cfi_endproc
 668              	.LFE36:
 669              		.size	set_system_clock_to_72Mhz, .-set_system_clock_to_72Mhz
 670              		.align	1
 671              		.global	Delay
 672              		.syntax unified
 673              		.thumb
 674              		.thumb_func
 675              		.type	Delay, %function
 676              	Delay:
 677              	.LVL10:
 678              	.LFB37:
 125:../8-LCD-TEMP-STP_Motor_IR/Me.h **** 
 126:../8-LCD-TEMP-STP_Motor_IR/Me.h **** void Delay ( __IO u32 T ) { // T=1 ;  868µs -> T=1 ~ 526µs
 679              		.loc 2 126 27 is_stmt 1 view -0
 680              		.cfi_startproc
 681              		@ args = 0, pretend = 0, frame = 8
 682              		@ frame_needed = 0, uses_anonymous_args = 0
 683              		@ link register save eliminated.
 127:../8-LCD-TEMP-STP_Motor_IR/Me.h ****   for ( T ; T > 0 ; T-- ){
 684              		.loc 2 127 3 view .LVU167
 685              	@ ../8-LCD-TEMP-STP_Motor_IR/Me.h:126: void Delay ( __IO u32 T ) { // T=1 ;  868µs -> T=1 ~ 526µs
 126:../8-LCD-TEMP-STP_Motor_IR/Me.h ****   for ( T ; T > 0 ; T-- ){
 686              		.loc 2 126 27 is_stmt 0 view .LVU168
 687 023c 82B0     		sub	sp, sp, #8	@,,
 688              	.LCFI2:
 689              		.cfi_def_cfa_offset 8
 690              	@ ../8-LCD-TEMP-STP_Motor_IR/Me.h:126: void Delay ( __IO u32 T ) { // T=1 ;  868µs -> T=1 ~ 526µs
 126:../8-LCD-TEMP-STP_Motor_IR/Me.h ****   for ( T ; T > 0 ; T-- ){
 691              		.loc 2 126 27 view .LVU169
 692 023e 0190     		str	r0, [sp, #4]	@ T, T
 693              	@ ../8-LCD-TEMP-STP_Motor_IR/Me.h:127:   for ( T ; T > 0 ; T-- ){
 694              		.loc 2 127 3 view .LVU170
 695 0240 019B     		ldr	r3, [sp, #4]	@ vol.0_9, T
 696              	@ ../8-LCD-TEMP-STP_Motor_IR/Me.h:128:    TIM3->EGR |= ( 1 << 0 );
 128:../8-LCD-TEMP-STP_Motor_IR/Me.h ****    TIM3->EGR |= ( 1 << 0 );
 697              		.loc 2 128 14 view .LVU171
 698 0242 094A     		ldr	r2, .L40	@ tmp132,
 699              	.L36:
 127:../8-LCD-TEMP-STP_Motor_IR/Me.h ****   for ( T ; T > 0 ; T-- ){
 700              		.loc 2 127 13 is_stmt 1 discriminator 1 view .LVU172
 701              	@ ../8-LCD-TEMP-STP_Motor_IR/Me.h:127:   for ( T ; T > 0 ; T-- ){
 127:../8-LCD-TEMP-STP_Motor_IR/Me.h ****   for ( T ; T > 0 ; T-- ){
 702              		.loc 2 127 15 is_stmt 0 discriminator 1 view .LVU173
 703 0244 019B     		ldr	r3, [sp, #4]	@ T.2_6, T
 704              	@ ../8-LCD-TEMP-STP_Motor_IR/Me.h:127:   for ( T ; T > 0 ; T-- ){
 127:../8-LCD-TEMP-STP_Motor_IR/Me.h ****   for ( T ; T > 0 ; T-- ){
 705              		.loc 2 127 3 discriminator 1 view .LVU174
 706 0246 0BB9     		cbnz	r3, .L38	@ T.2_6,
 707              	@ ../8-LCD-TEMP-STP_Motor_IR/Me.h:131: }
 129:../8-LCD-TEMP-STP_Motor_IR/Me.h ****    while ( TIM3->CNT < 5 ) ; /* 5 * 10-- Configurar para IR */
 130:../8-LCD-TEMP-STP_Motor_IR/Me.h ****   }
 131:../8-LCD-TEMP-STP_Motor_IR/Me.h **** }
ARM GAS  /tmp/cc4r6sqw.s 			page 22


 708              		.loc 2 131 1 view .LVU175
 709 0248 02B0     		add	sp, sp, #8	@,,
 710              	.LCFI3:
 711              		.cfi_remember_state
 712              		.cfi_def_cfa_offset 0
 713              		@ sp needed	@
 714 024a 7047     		bx	lr	@
 715              	.L38:
 716              	.LCFI4:
 717              		.cfi_restore_state
 128:../8-LCD-TEMP-STP_Motor_IR/Me.h ****    TIM3->EGR |= ( 1 << 0 );
 718              		.loc 2 128 4 is_stmt 1 view .LVU176
 719              	@ ../8-LCD-TEMP-STP_Motor_IR/Me.h:128:    TIM3->EGR |= ( 1 << 0 );
 128:../8-LCD-TEMP-STP_Motor_IR/Me.h ****    TIM3->EGR |= ( 1 << 0 );
 720              		.loc 2 128 14 is_stmt 0 view .LVU177
 721 024c 938A     		ldrh	r3, [r2, #20]	@, MEM[(struct TIM_TypeDef *)1073742848B].EGR
 722 024e 9BB2     		uxth	r3, r3	@ _1, MEM[(struct TIM_TypeDef *)1073742848B].EGR
 723 0250 43F00103 		orr	r3, r3, #1	@ _2, _1,
 724 0254 9382     		strh	r3, [r2, #20]	@ movhi	@ _2, MEM[(struct TIM_TypeDef *)1073742848B].EGR
 129:../8-LCD-TEMP-STP_Motor_IR/Me.h ****    while ( TIM3->CNT < 5 ) ; /* 5 * 10-- Configurar para IR */
 725              		.loc 2 129 4 is_stmt 1 view .LVU178
 726              	.L37:
 129:../8-LCD-TEMP-STP_Motor_IR/Me.h ****    while ( TIM3->CNT < 5 ) ; /* 5 * 10-- Configurar para IR */
 727              		.loc 2 129 28 discriminator 1 view .LVU179
 129:../8-LCD-TEMP-STP_Motor_IR/Me.h ****    while ( TIM3->CNT < 5 ) ; /* 5 * 10-- Configurar para IR */
 728              		.loc 2 129 10 discriminator 1 view .LVU180
 729              	@ ../8-LCD-TEMP-STP_Motor_IR/Me.h:129:    while ( TIM3->CNT < 5 ) ; /* 5 * 10-- Configurar para IR 
 129:../8-LCD-TEMP-STP_Motor_IR/Me.h ****    while ( TIM3->CNT < 5 ) ; /* 5 * 10-- Configurar para IR */
 730              		.loc 2 129 16 is_stmt 0 discriminator 1 view .LVU181
 731 0256 938C     		ldrh	r3, [r2, #36]	@, MEM[(struct TIM_TypeDef *)1073742848B].CNT
 732 0258 9BB2     		uxth	r3, r3	@ _3, MEM[(struct TIM_TypeDef *)1073742848B].CNT
 733              	@ ../8-LCD-TEMP-STP_Motor_IR/Me.h:129:    while ( TIM3->CNT < 5 ) ; /* 5 * 10-- Configurar para IR 
 129:../8-LCD-TEMP-STP_Motor_IR/Me.h ****    while ( TIM3->CNT < 5 ) ; /* 5 * 10-- Configurar para IR */
 734              		.loc 2 129 10 discriminator 1 view .LVU182
 735 025a 042B     		cmp	r3, #4	@ _3,
 736 025c FBD9     		bls	.L37		@,
 127:../8-LCD-TEMP-STP_Motor_IR/Me.h ****    TIM3->EGR |= ( 1 << 0 );
 737              		.loc 2 127 21 is_stmt 1 discriminator 2 view .LVU183
 738              	@ ../8-LCD-TEMP-STP_Motor_IR/Me.h:127:   for ( T ; T > 0 ; T-- ){
 127:../8-LCD-TEMP-STP_Motor_IR/Me.h ****    TIM3->EGR |= ( 1 << 0 );
 739              		.loc 2 127 22 is_stmt 0 discriminator 2 view .LVU184
 740 025e 019B     		ldr	r3, [sp, #4]	@ T.1_4, T
 741 0260 013B     		subs	r3, r3, #1	@ _5, T.1_4,
 742 0262 0193     		str	r3, [sp, #4]	@ _5, T
 743 0264 EEE7     		b	.L36		@
 744              	.L41:
 745 0266 00BF     		.align	2
 746              	.L40:
 747 0268 00040040 		.word	1073742848
 748              		.cfi_endproc
 749              	.LFE37:
 750              		.size	Delay, .-Delay
 751              		.align	1
 752              		.global	enable_TIM3_delay
 753              		.syntax unified
 754              		.thumb
 755              		.thumb_func
ARM GAS  /tmp/cc4r6sqw.s 			page 23


 756              		.type	enable_TIM3_delay, %function
 757              	enable_TIM3_delay:
 758              	.LFB38:
 132:../8-LCD-TEMP-STP_Motor_IR/Me.h **** 
 133:../8-LCD-TEMP-STP_Motor_IR/Me.h **** void enable_TIM3_delay (void) {
 759              		.loc 2 133 31 is_stmt 1 view -0
 760              		.cfi_startproc
 761              		@ args = 0, pretend = 0, frame = 0
 762              		@ frame_needed = 0, uses_anonymous_args = 0
 763              		@ link register save eliminated.
 134:../8-LCD-TEMP-STP_Motor_IR/Me.h ****    RCC->APB1ENR |= 1<<1 ;
 764              		.loc 2 134 4 view .LVU186
 765              	@ ../8-LCD-TEMP-STP_Motor_IR/Me.h:134:    RCC->APB1ENR |= 1<<1 ;
 766              		.loc 2 134 17 is_stmt 0 view .LVU187
 767 026c 084A     		ldr	r2, .L43	@ tmp117,
 768 026e D369     		ldr	r3, [r2, #28]	@ _1, MEM[(struct RCC_TypeDef *)1073876992B].APB1ENR
 769 0270 43F00203 		orr	r3, r3, #2	@ _2, _1,
 770 0274 D361     		str	r3, [r2, #28]	@ _2, MEM[(struct RCC_TypeDef *)1073876992B].APB1ENR
 135:../8-LCD-TEMP-STP_Motor_IR/Me.h ****    TIM3->CR1 = 0x0000;
 771              		.loc 2 135 4 is_stmt 1 view .LVU188
 772              	@ ../8-LCD-TEMP-STP_Motor_IR/Me.h:135:    TIM3->CR1 = 0x0000;
 773              		.loc 2 135 14 is_stmt 0 view .LVU189
 774 0276 0023     		movs	r3, #0	@ tmp121,
 775 0278 A2F50332 		sub	r2, r2, #134144	@ tmp119, tmp119,
 776 027c 1380     		strh	r3, [r2]	@ movhi	@ tmp121, MEM[(struct TIM_TypeDef *)1073742848B].CR1
 136:../8-LCD-TEMP-STP_Motor_IR/Me.h ****    //TIM3->ARR = 21699;
 137:../8-LCD-TEMP-STP_Motor_IR/Me.h ****    TIM3->ARR = 250-1; // 10µs
 777              		.loc 2 137 4 is_stmt 1 view .LVU190
 778              	@ ../8-LCD-TEMP-STP_Motor_IR/Me.h:137:    TIM3->ARR = 250-1; // 10µs
 779              		.loc 2 137 14 is_stmt 0 view .LVU191
 780 027e F923     		movs	r3, #249	@ tmp124,
 781 0280 9385     		strh	r3, [r2, #44]	@ movhi	@ tmp124, MEM[(struct TIM_TypeDef *)1073742848B].ARR
 138:../8-LCD-TEMP-STP_Motor_IR/Me.h ****    // para obter o período de 868µs
 139:../8-LCD-TEMP-STP_Motor_IR/Me.h **** /*https://www.vishay.com/docs/80071/dataform.pdf PAG 2
 140:../8-LCD-TEMP-STP_Motor_IR/Me.h ****  * https://controllerstech.com/ir-remote-with-stm32/
 141:../8-LCD-TEMP-STP_Motor_IR/Me.h ****  * Per=(1+ARR)/Clock_system */
 142:../8-LCD-TEMP-STP_Motor_IR/Me.h ****    TIM3->CR1 |= 1<<0;
 782              		.loc 2 142 4 is_stmt 1 view .LVU192
 783              	@ ../8-LCD-TEMP-STP_Motor_IR/Me.h:142:    TIM3->CR1 |= 1<<0;
 784              		.loc 2 142 14 is_stmt 0 view .LVU193
 785 0282 1388     		ldrh	r3, [r2]	@, MEM[(struct TIM_TypeDef *)1073742848B].CR1
 786 0284 9BB2     		uxth	r3, r3	@ _3, MEM[(struct TIM_TypeDef *)1073742848B].CR1
 787 0286 43F00103 		orr	r3, r3, #1	@ _4, _3,
 788 028a 1380     		strh	r3, [r2]	@ movhi	@ _4, MEM[(struct TIM_TypeDef *)1073742848B].CR1
 789              	@ ../8-LCD-TEMP-STP_Motor_IR/Me.h:143: }
 143:../8-LCD-TEMP-STP_Motor_IR/Me.h **** }
 790              		.loc 2 143 1 view .LVU194
 791 028c 7047     		bx	lr	@
 792              	.L44:
 793 028e 00BF     		.align	2
 794              	.L43:
 795 0290 00100240 		.word	1073876992
 796              		.cfi_endproc
 797              	.LFE38:
 798              		.size	enable_TIM3_delay, .-enable_TIM3_delay
 799              		.align	1
 800              		.global	enable_interrupt
ARM GAS  /tmp/cc4r6sqw.s 			page 24


 801              		.syntax unified
 802              		.thumb
 803              		.thumb_func
 804              		.type	enable_interrupt, %function
 805              	enable_interrupt:
 806              	.LVL11:
 807              	.LFB39:
 144:../8-LCD-TEMP-STP_Motor_IR/Me.h **** 
 145:../8-LCD-TEMP-STP_Motor_IR/Me.h **** void enable_interrupt(IRQn_Type IRQn)
 146:../8-LCD-TEMP-STP_Motor_IR/Me.h **** {
 808              		.loc 2 146 1 is_stmt 1 view -0
 809              		.cfi_startproc
 810              		@ args = 0, pretend = 0, frame = 0
 811              		@ frame_needed = 0, uses_anonymous_args = 0
 812              		@ link register save eliminated.
 147:../8-LCD-TEMP-STP_Motor_IR/Me.h ****    NVIC->ISER[((uint32_t)(IRQn) >> 5)] = (1 << ((uint32_t)(IRQn) & 0x1F));
 813              		.loc 2 147 4 view .LVU196
 814              	@ ../8-LCD-TEMP-STP_Motor_IR/Me.h:147:    NVIC->ISER[((uint32_t)(IRQn) >> 5)] = (1 << ((uint32_t)(I
 815              		.loc 2 147 45 is_stmt 0 view .LVU197
 816 0294 0123     		movs	r3, #1	@ tmp124,
 817              	@ ../8-LCD-TEMP-STP_Motor_IR/Me.h:147:    NVIC->ISER[((uint32_t)(IRQn) >> 5)] = (1 << ((uint32_t)(I
 818              		.loc 2 147 33 view .LVU198
 819 0296 4209     		lsrs	r2, r0, #5	@ _6, IRQn,
 820              	@ ../8-LCD-TEMP-STP_Motor_IR/Me.h:147:    NVIC->ISER[((uint32_t)(IRQn) >> 5)] = (1 << ((uint32_t)(I
 821              		.loc 2 147 66 view .LVU199
 822 0298 00F01F00 		and	r0, r0, #31	@ tmp123, IRQn,
 823              	.LVL12:
 824              	@ ../8-LCD-TEMP-STP_Motor_IR/Me.h:147:    NVIC->ISER[((uint32_t)(IRQn) >> 5)] = (1 << ((uint32_t)(I
 825              		.loc 2 147 45 view .LVU200
 826 029c 03FA00F0 		lsl	r0, r3, r0	@ _7, tmp124, tmp123
 827              	@ ../8-LCD-TEMP-STP_Motor_IR/Me.h:147:    NVIC->ISER[((uint32_t)(IRQn) >> 5)] = (1 << ((uint32_t)(I
 828              		.loc 2 147 40 view .LVU201
 829 02a0 014B     		ldr	r3, .L46	@ tmp125,
 830 02a2 43F82200 		str	r0, [r3, r2, lsl #2]	@ _7, MEM[(struct NVIC_Type *)3758153984B].ISER[_6]
 831              	@ ../8-LCD-TEMP-STP_Motor_IR/Me.h:148: }  
 148:../8-LCD-TEMP-STP_Motor_IR/Me.h **** }  
 832              		.loc 2 148 1 view .LVU202
 833 02a6 7047     		bx	lr	@
 834              	.L47:
 835              		.align	2
 836              	.L46:
 837 02a8 00E100E0 		.word	-536813312
 838              		.cfi_endproc
 839              	.LFE39:
 840              		.size	enable_interrupt, .-enable_interrupt
 841              		.align	1
 842              		.global	disable_interrupt
 843              		.syntax unified
 844              		.thumb
 845              		.thumb_func
 846              		.type	disable_interrupt, %function
 847              	disable_interrupt:
 848              	.LVL13:
 849              	.LFB40:
 149:../8-LCD-TEMP-STP_Motor_IR/Me.h ****    
 150:../8-LCD-TEMP-STP_Motor_IR/Me.h **** /* 
 151:../8-LCD-TEMP-STP_Motor_IR/Me.h ****  * Disable given interrupt
ARM GAS  /tmp/cc4r6sqw.s 			page 25


 152:../8-LCD-TEMP-STP_Motor_IR/Me.h ****  */
 153:../8-LCD-TEMP-STP_Motor_IR/Me.h **** void disable_interrupt(IRQn_Type IRQn)
 154:../8-LCD-TEMP-STP_Motor_IR/Me.h **** {
 850              		.loc 2 154 1 is_stmt 1 view -0
 851              		.cfi_startproc
 852              		@ args = 0, pretend = 0, frame = 0
 853              		@ frame_needed = 0, uses_anonymous_args = 0
 854              		@ link register save eliminated.
 155:../8-LCD-TEMP-STP_Motor_IR/Me.h ****    NVIC->ICER[((uint32_t)(IRQn) >> 5)] = (1 << ((uint32_t)(IRQn) & 0x1F));
 855              		.loc 2 155 4 view .LVU204
 856              	@ ../8-LCD-TEMP-STP_Motor_IR/Me.h:155:    NVIC->ICER[((uint32_t)(IRQn) >> 5)] = (1 << ((uint32_t)(I
 857              		.loc 2 155 45 is_stmt 0 view .LVU205
 858 02ac 0122     		movs	r2, #1	@ tmp124,
 859              	@ ../8-LCD-TEMP-STP_Motor_IR/Me.h:155:    NVIC->ICER[((uint32_t)(IRQn) >> 5)] = (1 << ((uint32_t)(I
 860              		.loc 2 155 33 view .LVU206
 861 02ae 4309     		lsrs	r3, r0, #5	@ _6, IRQn,
 862              	@ ../8-LCD-TEMP-STP_Motor_IR/Me.h:155:    NVIC->ICER[((uint32_t)(IRQn) >> 5)] = (1 << ((uint32_t)(I
 863              		.loc 2 155 66 view .LVU207
 864 02b0 00F01F00 		and	r0, r0, #31	@ tmp123, IRQn,
 865              	.LVL14:
 866              	@ ../8-LCD-TEMP-STP_Motor_IR/Me.h:155:    NVIC->ICER[((uint32_t)(IRQn) >> 5)] = (1 << ((uint32_t)(I
 867              		.loc 2 155 45 view .LVU208
 868 02b4 02FA00F0 		lsl	r0, r2, r0	@ _7, tmp124, tmp123
 869              	@ ../8-LCD-TEMP-STP_Motor_IR/Me.h:155:    NVIC->ICER[((uint32_t)(IRQn) >> 5)] = (1 << ((uint32_t)(I
 870              		.loc 2 155 40 view .LVU209
 871 02b8 024A     		ldr	r2, .L49	@ tmp125,
 872 02ba 2033     		adds	r3, r3, #32	@ tmp126, _6,
 873 02bc 42F82300 		str	r0, [r2, r3, lsl #2]	@ _7, MEM[(struct NVIC_Type *)3758153984B].ICER[_6]
 874              	@ ../8-LCD-TEMP-STP_Motor_IR/Me.h:156: }
 156:../8-LCD-TEMP-STP_Motor_IR/Me.h **** }
 875              		.loc 2 156 1 view .LVU210
 876 02c0 7047     		bx	lr	@
 877              	.L50:
 878 02c2 00BF     		.align	2
 879              	.L49:
 880 02c4 00E100E0 		.word	-536813312
 881              		.cfi_endproc
 882              	.LFE40:
 883              		.size	disable_interrupt, .-disable_interrupt
 884              		.align	1
 885              		.global	intToStr
 886              		.syntax unified
 887              		.thumb
 888              		.thumb_func
 889              		.type	intToStr, %function
 890              	intToStr:
 891              	.LVL15:
 892              	.LFB42:
 157:../8-LCD-TEMP-STP_Motor_IR/Me.h **** 
 158:../8-LCD-TEMP-STP_Motor_IR/Me.h **** /* Exemplo: 
 159:../8-LCD-TEMP-STP_Motor_IR/Me.h ****  		    float num = 123.456789;
 160:../8-LCD-TEMP-STP_Motor_IR/Me.h **** 			 char str[20];
 161:../8-LCD-TEMP-STP_Motor_IR/Me.h **** 			 // num -> ponto flutuante
 162:../8-LCD-TEMP-STP_Motor_IR/Me.h **** 			 // str -> Var String 
 163:../8-LCD-TEMP-STP_Motor_IR/Me.h **** 			 // 4 -> Precisão do de casas decimais
 164:../8-LCD-TEMP-STP_Motor_IR/Me.h **** 			 floatToString(num, str, 4);
 165:../8-LCD-TEMP-STP_Motor_IR/Me.h ****  
ARM GAS  /tmp/cc4r6sqw.s 			page 26


 166:../8-LCD-TEMP-STP_Motor_IR/Me.h ****  * */
 167:../8-LCD-TEMP-STP_Motor_IR/Me.h **** void floatToString(float num, char *str, int precision) {
 168:../8-LCD-TEMP-STP_Motor_IR/Me.h ****     // Lida com números negativos
 169:../8-LCD-TEMP-STP_Motor_IR/Me.h ****     if (num < 0) {
 170:../8-LCD-TEMP-STP_Motor_IR/Me.h ****         num = -num;
 171:../8-LCD-TEMP-STP_Motor_IR/Me.h ****         *str++ = '-';
 172:../8-LCD-TEMP-STP_Motor_IR/Me.h ****     }
 173:../8-LCD-TEMP-STP_Motor_IR/Me.h **** 
 174:../8-LCD-TEMP-STP_Motor_IR/Me.h ****     // Extrai a parte inteira do número
 175:../8-LCD-TEMP-STP_Motor_IR/Me.h ****     int inteira = (int)num;
 176:../8-LCD-TEMP-STP_Motor_IR/Me.h ****     intToStr(inteira, str);
 177:../8-LCD-TEMP-STP_Motor_IR/Me.h ****     while (*str != '\0') {
 178:../8-LCD-TEMP-STP_Motor_IR/Me.h ****         str++;
 179:../8-LCD-TEMP-STP_Motor_IR/Me.h ****     }
 180:../8-LCD-TEMP-STP_Motor_IR/Me.h **** 
 181:../8-LCD-TEMP-STP_Motor_IR/Me.h ****     // Adiciona o ponto decimal
 182:../8-LCD-TEMP-STP_Motor_IR/Me.h ****     *str++ = '.';
 183:../8-LCD-TEMP-STP_Motor_IR/Me.h **** 
 184:../8-LCD-TEMP-STP_Motor_IR/Me.h ****     // Calcula e adiciona a parte fracionária
 185:../8-LCD-TEMP-STP_Motor_IR/Me.h ****     float fracionaria = num - inteira;
 186:../8-LCD-TEMP-STP_Motor_IR/Me.h ****     for (int i = 0; i < precision; i++) {
 187:../8-LCD-TEMP-STP_Motor_IR/Me.h ****         fracionaria *= 10;
 188:../8-LCD-TEMP-STP_Motor_IR/Me.h ****         int digito = (int)fracionaria;
 189:../8-LCD-TEMP-STP_Motor_IR/Me.h ****         *str++ = '0' + digito;
 190:../8-LCD-TEMP-STP_Motor_IR/Me.h ****         fracionaria -= digito;
 191:../8-LCD-TEMP-STP_Motor_IR/Me.h ****     }
 192:../8-LCD-TEMP-STP_Motor_IR/Me.h **** 
 193:../8-LCD-TEMP-STP_Motor_IR/Me.h ****     // Adiciona o terminador nulo
 194:../8-LCD-TEMP-STP_Motor_IR/Me.h ****     *str = '\0';
 195:../8-LCD-TEMP-STP_Motor_IR/Me.h **** }
 196:../8-LCD-TEMP-STP_Motor_IR/Me.h **** 
 197:../8-LCD-TEMP-STP_Motor_IR/Me.h **** void intToStr(int num, char *str) {
 893              		.loc 2 197 35 is_stmt 1 view -0
 894              		.cfi_startproc
 895              		@ args = 0, pretend = 0, frame = 0
 896              		@ frame_needed = 0, uses_anonymous_args = 0
 198:../8-LCD-TEMP-STP_Motor_IR/Me.h ****     // Converte um número inteiro para uma string
 199:../8-LCD-TEMP-STP_Motor_IR/Me.h ****     if (num == 0) {
 897              		.loc 2 199 5 view .LVU212
 898              	@ ../8-LCD-TEMP-STP_Motor_IR/Me.h:197: void intToStr(int num, char *str) {
 197:../8-LCD-TEMP-STP_Motor_IR/Me.h ****     // Converte um número inteiro para uma string
 899              		.loc 2 197 35 is_stmt 0 view .LVU213
 900 02c8 10B5     		push	{r4, lr}	@
 901              	.LCFI5:
 902              		.cfi_def_cfa_offset 8
 903              		.cfi_offset 4, -8
 904              		.cfi_offset 14, -4
 905              	@ ../8-LCD-TEMP-STP_Motor_IR/Me.h:199:     if (num == 0) {
 906              		.loc 2 199 8 view .LVU214
 907 02ca B8B9     		cbnz	r0, .L57	@ num,
 200:../8-LCD-TEMP-STP_Motor_IR/Me.h ****         *str++ = '0';
 908              		.loc 2 200 9 is_stmt 1 view .LVU215
 909              	.LVL16:
 910              	@ ../8-LCD-TEMP-STP_Motor_IR/Me.h:200:         *str++ = '0';
 911              		.loc 2 200 16 is_stmt 0 view .LVU216
 912 02cc 3023     		movs	r3, #48	@ tmp122,
 913              	@ ../8-LCD-TEMP-STP_Motor_IR/Me.h:201:         *str = '\0';
ARM GAS  /tmp/cc4r6sqw.s 			page 27


 201:../8-LCD-TEMP-STP_Motor_IR/Me.h ****         *str = '\0';
 914              		.loc 2 201 14 view .LVU217
 915 02ce 4870     		strb	r0, [r1, #1]	@ num, MEM[(char *)str_6(D) + 1B]
 916              	@ ../8-LCD-TEMP-STP_Motor_IR/Me.h:200:         *str++ = '0';
 200:../8-LCD-TEMP-STP_Motor_IR/Me.h ****         *str++ = '0';
 917              		.loc 2 200 16 view .LVU218
 918 02d0 0B70     		strb	r3, [r1]	@ tmp122, *str_6(D)
 919              		.loc 2 201 9 is_stmt 1 view .LVU219
 202:../8-LCD-TEMP-STP_Motor_IR/Me.h ****         return;
 920              		.loc 2 202 9 view .LVU220
 921              	.LVL17:
 922              	.L51:
 923              	@ ../8-LCD-TEMP-STP_Motor_IR/Me.h:220: }
 203:../8-LCD-TEMP-STP_Motor_IR/Me.h ****     }
 204:../8-LCD-TEMP-STP_Motor_IR/Me.h **** 
 205:../8-LCD-TEMP-STP_Motor_IR/Me.h ****     int len = 0;
 206:../8-LCD-TEMP-STP_Motor_IR/Me.h ****     int temp = num;
 207:../8-LCD-TEMP-STP_Motor_IR/Me.h ****     while (temp > 0) {
 208:../8-LCD-TEMP-STP_Motor_IR/Me.h ****         temp /= 10;
 209:../8-LCD-TEMP-STP_Motor_IR/Me.h ****         len++;
 210:../8-LCD-TEMP-STP_Motor_IR/Me.h ****     }
 211:../8-LCD-TEMP-STP_Motor_IR/Me.h **** 
 212:../8-LCD-TEMP-STP_Motor_IR/Me.h ****     str += len;
 213:../8-LCD-TEMP-STP_Motor_IR/Me.h ****     *str = '\0';
 214:../8-LCD-TEMP-STP_Motor_IR/Me.h **** 
 215:../8-LCD-TEMP-STP_Motor_IR/Me.h ****     while (num > 0) {
 216:../8-LCD-TEMP-STP_Motor_IR/Me.h ****         int digito = num % 10;
 217:../8-LCD-TEMP-STP_Motor_IR/Me.h ****         *(--str) = '0' + digito;
 218:../8-LCD-TEMP-STP_Motor_IR/Me.h ****         num /= 10;
 219:../8-LCD-TEMP-STP_Motor_IR/Me.h ****     }
 220:../8-LCD-TEMP-STP_Motor_IR/Me.h **** }
 924              		.loc 2 220 1 is_stmt 0 view .LVU221
 925 02d2 10BD     		pop	{r4, pc}	@
 926              	.LVL18:
 927              	.L54:
 928              	.LBB6:
 929              	.LBB7:
 208:../8-LCD-TEMP-STP_Motor_IR/Me.h ****         len++;
 930              		.loc 2 208 9 is_stmt 1 view .LVU222
 931              	@ ../8-LCD-TEMP-STP_Motor_IR/Me.h:208:         temp /= 10;
 208:../8-LCD-TEMP-STP_Motor_IR/Me.h ****         len++;
 932              		.loc 2 208 14 is_stmt 0 view .LVU223
 933 02d4 92FBF4F2 		sdiv	r2, r2, r4	@ temp, temp, tmp147
 934              	.LVL19:
 209:../8-LCD-TEMP-STP_Motor_IR/Me.h ****     }
 935              		.loc 2 209 9 is_stmt 1 view .LVU224
 936              	@ ../8-LCD-TEMP-STP_Motor_IR/Me.h:209:         len++;
 209:../8-LCD-TEMP-STP_Motor_IR/Me.h ****     }
 937              		.loc 2 209 12 is_stmt 0 view .LVU225
 938 02d8 0133     		adds	r3, r3, #1	@ len, len,
 939              	.LVL20:
 940              	.L52:
 207:../8-LCD-TEMP-STP_Motor_IR/Me.h ****         temp /= 10;
 941              		.loc 2 207 11 is_stmt 1 view .LVU226
 942 02da 002A     		cmp	r2, #0	@ temp,
 943 02dc FADC     		bgt	.L54		@,
 212:../8-LCD-TEMP-STP_Motor_IR/Me.h ****     *str = '\0';
ARM GAS  /tmp/cc4r6sqw.s 			page 28


 944              		.loc 2 212 5 view .LVU227
 945              	@ ../8-LCD-TEMP-STP_Motor_IR/Me.h:213:     *str = '\0';
 213:../8-LCD-TEMP-STP_Motor_IR/Me.h **** 
 946              		.loc 2 213 10 is_stmt 0 view .LVU228
 947 02de 0024     		movs	r4, #0	@ tmp129,
 948              	@ ../8-LCD-TEMP-STP_Motor_IR/Me.h:212:     str += len;
 212:../8-LCD-TEMP-STP_Motor_IR/Me.h ****     *str = '\0';
 949              		.loc 2 212 9 view .LVU229
 950 02e0 CA18     		adds	r2, r1, r3	@ str, str, len
 951              	.LVL21:
 213:../8-LCD-TEMP-STP_Motor_IR/Me.h **** 
 952              		.loc 2 213 5 is_stmt 1 view .LVU230
 953              	@ ../8-LCD-TEMP-STP_Motor_IR/Me.h:213:     *str = '\0';
 213:../8-LCD-TEMP-STP_Motor_IR/Me.h **** 
 954              		.loc 2 213 10 is_stmt 0 view .LVU231
 955 02e2 CC54     		strb	r4, [r1, r3]	@ tmp129, *str_16
 215:../8-LCD-TEMP-STP_Motor_IR/Me.h ****         int digito = num % 10;
 956              		.loc 2 215 5 is_stmt 1 view .LVU232
 957              	.LBB8:
 958              	@ ../8-LCD-TEMP-STP_Motor_IR/Me.h:216:         int digito = num % 10;
 216:../8-LCD-TEMP-STP_Motor_IR/Me.h ****         *(--str) = '0' + digito;
 959              		.loc 2 216 13 is_stmt 0 view .LVU233
 960 02e4 0A23     		movs	r3, #10	@ tmp146,
 961              	.LVL22:
 962              	.L55:
 216:../8-LCD-TEMP-STP_Motor_IR/Me.h ****         *(--str) = '0' + digito;
 963              		.loc 2 216 13 view .LVU234
 964              	.LBE8:
 215:../8-LCD-TEMP-STP_Motor_IR/Me.h ****         int digito = num % 10;
 965              		.loc 2 215 11 is_stmt 1 view .LVU235
 966 02e6 0028     		cmp	r0, #0	@ num,
 967 02e8 F3DD     		ble	.L51		@,
 968              	.LBB9:
 216:../8-LCD-TEMP-STP_Motor_IR/Me.h ****         *(--str) = '0' + digito;
 969              		.loc 2 216 9 view .LVU236
 970              	.LVL23:
 217:../8-LCD-TEMP-STP_Motor_IR/Me.h ****         num /= 10;
 971              		.loc 2 217 9 view .LVU237
 972              	@ ../8-LCD-TEMP-STP_Motor_IR/Me.h:216:         int digito = num % 10;
 216:../8-LCD-TEMP-STP_Motor_IR/Me.h ****         *(--str) = '0' + digito;
 973              		.loc 2 216 13 is_stmt 0 view .LVU238
 974 02ea 90FBF3F1 		sdiv	r1, r0, r3	@ tmp135, num, tmp146
 975 02ee 03FB1100 		mls	r0, r3, r1, r0	@ digito, tmp146, tmp135, num
 976              	.LVL24:
 977              	@ ../8-LCD-TEMP-STP_Motor_IR/Me.h:217:         *(--str) = '0' + digito;
 217:../8-LCD-TEMP-STP_Motor_IR/Me.h ****         num /= 10;
 978              		.loc 2 217 24 view .LVU239
 979 02f2 3030     		adds	r0, r0, #48	@ tmp141, digito,
 980              	@ ../8-LCD-TEMP-STP_Motor_IR/Me.h:217:         *(--str) = '0' + digito;
 217:../8-LCD-TEMP-STP_Motor_IR/Me.h ****         num /= 10;
 981              		.loc 2 217 18 view .LVU240
 982 02f4 02F8010D 		strb	r0, [r2, #-1]!	@ tmp141, MEM[base: str_21, offset: 0B]
 983              	.LVL25:
 218:../8-LCD-TEMP-STP_Motor_IR/Me.h ****     }
 984              		.loc 2 218 9 is_stmt 1 view .LVU241
 985              	@ ../8-LCD-TEMP-STP_Motor_IR/Me.h:218:         num /= 10;
 218:../8-LCD-TEMP-STP_Motor_IR/Me.h ****     }
ARM GAS  /tmp/cc4r6sqw.s 			page 29


 986              		.loc 2 218 13 is_stmt 0 view .LVU242
 987 02f8 0846     		mov	r0, r1	@ num, tmp135
 988              	.LVL26:
 218:../8-LCD-TEMP-STP_Motor_IR/Me.h ****     }
 989              		.loc 2 218 13 view .LVU243
 990 02fa F4E7     		b	.L55		@
 991              	.LVL27:
 992              	.L57:
 218:../8-LCD-TEMP-STP_Motor_IR/Me.h ****     }
 993              		.loc 2 218 13 view .LVU244
 994              	.LBE9:
 995              	.LBE7:
 996              	.LBE6:
 997 02fc 0246     		mov	r2, r0	@ temp, num
 998              	.LBB11:
 999              	.LBB10:
 1000              	@ ../8-LCD-TEMP-STP_Motor_IR/Me.h:205:     int len = 0;
 205:../8-LCD-TEMP-STP_Motor_IR/Me.h ****     int temp = num;
 1001              		.loc 2 205 9 view .LVU245
 1002 02fe 0023     		movs	r3, #0	@ len,
 1003              	@ ../8-LCD-TEMP-STP_Motor_IR/Me.h:208:         temp /= 10;
 208:../8-LCD-TEMP-STP_Motor_IR/Me.h ****         len++;
 1004              		.loc 2 208 14 view .LVU246
 1005 0300 0A24     		movs	r4, #10	@ tmp147,
 1006 0302 EAE7     		b	.L52		@
 1007              	.LBE10:
 1008              	.LBE11:
 1009              		.cfi_endproc
 1010              	.LFE42:
 1011              		.size	intToStr, .-intToStr
 1012              		.global	__aeabi_fcmplt
 1013              		.global	__aeabi_f2iz
 1014              		.global	__aeabi_i2f
 1015              		.global	__aeabi_fsub
 1016              		.global	__aeabi_fmul
 1017              		.align	1
 1018              		.global	floatToString
 1019              		.syntax unified
 1020              		.thumb
 1021              		.thumb_func
 1022              		.type	floatToString, %function
 1023              	floatToString:
 1024              	.LVL28:
 1025              	.LFB41:
 167:../8-LCD-TEMP-STP_Motor_IR/Me.h ****     // Lida com números negativos
 1026              		.loc 2 167 57 is_stmt 1 view -0
 1027              		.cfi_startproc
 1028              		@ args = 0, pretend = 0, frame = 0
 1029              		@ frame_needed = 0, uses_anonymous_args = 0
 169:../8-LCD-TEMP-STP_Motor_IR/Me.h ****         num = -num;
 1030              		.loc 2 169 5 view .LVU248
 1031              	@ ../8-LCD-TEMP-STP_Motor_IR/Me.h:167: void floatToString(float num, char *str, int precision) {
 167:../8-LCD-TEMP-STP_Motor_IR/Me.h ****     // Lida com números negativos
 1032              		.loc 2 167 57 is_stmt 0 view .LVU249
 1033 0304 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}	@
 1034              	.LCFI6:
 1035              		.cfi_def_cfa_offset 24
ARM GAS  /tmp/cc4r6sqw.s 			page 30


 1036              		.cfi_offset 4, -24
 1037              		.cfi_offset 5, -20
 1038              		.cfi_offset 6, -16
 1039              		.cfi_offset 7, -12
 1040              		.cfi_offset 8, -8
 1041              		.cfi_offset 14, -4
 1042              	@ ../8-LCD-TEMP-STP_Motor_IR/Me.h:167: void floatToString(float num, char *str, int precision) {
 167:../8-LCD-TEMP-STP_Motor_IR/Me.h ****     // Lida com números negativos
 1043              		.loc 2 167 57 view .LVU250
 1044 0308 0C46     		mov	r4, r1	@ str, tmp158
 1045              	@ ../8-LCD-TEMP-STP_Motor_IR/Me.h:169:     if (num < 0) {
 169:../8-LCD-TEMP-STP_Motor_IR/Me.h ****         num = -num;
 1046              		.loc 2 169 8 view .LVU251
 1047 030a 0021     		movs	r1, #0	@,
 1048              	.LVL29:
 1049              	@ ../8-LCD-TEMP-STP_Motor_IR/Me.h:167: void floatToString(float num, char *str, int precision) {
 167:../8-LCD-TEMP-STP_Motor_IR/Me.h ****     // Lida com números negativos
 1050              		.loc 2 167 57 view .LVU252
 1051 030c 0546     		mov	r5, r0	@ num, tmp157
 1052 030e 1646     		mov	r6, r2	@ precision, tmp159
 1053              	@ ../8-LCD-TEMP-STP_Motor_IR/Me.h:169:     if (num < 0) {
 169:../8-LCD-TEMP-STP_Motor_IR/Me.h ****         num = -num;
 1054              		.loc 2 169 8 view .LVU253
 1055 0310 FFF7FEFF 		bl	__aeabi_fcmplt		@
 1056              	.LVL30:
 169:../8-LCD-TEMP-STP_Motor_IR/Me.h ****         num = -num;
 1057              		.loc 2 169 8 view .LVU254
 1058 0314 20B1     		cbz	r0, .L59	@ tmp160,
 170:../8-LCD-TEMP-STP_Motor_IR/Me.h ****         *str++ = '-';
 1059              		.loc 2 170 9 is_stmt 1 view .LVU255
 1060              	@ ../8-LCD-TEMP-STP_Motor_IR/Me.h:171:         *str++ = '-';
 171:../8-LCD-TEMP-STP_Motor_IR/Me.h ****     }
 1061              		.loc 2 171 16 is_stmt 0 view .LVU256
 1062 0316 2D23     		movs	r3, #45	@ tmp138,
 1063              	@ ../8-LCD-TEMP-STP_Motor_IR/Me.h:170:         num = -num;
 170:../8-LCD-TEMP-STP_Motor_IR/Me.h ****         *str++ = '-';
 1064              		.loc 2 170 13 view .LVU257
 1065 0318 05F10045 		add	r5, r5, #-2147483648	@ tmp137, num,
 1066              	.LVL31:
 171:../8-LCD-TEMP-STP_Motor_IR/Me.h ****     }
 1067              		.loc 2 171 9 is_stmt 1 view .LVU258
 1068              	@ ../8-LCD-TEMP-STP_Motor_IR/Me.h:171:         *str++ = '-';
 171:../8-LCD-TEMP-STP_Motor_IR/Me.h ****     }
 1069              		.loc 2 171 16 is_stmt 0 view .LVU259
 1070 031c 04F8013B 		strb	r3, [r4], #1	@ tmp138, *str_17(D)
 1071              	.LVL32:
 1072              	.L59:
 175:../8-LCD-TEMP-STP_Motor_IR/Me.h ****     intToStr(inteira, str);
 1073              		.loc 2 175 5 is_stmt 1 view .LVU260
 1074              	@ ../8-LCD-TEMP-STP_Motor_IR/Me.h:175:     int inteira = (int)num;
 175:../8-LCD-TEMP-STP_Motor_IR/Me.h ****     intToStr(inteira, str);
 1075              		.loc 2 175 9 is_stmt 0 view .LVU261
 1076 0320 2846     		mov	r0, r5	@, num
 1077 0322 FFF7FEFF 		bl	__aeabi_f2iz		@
 1078              	.LVL33:
 1079              	@ ../8-LCD-TEMP-STP_Motor_IR/Me.h:176:     intToStr(inteira, str);
 176:../8-LCD-TEMP-STP_Motor_IR/Me.h ****     while (*str != '\0') {
ARM GAS  /tmp/cc4r6sqw.s 			page 31


 1080              		.loc 2 176 5 view .LVU262
 1081 0326 2146     		mov	r1, r4	@, str
 1082              	@ ../8-LCD-TEMP-STP_Motor_IR/Me.h:175:     int inteira = (int)num;
 175:../8-LCD-TEMP-STP_Motor_IR/Me.h ****     intToStr(inteira, str);
 1083              		.loc 2 175 9 view .LVU263
 1084 0328 0746     		mov	r7, r0	@ inteira, tmp161
 1085              	.LVL34:
 176:../8-LCD-TEMP-STP_Motor_IR/Me.h ****     while (*str != '\0') {
 1086              		.loc 2 176 5 is_stmt 1 view .LVU264
 1087 032a FFF7FEFF 		bl	intToStr		@
 1088              	.LVL35:
 177:../8-LCD-TEMP-STP_Motor_IR/Me.h ****         str++;
 1089              		.loc 2 177 5 view .LVU265
 1090              	.L61:
 177:../8-LCD-TEMP-STP_Motor_IR/Me.h ****         str++;
 1091              		.loc 2 177 11 view .LVU266
 1092              	@ ../8-LCD-TEMP-STP_Motor_IR/Me.h:177:     while (*str != '\0') {
 177:../8-LCD-TEMP-STP_Motor_IR/Me.h ****         str++;
 1093              		.loc 2 177 12 is_stmt 0 view .LVU267
 1094 032e 2278     		ldrb	r2, [r4]	@ zero_extendqisi2	@ _1, MEM[base: str_10, offset: 0B]
 1095 0330 2346     		mov	r3, r4	@ str, str
 1096              	@ ../8-LCD-TEMP-STP_Motor_IR/Me.h:178:         str++;
 178:../8-LCD-TEMP-STP_Motor_IR/Me.h ****     }
 1097              		.loc 2 178 12 view .LVU268
 1098 0332 0134     		adds	r4, r4, #1	@ str, str,
 1099              	.LVL36:
 1100              	@ ../8-LCD-TEMP-STP_Motor_IR/Me.h:177:     while (*str != '\0') {
 177:../8-LCD-TEMP-STP_Motor_IR/Me.h ****         str++;
 1101              		.loc 2 177 11 view .LVU269
 1102 0334 002A     		cmp	r2, #0	@ _1
 1103 0336 FAD1     		bne	.L61	@
 182:../8-LCD-TEMP-STP_Motor_IR/Me.h **** 
 1104              		.loc 2 182 5 is_stmt 1 view .LVU270
 1105              	.LVL37:
 1106              	@ ../8-LCD-TEMP-STP_Motor_IR/Me.h:182:     *str++ = '.';
 182:../8-LCD-TEMP-STP_Motor_IR/Me.h **** 
 1107              		.loc 2 182 12 is_stmt 0 view .LVU271
 1108 0338 2E22     		movs	r2, #46	@ tmp141,
 1109              	@ ../8-LCD-TEMP-STP_Motor_IR/Me.h:185:     float fracionaria = num - inteira;
 185:../8-LCD-TEMP-STP_Motor_IR/Me.h ****     for (int i = 0; i < precision; i++) {
 1110              		.loc 2 185 29 view .LVU272
 1111 033a 3846     		mov	r0, r7	@, inteira
 1112              	@ ../8-LCD-TEMP-STP_Motor_IR/Me.h:182:     *str++ = '.';
 182:../8-LCD-TEMP-STP_Motor_IR/Me.h **** 
 1113              		.loc 2 182 12 view .LVU273
 1114 033c 1A70     		strb	r2, [r3]	@ tmp141, *str_20
 185:../8-LCD-TEMP-STP_Motor_IR/Me.h ****     for (int i = 0; i < precision; i++) {
 1115              		.loc 2 185 5 is_stmt 1 view .LVU274
 1116              	@ ../8-LCD-TEMP-STP_Motor_IR/Me.h:185:     float fracionaria = num - inteira;
 185:../8-LCD-TEMP-STP_Motor_IR/Me.h ****     for (int i = 0; i < precision; i++) {
 1117              		.loc 2 185 29 is_stmt 0 view .LVU275
 1118 033e FFF7FEFF 		bl	__aeabi_i2f		@
 1119              	.LVL38:
 1120 0342 0146     		mov	r1, r0	@ tmp162,
 1121              	@ ../8-LCD-TEMP-STP_Motor_IR/Me.h:185:     float fracionaria = num - inteira;
 185:../8-LCD-TEMP-STP_Motor_IR/Me.h ****     for (int i = 0; i < precision; i++) {
 1122              		.loc 2 185 11 view .LVU276
ARM GAS  /tmp/cc4r6sqw.s 			page 32


 1123 0344 2846     		mov	r0, r5	@, num
 1124 0346 FFF7FEFF 		bl	__aeabi_fsub		@
 1125              	.LVL39:
 186:../8-LCD-TEMP-STP_Motor_IR/Me.h ****         fracionaria *= 10;
 1126              		.loc 2 186 5 is_stmt 1 view .LVU277
 1127              	.LBB12:
 186:../8-LCD-TEMP-STP_Motor_IR/Me.h ****         fracionaria *= 10;
 1128              		.loc 2 186 10 view .LVU278
 186:../8-LCD-TEMP-STP_Motor_IR/Me.h ****         fracionaria *= 10;
 1129              		.loc 2 186 10 is_stmt 0 view .LVU279
 1130              	.LBE12:
 1131              	@ ../8-LCD-TEMP-STP_Motor_IR/Me.h:178:         str++;
 178:../8-LCD-TEMP-STP_Motor_IR/Me.h ****     }
 1132              		.loc 2 178 12 view .LVU280
 1133 034a 2546     		mov	r5, r4	@ str, str
 1134              	.LVL40:
 1135              	.LBB15:
 1136              	.LBB13:
 1137              	@ ../8-LCD-TEMP-STP_Motor_IR/Me.h:187:         fracionaria *= 10;
 187:../8-LCD-TEMP-STP_Motor_IR/Me.h ****         int digito = (int)fracionaria;
 1138              		.loc 2 187 21 view .LVU281
 1139 034c DFF83480 		ldr	r8, .L66	@ tmp156,
 1140              	.LVL41:
 1141              	.L62:
 187:../8-LCD-TEMP-STP_Motor_IR/Me.h ****         int digito = (int)fracionaria;
 1142              		.loc 2 187 21 view .LVU282
 1143              	.LBE13:
 186:../8-LCD-TEMP-STP_Motor_IR/Me.h ****         fracionaria *= 10;
 1144              		.loc 2 186 21 is_stmt 1 discriminator 1 view .LVU283
 1145              	@ ../8-LCD-TEMP-STP_Motor_IR/Me.h:186:     for (int i = 0; i < precision; i++) {
 186:../8-LCD-TEMP-STP_Motor_IR/Me.h ****         fracionaria *= 10;
 1146              		.loc 2 186 5 is_stmt 0 discriminator 1 view .LVU284
 1147 0350 2B1B     		subs	r3, r5, r4	@ i, str, str
 1148              	.LVL42:
 186:../8-LCD-TEMP-STP_Motor_IR/Me.h ****         fracionaria *= 10;
 1149              		.loc 2 186 5 discriminator 1 view .LVU285
 1150 0352 9E42     		cmp	r6, r3	@ precision, i
 1151 0354 05DC     		bgt	.L63		@,
 186:../8-LCD-TEMP-STP_Motor_IR/Me.h ****         fracionaria *= 10;
 1152              		.loc 2 186 5 discriminator 1 view .LVU286
 1153              	.LBE15:
 194:../8-LCD-TEMP-STP_Motor_IR/Me.h **** }
 1154              		.loc 2 194 5 is_stmt 1 view .LVU287
 1155              	@ ../8-LCD-TEMP-STP_Motor_IR/Me.h:194:     *str = '\0';
 194:../8-LCD-TEMP-STP_Motor_IR/Me.h **** }
 1156              		.loc 2 194 10 is_stmt 0 view .LVU288
 1157 0356 0023     		movs	r3, #0	@ tmp154,
 1158              	.LVL43:
 194:../8-LCD-TEMP-STP_Motor_IR/Me.h **** }
 1159              		.loc 2 194 10 view .LVU289
 1160 0358 26EAE676 		bic	r6, r6, r6, asr #31	@ tmp153, precision
 1161              	.LVL44:
 194:../8-LCD-TEMP-STP_Motor_IR/Me.h **** }
 1162              		.loc 2 194 10 view .LVU290
 1163 035c A355     		strb	r3, [r4, r6]	@ tmp154, *str_35
 1164              	@ ../8-LCD-TEMP-STP_Motor_IR/Me.h:195: }
 195:../8-LCD-TEMP-STP_Motor_IR/Me.h **** 
ARM GAS  /tmp/cc4r6sqw.s 			page 33


 1165              		.loc 2 195 1 view .LVU291
 1166 035e BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}	@
 1167              	.LVL45:
 1168              	.L63:
 1169              	.LBB16:
 1170              	.LBB14:
 187:../8-LCD-TEMP-STP_Motor_IR/Me.h ****         int digito = (int)fracionaria;
 1171              		.loc 2 187 9 is_stmt 1 discriminator 3 view .LVU292
 1172              	@ ../8-LCD-TEMP-STP_Motor_IR/Me.h:187:         fracionaria *= 10;
 187:../8-LCD-TEMP-STP_Motor_IR/Me.h ****         int digito = (int)fracionaria;
 1173              		.loc 2 187 21 is_stmt 0 discriminator 3 view .LVU293
 1174 0362 4146     		mov	r1, r8	@, tmp156
 1175 0364 FFF7FEFF 		bl	__aeabi_fmul		@
 1176              	.LVL46:
 187:../8-LCD-TEMP-STP_Motor_IR/Me.h ****         int digito = (int)fracionaria;
 1177              		.loc 2 187 21 discriminator 3 view .LVU294
 1178 0368 0746     		mov	r7, r0	@ tmp145, tmp164
 1179              	.LVL47:
 188:../8-LCD-TEMP-STP_Motor_IR/Me.h ****         *str++ = '0' + digito;
 1180              		.loc 2 188 9 is_stmt 1 discriminator 3 view .LVU295
 1181              	@ ../8-LCD-TEMP-STP_Motor_IR/Me.h:188:         int digito = (int)fracionaria;
 188:../8-LCD-TEMP-STP_Motor_IR/Me.h ****         *str++ = '0' + digito;
 1182              		.loc 2 188 13 is_stmt 0 discriminator 3 view .LVU296
 1183 036a FFF7FEFF 		bl	__aeabi_f2iz		@
 1184              	.LVL48:
 189:../8-LCD-TEMP-STP_Motor_IR/Me.h ****         fracionaria -= digito;
 1185              		.loc 2 189 9 is_stmt 1 discriminator 3 view .LVU297
 1186              	@ ../8-LCD-TEMP-STP_Motor_IR/Me.h:189:         *str++ = '0' + digito;
 189:../8-LCD-TEMP-STP_Motor_IR/Me.h ****         fracionaria -= digito;
 1187              		.loc 2 189 22 is_stmt 0 discriminator 3 view .LVU298
 1188 036e 00F13003 		add	r3, r0, #48	@ tmp148, tmp165,
 1189              	@ ../8-LCD-TEMP-STP_Motor_IR/Me.h:189:         *str++ = '0' + digito;
 189:../8-LCD-TEMP-STP_Motor_IR/Me.h ****         fracionaria -= digito;
 1190              		.loc 2 189 16 discriminator 3 view .LVU299
 1191 0372 05F8013B 		strb	r3, [r5], #1	@ tmp148, MEM[base: str_31, offset: 4294967295B]
 1192              	.LVL49:
 190:../8-LCD-TEMP-STP_Motor_IR/Me.h ****     }
 1193              		.loc 2 190 9 is_stmt 1 discriminator 3 view .LVU300
 1194              	@ ../8-LCD-TEMP-STP_Motor_IR/Me.h:190:         fracionaria -= digito;
 190:../8-LCD-TEMP-STP_Motor_IR/Me.h ****     }
 1195              		.loc 2 190 21 is_stmt 0 discriminator 3 view .LVU301
 1196 0376 FFF7FEFF 		bl	__aeabi_i2f		@
 1197              	.LVL50:
 190:../8-LCD-TEMP-STP_Motor_IR/Me.h ****     }
 1198              		.loc 2 190 21 discriminator 3 view .LVU302
 1199 037a 0146     		mov	r1, r0	@ tmp166,
 1200 037c 3846     		mov	r0, r7	@, tmp145
 1201 037e FFF7FEFF 		bl	__aeabi_fsub		@
 1202              	.LVL51:
 1203              	.LBE14:
 186:../8-LCD-TEMP-STP_Motor_IR/Me.h ****         fracionaria *= 10;
 1204              		.loc 2 186 36 is_stmt 1 discriminator 3 view .LVU303
 186:../8-LCD-TEMP-STP_Motor_IR/Me.h ****         fracionaria *= 10;
 1205              		.loc 2 186 36 is_stmt 0 discriminator 3 view .LVU304
 1206 0382 E5E7     		b	.L62		@
 1207              	.L67:
 1208              		.align	2
ARM GAS  /tmp/cc4r6sqw.s 			page 34


 1209              	.L66:
 1210 0384 00002041 		.word	1092616192
 1211              	.LBE16:
 1212              		.cfi_endproc
 1213              	.LFE41:
 1214              		.size	floatToString, .-floatToString
 1215              		.align	1
 1216              		.global	controlarMotorPasso
 1217              		.syntax unified
 1218              		.thumb
 1219              		.thumb_func
 1220              		.type	controlarMotorPasso, %function
 1221              	controlarMotorPasso:
 1222              	.LVL52:
 1223              	.LFB43:
 221:../8-LCD-TEMP-STP_Motor_IR/Me.h **** 
 222:../8-LCD-TEMP-STP_Motor_IR/Me.h **** 
 223:../8-LCD-TEMP-STP_Motor_IR/Me.h **** // Defina os pinos GPIO que estão conectados às bobinas do motor de passo
 224:../8-LCD-TEMP-STP_Motor_IR/Me.h **** #define MOTOR_COIL_1_PIN   GPIO_PIN_12
 225:../8-LCD-TEMP-STP_Motor_IR/Me.h **** #define MOTOR_COIL_2_PIN   GPIO_PIN_13
 226:../8-LCD-TEMP-STP_Motor_IR/Me.h **** #define MOTOR_COIL_3_PIN   GPIO_PIN_14
 227:../8-LCD-TEMP-STP_Motor_IR/Me.h **** #define MOTOR_COIL_4_PIN   GPIO_PIN_15
 228:../8-LCD-TEMP-STP_Motor_IR/Me.h **** #define MOTOR_PORT          GPIOB
 229:../8-LCD-TEMP-STP_Motor_IR/Me.h **** 
 230:../8-LCD-TEMP-STP_Motor_IR/Me.h **** 
 231:../8-LCD-TEMP-STP_Motor_IR/Me.h **** // Função para controlar o motor de passo
 232:../8-LCD-TEMP-STP_Motor_IR/Me.h **** void controlarMotorPasso(int passo) {
 1224              		.loc 2 232 37 is_stmt 1 view -0
 1225              		.cfi_startproc
 1226              		@ args = 0, pretend = 0, frame = 0
 1227              		@ frame_needed = 0, uses_anonymous_args = 0
 1228              		@ link register save eliminated.
 233:../8-LCD-TEMP-STP_Motor_IR/Me.h ****     // Desativa todas as bobinas
 234:../8-LCD-TEMP-STP_Motor_IR/Me.h **** 	  // GPIOB->ODR &= ~(0xF << 12);
 235:../8-LCD-TEMP-STP_Motor_IR/Me.h **** 	  GPIOB->ODR = (0xF << 12);
 1229              		.loc 2 235 4 view .LVU306
 1230              	@ ../8-LCD-TEMP-STP_Motor_IR/Me.h:235: 	  GPIOB->ODR = (0xF << 12);
 1231              		.loc 2 235 15 is_stmt 0 view .LVU307
 1232 0388 4FF47042 		mov	r2, #61440	@ tmp130,
 1233 038c 164B     		ldr	r3, .L79	@ tmp129,
 1234 038e DA60     		str	r2, [r3, #12]	@ tmp130, MEM[(struct GPIO_TypeDef *)1073810432B].ODR
 236:../8-LCD-TEMP-STP_Motor_IR/Me.h **** 	  passo = passo % 7;
 1235              		.loc 2 236 4 is_stmt 1 view .LVU308
 1236              	.LVL53:
 237:../8-LCD-TEMP-STP_Motor_IR/Me.h **** 
 238:../8-LCD-TEMP-STP_Motor_IR/Me.h ****     switch (passo) {
 1237              		.loc 2 238 5 view .LVU309
 1238              	@ ../8-LCD-TEMP-STP_Motor_IR/Me.h:236: 	  passo = passo % 7;
 236:../8-LCD-TEMP-STP_Motor_IR/Me.h **** 	  passo = passo % 7;
 1239              		.loc 2 236 10 is_stmt 0 view .LVU310
 1240 0390 0722     		movs	r2, #7	@ tmp136,
 1241 0392 90FBF2F2 		sdiv	r2, r0, r2	@ tmp135, passo, tmp136
 1242 0396 C2EBC202 		rsb	r2, r2, r2, lsl #3	@ tmp139, tmp135, tmp135,
 1243 039a 801A     		subs	r0, r0, r2	@ passo, passo, tmp139
 1244              	.LVL54:
 1245              	@ ../8-LCD-TEMP-STP_Motor_IR/Me.h:238:     switch (passo) {
 1246              		.loc 2 238 5 view .LVU311
ARM GAS  /tmp/cc4r6sqw.s 			page 35


 1247 039c 0628     		cmp	r0, #6	@ passo,
 1248 039e 09D8     		bhi	.L68		@
 1249 03a0 DFE800F0 		tbb	[pc, r0]	@ passo
 1250              	.L71:
 1251 03a4 04       		.byte	(.L77-.L71)/2
 1252 03a5 09       		.byte	(.L76-.L71)/2
 1253 03a6 0D       		.byte	(.L75-.L71)/2
 1254 03a7 11       		.byte	(.L74-.L71)/2
 1255 03a8 15       		.byte	(.L73-.L71)/2
 1256 03a9 19       		.byte	(.L72-.L71)/2
 1257 03aa 1D       		.byte	(.L70-.L71)/2
 1258 03ab 00       		.p2align 1
 1259              	.L77:
 239:../8-LCD-TEMP-STP_Motor_IR/Me.h **** 
 240:../8-LCD-TEMP-STP_Motor_IR/Me.h ****         case 0:
 241:../8-LCD-TEMP-STP_Motor_IR/Me.h **** 			  GPIOB->ODR &= ~ (0x1<<12);
 1260              		.loc 2 241 6 is_stmt 1 view .LVU312
 1261              	@ ../8-LCD-TEMP-STP_Motor_IR/Me.h:241: 			  GPIOB->ODR &= ~ (0x1<<12);
 1262              		.loc 2 241 17 is_stmt 0 view .LVU313
 1263 03ac DA68     		ldr	r2, [r3, #12]	@ _1, MEM[(struct GPIO_TypeDef *)1073810432B].ODR
 1264 03ae 22F48052 		bic	r2, r2, #4096	@ _2, _1,
 1265              	.L78:
 1266              	@ ../8-LCD-TEMP-STP_Motor_IR/Me.h:265: 			  GPIOB->ODR &= ~ (0x9<<12);
 242:../8-LCD-TEMP-STP_Motor_IR/Me.h **** 			  // GPIOB->ODR |= (0x1<<12);
 243:../8-LCD-TEMP-STP_Motor_IR/Me.h ****             break;
 244:../8-LCD-TEMP-STP_Motor_IR/Me.h ****         case 1:
 245:../8-LCD-TEMP-STP_Motor_IR/Me.h **** 			  GPIOB->ODR &= ~ (0x3<<12);
 246:../8-LCD-TEMP-STP_Motor_IR/Me.h **** 			  // GPIOB->ODR |= (0x3<<12);
 247:../8-LCD-TEMP-STP_Motor_IR/Me.h ****             break;
 248:../8-LCD-TEMP-STP_Motor_IR/Me.h ****         case 2:
 249:../8-LCD-TEMP-STP_Motor_IR/Me.h **** 			  GPIOB->ODR &= ~ (0x2<<12);
 250:../8-LCD-TEMP-STP_Motor_IR/Me.h **** 			  // GPIOB->ODR |= (0x2<<12);
 251:../8-LCD-TEMP-STP_Motor_IR/Me.h ****             break;
 252:../8-LCD-TEMP-STP_Motor_IR/Me.h ****         case 3:
 253:../8-LCD-TEMP-STP_Motor_IR/Me.h **** 			  GPIOB->ODR &= ~ (0x6<<12);
 254:../8-LCD-TEMP-STP_Motor_IR/Me.h **** 			  // GPIOB->ODR |= (0x6<<12);
 255:../8-LCD-TEMP-STP_Motor_IR/Me.h ****             break;
 256:../8-LCD-TEMP-STP_Motor_IR/Me.h **** 		  case 4:
 257:../8-LCD-TEMP-STP_Motor_IR/Me.h **** 			  GPIOB->ODR &= ~ (0x4<<12);
 258:../8-LCD-TEMP-STP_Motor_IR/Me.h **** 			  // GPIOB->ODR |= (0x4<<12);
 259:../8-LCD-TEMP-STP_Motor_IR/Me.h ****             break;
 260:../8-LCD-TEMP-STP_Motor_IR/Me.h **** 		  case 5:
 261:../8-LCD-TEMP-STP_Motor_IR/Me.h **** 			  GPIOB->ODR &= ~ (0xB<<12);
 262:../8-LCD-TEMP-STP_Motor_IR/Me.h **** 			  // GPIOB->ODR |= (0xB<<12);
 263:../8-LCD-TEMP-STP_Motor_IR/Me.h ****             break;
 264:../8-LCD-TEMP-STP_Motor_IR/Me.h **** 		  case 6:
 265:../8-LCD-TEMP-STP_Motor_IR/Me.h **** 			  GPIOB->ODR &= ~ (0x9<<12);
 1267              		.loc 2 265 17 view .LVU314
 1268 03b2 DA60     		str	r2, [r3, #12]	@ _14,
 266:../8-LCD-TEMP-STP_Motor_IR/Me.h **** 			  // GPIOB->ODR |= (0x9<<12);
 267:../8-LCD-TEMP-STP_Motor_IR/Me.h ****             break;
 1269              		.loc 2 267 13 is_stmt 1 view .LVU315
 1270              	.L68:
 1271              	@ ../8-LCD-TEMP-STP_Motor_IR/Me.h:269: }
 268:../8-LCD-TEMP-STP_Motor_IR/Me.h ****     }
 269:../8-LCD-TEMP-STP_Motor_IR/Me.h **** }
 1272              		.loc 2 269 1 is_stmt 0 view .LVU316
ARM GAS  /tmp/cc4r6sqw.s 			page 36


 1273 03b4 7047     		bx	lr	@
 1274              	.L76:
 245:../8-LCD-TEMP-STP_Motor_IR/Me.h **** 			  // GPIOB->ODR |= (0x3<<12);
 1275              		.loc 2 245 6 is_stmt 1 view .LVU317
 1276              	@ ../8-LCD-TEMP-STP_Motor_IR/Me.h:245: 			  GPIOB->ODR &= ~ (0x3<<12);
 245:../8-LCD-TEMP-STP_Motor_IR/Me.h **** 			  // GPIOB->ODR |= (0x3<<12);
 1277              		.loc 2 245 17 is_stmt 0 view .LVU318
 1278 03b6 DA68     		ldr	r2, [r3, #12]	@ _3, MEM[(struct GPIO_TypeDef *)1073810432B].ODR
 1279 03b8 22F44052 		bic	r2, r2, #12288	@ _4, _3,
 1280 03bc F9E7     		b	.L78		@
 1281              	.L75:
 249:../8-LCD-TEMP-STP_Motor_IR/Me.h **** 			  // GPIOB->ODR |= (0x2<<12);
 1282              		.loc 2 249 6 is_stmt 1 view .LVU319
 1283              	@ ../8-LCD-TEMP-STP_Motor_IR/Me.h:249: 			  GPIOB->ODR &= ~ (0x2<<12);
 249:../8-LCD-TEMP-STP_Motor_IR/Me.h **** 			  // GPIOB->ODR |= (0x2<<12);
 1284              		.loc 2 249 17 is_stmt 0 view .LVU320
 1285 03be DA68     		ldr	r2, [r3, #12]	@ _5, MEM[(struct GPIO_TypeDef *)1073810432B].ODR
 1286 03c0 22F40052 		bic	r2, r2, #8192	@ _6, _5,
 1287 03c4 F5E7     		b	.L78		@
 1288              	.L74:
 253:../8-LCD-TEMP-STP_Motor_IR/Me.h **** 			  // GPIOB->ODR |= (0x6<<12);
 1289              		.loc 2 253 6 is_stmt 1 view .LVU321
 1290              	@ ../8-LCD-TEMP-STP_Motor_IR/Me.h:253: 			  GPIOB->ODR &= ~ (0x6<<12);
 253:../8-LCD-TEMP-STP_Motor_IR/Me.h **** 			  // GPIOB->ODR |= (0x6<<12);
 1291              		.loc 2 253 17 is_stmt 0 view .LVU322
 1292 03c6 DA68     		ldr	r2, [r3, #12]	@ _7, MEM[(struct GPIO_TypeDef *)1073810432B].ODR
 1293 03c8 22F4C042 		bic	r2, r2, #24576	@ _8, _7,
 1294 03cc F1E7     		b	.L78		@
 1295              	.L73:
 257:../8-LCD-TEMP-STP_Motor_IR/Me.h **** 			  // GPIOB->ODR |= (0x4<<12);
 1296              		.loc 2 257 6 is_stmt 1 view .LVU323
 1297              	@ ../8-LCD-TEMP-STP_Motor_IR/Me.h:257: 			  GPIOB->ODR &= ~ (0x4<<12);
 257:../8-LCD-TEMP-STP_Motor_IR/Me.h **** 			  // GPIOB->ODR |= (0x4<<12);
 1298              		.loc 2 257 17 is_stmt 0 view .LVU324
 1299 03ce DA68     		ldr	r2, [r3, #12]	@ _9, MEM[(struct GPIO_TypeDef *)1073810432B].ODR
 1300 03d0 22F48042 		bic	r2, r2, #16384	@ _10, _9,
 1301 03d4 EDE7     		b	.L78		@
 1302              	.L72:
 261:../8-LCD-TEMP-STP_Motor_IR/Me.h **** 			  // GPIOB->ODR |= (0xB<<12);
 1303              		.loc 2 261 6 is_stmt 1 view .LVU325
 1304              	@ ../8-LCD-TEMP-STP_Motor_IR/Me.h:261: 			  GPIOB->ODR &= ~ (0xB<<12);
 261:../8-LCD-TEMP-STP_Motor_IR/Me.h **** 			  // GPIOB->ODR |= (0xB<<12);
 1305              		.loc 2 261 17 is_stmt 0 view .LVU326
 1306 03d6 DA68     		ldr	r2, [r3, #12]	@ _11, MEM[(struct GPIO_TypeDef *)1073810432B].ODR
 1307 03d8 22F43042 		bic	r2, r2, #45056	@ _12, _11,
 1308 03dc E9E7     		b	.L78		@
 1309              	.L70:
 265:../8-LCD-TEMP-STP_Motor_IR/Me.h **** 			  // GPIOB->ODR |= (0x9<<12);
 1310              		.loc 2 265 6 is_stmt 1 view .LVU327
 1311              	@ ../8-LCD-TEMP-STP_Motor_IR/Me.h:265: 			  GPIOB->ODR &= ~ (0x9<<12);
 265:../8-LCD-TEMP-STP_Motor_IR/Me.h **** 			  // GPIOB->ODR |= (0x9<<12);
 1312              		.loc 2 265 17 is_stmt 0 view .LVU328
 1313 03de DA68     		ldr	r2, [r3, #12]	@ _13, MEM[(struct GPIO_TypeDef *)1073810432B].ODR
 1314 03e0 22F41042 		bic	r2, r2, #36864	@ _14, _13,
 1315 03e4 E5E7     		b	.L78		@
 1316              	.L80:
 1317 03e6 00BF     		.align	2
ARM GAS  /tmp/cc4r6sqw.s 			page 37


 1318              	.L79:
 1319 03e8 000C0140 		.word	1073810432
 1320              		.cfi_endproc
 1321              	.LFE43:
 1322              		.size	controlarMotorPasso, .-controlarMotorPasso
 1323              		.align	1
 1324              		.syntax unified
 1325              		.thumb
 1326              		.thumb_func
 1327              		.type	task4, %function
 1328              	task4:
 1329              	.LVL55:
 1330              	.LFB55:
 209:../8-LCD-TEMP-STP_Motor_IR/main.c **** 	/* 
 1331              		.loc 1 209 53 is_stmt 1 view -0
 1332              		.cfi_startproc
 1333              		@ args = 0, pretend = 0, frame = 8
 1334              		@ frame_needed = 0, uses_anonymous_args = 0
 222:../8-LCD-TEMP-STP_Motor_IR/main.c **** 	GPIOB->CRH	|= (0x3333<< 16); 
 1335              		.loc 1 222 2 view .LVU330
 1336              	@ ../8-LCD-TEMP-STP_Motor_IR/main.c:222: 	RCC->APB2ENR |= (1<<3); // En GPIOC
 222:../8-LCD-TEMP-STP_Motor_IR/main.c **** 	GPIOB->CRH	|= (0x3333<< 16); 
 1337              		.loc 1 222 15 is_stmt 0 view .LVU331
 1338 03ec 1B4A     		ldr	r2, .L93	@ tmp126,
 1339              	@ ../8-LCD-TEMP-STP_Motor_IR/main.c:209: static void task4(void *args __attribute ((unused))){
 209:../8-LCD-TEMP-STP_Motor_IR/main.c **** 	/* 
 1340              		.loc 1 209 53 view .LVU332
 1341 03ee 2DE9F341 		push	{r0, r1, r4, r5, r6, r7, r8, lr}	@
 1342              	.LCFI7:
 1343              		.cfi_def_cfa_offset 32
 1344              		.cfi_offset 4, -24
 1345              		.cfi_offset 5, -20
 1346              		.cfi_offset 6, -16
 1347              		.cfi_offset 7, -12
 1348              		.cfi_offset 8, -8
 1349              		.cfi_offset 14, -4
 1350              	@ ../8-LCD-TEMP-STP_Motor_IR/main.c:222: 	RCC->APB2ENR |= (1<<3); // En GPIOC
 222:../8-LCD-TEMP-STP_Motor_IR/main.c **** 	GPIOB->CRH	|= (0x3333<< 16); 
 1351              		.loc 1 222 15 view .LVU333
 1352 03f2 9369     		ldr	r3, [r2, #24]	@ _2, MEM[(struct RCC_TypeDef *)1073876992B].APB2ENR
 1353              	@ ../8-LCD-TEMP-STP_Motor_IR/main.c:229: 		if (xQueueReceive(STMotor_queue, &code_ir, pdMS_TO_TICKS
 229:../8-LCD-TEMP-STP_Motor_IR/main.c **** 
 1354              		.loc 1 229 7 view .LVU334
 1355 03f4 1A4D     		ldr	r5, .L93+4	@ tmp132,
 1356              	@ ../8-LCD-TEMP-STP_Motor_IR/main.c:222: 	RCC->APB2ENR |= (1<<3); // En GPIOC
 222:../8-LCD-TEMP-STP_Motor_IR/main.c **** 	GPIOB->CRH	|= (0x3333<< 16); 
 1357              		.loc 1 222 15 view .LVU335
 1358 03f6 43F00803 		orr	r3, r3, #8	@ _4, _2,
 1359 03fa 9361     		str	r3, [r2, #24]	@ _4, MEM[(struct RCC_TypeDef *)1073876992B].APB2ENR
 223:../8-LCD-TEMP-STP_Motor_IR/main.c **** 	u32 code_ir; 
 1360              		.loc 1 223 2 is_stmt 1 view .LVU336
 1361              	@ ../8-LCD-TEMP-STP_Motor_IR/main.c:223: 	GPIOB->CRH	|= (0x3333<< 16); 
 223:../8-LCD-TEMP-STP_Motor_IR/main.c **** 	u32 code_ir; 
 1362              		.loc 1 223 13 is_stmt 0 view .LVU337
 1363 03fc A2F58232 		sub	r2, r2, #66560	@ tmp128, tmp128,
 1364 0400 5368     		ldr	r3, [r2, #4]	@ _5, MEM[(struct GPIO_TypeDef *)1073810432B].CRH
 1365              	@ ../8-LCD-TEMP-STP_Motor_IR/main.c:231: 			if (code_ir == CR_B7){
ARM GAS  /tmp/cc4r6sqw.s 			page 38


 231:../8-LCD-TEMP-STP_Motor_IR/main.c **** 				for (u32 i=0 ; i<=STP *360 ; i++){
 1366              		.loc 1 231 7 view .LVU338
 1367 0402 184E     		ldr	r6, .L93+8	@ tmp133,
 1368              	@ ../8-LCD-TEMP-STP_Motor_IR/main.c:223: 	GPIOB->CRH	|= (0x3333<< 16); 
 223:../8-LCD-TEMP-STP_Motor_IR/main.c **** 	u32 code_ir; 
 1369              		.loc 1 223 13 view .LVU339
 1370 0404 43F04C53 		orr	r3, r3, #855638016	@ _6, _5,
 1371 0408 43F44C13 		orr	r3, r3, #3342336	@ _6, _6,
 1372              	@ ../8-LCD-TEMP-STP_Motor_IR/main.c:237: 			if (code_ir == CR_B9){
 237:../8-LCD-TEMP-STP_Motor_IR/main.c **** 				for (u32 i=STP  *360+90 ; i>0 ; i--){
 1373              		.loc 1 237 7 view .LVU340
 1374 040c 164F     		ldr	r7, .L93+12	@ tmp136,
 1375              	@ ../8-LCD-TEMP-STP_Motor_IR/main.c:223: 	GPIOB->CRH	|= (0x3333<< 16); 
 223:../8-LCD-TEMP-STP_Motor_IR/main.c **** 	u32 code_ir; 
 1376              		.loc 1 223 13 view .LVU341
 1377 040e 5360     		str	r3, [r2, #4]	@ _6, MEM[(struct GPIO_TypeDef *)1073810432B].CRH
 1378              	.LVL56:
 1379              	.L82:
 224:../8-LCD-TEMP-STP_Motor_IR/main.c **** 
 1380              		.loc 1 224 2 is_stmt 1 view .LVU342
 228:../8-LCD-TEMP-STP_Motor_IR/main.c **** 		if (xQueueReceive(STMotor_queue, &code_ir, pdMS_TO_TICKS(10))) {
 1381              		.loc 1 228 2 view .LVU343
 229:../8-LCD-TEMP-STP_Motor_IR/main.c **** 
 1382              		.loc 1 229 3 view .LVU344
 1383              	@ ../8-LCD-TEMP-STP_Motor_IR/main.c:229: 		if (xQueueReceive(STMotor_queue, &code_ir, pdMS_TO_TICKS
 229:../8-LCD-TEMP-STP_Motor_IR/main.c **** 
 1384              		.loc 1 229 7 is_stmt 0 view .LVU345
 1385 0410 4FF47A72 		mov	r2, #1000	@,
 1386 0414 6868     		ldr	r0, [r5, #4]	@, STMotor_queue
 1387 0416 01A9     		add	r1, sp, #4	@ tmp143,,
 1388 0418 FFF7FEFF 		bl	xQueueReceive		@
 1389              	.LVL57:
 1390              	@ ../8-LCD-TEMP-STP_Motor_IR/main.c:229: 		if (xQueueReceive(STMotor_queue, &code_ir, pdMS_TO_TICKS
 229:../8-LCD-TEMP-STP_Motor_IR/main.c **** 
 1391              		.loc 1 229 6 view .LVU346
 1392 041c 0028     		cmp	r0, #0	@ tmp141
 1393 041e F7D0     		beq	.L82	@
 231:../8-LCD-TEMP-STP_Motor_IR/main.c **** 				for (u32 i=0 ; i<=STP *360 ; i++){
 1394              		.loc 1 231 4 is_stmt 1 view .LVU347
 1395              	@ ../8-LCD-TEMP-STP_Motor_IR/main.c:231: 			if (code_ir == CR_B7){
 231:../8-LCD-TEMP-STP_Motor_IR/main.c **** 				for (u32 i=0 ; i<=STP *360 ; i++){
 1396              		.loc 1 231 7 is_stmt 0 view .LVU348
 1397 0420 019B     		ldr	r3, [sp, #4]	@ code_ir, code_ir
 1398 0422 B342     		cmp	r3, r6	@ code_ir, tmp133
 1399 0424 0BD1     		bne	.L83		@,
 1400              	.LBB17:
 1401              	@ ../8-LCD-TEMP-STP_Motor_IR/main.c:232: 				for (u32 i=0 ; i<=STP *360 ; i++){
 232:../8-LCD-TEMP-STP_Motor_IR/main.c **** 					controlarMotorPasso(i);
 1402              		.loc 1 232 14 view .LVU349
 1403 0426 0024     		movs	r4, #0	@ i,
 1404              	@ ../8-LCD-TEMP-STP_Motor_IR/main.c:232: 				for (u32 i=0 ; i<=STP *360 ; i++){
 232:../8-LCD-TEMP-STP_Motor_IR/main.c **** 					controlarMotorPasso(i);
 1405              		.loc 1 232 5 view .LVU350
 1406 0428 40F67108 		movw	r8, #2161	@ tmp135,
 1407              	.L84:
 1408              	.LVL58:
 233:../8-LCD-TEMP-STP_Motor_IR/main.c **** 					__delay(140);
ARM GAS  /tmp/cc4r6sqw.s 			page 39


 1409              		.loc 1 233 6 is_stmt 1 discriminator 3 view .LVU351
 1410 042c 2046     		mov	r0, r4	@, i
 1411 042e FFF7FEFF 		bl	controlarMotorPasso		@
 1412              	.LVL59:
 234:../8-LCD-TEMP-STP_Motor_IR/main.c **** 				}
 1413              		.loc 1 234 6 discriminator 3 view .LVU352
 1414              	@ ../8-LCD-TEMP-STP_Motor_IR/main.c:232: 				for (u32 i=0 ; i<=STP *360 ; i++){
 232:../8-LCD-TEMP-STP_Motor_IR/main.c **** 					controlarMotorPasso(i);
 1415              		.loc 1 232 35 is_stmt 0 discriminator 3 view .LVU353
 1416 0432 0134     		adds	r4, r4, #1	@ i, i,
 1417              	.LVL60:
 1418              	@ ../8-LCD-TEMP-STP_Motor_IR/main.c:234: 					__delay(140);
 234:../8-LCD-TEMP-STP_Motor_IR/main.c **** 				}
 1419              		.loc 1 234 6 discriminator 3 view .LVU354
 1420 0434 8C20     		movs	r0, #140	@,
 1421 0436 FFF7FEFF 		bl	vTaskDelay		@
 1422              	.LVL61:
 232:../8-LCD-TEMP-STP_Motor_IR/main.c **** 					controlarMotorPasso(i);
 1423              		.loc 1 232 34 is_stmt 1 discriminator 3 view .LVU355
 232:../8-LCD-TEMP-STP_Motor_IR/main.c **** 					controlarMotorPasso(i);
 1424              		.loc 1 232 20 discriminator 3 view .LVU356
 1425              	@ ../8-LCD-TEMP-STP_Motor_IR/main.c:232: 				for (u32 i=0 ; i<=STP *360 ; i++){
 232:../8-LCD-TEMP-STP_Motor_IR/main.c **** 					controlarMotorPasso(i);
 1426              		.loc 1 232 5 is_stmt 0 discriminator 3 view .LVU357
 1427 043a 4445     		cmp	r4, r8	@ i, tmp135
 1428 043c F6D1     		bne	.L84		@,
 1429              	.LVL62:
 1430              	.L83:
 232:../8-LCD-TEMP-STP_Motor_IR/main.c **** 					controlarMotorPasso(i);
 1431              		.loc 1 232 5 discriminator 3 view .LVU358
 1432              	.LBE17:
 237:../8-LCD-TEMP-STP_Motor_IR/main.c **** 				for (u32 i=STP  *360+90 ; i>0 ; i--){
 1433              		.loc 1 237 4 is_stmt 1 view .LVU359
 1434              	@ ../8-LCD-TEMP-STP_Motor_IR/main.c:237: 			if (code_ir == CR_B9){
 237:../8-LCD-TEMP-STP_Motor_IR/main.c **** 				for (u32 i=STP  *360+90 ; i>0 ; i--){
 1435              		.loc 1 237 7 is_stmt 0 view .LVU360
 1436 043e 019B     		ldr	r3, [sp, #4]	@ code_ir, code_ir
 1437 0440 BB42     		cmp	r3, r7	@ code_ir, tmp136
 1438 0442 E5D1     		bne	.L82		@,
 1439              	.LBB18:
 1440              	@ ../8-LCD-TEMP-STP_Motor_IR/main.c:238: 				for (u32 i=STP  *360+90 ; i>0 ; i--){
 238:../8-LCD-TEMP-STP_Motor_IR/main.c **** 					controlarMotorPasso(i);
 1441              		.loc 1 238 14 view .LVU361
 1442 0444 40F6CA04 		movw	r4, #2250	@ i,
 1443              	.L86:
 1444              	.LVL63:
 239:../8-LCD-TEMP-STP_Motor_IR/main.c **** 					__delay(130);
 1445              		.loc 1 239 6 is_stmt 1 discriminator 3 view .LVU362
 1446 0448 2046     		mov	r0, r4	@, i
 1447 044a FFF7FEFF 		bl	controlarMotorPasso		@
 1448              	.LVL64:
 240:../8-LCD-TEMP-STP_Motor_IR/main.c **** 				}
 1449              		.loc 1 240 6 discriminator 3 view .LVU363
 1450 044e 8220     		movs	r0, #130	@,
 1451 0450 FFF7FEFF 		bl	vTaskDelay		@
 1452              	.LVL65:
 238:../8-LCD-TEMP-STP_Motor_IR/main.c **** 					controlarMotorPasso(i);
ARM GAS  /tmp/cc4r6sqw.s 			page 40


 1453              		.loc 1 238 37 discriminator 3 view .LVU364
 238:../8-LCD-TEMP-STP_Motor_IR/main.c **** 					controlarMotorPasso(i);
 1454              		.loc 1 238 31 discriminator 3 view .LVU365
 1455              	@ ../8-LCD-TEMP-STP_Motor_IR/main.c:238: 				for (u32 i=STP  *360+90 ; i>0 ; i--){
 238:../8-LCD-TEMP-STP_Motor_IR/main.c **** 					controlarMotorPasso(i);
 1456              		.loc 1 238 5 is_stmt 0 discriminator 3 view .LVU366
 1457 0454 013C     		subs	r4, r4, #1	@ i, i,
 1458              	.LVL66:
 238:../8-LCD-TEMP-STP_Motor_IR/main.c **** 					controlarMotorPasso(i);
 1459              		.loc 1 238 5 discriminator 3 view .LVU367
 1460 0456 F7D1     		bne	.L86		@,
 1461 0458 DAE7     		b	.L82		@
 1462              	.L94:
 1463 045a 00BF     		.align	2
 1464              	.L93:
 1465 045c 00100240 		.word	1073876992
 1466 0460 00000000 		.word	.LANCHOR0
 1467 0464 30FE3FFC 		.word	-62915024
 1468 0468 30FE3FF8 		.word	-130023888
 1469              	.LBE18:
 1470              		.cfi_endproc
 1471              	.LFE55:
 1472              		.size	task4, .-task4
 1473              		.align	1
 1474              		.global	Stepp_end
 1475              		.syntax unified
 1476              		.thumb
 1477              		.thumb_func
 1478              		.type	Stepp_end, %function
 1479              	Stepp_end:
 1480              	.LFB44:
 270:../8-LCD-TEMP-STP_Motor_IR/Me.h **** void Stepp_end(){
 1481              		.loc 2 270 17 is_stmt 1 view -0
 1482              		.cfi_startproc
 1483              		@ args = 0, pretend = 0, frame = 0
 1484              		@ frame_needed = 0, uses_anonymous_args = 0
 1485              		@ link register save eliminated.
 271:../8-LCD-TEMP-STP_Motor_IR/Me.h **** 	  GPIOB->ODR &=~ (0xF << 12);
 1486              		.loc 2 271 4 view .LVU369
 1487              	@ ../8-LCD-TEMP-STP_Motor_IR/Me.h:271: 	  GPIOB->ODR &=~ (0xF << 12);
 1488              		.loc 2 271 15 is_stmt 0 view .LVU370
 1489 046c 024A     		ldr	r2, .L96	@ tmp115,
 1490 046e D368     		ldr	r3, [r2, #12]	@ _1, MEM[(struct GPIO_TypeDef *)1073810432B].ODR
 1491 0470 23F47043 		bic	r3, r3, #61440	@ _2, _1,
 1492 0474 D360     		str	r3, [r2, #12]	@ _2, MEM[(struct GPIO_TypeDef *)1073810432B].ODR
 1493              	@ ../8-LCD-TEMP-STP_Motor_IR/Me.h:272: }
 272:../8-LCD-TEMP-STP_Motor_IR/Me.h **** }
 1494              		.loc 2 272 1 view .LVU371
 1495 0476 7047     		bx	lr	@
 1496              	.L97:
 1497              		.align	2
 1498              	.L96:
 1499 0478 000C0140 		.word	1073810432
 1500              		.cfi_endproc
 1501              	.LFE44:
 1502              		.size	Stepp_end, .-Stepp_end
 1503              		.align	1
ARM GAS  /tmp/cc4r6sqw.s 			page 41


 1504              		.global	USART_init
 1505              		.syntax unified
 1506              		.thumb
 1507              		.thumb_func
 1508              		.type	USART_init, %function
 1509              	USART_init:
 1510              	.LFB45:
 1511              		.file 3 "../8-LCD-TEMP-STP_Motor_IR/Serial.h"
   1:../8-LCD-TEMP-STP_Motor_IR/Serial.h **** // #ifndef	SERIAL_K
   2:../8-LCD-TEMP-STP_Motor_IR/Serial.h **** // #define 	SERIAL_K
   3:../8-LCD-TEMP-STP_Motor_IR/Serial.h **** 
   4:../8-LCD-TEMP-STP_Motor_IR/Serial.h **** void USARTSend(char *pucBuffer);
   5:../8-LCD-TEMP-STP_Motor_IR/Serial.h **** void USART_init(void);
   6:../8-LCD-TEMP-STP_Motor_IR/Serial.h **** 
   7:../8-LCD-TEMP-STP_Motor_IR/Serial.h **** void USART_init(void) {
 1512              		.loc 3 7 23 is_stmt 1 view -0
 1513              		.cfi_startproc
 1514              		@ args = 0, pretend = 0, frame = 24
 1515              		@ frame_needed = 0, uses_anonymous_args = 0
   8:../8-LCD-TEMP-STP_Motor_IR/Serial.h ****    /* Enable USART1 and GPIOA clock */
   9:../8-LCD-TEMP-STP_Motor_IR/Serial.h ****    RCC_APB2PeriphClockCmd(RCC_APB2Periph_USART1 | RCC_APB2Periph_GPIOA, ENABLE);
 1516              		.loc 3 9 4 view .LVU373
 1517              	@ ../8-LCD-TEMP-STP_Motor_IR/Serial.h:7: void USART_init(void) {
   7:../8-LCD-TEMP-STP_Motor_IR/Serial.h ****    /* Enable USART1 and GPIOA clock */
 1518              		.loc 3 7 23 is_stmt 0 view .LVU374
 1519 047c 10B5     		push	{r4, lr}	@
 1520              	.LCFI8:
 1521              		.cfi_def_cfa_offset 8
 1522              		.cfi_offset 4, -8
 1523              		.cfi_offset 14, -4
 1524              	@ ../8-LCD-TEMP-STP_Motor_IR/Serial.h:9:    RCC_APB2PeriphClockCmd(RCC_APB2Periph_USART1 | RCC_APB2
 1525              		.loc 3 9 4 view .LVU375
 1526 047e 0121     		movs	r1, #1	@,
 1527              	@ ../8-LCD-TEMP-STP_Motor_IR/Serial.h:7: void USART_init(void) {
   7:../8-LCD-TEMP-STP_Motor_IR/Serial.h ****    /* Enable USART1 and GPIOA clock */
 1528              		.loc 3 7 23 view .LVU376
 1529 0480 86B0     		sub	sp, sp, #24	@,,
 1530              	.LCFI9:
 1531              		.cfi_def_cfa_offset 32
 1532              	@ ../8-LCD-TEMP-STP_Motor_IR/Serial.h:9:    RCC_APB2PeriphClockCmd(RCC_APB2Periph_USART1 | RCC_APB2
 1533              		.loc 3 9 4 view .LVU377
 1534 0482 44F20400 		movw	r0, #16388	@,
 1535 0486 FFF7FEFF 		bl	RCC_APB2PeriphClockCmd		@
 1536              	.LVL67:
  10:../8-LCD-TEMP-STP_Motor_IR/Serial.h **** 
  11:../8-LCD-TEMP-STP_Motor_IR/Serial.h ****    /* Configure the GPIOs */
  12:../8-LCD-TEMP-STP_Motor_IR/Serial.h ****    GPIO_InitTypeDef GPIO_InitStructure;
 1537              		.loc 3 12 4 is_stmt 1 view .LVU378
  13:../8-LCD-TEMP-STP_Motor_IR/Serial.h **** 
  14:../8-LCD-TEMP-STP_Motor_IR/Serial.h ****    /* Configure USART1 Tx (PA.09) as alternate function push-pull */
  15:../8-LCD-TEMP-STP_Motor_IR/Serial.h ****    GPIO_InitStructure.GPIO_Pin = GPIO_Pin_9;
 1538              		.loc 3 15 4 view .LVU379
  16:../8-LCD-TEMP-STP_Motor_IR/Serial.h ****    GPIO_InitStructure.GPIO_Mode = GPIO_Mode_AF_PP;
 1539              		.loc 3 16 4 view .LVU380
  17:../8-LCD-TEMP-STP_Motor_IR/Serial.h ****    GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;
 1540              		.loc 3 17 4 view .LVU381
 1541              	@ ../8-LCD-TEMP-STP_Motor_IR/Serial.h:15:    GPIO_InitStructure.GPIO_Pin = GPIO_Pin_9;
ARM GAS  /tmp/cc4r6sqw.s 			page 42


  15:../8-LCD-TEMP-STP_Motor_IR/Serial.h ****    GPIO_InitStructure.GPIO_Mode = GPIO_Mode_AF_PP;
 1542              		.loc 3 15 32 is_stmt 0 view .LVU382
 1543 048a 4FF40073 		mov	r3, #512	@ tmp114,
 1544 048e ADF80430 		strh	r3, [sp, #4]	@ movhi	@ tmp114, GPIO_InitStructure.GPIO_Pin
 1545              	@ ../8-LCD-TEMP-STP_Motor_IR/Serial.h:17:    GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;
 1546              		.loc 3 17 34 view .LVU383
 1547 0492 41F60303 		movw	r3, #6147	@ tmp116,
 1548              	@ ../8-LCD-TEMP-STP_Motor_IR/Serial.h:18:    GPIO_Init(GPIOA, &GPIO_InitStructure);
  18:../8-LCD-TEMP-STP_Motor_IR/Serial.h ****    GPIO_Init(GPIOA, &GPIO_InitStructure);
 1549              		.loc 3 18 4 view .LVU384
 1550 0496 144C     		ldr	r4, .L99	@ tmp118,
 1551 0498 01A9     		add	r1, sp, #4	@ tmp134,,
 1552 049a 2046     		mov	r0, r4	@, tmp118
 1553              	@ ../8-LCD-TEMP-STP_Motor_IR/Serial.h:17:    GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;
  17:../8-LCD-TEMP-STP_Motor_IR/Serial.h ****    GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;
 1554              		.loc 3 17 34 view .LVU385
 1555 049c ADF80630 		strh	r3, [sp, #6]	@ movhi	@ tmp116, MEM <unsigned short> [(void *)&GPIO_InitStructure + 2B]
 1556              		.loc 3 18 4 is_stmt 1 view .LVU386
 1557 04a0 FFF7FEFF 		bl	GPIO_Init		@
 1558              	.LVL68:
  19:../8-LCD-TEMP-STP_Motor_IR/Serial.h **** 
  20:../8-LCD-TEMP-STP_Motor_IR/Serial.h ****    /* Configure USART1 Rx (PA.10) as input floating */
  21:../8-LCD-TEMP-STP_Motor_IR/Serial.h ****    GPIO_InitStructure.GPIO_Pin = GPIO_Pin_10;
 1559              		.loc 3 21 4 view .LVU387
 1560              	@ ../8-LCD-TEMP-STP_Motor_IR/Serial.h:21:    GPIO_InitStructure.GPIO_Pin = GPIO_Pin_10;
 1561              		.loc 3 21 32 is_stmt 0 view .LVU388
 1562 04a4 4FF48063 		mov	r3, #1024	@ tmp120,
 1563 04a8 ADF80430 		strh	r3, [sp, #4]	@ movhi	@ tmp120, GPIO_InitStructure.GPIO_Pin
  22:../8-LCD-TEMP-STP_Motor_IR/Serial.h ****    GPIO_InitStructure.GPIO_Mode = GPIO_Mode_IN_FLOATING;
 1564              		.loc 3 22 4 is_stmt 1 view .LVU389
 1565              	@ ../8-LCD-TEMP-STP_Motor_IR/Serial.h:22:    GPIO_InitStructure.GPIO_Mode = GPIO_Mode_IN_FLOATING;
 1566              		.loc 3 22 33 is_stmt 0 view .LVU390
 1567 04ac 0423     		movs	r3, #4	@ tmp121,
 1568              	@ ../8-LCD-TEMP-STP_Motor_IR/Serial.h:23:    GPIO_Init(GPIOA, &GPIO_InitStructure);
  23:../8-LCD-TEMP-STP_Motor_IR/Serial.h ****    GPIO_Init(GPIOA, &GPIO_InitStructure);
 1569              		.loc 3 23 4 view .LVU391
 1570 04ae 2046     		mov	r0, r4	@, tmp118
 1571 04b0 0DEB0301 		add	r1, sp, r3	@ tmp135,,
 1572              	@ ../8-LCD-TEMP-STP_Motor_IR/Serial.h:22:    GPIO_InitStructure.GPIO_Mode = GPIO_Mode_IN_FLOATING;
  22:../8-LCD-TEMP-STP_Motor_IR/Serial.h ****    GPIO_InitStructure.GPIO_Mode = GPIO_Mode_IN_FLOATING;
 1573              		.loc 3 22 33 view .LVU392
 1574 04b4 8DF80730 		strb	r3, [sp, #7]	@ tmp121, GPIO_InitStructure.GPIO_Mode
 1575              		.loc 3 23 4 is_stmt 1 view .LVU393
 1576 04b8 FFF7FEFF 		bl	GPIO_Init		@
 1577              	.LVL69:
  24:../8-LCD-TEMP-STP_Motor_IR/Serial.h **** 
  25:../8-LCD-TEMP-STP_Motor_IR/Serial.h ****    /* Configure the USART1 */
  26:../8-LCD-TEMP-STP_Motor_IR/Serial.h ****    USART_InitTypeDef USART_InitStructure;
 1578              		.loc 3 26 4 view .LVU394
  27:../8-LCD-TEMP-STP_Motor_IR/Serial.h ****    USART_InitStructure.USART_BaudRate = 115200;
 1579              		.loc 3 27 4 view .LVU395
  28:../8-LCD-TEMP-STP_Motor_IR/Serial.h ****    USART_InitStructure.USART_WordLength = USART_WordLength_8b;
 1580              		.loc 3 28 4 view .LVU396
  29:../8-LCD-TEMP-STP_Motor_IR/Serial.h ****    USART_InitStructure.USART_StopBits = USART_StopBits_1;
 1581              		.loc 3 29 4 view .LVU397
  30:../8-LCD-TEMP-STP_Motor_IR/Serial.h ****    USART_InitStructure.USART_Parity = USART_Parity_No;
 1582              		.loc 3 30 4 view .LVU398
ARM GAS  /tmp/cc4r6sqw.s 			page 43


  31:../8-LCD-TEMP-STP_Motor_IR/Serial.h ****    USART_InitStructure.USART_HardwareFlowControl = USART_HardwareFlowControl_None;
 1583              		.loc 3 31 4 view .LVU399
  32:../8-LCD-TEMP-STP_Motor_IR/Serial.h ****    USART_InitStructure.USART_Mode = USART_Mode_Rx | USART_Mode_Tx;
 1584              		.loc 3 32 4 view .LVU400
 1585              	@ ../8-LCD-TEMP-STP_Motor_IR/Serial.h:28:    USART_InitStructure.USART_WordLength = USART_WordLengt
  28:../8-LCD-TEMP-STP_Motor_IR/Serial.h ****    USART_InitStructure.USART_StopBits = USART_StopBits_1;
 1586              		.loc 3 28 41 is_stmt 0 view .LVU401
 1587 04bc 0023     		movs	r3, #0	@ tmp126,
 1588 04be 4FF4E132 		mov	r2, #115200	@,
 1589 04c2 CDE90223 		strd	r2, r3, [sp, #8]	@, tmp126,,
 1590              	@ ../8-LCD-TEMP-STP_Motor_IR/Serial.h:30:    USART_InitStructure.USART_Parity = USART_Parity_No;
  30:../8-LCD-TEMP-STP_Motor_IR/Serial.h ****    USART_InitStructure.USART_HardwareFlowControl = USART_HardwareFlowControl_None;
 1591              		.loc 3 30 37 view .LVU402
 1592 04c6 4FF44022 		mov	r2, #786432	@ tmp127,
 1593              	@ ../8-LCD-TEMP-STP_Motor_IR/Serial.h:34:    USART_Init(USART1, &USART_InitStructure);
  33:../8-LCD-TEMP-STP_Motor_IR/Serial.h **** 
  34:../8-LCD-TEMP-STP_Motor_IR/Serial.h ****    USART_Init(USART1, &USART_InitStructure);
 1594              		.loc 3 34 4 view .LVU403
 1595 04ca 04F54054 		add	r4, r4, #12288	@ tmp131, tmp131,
 1596 04ce 2046     		mov	r0, r4	@, tmp131
 1597 04d0 02A9     		add	r1, sp, #8	@,,
 1598              	@ ../8-LCD-TEMP-STP_Motor_IR/Serial.h:30:    USART_InitStructure.USART_Parity = USART_Parity_No;
  30:../8-LCD-TEMP-STP_Motor_IR/Serial.h ****    USART_InitStructure.USART_HardwareFlowControl = USART_HardwareFlowControl_None;
 1599              		.loc 3 30 37 view .LVU404
 1600 04d2 0492     		str	r2, [sp, #16]	@ tmp127, MEM <unsigned int> [(short unsigned int *)&USART_InitStructure + 8B]
 1601              	@ ../8-LCD-TEMP-STP_Motor_IR/Serial.h:31:    USART_InitStructure.USART_HardwareFlowControl = USART_
  31:../8-LCD-TEMP-STP_Motor_IR/Serial.h ****    USART_InitStructure.USART_Mode = USART_Mode_Rx | USART_Mode_Tx;
 1602              		.loc 3 31 50 view .LVU405
 1603 04d4 ADF81430 		strh	r3, [sp, #20]	@ movhi	@ tmp126, USART_InitStructure.USART_HardwareFlowControl
 1604              		.loc 3 34 4 is_stmt 1 view .LVU406
 1605 04d8 FFF7FEFF 		bl	USART_Init		@
 1606              	.LVL70:
  35:../8-LCD-TEMP-STP_Motor_IR/Serial.h **** 
  36:../8-LCD-TEMP-STP_Motor_IR/Serial.h ****    /* Enable USART1 */
  37:../8-LCD-TEMP-STP_Motor_IR/Serial.h ****    USART_Cmd(USART1, ENABLE);
 1607              		.loc 3 37 4 view .LVU407
 1608 04dc 0121     		movs	r1, #1	@,
 1609 04de 2046     		mov	r0, r4	@, tmp131
 1610 04e0 FFF7FEFF 		bl	USART_Cmd		@
 1611              	.LVL71:
 1612              	@ ../8-LCD-TEMP-STP_Motor_IR/Serial.h:38: }
  38:../8-LCD-TEMP-STP_Motor_IR/Serial.h **** }
 1613              		.loc 3 38 1 is_stmt 0 view .LVU408
 1614 04e4 06B0     		add	sp, sp, #24	@,,
 1615              	.LCFI10:
 1616              		.cfi_def_cfa_offset 8
 1617              		@ sp needed	@
 1618 04e6 10BD     		pop	{r4, pc}	@
 1619              	.L100:
 1620              		.align	2
 1621              	.L99:
 1622 04e8 00080140 		.word	1073809408
 1623              		.cfi_endproc
 1624              	.LFE45:
 1625              		.size	USART_init, .-USART_init
 1626              		.align	1
 1627              		.global	USARTSend
ARM GAS  /tmp/cc4r6sqw.s 			page 44


 1628              		.syntax unified
 1629              		.thumb
 1630              		.thumb_func
 1631              		.type	USARTSend, %function
 1632              	USARTSend:
 1633              	.LVL72:
 1634              	.LFB46:
  39:../8-LCD-TEMP-STP_Motor_IR/Serial.h **** 
  40:../8-LCD-TEMP-STP_Motor_IR/Serial.h **** void USARTSend(char *pucBuffer) {
 1635              		.loc 3 40 33 is_stmt 1 view -0
 1636              		.cfi_startproc
 1637              		@ args = 0, pretend = 0, frame = 0
 1638              		@ frame_needed = 0, uses_anonymous_args = 0
  41:../8-LCD-TEMP-STP_Motor_IR/Serial.h ****     while (*pucBuffer)
 1639              		.loc 3 41 5 view .LVU410
 1640              	@ ../8-LCD-TEMP-STP_Motor_IR/Serial.h:40: void USARTSend(char *pucBuffer) {
  40:../8-LCD-TEMP-STP_Motor_IR/Serial.h ****     while (*pucBuffer)
 1641              		.loc 3 40 33 is_stmt 0 view .LVU411
 1642 04ec 38B5     		push	{r3, r4, r5, lr}	@
 1643              	.LCFI11:
 1644              		.cfi_def_cfa_offset 16
 1645              		.cfi_offset 3, -16
 1646              		.cfi_offset 4, -12
 1647              		.cfi_offset 5, -8
 1648              		.cfi_offset 14, -4
 1649              	@ ../8-LCD-TEMP-STP_Motor_IR/Serial.h:43:         USART_SendData(USART1, *pucBuffer++);
  42:../8-LCD-TEMP-STP_Motor_IR/Serial.h ****     {
  43:../8-LCD-TEMP-STP_Motor_IR/Serial.h ****         USART_SendData(USART1, *pucBuffer++);
 1650              		.loc 3 43 9 view .LVU412
 1651 04ee 084D     		ldr	r5, .L107	@ tmp126,
 1652 04f0 441E     		subs	r4, r0, #1	@ ivtmp.157, tmp128,
 1653              	.LVL73:
 1654              	.L102:
  41:../8-LCD-TEMP-STP_Motor_IR/Serial.h ****     {
 1655              		.loc 3 41 11 is_stmt 1 view .LVU413
 1656              	@ ../8-LCD-TEMP-STP_Motor_IR/Serial.h:41:     while (*pucBuffer)
  41:../8-LCD-TEMP-STP_Motor_IR/Serial.h ****     {
 1657              		.loc 3 41 12 is_stmt 0 view .LVU414
 1658 04f2 14F8011F 		ldrb	r1, [r4, #1]!	@ zero_extendqisi2	@ _3, MEM[base: _16, offset: 0B]
 1659              	.LVL74:
 1660              	@ ../8-LCD-TEMP-STP_Motor_IR/Serial.h:41:     while (*pucBuffer)
  41:../8-LCD-TEMP-STP_Motor_IR/Serial.h ****     {
 1661              		.loc 3 41 11 view .LVU415
 1662 04f6 01B9     		cbnz	r1, .L104	@ _3,
 1663              	@ ../8-LCD-TEMP-STP_Motor_IR/Serial.h:48: }
  44:../8-LCD-TEMP-STP_Motor_IR/Serial.h ****         while(USART_GetFlagStatus(USART1, USART_FLAG_TC) == RESET)
  45:../8-LCD-TEMP-STP_Motor_IR/Serial.h ****         {
  46:../8-LCD-TEMP-STP_Motor_IR/Serial.h ****         }
  47:../8-LCD-TEMP-STP_Motor_IR/Serial.h ****     }
  48:../8-LCD-TEMP-STP_Motor_IR/Serial.h **** }
 1664              		.loc 3 48 1 view .LVU416
 1665 04f8 38BD     		pop	{r3, r4, r5, pc}	@
 1666              	.LVL75:
 1667              	.L104:
  43:../8-LCD-TEMP-STP_Motor_IR/Serial.h ****         while(USART_GetFlagStatus(USART1, USART_FLAG_TC) == RESET)
 1668              		.loc 3 43 9 is_stmt 1 view .LVU417
  43:../8-LCD-TEMP-STP_Motor_IR/Serial.h ****         while(USART_GetFlagStatus(USART1, USART_FLAG_TC) == RESET)
ARM GAS  /tmp/cc4r6sqw.s 			page 45


 1669              		.loc 3 43 9 is_stmt 0 view .LVU418
 1670 04fa 2846     		mov	r0, r5	@, tmp126
 1671 04fc FFF7FEFF 		bl	USART_SendData		@
 1672              	.LVL76:
  44:../8-LCD-TEMP-STP_Motor_IR/Serial.h ****         while(USART_GetFlagStatus(USART1, USART_FLAG_TC) == RESET)
 1673              		.loc 3 44 9 is_stmt 1 view .LVU419
 1674              	.L103:
  46:../8-LCD-TEMP-STP_Motor_IR/Serial.h ****     }
 1675              		.loc 3 46 9 discriminator 1 view .LVU420
  44:../8-LCD-TEMP-STP_Motor_IR/Serial.h ****         while(USART_GetFlagStatus(USART1, USART_FLAG_TC) == RESET)
 1676              		.loc 3 44 14 discriminator 1 view .LVU421
 1677              	@ ../8-LCD-TEMP-STP_Motor_IR/Serial.h:44:         while(USART_GetFlagStatus(USART1, USART_FLAG_TC) 
  44:../8-LCD-TEMP-STP_Motor_IR/Serial.h ****         while(USART_GetFlagStatus(USART1, USART_FLAG_TC) == RESET)
 1678              		.loc 3 44 15 is_stmt 0 discriminator 1 view .LVU422
 1679 0500 4021     		movs	r1, #64	@,
 1680 0502 2846     		mov	r0, r5	@, tmp126
 1681 0504 FFF7FEFF 		bl	USART_GetFlagStatus		@
 1682              	.LVL77:
 1683              	@ ../8-LCD-TEMP-STP_Motor_IR/Serial.h:44:         while(USART_GetFlagStatus(USART1, USART_FLAG_TC) 
  44:../8-LCD-TEMP-STP_Motor_IR/Serial.h ****         while(USART_GetFlagStatus(USART1, USART_FLAG_TC) == RESET)
 1684              		.loc 3 44 14 discriminator 1 view .LVU423
 1685 0508 0028     		cmp	r0, #0	@ tmp129
 1686 050a F9D0     		beq	.L103	@
 1687 050c F1E7     		b	.L102		@
 1688              	.L108:
 1689 050e 00BF     		.align	2
 1690              	.L107:
 1691 0510 00380140 		.word	1073821696
 1692              		.cfi_endproc
 1693              	.LFE46:
 1694              		.size	USARTSend, .-USARTSend
 1695              		.align	1
 1696              		.global	ADC9_Configuration
 1697              		.syntax unified
 1698              		.thumb
 1699              		.thumb_func
 1700              		.type	ADC9_Configuration, %function
 1701              	ADC9_Configuration:
 1702              	.LFB47:
 1703              		.file 4 "../8-LCD-TEMP-STP_Motor_IR/adc.h"
   1:../8-LCD-TEMP-STP_Motor_IR/adc.h **** 
   2:../8-LCD-TEMP-STP_Motor_IR/adc.h **** void ADC9_Configuration()
   3:../8-LCD-TEMP-STP_Motor_IR/adc.h **** {
 1704              		.loc 4 3 1 is_stmt 1 view -0
 1705              		.cfi_startproc
 1706              		@ args = 0, pretend = 0, frame = 0
 1707              		@ frame_needed = 0, uses_anonymous_args = 0
 1708              		@ link register save eliminated.
   4:../8-LCD-TEMP-STP_Motor_IR/adc.h ****     // Habilitar o clock do ADC9
   5:../8-LCD-TEMP-STP_Motor_IR/adc.h ****     RCC->APB2ENR |= RCC_APB2ENR_ADC2EN;
 1709              		.loc 4 5 5 view .LVU425
 1710              	@ ../8-LCD-TEMP-STP_Motor_IR/adc.h:5:     RCC->APB2ENR |= RCC_APB2ENR_ADC2EN;
 1711              		.loc 4 5 18 is_stmt 0 view .LVU426
 1712 0514 174B     		ldr	r3, .L112	@ tmp135,
 1713 0516 9A69     		ldr	r2, [r3, #24]	@ _1, MEM[(struct RCC_TypeDef *)1073876992B].APB2ENR
 1714 0518 42F48062 		orr	r2, r2, #1024	@ _2, _1,
 1715 051c 9A61     		str	r2, [r3, #24]	@ _2, MEM[(struct RCC_TypeDef *)1073876992B].APB2ENR
ARM GAS  /tmp/cc4r6sqw.s 			page 46


   6:../8-LCD-TEMP-STP_Motor_IR/adc.h ****     RCC->APB2ENR |= (1<<3);
 1716              		.loc 4 6 5 is_stmt 1 view .LVU427
 1717              	@ ../8-LCD-TEMP-STP_Motor_IR/adc.h:6:     RCC->APB2ENR |= (1<<3);
 1718              		.loc 4 6 18 is_stmt 0 view .LVU428
 1719 051e 9A69     		ldr	r2, [r3, #24]	@ _3, MEM[(struct RCC_TypeDef *)1073876992B].APB2ENR
 1720 0520 42F00802 		orr	r2, r2, #8	@ _4, _3,
 1721 0524 9A61     		str	r2, [r3, #24]	@ _4, MEM[(struct RCC_TypeDef *)1073876992B].APB2ENR
   7:../8-LCD-TEMP-STP_Motor_IR/adc.h **** 
   8:../8-LCD-TEMP-STP_Motor_IR/adc.h ****     // Configurar o pino PB1 como entrada analógica
   9:../8-LCD-TEMP-STP_Motor_IR/adc.h ****     GPIOB->CRL &= ~(GPIO_CRL_MODE1 | GPIO_CRL_CNF1);
 1722              		.loc 4 9 5 is_stmt 1 view .LVU429
 1723              	@ ../8-LCD-TEMP-STP_Motor_IR/adc.h:9:     GPIOB->CRL &= ~(GPIO_CRL_MODE1 | GPIO_CRL_CNF1);
 1724              		.loc 4 9 16 is_stmt 0 view .LVU430
 1725 0526 144A     		ldr	r2, .L112+4	@ tmp139,
 1726 0528 1368     		ldr	r3, [r2]	@ _5, MEM[(struct GPIO_TypeDef *)1073810432B].CRL
 1727 052a 23F0F003 		bic	r3, r3, #240	@ _6, _5,
 1728 052e 1360     		str	r3, [r2]	@ _6, MEM[(struct GPIO_TypeDef *)1073810432B].CRL
  10:../8-LCD-TEMP-STP_Motor_IR/adc.h ****     // GPIOB->CRL |= GPIO_CRL_CNF1_0;
  11:../8-LCD-TEMP-STP_Motor_IR/adc.h **** 
  12:../8-LCD-TEMP-STP_Motor_IR/adc.h ****     // Configurar as seguintes opções para o ADC9:
  13:../8-LCD-TEMP-STP_Motor_IR/adc.h ****     // - Modo de operação: modo independente
  14:../8-LCD-TEMP-STP_Motor_IR/adc.h ****     // - Modo de conversão: Contínua
  15:../8-LCD-TEMP-STP_Motor_IR/adc.h ****     // - Resolução: 12 bits
  16:../8-LCD-TEMP-STP_Motor_IR/adc.h ****     // - Fator de divisão do clock: 4 (seleciona um clock ADC de 14 MHz)
  17:../8-LCD-TEMP-STP_Motor_IR/adc.h ****     ADC2->CR1 &= ~(ADC_CR1_DISCEN | ADC_CR1_SCAN);
 1729              		.loc 4 17 5 is_stmt 1 view .LVU431
 1730              	@ ../8-LCD-TEMP-STP_Motor_IR/adc.h:17:     ADC2->CR1 &= ~(ADC_CR1_DISCEN | ADC_CR1_SCAN);
 1731              		.loc 4 17 15 is_stmt 0 view .LVU432
 1732 0530 124B     		ldr	r3, .L112+8	@ tmp141,
 1733 0532 5A68     		ldr	r2, [r3, #4]	@ _7, MEM[(struct ADC_TypeDef *)1073817600B].CR1
 1734 0534 22F41062 		bic	r2, r2, #2304	@ _8, _7,
 1735 0538 5A60     		str	r2, [r3, #4]	@ _8, MEM[(struct ADC_TypeDef *)1073817600B].CR1
  18:../8-LCD-TEMP-STP_Motor_IR/adc.h ****     ADC2->CR1 |= ADC_CR1_EOCIE;
 1736              		.loc 4 18 5 is_stmt 1 view .LVU433
 1737              	@ ../8-LCD-TEMP-STP_Motor_IR/adc.h:18:     ADC2->CR1 |= ADC_CR1_EOCIE;
 1738              		.loc 4 18 15 is_stmt 0 view .LVU434
 1739 053a 5A68     		ldr	r2, [r3, #4]	@ _9, MEM[(struct ADC_TypeDef *)1073817600B].CR1
 1740 053c 42F02002 		orr	r2, r2, #32	@ _10, _9,
 1741 0540 5A60     		str	r2, [r3, #4]	@ _10, MEM[(struct ADC_TypeDef *)1073817600B].CR1
  19:../8-LCD-TEMP-STP_Motor_IR/adc.h ****     ADC2->CR2 &= ~(ADC_CR2_CONT | ADC_CR2_ALIGN | ADC_CR2_EXTSEL | ADC_CR2_EXTTRIG);
 1742              		.loc 4 19 5 is_stmt 1 view .LVU435
 1743              	@ ../8-LCD-TEMP-STP_Motor_IR/adc.h:19:     ADC2->CR2 &= ~(ADC_CR2_CONT | ADC_CR2_ALIGN | ADC_CR2_EX
 1744              		.loc 4 19 15 is_stmt 0 view .LVU436
 1745 0542 9968     		ldr	r1, [r3, #8]	@ _11, MEM[(struct ADC_TypeDef *)1073817600B].CR2
 1746 0544 0E4A     		ldr	r2, .L112+12	@ _12,
 1747 0546 0A40     		ands	r2, r2, r1	@, _12, _12, _11
 1748 0548 9A60     		str	r2, [r3, #8]	@ _12, MEM[(struct ADC_TypeDef *)1073817600B].CR2
  20:../8-LCD-TEMP-STP_Motor_IR/adc.h **** 
  21:../8-LCD-TEMP-STP_Motor_IR/adc.h ****     ADC2->CR2 |= ADC_CR2_ADON | ADC_CR2_CONT | ADC_CR2_RSTCAL;
 1749              		.loc 4 21 5 is_stmt 1 view .LVU437
 1750              	@ ../8-LCD-TEMP-STP_Motor_IR/adc.h:21:     ADC2->CR2 |= ADC_CR2_ADON | ADC_CR2_CONT | ADC_CR2_RSTCA
 1751              		.loc 4 21 15 is_stmt 0 view .LVU438
 1752 054a 9A68     		ldr	r2, [r3, #8]	@ _13, MEM[(struct ADC_TypeDef *)1073817600B].CR2
 1753 054c 42F00B02 		orr	r2, r2, #11	@ _14, _13,
 1754 0550 9A60     		str	r2, [r3, #8]	@ _14, MEM[(struct ADC_TypeDef *)1073817600B].CR2
  22:../8-LCD-TEMP-STP_Motor_IR/adc.h **** 
  23:../8-LCD-TEMP-STP_Motor_IR/adc.h ****     ADC2->SMPR2 |= ADC_SMPR2_SMP9_0 | ADC_SMPR2_SMP9_1;
ARM GAS  /tmp/cc4r6sqw.s 			page 47


 1755              		.loc 4 23 5 is_stmt 1 view .LVU439
 1756              	@ ../8-LCD-TEMP-STP_Motor_IR/adc.h:23:     ADC2->SMPR2 |= ADC_SMPR2_SMP9_0 | ADC_SMPR2_SMP9_1;
 1757              		.loc 4 23 17 is_stmt 0 view .LVU440
 1758 0552 1A69     		ldr	r2, [r3, #16]	@ _15, MEM[(struct ADC_TypeDef *)1073817600B].SMPR2
 1759 0554 42F0C052 		orr	r2, r2, #402653184	@ _16, _15,
 1760 0558 1A61     		str	r2, [r3, #16]	@ _16, MEM[(struct ADC_TypeDef *)1073817600B].SMPR2
  24:../8-LCD-TEMP-STP_Motor_IR/adc.h ****     ADC2->SQR3 |= 9;
 1761              		.loc 4 24 5 is_stmt 1 view .LVU441
 1762              	@ ../8-LCD-TEMP-STP_Motor_IR/adc.h:24:     ADC2->SQR3 |= 9;
 1763              		.loc 4 24 16 is_stmt 0 view .LVU442
 1764 055a 5A6B     		ldr	r2, [r3, #52]	@ _17, MEM[(struct ADC_TypeDef *)1073817600B].SQR3
 1765 055c 42F00902 		orr	r2, r2, #9	@ _18, _17,
 1766 0560 5A63     		str	r2, [r3, #52]	@ _18, MEM[(struct ADC_TypeDef *)1073817600B].SQR3
  25:../8-LCD-TEMP-STP_Motor_IR/adc.h **** 
  26:../8-LCD-TEMP-STP_Motor_IR/adc.h **** 	while(ADC2->CR2 & ADC_CR2_RSTCAL);
 1767              		.loc 4 26 2 is_stmt 1 view .LVU443
 1768              	.L110:
 1769              		.loc 4 26 35 discriminator 1 view .LVU444
 1770              		.loc 4 26 7 discriminator 1 view .LVU445
 1771              	@ ../8-LCD-TEMP-STP_Motor_IR/adc.h:26: 	while(ADC2->CR2 & ADC_CR2_RSTCAL);
 1772              		.loc 4 26 12 is_stmt 0 discriminator 1 view .LVU446
 1773 0562 9A68     		ldr	r2, [r3, #8]	@ _19, MEM[(struct ADC_TypeDef *)1073817600B].CR2
 1774              	@ ../8-LCD-TEMP-STP_Motor_IR/adc.h:26: 	while(ADC2->CR2 & ADC_CR2_RSTCAL);
 1775              		.loc 4 26 7 discriminator 1 view .LVU447
 1776 0564 1207     		lsls	r2, r2, #28	@, _19,
 1777 0566 FCD4     		bmi	.L110		@,
  27:../8-LCD-TEMP-STP_Motor_IR/adc.h **** 
  28:../8-LCD-TEMP-STP_Motor_IR/adc.h ****     // Habilitar o ADC9
  29:../8-LCD-TEMP-STP_Motor_IR/adc.h ****     ADC2->CR2 |= ADC_CR2_ADON;
 1778              		.loc 4 29 5 is_stmt 1 view .LVU448
 1779              	@ ../8-LCD-TEMP-STP_Motor_IR/adc.h:29:     ADC2->CR2 |= ADC_CR2_ADON;
 1780              		.loc 4 29 15 is_stmt 0 view .LVU449
 1781 0568 9A68     		ldr	r2, [r3, #8]	@ _21, MEM[(struct ADC_TypeDef *)1073817600B].CR2
 1782 056a 42F00102 		orr	r2, r2, #1	@ _22, _21,
 1783 056e 9A60     		str	r2, [r3, #8]	@ _22, MEM[(struct ADC_TypeDef *)1073817600B].CR2
 1784              	@ ../8-LCD-TEMP-STP_Motor_IR/adc.h:30: }
  30:../8-LCD-TEMP-STP_Motor_IR/adc.h **** }
 1785              		.loc 4 30 1 view .LVU450
 1786 0570 7047     		bx	lr	@
 1787              	.L113:
 1788 0572 00BF     		.align	2
 1789              	.L112:
 1790 0574 00100240 		.word	1073876992
 1791 0578 000C0140 		.word	1073810432
 1792 057c 00280140 		.word	1073817600
 1793 0580 FDF7E1FF 		.word	-1968131
 1794              		.cfi_endproc
 1795              	.LFE47:
 1796              		.size	ADC9_Configuration, .-ADC9_Configuration
 1797              		.align	1
 1798              		.global	task3
 1799              		.syntax unified
 1800              		.thumb
 1801              		.thumb_func
 1802              		.type	task3, %function
 1803              	task3:
 1804              	.LVL78:
ARM GAS  /tmp/cc4r6sqw.s 			page 48


 1805              	.LFB54:
 183:../8-LCD-TEMP-STP_Motor_IR/main.c **** 	/* [1---]
 1806              		.loc 1 183 47 is_stmt 1 view -0
 1807              		.cfi_startproc
 1808              		@ Volatile: function does not return.
 1809              		@ args = 0, pretend = 0, frame = 8
 1810              		@ frame_needed = 0, uses_anonymous_args = 0
 194:../8-LCD-TEMP-STP_Motor_IR/main.c **** 	u32 Valor_ADC_normalizado; 
 1811              		.loc 1 194 2 view .LVU452
 1812              	@ ../8-LCD-TEMP-STP_Motor_IR/main.c:183:  void task3(void *args __attribute ((unused))){
 183:../8-LCD-TEMP-STP_Motor_IR/main.c **** 	/* [1---]
 1813              		.loc 1 183 47 is_stmt 0 view .LVU453
 1814 0584 07B5     		push	{r0, r1, r2, lr}	@
 1815              	.LCFI12:
 1816              		.cfi_def_cfa_offset 16
 1817              		.cfi_offset 14, -4
 1818              	@ ../8-LCD-TEMP-STP_Motor_IR/main.c:194: 	ADC9_Configuration();
 194:../8-LCD-TEMP-STP_Motor_IR/main.c **** 	u32 Valor_ADC_normalizado; 
 1819              		.loc 1 194 2 view .LVU454
 1820 0586 FFF7FEFF 		bl	ADC9_Configuration		@
 1821              	.LVL79:
 1822              	@ ../8-LCD-TEMP-STP_Motor_IR/main.c:199: 		Valor_ADC_normalizado = ADC2->DR;
 199:../8-LCD-TEMP-STP_Motor_IR/main.c **** 
 1823              		.loc 1 199 31 view .LVU455
 1824 058a 0A4D     		ldr	r5, .L117	@ tmp118,
 1825              	@ ../8-LCD-TEMP-STP_Motor_IR/main.c:201: 		if(uxQueueMessagesWaiting(LCD_Show_queue) <= ELEMENTOS_F
 201:../8-LCD-TEMP-STP_Motor_IR/main.c **** 				xQueueSend(LCD_Show_queue, &Valor_ADC_normalizado, pdMS_TO_TICKS(10));
 1826              		.loc 1 201 6 view .LVU456
 1827 058c 0A4C     		ldr	r4, .L117+4	@ tmp119,
 1828              	.LVL80:
 1829              	.L116:
 195:../8-LCD-TEMP-STP_Motor_IR/main.c **** 
 1830              		.loc 1 195 2 is_stmt 1 view .LVU457
 197:../8-LCD-TEMP-STP_Motor_IR/main.c **** 
 1831              		.loc 1 197 2 view .LVU458
 199:../8-LCD-TEMP-STP_Motor_IR/main.c **** 
 1832              		.loc 1 199 3 view .LVU459
 1833              	@ ../8-LCD-TEMP-STP_Motor_IR/main.c:199: 		Valor_ADC_normalizado = ADC2->DR;
 199:../8-LCD-TEMP-STP_Motor_IR/main.c **** 
 1834              		.loc 1 199 31 is_stmt 0 view .LVU460
 1835 058e EB6C     		ldr	r3, [r5, #76]	@ _1, MEM[(struct ADC_TypeDef *)1073817600B].DR
 1836              	@ ../8-LCD-TEMP-STP_Motor_IR/main.c:201: 		if(uxQueueMessagesWaiting(LCD_Show_queue) <= ELEMENTOS_F
 201:../8-LCD-TEMP-STP_Motor_IR/main.c **** 				xQueueSend(LCD_Show_queue, &Valor_ADC_normalizado, pdMS_TO_TICKS(10));
 1837              		.loc 1 201 6 view .LVU461
 1838 0590 A068     		ldr	r0, [r4, #8]	@, LCD_Show_queue
 1839              	@ ../8-LCD-TEMP-STP_Motor_IR/main.c:199: 		Valor_ADC_normalizado = ADC2->DR;
 199:../8-LCD-TEMP-STP_Motor_IR/main.c **** 
 1840              		.loc 1 199 25 view .LVU462
 1841 0592 0193     		str	r3, [sp, #4]	@ _1, Valor_ADC_normalizado
 201:../8-LCD-TEMP-STP_Motor_IR/main.c **** 				xQueueSend(LCD_Show_queue, &Valor_ADC_normalizado, pdMS_TO_TICKS(10));
 1842              		.loc 1 201 3 is_stmt 1 view .LVU463
 1843              	@ ../8-LCD-TEMP-STP_Motor_IR/main.c:201: 		if(uxQueueMessagesWaiting(LCD_Show_queue) <= ELEMENTOS_F
 201:../8-LCD-TEMP-STP_Motor_IR/main.c **** 				xQueueSend(LCD_Show_queue, &Valor_ADC_normalizado, pdMS_TO_TICKS(10));
 1844              		.loc 1 201 6 is_stmt 0 view .LVU464
 1845 0594 FFF7FEFF 		bl	uxQueueMessagesWaiting		@
 1846              	.LVL81:
 1847              	@ ../8-LCD-TEMP-STP_Motor_IR/main.c:201: 		if(uxQueueMessagesWaiting(LCD_Show_queue) <= ELEMENTOS_F
ARM GAS  /tmp/cc4r6sqw.s 			page 49


 201:../8-LCD-TEMP-STP_Motor_IR/main.c **** 				xQueueSend(LCD_Show_queue, &Valor_ADC_normalizado, pdMS_TO_TICKS(10));
 1848              		.loc 1 201 5 view .LVU465
 1849 0598 0228     		cmp	r0, #2	@ tmp123,
 1850 059a 06D8     		bhi	.L115		@,
 202:../8-LCD-TEMP-STP_Motor_IR/main.c **** 		}
 1851              		.loc 1 202 5 is_stmt 1 view .LVU466
 1852 059c 0023     		movs	r3, #0	@,
 1853 059e 4FF47A72 		mov	r2, #1000	@,
 1854 05a2 A068     		ldr	r0, [r4, #8]	@, LCD_Show_queue
 1855 05a4 01A9     		add	r1, sp, #4	@ tmp125,,
 1856 05a6 FFF7FEFF 		bl	xQueueGenericSend		@
 1857              	.LVL82:
 1858              	.L115:
 204:../8-LCD-TEMP-STP_Motor_IR/main.c **** 		
 1859              		.loc 1 204 3 view .LVU467
 1860 05aa 4CF25030 		movw	r0, #50000	@,
 1861 05ae FFF7FEFF 		bl	vTaskDelay		@
 1862              	.LVL83:
 197:../8-LCD-TEMP-STP_Motor_IR/main.c **** 
 1863              		.loc 1 197 7 view .LVU468
 1864              	@ ../8-LCD-TEMP-STP_Motor_IR/main.c:199: 		Valor_ADC_normalizado = ADC2->DR;
 199:../8-LCD-TEMP-STP_Motor_IR/main.c **** 
 1865              		.loc 1 199 25 is_stmt 0 view .LVU469
 1866 05b2 ECE7     		b	.L116		@
 1867              	.L118:
 1868              		.align	2
 1869              	.L117:
 1870 05b4 00280140 		.word	1073817600
 1871 05b8 00000000 		.word	.LANCHOR0
 1872              		.cfi_endproc
 1873              	.LFE54:
 1874              		.size	task3, .-task3
 1875              		.align	1
 1876              		.global	ADC9_GetValue
 1877              		.syntax unified
 1878              		.thumb
 1879              		.thumb_func
 1880              		.type	ADC9_GetValue, %function
 1881              	ADC9_GetValue:
 1882              	.LFB48:
  31:../8-LCD-TEMP-STP_Motor_IR/adc.h **** 
  32:../8-LCD-TEMP-STP_Motor_IR/adc.h **** uint16_t ADC9_GetValue()
  33:../8-LCD-TEMP-STP_Motor_IR/adc.h **** {
 1883              		.loc 4 33 1 is_stmt 1 view -0
 1884              		.cfi_startproc
 1885              		@ args = 0, pretend = 0, frame = 0
 1886              		@ frame_needed = 0, uses_anonymous_args = 0
 1887              		@ link register save eliminated.
  34:../8-LCD-TEMP-STP_Motor_IR/adc.h ****     // Iniciar uma conversão no ADC9
  35:../8-LCD-TEMP-STP_Motor_IR/adc.h ****     ADC2->CR2 |= ADC_CR2_SWSTART;
 1888              		.loc 4 35 5 view .LVU471
 1889              	@ ../8-LCD-TEMP-STP_Motor_IR/adc.h:35:     ADC2->CR2 |= ADC_CR2_SWSTART;
 1890              		.loc 4 35 15 is_stmt 0 view .LVU472
 1891 05bc 054B     		ldr	r3, .L123	@ tmp119,
 1892 05be 9A68     		ldr	r2, [r3, #8]	@ _1, MEM[(struct ADC_TypeDef *)1073817600B].CR2
 1893 05c0 42F48002 		orr	r2, r2, #4194304	@ _2, _1,
 1894 05c4 9A60     		str	r2, [r3, #8]	@ _2, MEM[(struct ADC_TypeDef *)1073817600B].CR2
ARM GAS  /tmp/cc4r6sqw.s 			page 50


  36:../8-LCD-TEMP-STP_Motor_IR/adc.h **** 
  37:../8-LCD-TEMP-STP_Motor_IR/adc.h ****     // Aguardar o final da conversão
  38:../8-LCD-TEMP-STP_Motor_IR/adc.h ****     while (!(ADC2->SR & ADC_SR_EOC));
 1895              		.loc 4 38 5 is_stmt 1 view .LVU473
 1896              	.L120:
 1897              		.loc 4 38 37 discriminator 1 view .LVU474
 1898              		.loc 4 38 11 discriminator 1 view .LVU475
 1899              	@ ../8-LCD-TEMP-STP_Motor_IR/adc.h:38:     while (!(ADC2->SR & ADC_SR_EOC));
 1900              		.loc 4 38 18 is_stmt 0 discriminator 1 view .LVU476
 1901 05c6 1A68     		ldr	r2, [r3]	@ _3, MEM[(struct ADC_TypeDef *)1073817600B].SR
 1902              	@ ../8-LCD-TEMP-STP_Motor_IR/adc.h:38:     while (!(ADC2->SR & ADC_SR_EOC));
 1903              		.loc 4 38 11 discriminator 1 view .LVU477
 1904 05c8 9207     		lsls	r2, r2, #30	@, _3,
 1905 05ca FCD5     		bpl	.L120		@,
  39:../8-LCD-TEMP-STP_Motor_IR/adc.h **** 
  40:../8-LCD-TEMP-STP_Motor_IR/adc.h ****     // Obter o valor convertido
  41:../8-LCD-TEMP-STP_Motor_IR/adc.h ****     return ADC2->DR;
 1906              		.loc 4 41 5 is_stmt 1 view .LVU478
 1907              	@ ../8-LCD-TEMP-STP_Motor_IR/adc.h:41:     return ADC2->DR;
 1908              		.loc 4 41 16 is_stmt 0 view .LVU479
 1909 05cc D86C     		ldr	r0, [r3, #76]	@ _5, MEM[(struct ADC_TypeDef *)1073817600B].DR
 1910              	@ ../8-LCD-TEMP-STP_Motor_IR/adc.h:43: }
  42:../8-LCD-TEMP-STP_Motor_IR/adc.h **** 
  43:../8-LCD-TEMP-STP_Motor_IR/adc.h **** }
 1911              		.loc 4 43 1 view .LVU480
 1912 05ce 80B2     		uxth	r0, r0	@, _5
 1913 05d0 7047     		bx	lr	@
 1914              	.L124:
 1915 05d2 00BF     		.align	2
 1916              	.L123:
 1917 05d4 00280140 		.word	1073817600
 1918              		.cfi_endproc
 1919              	.LFE48:
 1920              		.size	ADC9_GetValue, .-ADC9_GetValue
 1921              		.align	1
 1922              		.global	IR_Init
 1923              		.syntax unified
 1924              		.thumb
 1925              		.thumb_func
 1926              		.type	IR_Init, %function
 1927              	IR_Init:
 1928              	.LFB49:
 1929              		.file 5 "../8-LCD-TEMP-STP_Motor_IR/infraRed.h"
   1:../8-LCD-TEMP-STP_Motor_IR/infraRed.h **** #include "stm32f10x.h"
   2:../8-LCD-TEMP-STP_Motor_IR/infraRed.h **** 
   3:../8-LCD-TEMP-STP_Motor_IR/infraRed.h **** // Define o pino de entrada do receptor IR
   4:../8-LCD-TEMP-STP_Motor_IR/infraRed.h **** #define IR_PIN GPIO_Pin_6
   5:../8-LCD-TEMP-STP_Motor_IR/infraRed.h **** #define IR_PORT GPIOB
   6:../8-LCD-TEMP-STP_Motor_IR/infraRed.h **** 
   7:../8-LCD-TEMP-STP_Motor_IR/infraRed.h **** // Função para configurar o GPIO para o pino de entrada IR
   8:../8-LCD-TEMP-STP_Motor_IR/infraRed.h **** void IR_Init(void) {
 1930              		.loc 5 8 20 is_stmt 1 view -0
 1931              		.cfi_startproc
 1932              		@ args = 0, pretend = 0, frame = 8
 1933              		@ frame_needed = 0, uses_anonymous_args = 0
   9:../8-LCD-TEMP-STP_Motor_IR/infraRed.h ****   GPIO_InitTypeDef GPIO_InitStructure;
 1934              		.loc 5 9 3 view .LVU482
ARM GAS  /tmp/cc4r6sqw.s 			page 51


  10:../8-LCD-TEMP-STP_Motor_IR/infraRed.h **** 
  11:../8-LCD-TEMP-STP_Motor_IR/infraRed.h ****   //RCC_APB2PeriphClockCmd(RCC_APB2Periph_GPIOA, ENABLE);
  12:../8-LCD-TEMP-STP_Motor_IR/infraRed.h ****   RCC_APB2PeriphClockCmd(RCC_APB2Periph_GPIOB, ENABLE);
 1935              		.loc 5 12 3 view .LVU483
 1936              	@ ../8-LCD-TEMP-STP_Motor_IR/infraRed.h:8: void IR_Init(void) {
   8:../8-LCD-TEMP-STP_Motor_IR/infraRed.h ****   GPIO_InitTypeDef GPIO_InitStructure;
 1937              		.loc 5 8 20 is_stmt 0 view .LVU484
 1938 05d8 07B5     		push	{r0, r1, r2, lr}	@
 1939              	.LCFI13:
 1940              		.cfi_def_cfa_offset 16
 1941              		.cfi_offset 14, -4
 1942              	@ ../8-LCD-TEMP-STP_Motor_IR/infraRed.h:12:   RCC_APB2PeriphClockCmd(RCC_APB2Periph_GPIOB, ENABLE);
 1943              		.loc 5 12 3 view .LVU485
 1944 05da 0121     		movs	r1, #1	@,
 1945 05dc 0820     		movs	r0, #8	@,
 1946 05de FFF7FEFF 		bl	RCC_APB2PeriphClockCmd		@
 1947              	.LVL84:
  13:../8-LCD-TEMP-STP_Motor_IR/infraRed.h **** 
  14:../8-LCD-TEMP-STP_Motor_IR/infraRed.h ****   GPIO_InitStructure.GPIO_Pin = IR_PIN;
 1948              		.loc 5 14 3 is_stmt 1 view .LVU486
 1949              	@ ../8-LCD-TEMP-STP_Motor_IR/infraRed.h:14:   GPIO_InitStructure.GPIO_Pin = IR_PIN;
 1950              		.loc 5 14 31 is_stmt 0 view .LVU487
 1951 05e2 4023     		movs	r3, #64	@ tmp114,
 1952 05e4 ADF80430 		strh	r3, [sp, #4]	@ movhi	@ tmp114, GPIO_InitStructure.GPIO_Pin
  15:../8-LCD-TEMP-STP_Motor_IR/infraRed.h ****   GPIO_InitStructure.GPIO_Mode = GPIO_Mode_IN_FLOATING;
 1953              		.loc 5 15 3 is_stmt 1 view .LVU488
 1954              	@ ../8-LCD-TEMP-STP_Motor_IR/infraRed.h:15:   GPIO_InitStructure.GPIO_Mode = GPIO_Mode_IN_FLOATING;
 1955              		.loc 5 15 32 is_stmt 0 view .LVU489
 1956 05e8 0423     		movs	r3, #4	@ tmp115,
 1957              	@ ../8-LCD-TEMP-STP_Motor_IR/infraRed.h:16:   GPIO_Init(IR_PORT, &GPIO_InitStructure);
  16:../8-LCD-TEMP-STP_Motor_IR/infraRed.h ****   GPIO_Init(IR_PORT, &GPIO_InitStructure);
 1958              		.loc 5 16 3 view .LVU490
 1959 05ea 0548     		ldr	r0, .L126	@,
 1960 05ec 0DEB0301 		add	r1, sp, r3	@,,
 1961              	@ ../8-LCD-TEMP-STP_Motor_IR/infraRed.h:15:   GPIO_InitStructure.GPIO_Mode = GPIO_Mode_IN_FLOATING;
  15:../8-LCD-TEMP-STP_Motor_IR/infraRed.h ****   GPIO_InitStructure.GPIO_Mode = GPIO_Mode_IN_FLOATING;
 1962              		.loc 5 15 32 view .LVU491
 1963 05f0 8DF80730 		strb	r3, [sp, #7]	@ tmp115, GPIO_InitStructure.GPIO_Mode
 1964              		.loc 5 16 3 is_stmt 1 view .LVU492
 1965 05f4 FFF7FEFF 		bl	GPIO_Init		@
 1966              	.LVL85:
 1967              	@ ../8-LCD-TEMP-STP_Motor_IR/infraRed.h:18: }
  17:../8-LCD-TEMP-STP_Motor_IR/infraRed.h **** 
  18:../8-LCD-TEMP-STP_Motor_IR/infraRed.h **** }
 1968              		.loc 5 18 1 is_stmt 0 view .LVU493
 1969 05f8 03B0     		add	sp, sp, #12	@,,
 1970              	.LCFI14:
 1971              		.cfi_def_cfa_offset 4
 1972              		@ sp needed	@
 1973 05fa 5DF804FB 		ldr	pc, [sp], #4	@
 1974              	.L127:
 1975 05fe 00BF     		.align	2
 1976              	.L126:
 1977 0600 000C0140 		.word	1073810432
 1978              		.cfi_endproc
 1979              	.LFE49:
 1980              		.size	IR_Init, .-IR_Init
ARM GAS  /tmp/cc4r6sqw.s 			page 52


 1981              		.align	1
 1982              		.global	IR_Read
 1983              		.syntax unified
 1984              		.thumb
 1985              		.thumb_func
 1986              		.type	IR_Read, %function
 1987              	IR_Read:
 1988              	.LFB50:
  19:../8-LCD-TEMP-STP_Motor_IR/infraRed.h **** 
  20:../8-LCD-TEMP-STP_Motor_IR/infraRed.h **** // Função para receber o código NEC IR
  21:../8-LCD-TEMP-STP_Motor_IR/infraRed.h **** uint32_t IR_Read(void) {
 1989              		.loc 5 21 24 is_stmt 1 view -0
 1990              		.cfi_startproc
 1991              		@ args = 0, pretend = 0, frame = 0
 1992              		@ frame_needed = 0, uses_anonymous_args = 0
  22:../8-LCD-TEMP-STP_Motor_IR/infraRed.h ****   uint32_t code = 0;
 1993              		.loc 5 22 3 view .LVU495
 1994              	.LVL86:
  23:../8-LCD-TEMP-STP_Motor_IR/infraRed.h ****   uint32_t bit = 0;
 1995              		.loc 5 23 3 view .LVU496
  24:../8-LCD-TEMP-STP_Motor_IR/infraRed.h ****   uint32_t data = 0;
 1996              		.loc 5 24 3 view .LVU497
  25:../8-LCD-TEMP-STP_Motor_IR/infraRed.h **** 
  26:../8-LCD-TEMP-STP_Motor_IR/infraRed.h ****   // Aguarda o sinal de início (pulso LOW)
  27:../8-LCD-TEMP-STP_Motor_IR/infraRed.h ****   u8 k=0;
 1997              		.loc 5 27 3 view .LVU498
  28:../8-LCD-TEMP-STP_Motor_IR/infraRed.h ****   while (GPIO_ReadInputDataBit(IR_PORT, IR_PIN) != 0) {}
 1998              		.loc 5 28 3 view .LVU499
 1999              	@ ../8-LCD-TEMP-STP_Motor_IR/infraRed.h:21: uint32_t IR_Read(void) {
  21:../8-LCD-TEMP-STP_Motor_IR/infraRed.h ****   uint32_t code = 0;
 2000              		.loc 5 21 24 is_stmt 0 view .LVU500
 2001 0604 70B5     		push	{r4, r5, r6, lr}	@
 2002              	.LCFI15:
 2003              		.cfi_def_cfa_offset 16
 2004              		.cfi_offset 4, -16
 2005              		.cfi_offset 5, -12
 2006              		.cfi_offset 6, -8
 2007              		.cfi_offset 14, -4
 2008              	@ ../8-LCD-TEMP-STP_Motor_IR/infraRed.h:28:   while (GPIO_ReadInputDataBit(IR_PORT, IR_PIN) != 0) {
 2009              		.loc 5 28 10 view .LVU501
 2010 0606 204C     		ldr	r4, .L145	@ tmp146,
 2011              	.L129:
 2012              		.loc 5 28 56 is_stmt 1 discriminator 1 view .LVU502
 2013              		.loc 5 28 9 discriminator 1 view .LVU503
 2014              	@ ../8-LCD-TEMP-STP_Motor_IR/infraRed.h:28:   while (GPIO_ReadInputDataBit(IR_PORT, IR_PIN) != 0) {
 2015              		.loc 5 28 10 is_stmt 0 discriminator 1 view .LVU504
 2016 0608 4021     		movs	r1, #64	@,
 2017 060a 2046     		mov	r0, r4	@, tmp146
 2018 060c FFF7FEFF 		bl	GPIO_ReadInputDataBit		@
 2019              	.LVL87:
 2020              	@ ../8-LCD-TEMP-STP_Motor_IR/infraRed.h:28:   while (GPIO_ReadInputDataBit(IR_PORT, IR_PIN) != 0) {
 2021              		.loc 5 28 9 discriminator 1 view .LVU505
 2022 0610 0028     		cmp	r0, #0	@ tmp147
 2023 0612 F9D1     		bne	.L129	@
 2024 0614 0424     		movs	r4, #4	@ ivtmp_17,
 2025              	@ ../8-LCD-TEMP-STP_Motor_IR/infraRed.h:31:   while (GPIO_ReadInputDataBit(IR_PORT, IR_PIN) == 0 &&
  29:../8-LCD-TEMP-STP_Motor_IR/infraRed.h ****   
ARM GAS  /tmp/cc4r6sqw.s 			page 53


  30:../8-LCD-TEMP-STP_Motor_IR/infraRed.h ****   // Aguarda o sinal de início (pulso HIGH)
  31:../8-LCD-TEMP-STP_Motor_IR/infraRed.h ****   while (GPIO_ReadInputDataBit(IR_PORT, IR_PIN) == 0 && k <3 ) {
 2026              		.loc 5 31 10 view .LVU506
 2027 0616 1C4D     		ldr	r5, .L145	@ tmp143,
 2028              	.LVL88:
 2029              	.L130:
 2030              		.loc 5 31 9 is_stmt 1 view .LVU507
 2031              	@ ../8-LCD-TEMP-STP_Motor_IR/infraRed.h:31:   while (GPIO_ReadInputDataBit(IR_PORT, IR_PIN) == 0 &&
 2032              		.loc 5 31 10 is_stmt 0 view .LVU508
 2033 0618 4021     		movs	r1, #64	@,
 2034 061a 2846     		mov	r0, r5	@, tmp143
 2035 061c FFF7FEFF 		bl	GPIO_ReadInputDataBit		@
 2036              	.LVL89:
 2037              	@ ../8-LCD-TEMP-STP_Motor_IR/infraRed.h:31:   while (GPIO_ReadInputDataBit(IR_PORT, IR_PIN) == 0 &&
 2038              		.loc 5 31 9 view .LVU509
 2039 0620 18B9     		cbnz	r0, .L138	@ tmp148,
 2040              	@ ../8-LCD-TEMP-STP_Motor_IR/infraRed.h:31:   while (GPIO_ReadInputDataBit(IR_PORT, IR_PIN) == 0 &&
 2041              		.loc 5 31 54 discriminator 1 view .LVU510
 2042 0622 013C     		subs	r4, r4, #1	@ tmp127, ivtmp_17,
 2043              	.LVL90:
 2044              		.loc 5 31 54 discriminator 1 view .LVU511
 2045 0624 14F0FF04 		ands	r4, r4, #255	@ ivtmp_17, tmp127,
 2046 0628 02D1     		bne	.L132		@,
 2047              	.L138:
 2048 062a 0325     		movs	r5, #3	@ ivtmp_4,
 2049              	@ ../8-LCD-TEMP-STP_Motor_IR/infraRed.h:37:   while (GPIO_ReadInputDataBit(IR_PORT, IR_PIN) != 0 &&
  32:../8-LCD-TEMP-STP_Motor_IR/infraRed.h ****   k++;
  33:../8-LCD-TEMP-STP_Motor_IR/infraRed.h ****   __delay(1);
  34:../8-LCD-TEMP-STP_Motor_IR/infraRed.h ****   } k=0;
  35:../8-LCD-TEMP-STP_Motor_IR/infraRed.h ****   
  36:../8-LCD-TEMP-STP_Motor_IR/infraRed.h ****   // Aguarda o sinal de 9 ms (pulso LOW)
  37:../8-LCD-TEMP-STP_Motor_IR/infraRed.h ****   while (GPIO_ReadInputDataBit(IR_PORT, IR_PIN) != 0 && k <2 ) {
 2050              		.loc 5 37 10 view .LVU512
 2051 062c 164E     		ldr	r6, .L145	@ tmp140,
 2052 062e 06E0     		b	.L133		@
 2053              	.L132:
  32:../8-LCD-TEMP-STP_Motor_IR/infraRed.h ****   k++;
 2054              		.loc 5 32 3 is_stmt 1 view .LVU513
 2055              	.LVL91:
  33:../8-LCD-TEMP-STP_Motor_IR/infraRed.h ****   } k=0;
 2056              		.loc 5 33 3 view .LVU514
 2057 0630 0120     		movs	r0, #1	@,
 2058 0632 FFF7FEFF 		bl	vTaskDelay		@
 2059              	.LVL92:
 2060 0636 EFE7     		b	.L130		@
 2061              	.LVL93:
 2062              	.L135:
  38:../8-LCD-TEMP-STP_Motor_IR/infraRed.h ****   k++;
 2063              		.loc 5 38 3 view .LVU515
  39:../8-LCD-TEMP-STP_Motor_IR/infraRed.h ****   __delay(1);
 2064              		.loc 5 39 3 view .LVU516
 2065 0638 0120     		movs	r0, #1	@,
 2066 063a FFF7FEFF 		bl	vTaskDelay		@
 2067              	.LVL94:
 2068              	.L133:
  37:../8-LCD-TEMP-STP_Motor_IR/infraRed.h ****   k++;
 2069              		.loc 5 37 9 view .LVU517
ARM GAS  /tmp/cc4r6sqw.s 			page 54


 2070              	@ ../8-LCD-TEMP-STP_Motor_IR/infraRed.h:37:   while (GPIO_ReadInputDataBit(IR_PORT, IR_PIN) != 0 &&
  37:../8-LCD-TEMP-STP_Motor_IR/infraRed.h ****   k++;
 2071              		.loc 5 37 10 is_stmt 0 view .LVU518
 2072 063e 4021     		movs	r1, #64	@,
 2073 0640 3046     		mov	r0, r6	@, tmp140
 2074 0642 FFF7FEFF 		bl	GPIO_ReadInputDataBit		@
 2075              	.LVL95:
 2076              	@ ../8-LCD-TEMP-STP_Motor_IR/infraRed.h:37:   while (GPIO_ReadInputDataBit(IR_PORT, IR_PIN) != 0 &&
  37:../8-LCD-TEMP-STP_Motor_IR/infraRed.h ****   k++;
 2077              		.loc 5 37 9 view .LVU519
 2078 0646 0446     		mov	r4, r0	@ tmp129, tmp149
 2079 0648 E0B1     		cbz	r0, .L139	@ tmp129,
 2080              	@ ../8-LCD-TEMP-STP_Motor_IR/infraRed.h:37:   while (GPIO_ReadInputDataBit(IR_PORT, IR_PIN) != 0 &&
  37:../8-LCD-TEMP-STP_Motor_IR/infraRed.h ****   k++;
 2081              		.loc 5 37 54 discriminator 1 view .LVU520
 2082 064a 6C1E     		subs	r4, r5, #1	@ tmp130, ivtmp_4,
 2083 064c 14F0FF05 		ands	r5, r4, #255	@ ivtmp_4, tmp130,
 2084              	.LVL96:
  37:../8-LCD-TEMP-STP_Motor_IR/infraRed.h ****   k++;
 2085              		.loc 5 37 54 discriminator 1 view .LVU521
 2086 0650 F2D1     		bne	.L135		@,
 2087 0652 2C46     		mov	r4, r5	@ bit, ivtmp_4
 2088              	.L134:
 2089              	@ ../8-LCD-TEMP-STP_Motor_IR/infraRed.h:51:     data = GPIO_ReadInputDataBit(IR_PORT, IR_PIN);
  40:../8-LCD-TEMP-STP_Motor_IR/infraRed.h ****   } k=0;
  41:../8-LCD-TEMP-STP_Motor_IR/infraRed.h ****   
  42:../8-LCD-TEMP-STP_Motor_IR/infraRed.h ****   // Recebe o código NEC IR
  43:../8-LCD-TEMP-STP_Motor_IR/infraRed.h ****   for (bit = 0; bit < 32; bit++) {
  44:../8-LCD-TEMP-STP_Motor_IR/infraRed.h ****     // Aguarda o próximo bit
  45:../8-LCD-TEMP-STP_Motor_IR/infraRed.h ****     // while (GPIO_ReadInputDataBit(IR_PORT, IR_PIN) == 0) {}
  46:../8-LCD-TEMP-STP_Motor_IR/infraRed.h ****     
  47:../8-LCD-TEMP-STP_Motor_IR/infraRed.h ****     // Aguarda o próximo espaço
  48:../8-LCD-TEMP-STP_Motor_IR/infraRed.h ****     // while (GPIO_ReadInputDataBit(IR_PORT, IR_PIN) != 0) {}
  49:../8-LCD-TEMP-STP_Motor_IR/infraRed.h **** 	 __delay(60);
  50:../8-LCD-TEMP-STP_Motor_IR/infraRed.h **** 
  51:../8-LCD-TEMP-STP_Motor_IR/infraRed.h ****     data = GPIO_ReadInputDataBit(IR_PORT, IR_PIN);
 2090              		.loc 5 51 12 view .LVU522
 2091 0654 0C4E     		ldr	r6, .L145	@ tmp138,
 2092              	.LVL97:
 2093              	.L137:
  49:../8-LCD-TEMP-STP_Motor_IR/infraRed.h **** 
 2094              		.loc 5 49 3 is_stmt 1 view .LVU523
 2095 0656 3C20     		movs	r0, #60	@,
 2096 0658 FFF7FEFF 		bl	vTaskDelay		@
 2097              	.LVL98:
 2098              		.loc 5 51 5 view .LVU524
 2099              	@ ../8-LCD-TEMP-STP_Motor_IR/infraRed.h:51:     data = GPIO_ReadInputDataBit(IR_PORT, IR_PIN);
 2100              		.loc 5 51 12 is_stmt 0 view .LVU525
 2101 065c 4021     		movs	r1, #64	@,
 2102 065e 3046     		mov	r0, r6	@, tmp138
 2103 0660 FFF7FEFF 		bl	GPIO_ReadInputDataBit		@
 2104              	.LVL99:
  52:../8-LCD-TEMP-STP_Motor_IR/infraRed.h ****     
  53:../8-LCD-TEMP-STP_Motor_IR/infraRed.h ****     // Se o espaço tiver uma duração maior que 1.2 ms o bit é 1, caso contrário é 0
  54:../8-LCD-TEMP-STP_Motor_IR/infraRed.h ****     if (data > 0) {
 2105              		.loc 5 54 5 is_stmt 1 view .LVU526
 2106              	@ ../8-LCD-TEMP-STP_Motor_IR/infraRed.h:54:     if (data > 0) {
ARM GAS  /tmp/cc4r6sqw.s 			page 55


 2107              		.loc 5 54 8 is_stmt 0 view .LVU527
 2108 0664 10B1     		cbz	r0, .L136	@ tmp150,
  55:../8-LCD-TEMP-STP_Motor_IR/infraRed.h ****       code |= (1 << bit);
 2109              		.loc 5 55 7 is_stmt 1 view .LVU528
 2110              	@ ../8-LCD-TEMP-STP_Motor_IR/infraRed.h:55:       code |= (1 << bit);
 2111              		.loc 5 55 18 is_stmt 0 view .LVU529
 2112 0666 0123     		movs	r3, #1	@ tmp134,
 2113 0668 A340     		lsls	r3, r3, r4	@ tmp133, tmp134, bit
 2114              	@ ../8-LCD-TEMP-STP_Motor_IR/infraRed.h:55:       code |= (1 << bit);
 2115              		.loc 5 55 12 view .LVU530
 2116 066a 1D43     		orrs	r5, r5, r3	@, <retval>, <retval>, tmp133
 2117              	.LVL100:
 2118              	.L136:
  56:../8-LCD-TEMP-STP_Motor_IR/infraRed.h ****     }
  57:../8-LCD-TEMP-STP_Motor_IR/infraRed.h **** 	// Aguarda o próximo espaço
  58:../8-LCD-TEMP-STP_Motor_IR/infraRed.h **** 	 __delay(160);
 2119              		.loc 5 58 3 is_stmt 1 discriminator 2 view .LVU531
 2120 066c A020     		movs	r0, #160	@,
 2121              	.LVL101:
 2122              	@ ../8-LCD-TEMP-STP_Motor_IR/infraRed.h:43:   for (bit = 0; bit < 32; bit++) {
  43:../8-LCD-TEMP-STP_Motor_IR/infraRed.h ****     // Aguarda o próximo bit
 2123              		.loc 5 43 30 is_stmt 0 discriminator 2 view .LVU532
 2124 066e 0134     		adds	r4, r4, #1	@ bit, bit,
 2125              	.LVL102:
 2126              	@ ../8-LCD-TEMP-STP_Motor_IR/infraRed.h:58: 	 __delay(160);
 2127              		.loc 5 58 3 discriminator 2 view .LVU533
 2128 0670 FFF7FEFF 		bl	vTaskDelay		@
 2129              	.LVL103:
  43:../8-LCD-TEMP-STP_Motor_IR/infraRed.h ****     // Aguarda o próximo bit
 2130              		.loc 5 43 27 is_stmt 1 discriminator 2 view .LVU534
  43:../8-LCD-TEMP-STP_Motor_IR/infraRed.h ****     // Aguarda o próximo bit
 2131              		.loc 5 43 17 discriminator 2 view .LVU535
 2132              	@ ../8-LCD-TEMP-STP_Motor_IR/infraRed.h:43:   for (bit = 0; bit < 32; bit++) {
  43:../8-LCD-TEMP-STP_Motor_IR/infraRed.h ****     // Aguarda o próximo bit
 2133              		.loc 5 43 3 is_stmt 0 discriminator 2 view .LVU536
 2134 0674 202C     		cmp	r4, #32	@ bit,
 2135 0676 EED1     		bne	.L137		@,
  59:../8-LCD-TEMP-STP_Motor_IR/infraRed.h ****   }
  60:../8-LCD-TEMP-STP_Motor_IR/infraRed.h **** 
  61:../8-LCD-TEMP-STP_Motor_IR/infraRed.h ****   __delay(500);
 2136              		.loc 5 61 3 is_stmt 1 view .LVU537
 2137 0678 4FF4FA70 		mov	r0, #500	@,
 2138 067c FFF7FEFF 		bl	vTaskDelay		@
 2139              	.LVL104:
  62:../8-LCD-TEMP-STP_Motor_IR/infraRed.h ****   return code;
 2140              		.loc 5 62 3 view .LVU538
 2141              	@ ../8-LCD-TEMP-STP_Motor_IR/infraRed.h:63: }
  63:../8-LCD-TEMP-STP_Motor_IR/infraRed.h **** }
 2142              		.loc 5 63 1 is_stmt 0 view .LVU539
 2143 0680 2846     		mov	r0, r5	@, <retval>
 2144 0682 70BD     		pop	{r4, r5, r6, pc}	@
 2145              	.LVL105:
 2146              	.L139:
 2147              		.loc 5 63 1 view .LVU540
 2148 0684 0546     		mov	r5, r0	@ <retval>, bit
 2149              	.LVL106:
 2150              		.loc 5 63 1 view .LVU541
ARM GAS  /tmp/cc4r6sqw.s 			page 56


 2151 0686 E5E7     		b	.L134		@
 2152              	.L146:
 2153              		.align	2
 2154              	.L145:
 2155 0688 000C0140 		.word	1073810432
 2156              		.cfi_endproc
 2157              	.LFE50:
 2158              		.size	IR_Read, .-IR_Read
 2159              		.section	.rodata.str1.1,"aMS",%progbits,1
 2160              	.LC0:
 2161 0000 0D0A436F 		.ascii	"\015\012Codigo: 0x\000"
 2161      6469676F 
 2161      3A203078 
 2161      00
 2162              		.text
 2163              		.align	1
 2164              		.syntax unified
 2165              		.thumb
 2166              		.thumb_func
 2167              		.type	task5, %function
 2168              	task5:
 2169              	.LVL107:
 2170              	.LFB56:
 250:../8-LCD-TEMP-STP_Motor_IR/main.c **** 
 2171              		.loc 1 250 53 is_stmt 1 view -0
 2172              		.cfi_startproc
 2173              		@ Volatile: function does not return.
 2174              		@ args = 0, pretend = 0, frame = 16
 2175              		@ frame_needed = 0, uses_anonymous_args = 0
 266:../8-LCD-TEMP-STP_Motor_IR/main.c **** 	IR_Init();
 2176              		.loc 1 266 2 view .LVU543
 2177              	@ ../8-LCD-TEMP-STP_Motor_IR/main.c:250: static void task5(void *args __attribute ((unused))){
 250:../8-LCD-TEMP-STP_Motor_IR/main.c **** 
 2178              		.loc 1 250 53 is_stmt 0 view .LVU544
 2179 068c 8FB5     		push	{r0, r1, r2, r3, r7, lr}	@
 2180              	.LCFI16:
 2181              		.cfi_def_cfa_offset 24
 2182              		.cfi_offset 7, -8
 2183              		.cfi_offset 14, -4
 2184              	@ ../8-LCD-TEMP-STP_Motor_IR/main.c:266: 	USART_init();
 266:../8-LCD-TEMP-STP_Motor_IR/main.c **** 	IR_Init();
 2185              		.loc 1 266 2 view .LVU545
 2186 068e FFF7FEFF 		bl	USART_init		@
 2187              	.LVL108:
 267:../8-LCD-TEMP-STP_Motor_IR/main.c **** 	char word_IR[8];
 2188              		.loc 1 267 2 is_stmt 1 view .LVU546
 2189 0692 FFF7FEFF 		bl	IR_Init		@
 2190              	.LVL109:
 2191              	@ ../8-LCD-TEMP-STP_Motor_IR/main.c:281: 			USARTSend("\r\nCodigo: 0x");
 281:../8-LCD-TEMP-STP_Motor_IR/main.c **** 			itoa (code_ir, word_IR, 16);
 2192              		.loc 1 281 4 is_stmt 0 view .LVU547
 2193 0696 204D     		ldr	r5, .L156	@ tmp139,
 2194              	@ ../8-LCD-TEMP-STP_Motor_IR/main.c:285: 			if (code_ir == CR_B7 || code_ir == CR_NUM_0){
 285:../8-LCD-TEMP-STP_Motor_IR/main.c **** 				// Testa se a fila está cheia
 2195              		.loc 1 285 7 view .LVU548
 2196 0698 204E     		ldr	r6, .L156+4	@ tmp140,
 2197              	@ ../8-LCD-TEMP-STP_Motor_IR/main.c:292: 			if (code_ir == CR_NUM_4 || code_ir == CR_NUM_1){
ARM GAS  /tmp/cc4r6sqw.s 			page 57


 292:../8-LCD-TEMP-STP_Motor_IR/main.c **** 				// Testa se a fila está cheia
 2198              		.loc 1 292 7 view .LVU549
 2199 069a 214F     		ldr	r7, .L156+8	@ tmp141,
 2200              	.L155:
 268:../8-LCD-TEMP-STP_Motor_IR/main.c **** 
 2201              		.loc 1 268 2 is_stmt 1 view .LVU550
 270:../8-LCD-TEMP-STP_Motor_IR/main.c **** 
 2202              		.loc 1 270 2 view .LVU551
 272:../8-LCD-TEMP-STP_Motor_IR/main.c **** 		code_ir = 0xFFFFFFFF;
 2203              		.loc 1 272 2 view .LVU552
 273:../8-LCD-TEMP-STP_Motor_IR/main.c **** 		code_ir = IR_Read();
 2204              		.loc 1 273 3 view .LVU553
 2205              	@ ../8-LCD-TEMP-STP_Motor_IR/main.c:273: 		code_ir = 0xFFFFFFFF;
 273:../8-LCD-TEMP-STP_Motor_IR/main.c **** 		code_ir = IR_Read();
 2206              		.loc 1 273 11 is_stmt 0 view .LVU554
 2207 069c 4FF0FF33 		mov	r3, #-1	@ tmp125,
 2208 06a0 0193     		str	r3, [sp, #4]	@ tmp125, code_ir
 274:../8-LCD-TEMP-STP_Motor_IR/main.c **** 		
 2209              		.loc 1 274 3 is_stmt 1 view .LVU555
 2210              	@ ../8-LCD-TEMP-STP_Motor_IR/main.c:274: 		code_ir = IR_Read();
 274:../8-LCD-TEMP-STP_Motor_IR/main.c **** 		
 2211              		.loc 1 274 13 is_stmt 0 view .LVU556
 2212 06a2 FFF7FEFF 		bl	IR_Read		@
 2213              	.LVL110:
 2214              	@ ../8-LCD-TEMP-STP_Motor_IR/main.c:274: 		code_ir = IR_Read();
 274:../8-LCD-TEMP-STP_Motor_IR/main.c **** 		
 2215              		.loc 1 274 11 view .LVU557
 2216 06a6 0190     		str	r0, [sp, #4]	@ _1, code_ir
 279:../8-LCD-TEMP-STP_Motor_IR/main.c **** 
 2217              		.loc 1 279 3 is_stmt 1 view .LVU558
 2218              	@ ../8-LCD-TEMP-STP_Motor_IR/main.c:279: 		if (code_ir != 0xffffffff){
 279:../8-LCD-TEMP-STP_Motor_IR/main.c **** 
 2219              		.loc 1 279 6 is_stmt 0 view .LVU559
 2220 06a8 0130     		adds	r0, r0, #1	@ _1, _1,
 2221 06aa 30D0     		beq	.L149		@,
 281:../8-LCD-TEMP-STP_Motor_IR/main.c **** 			itoa (code_ir, word_IR, 16);
 2222              		.loc 1 281 4 is_stmt 1 view .LVU560
 2223 06ac 2846     		mov	r0, r5	@, tmp139
 2224 06ae FFF7FEFF 		bl	USARTSend		@
 2225              	.LVL111:
 282:../8-LCD-TEMP-STP_Motor_IR/main.c **** 			USARTSend(word_IR);
 2226              		.loc 1 282 4 view .LVU561
 2227 06b2 1022     		movs	r2, #16	@,
 2228 06b4 02A9     		add	r1, sp, #8	@ tmp146,,
 2229 06b6 0198     		ldr	r0, [sp, #4]	@, code_ir
 2230 06b8 FFF7FEFF 		bl	itoa		@
 2231              	.LVL112:
 283:../8-LCD-TEMP-STP_Motor_IR/main.c **** 			
 2232              		.loc 1 283 4 view .LVU562
 2233 06bc 02A8     		add	r0, sp, #8	@ tmp147,,
 2234 06be FFF7FEFF 		bl	USARTSend		@
 2235              	.LVL113:
 285:../8-LCD-TEMP-STP_Motor_IR/main.c **** 				// Testa se a fila está cheia
 2236              		.loc 1 285 4 view .LVU563
 2237              	@ ../8-LCD-TEMP-STP_Motor_IR/main.c:285: 			if (code_ir == CR_B7 || code_ir == CR_NUM_0){
 285:../8-LCD-TEMP-STP_Motor_IR/main.c **** 				// Testa se a fila está cheia
 2238              		.loc 1 285 16 is_stmt 0 view .LVU564
ARM GAS  /tmp/cc4r6sqw.s 			page 58


 2239 06c2 019B     		ldr	r3, [sp, #4]	@ code_ir.22_4, code_ir
 2240              	@ ../8-LCD-TEMP-STP_Motor_IR/main.c:285: 			if (code_ir == CR_B7 || code_ir == CR_NUM_0){
 285:../8-LCD-TEMP-STP_Motor_IR/main.c **** 				// Testa se a fila está cheia
 2241              		.loc 1 285 7 view .LVU565
 2242 06c4 B342     		cmp	r3, r6	@ code_ir.22_4, tmp140
 2243 06c6 02D0     		beq	.L150		@,
 2244              	@ ../8-LCD-TEMP-STP_Motor_IR/main.c:285: 			if (code_ir == CR_B7 || code_ir == CR_NUM_0){
 285:../8-LCD-TEMP-STP_Motor_IR/main.c **** 				// Testa se a fila está cheia
 2245              		.loc 1 285 25 discriminator 1 view .LVU566
 2246 06c8 164A     		ldr	r2, .L156+12	@ tmp130,
 2247 06ca 9342     		cmp	r3, r2	@ code_ir.22_4, tmp130
 2248 06cc 0CD1     		bne	.L151		@,
 2249              	.L150:
 287:../8-LCD-TEMP-STP_Motor_IR/main.c **** 					xQueueSend(STMotor_queue, &code_ir, pdMS_TO_TICKS(10));
 2250              		.loc 1 287 5 is_stmt 1 view .LVU567
 2251              	@ ../8-LCD-TEMP-STP_Motor_IR/main.c:287: 				if( uxQueueMessagesWaiting( STMotor_queue ) <= ELEMENT
 287:../8-LCD-TEMP-STP_Motor_IR/main.c **** 					xQueueSend(STMotor_queue, &code_ir, pdMS_TO_TICKS(10));
 2252              		.loc 1 287 9 is_stmt 0 view .LVU568
 2253 06ce 164C     		ldr	r4, .L156+16	@ tmp131,
 2254 06d0 6068     		ldr	r0, [r4, #4]	@, STMotor_queue
 2255 06d2 FFF7FEFF 		bl	uxQueueMessagesWaiting		@
 2256              	.LVL114:
 2257              	@ ../8-LCD-TEMP-STP_Motor_IR/main.c:287: 				if( uxQueueMessagesWaiting( STMotor_queue ) <= ELEMENT
 287:../8-LCD-TEMP-STP_Motor_IR/main.c **** 					xQueueSend(STMotor_queue, &code_ir, pdMS_TO_TICKS(10));
 2258              		.loc 1 287 7 view .LVU569
 2259 06d6 0128     		cmp	r0, #1	@ tmp143,
 2260 06d8 06D8     		bhi	.L151		@,
 288:../8-LCD-TEMP-STP_Motor_IR/main.c **** 				}
 2261              		.loc 1 288 6 is_stmt 1 view .LVU570
 2262 06da 0023     		movs	r3, #0	@,
 2263 06dc 4FF47A72 		mov	r2, #1000	@,
 2264 06e0 6068     		ldr	r0, [r4, #4]	@, STMotor_queue
 2265 06e2 01A9     		add	r1, sp, #4	@,,
 2266 06e4 FFF7FEFF 		bl	xQueueGenericSend		@
 2267              	.LVL115:
 2268              	.L151:
 292:../8-LCD-TEMP-STP_Motor_IR/main.c **** 				// Testa se a fila está cheia
 2269              		.loc 1 292 4 view .LVU571
 2270              	@ ../8-LCD-TEMP-STP_Motor_IR/main.c:292: 			if (code_ir == CR_NUM_4 || code_ir == CR_NUM_1){
 292:../8-LCD-TEMP-STP_Motor_IR/main.c **** 				// Testa se a fila está cheia
 2271              		.loc 1 292 16 is_stmt 0 view .LVU572
 2272 06e8 019B     		ldr	r3, [sp, #4]	@ code_ir.26_8, code_ir
 2273              	@ ../8-LCD-TEMP-STP_Motor_IR/main.c:292: 			if (code_ir == CR_NUM_4 || code_ir == CR_NUM_1){
 292:../8-LCD-TEMP-STP_Motor_IR/main.c **** 				// Testa se a fila está cheia
 2274              		.loc 1 292 7 view .LVU573
 2275 06ea BB42     		cmp	r3, r7	@ code_ir.26_8, tmp141
 2276 06ec 02D0     		beq	.L153		@,
 2277              	@ ../8-LCD-TEMP-STP_Motor_IR/main.c:292: 			if (code_ir == CR_NUM_4 || code_ir == CR_NUM_1){
 292:../8-LCD-TEMP-STP_Motor_IR/main.c **** 				// Testa se a fila está cheia
 2278              		.loc 1 292 28 discriminator 1 view .LVU574
 2279 06ee 0F4A     		ldr	r2, .L156+20	@ tmp135,
 2280 06f0 9342     		cmp	r3, r2	@ code_ir.26_8, tmp135
 2281 06f2 0CD1     		bne	.L149		@,
 2282              	.L153:
 294:../8-LCD-TEMP-STP_Motor_IR/main.c **** 					xQueueSend(PWM_data_queue, &code_ir, pdMS_TO_TICKS(10));
 2283              		.loc 1 294 5 is_stmt 1 view .LVU575
 2284              	@ ../8-LCD-TEMP-STP_Motor_IR/main.c:294: 				if( uxQueueMessagesWaiting( PWM_data_queue ) <= ELEMEN
ARM GAS  /tmp/cc4r6sqw.s 			page 59


 294:../8-LCD-TEMP-STP_Motor_IR/main.c **** 					xQueueSend(PWM_data_queue, &code_ir, pdMS_TO_TICKS(10));
 2285              		.loc 1 294 9 is_stmt 0 view .LVU576
 2286 06f4 0C4C     		ldr	r4, .L156+16	@ tmp136,
 2287 06f6 2068     		ldr	r0, [r4]	@, PWM_data_queue
 2288 06f8 FFF7FEFF 		bl	uxQueueMessagesWaiting		@
 2289              	.LVL116:
 2290              	@ ../8-LCD-TEMP-STP_Motor_IR/main.c:294: 				if( uxQueueMessagesWaiting( PWM_data_queue ) <= ELEMEN
 294:../8-LCD-TEMP-STP_Motor_IR/main.c **** 					xQueueSend(PWM_data_queue, &code_ir, pdMS_TO_TICKS(10));
 2291              		.loc 1 294 7 view .LVU577
 2292 06fc 0128     		cmp	r0, #1	@ tmp144,
 2293 06fe 06D8     		bhi	.L149		@,
 295:../8-LCD-TEMP-STP_Motor_IR/main.c **** 			}
 2294              		.loc 1 295 6 is_stmt 1 view .LVU578
 2295 0700 0023     		movs	r3, #0	@,
 2296 0702 4FF47A72 		mov	r2, #1000	@,
 2297 0706 2068     		ldr	r0, [r4]	@, PWM_data_queue
 2298 0708 01A9     		add	r1, sp, #4	@,,
 2299 070a FFF7FEFF 		bl	xQueueGenericSend		@
 2300              	.LVL117:
 2301              	.L149:
 299:../8-LCD-TEMP-STP_Motor_IR/main.c **** 	}
 2302              		.loc 1 299 3 view .LVU579
 2303 070e FA20     		movs	r0, #250	@,
 2304 0710 FFF7FEFF 		bl	vTaskDelay		@
 2305              	.LVL118:
 272:../8-LCD-TEMP-STP_Motor_IR/main.c **** 		code_ir = 0xFFFFFFFF;
 2306              		.loc 1 272 7 view .LVU580
 2307              	@ ../8-LCD-TEMP-STP_Motor_IR/main.c:273: 		code_ir = 0xFFFFFFFF;
 273:../8-LCD-TEMP-STP_Motor_IR/main.c **** 		code_ir = IR_Read();
 2308              		.loc 1 273 11 is_stmt 0 view .LVU581
 2309 0714 C2E7     		b	.L155		@
 2310              	.L157:
 2311 0716 00BF     		.align	2
 2312              	.L156:
 2313 0718 00000000 		.word	.LC0
 2314 071c 30FE3FFC 		.word	-62915024
 2315 0720 F9FAE7FF 		.word	-1574151
 2316 0724 B9FEE7FF 		.word	-1573191
 2317 0728 00000000 		.word	.LANCHOR0
 2318 072c B9FBE7FF 		.word	-1573959
 2319              		.cfi_endproc
 2320              	.LFE56:
 2321              		.size	task5, .-task5
 2322              		.section	.rodata.str1.1
 2323              	.LC1:
 2324 000d 2D2D2D2D 		.ascii	"----------------\000"
 2324      2D2D2D2D 
 2324      2D2D2D2D 
 2324      2D2D2D2D 
 2324      00
 2325              	.LC2:
 2326 001e 3D3D3D3D 		.ascii	"================\000"
 2326      3D3D3D3D 
 2326      3D3D3D3D 
 2326      3D3D3D3D 
 2326      00
 2327              	.LC3:
ARM GAS  /tmp/cc4r6sqw.s 			page 60


 2328 002f 3D00     		.ascii	"=\000"
 2329              	.LC4:
 2330 0031 2D00     		.ascii	"-\000"
 2331              		.text
 2332              		.align	1
 2333              		.global	LCD16x2_init
 2334              		.syntax unified
 2335              		.thumb
 2336              		.thumb_func
 2337              		.type	LCD16x2_init, %function
 2338              	LCD16x2_init:
 2339              	.LFB51:
  66:../8-LCD-TEMP-STP_Motor_IR/main.c **** 
 2340              		.loc 1 66 20 is_stmt 1 view -0
 2341              		.cfi_startproc
 2342              		@ args = 0, pretend = 0, frame = 0
 2343              		@ frame_needed = 0, uses_anonymous_args = 0
  68:../8-LCD-TEMP-STP_Motor_IR/main.c **** 	GPIOA->CRL	 = 0x33333300; // Hab PA(2-7) out PP
 2344              		.loc 1 68 2 view .LVU583
 2345              	@ ../8-LCD-TEMP-STP_Motor_IR/main.c:68: 	RCC->APB2ENR |= (1<<2);
  68:../8-LCD-TEMP-STP_Motor_IR/main.c **** 	GPIOA->CRL	 = 0x33333300; // Hab PA(2-7) out PP
 2346              		.loc 1 68 15 is_stmt 0 view .LVU584
 2347 0730 294A     		ldr	r2, .L161	@ tmp132,
 2348              	@ ../8-LCD-TEMP-STP_Motor_IR/main.c:66: void LCD16x2_init(){
  66:../8-LCD-TEMP-STP_Motor_IR/main.c **** 
 2349              		.loc 1 66 20 view .LVU585
 2350 0732 F8B5     		push	{r3, r4, r5, r6, r7, lr}	@
 2351              	.LCFI17:
 2352              		.cfi_def_cfa_offset 24
 2353              		.cfi_offset 3, -24
 2354              		.cfi_offset 4, -20
 2355              		.cfi_offset 5, -16
 2356              		.cfi_offset 6, -12
 2357              		.cfi_offset 7, -8
 2358              		.cfi_offset 14, -4
 2359              	@ ../8-LCD-TEMP-STP_Motor_IR/main.c:68: 	RCC->APB2ENR |= (1<<2);
  68:../8-LCD-TEMP-STP_Motor_IR/main.c **** 	GPIOA->CRL	 = 0x33333300; // Hab PA(2-7) out PP
 2360              		.loc 1 68 15 view .LVU586
 2361 0734 9369     		ldr	r3, [r2, #24]	@ _1, MEM[(struct RCC_TypeDef *)1073876992B].APB2ENR
 2362              	@ ../8-LCD-TEMP-STP_Motor_IR/main.c:79: 	disp_text("================", 1, 0);
  79:../8-LCD-TEMP-STP_Motor_IR/main.c **** 
 2363              		.loc 1 79 2 view .LVU587
 2364 0736 0024     		movs	r4, #0	@ ivtmp.209,
 2365              	@ ../8-LCD-TEMP-STP_Motor_IR/main.c:68: 	RCC->APB2ENR |= (1<<2);
  68:../8-LCD-TEMP-STP_Motor_IR/main.c **** 	GPIOA->CRL	 = 0x33333300; // Hab PA(2-7) out PP
 2366              		.loc 1 68 15 view .LVU588
 2367 0738 43F00403 		orr	r3, r3, #4	@ _2, _1,
 2368 073c 9361     		str	r3, [r2, #24]	@ _2, MEM[(struct RCC_TypeDef *)1073876992B].APB2ENR
  69:../8-LCD-TEMP-STP_Motor_IR/main.c **** 
 2369              		.loc 1 69 2 is_stmt 1 view .LVU589
 2370              	@ ../8-LCD-TEMP-STP_Motor_IR/main.c:69: 	GPIOA->CRL	 = 0x33333300; // Hab PA(2-7) out PP
  69:../8-LCD-TEMP-STP_Motor_IR/main.c **** 
 2371              		.loc 1 69 14 is_stmt 0 view .LVU590
 2372 073e 274B     		ldr	r3, .L161+4	@ tmp134,
 2373 0740 274A     		ldr	r2, .L161+8	@ tmp135,
 2374              	.LBB19:
 2375              	@ ../8-LCD-TEMP-STP_Motor_IR/main.c:83: 		disp_text("=", 0 ,i);
ARM GAS  /tmp/cc4r6sqw.s 			page 61


  83:../8-LCD-TEMP-STP_Motor_IR/main.c **** 		disp_text("-", 1 , 16 - i);
 2376              		.loc 1 83 3 view .LVU591
 2377 0742 284F     		ldr	r7, .L161+12	@ tmp157,
 2378              	.LBE19:
 2379              	@ ../8-LCD-TEMP-STP_Motor_IR/main.c:69: 	GPIOA->CRL	 = 0x33333300; // Hab PA(2-7) out PP
  69:../8-LCD-TEMP-STP_Motor_IR/main.c **** 
 2380              		.loc 1 69 14 view .LVU592
 2381 0744 1A60     		str	r2, [r3]	@ tmp135, MEM[(struct GPIO_TypeDef *)1073809408B].CRL
  71:../8-LCD-TEMP-STP_Motor_IR/main.c **** 	set_bit(IO,EN);   set_bit(IO,D4);
 2382              		.loc 1 71 2 is_stmt 1 view .LVU593
 2383 0746 DA68     		ldr	r2, [r3, #12]	@ _3, MEM[(struct GPIO_TypeDef *)1073809408B].ODR
 2384              	.LBB20:
 2385              	@ ../8-LCD-TEMP-STP_Motor_IR/main.c:84: 		disp_text("-", 1 , 16 - i);
  84:../8-LCD-TEMP-STP_Motor_IR/main.c **** 	}
 2386              		.loc 1 84 3 is_stmt 0 view .LVU594
 2387 0748 274E     		ldr	r6, .L161+16	@ tmp158,
 2388              	.LBE20:
 2389              	@ ../8-LCD-TEMP-STP_Motor_IR/main.c:71: 	set_bit(IO,RS);   set_bit(IO,RS);
  71:../8-LCD-TEMP-STP_Motor_IR/main.c **** 	set_bit(IO,EN);   set_bit(IO,D4);
 2390              		.loc 1 71 2 view .LVU595
 2391 074a 42F08002 		orr	r2, r2, #128	@ _4, _3,
 2392 074e DA60     		str	r2, [r3, #12]	@ _4, MEM[(struct GPIO_TypeDef *)1073809408B].ODR
  71:../8-LCD-TEMP-STP_Motor_IR/main.c **** 	set_bit(IO,EN);   set_bit(IO,D4);
 2393              		.loc 1 71 20 is_stmt 1 view .LVU596
 2394 0750 DA68     		ldr	r2, [r3, #12]	@ _5, MEM[(struct GPIO_TypeDef *)1073809408B].ODR
 2395 0752 42F08002 		orr	r2, r2, #128	@ _6, _5,
 2396 0756 DA60     		str	r2, [r3, #12]	@ _6, MEM[(struct GPIO_TypeDef *)1073809408B].ODR
  72:../8-LCD-TEMP-STP_Motor_IR/main.c **** 	set_bit(IO,D5);   set_bit(IO,D6);
 2397              		.loc 1 72 2 view .LVU597
 2398 0758 DA68     		ldr	r2, [r3, #12]	@ _7, MEM[(struct GPIO_TypeDef *)1073809408B].ODR
 2399 075a 42F04002 		orr	r2, r2, #64	@ _8, _7,
 2400 075e DA60     		str	r2, [r3, #12]	@ _8, MEM[(struct GPIO_TypeDef *)1073809408B].ODR
  72:../8-LCD-TEMP-STP_Motor_IR/main.c **** 	set_bit(IO,D5);   set_bit(IO,D6);
 2401              		.loc 1 72 20 view .LVU598
 2402 0760 DA68     		ldr	r2, [r3, #12]	@ _9, MEM[(struct GPIO_TypeDef *)1073809408B].ODR
 2403 0762 42F02002 		orr	r2, r2, #32	@ _10, _9,
 2404 0766 DA60     		str	r2, [r3, #12]	@ _10, MEM[(struct GPIO_TypeDef *)1073809408B].ODR
  73:../8-LCD-TEMP-STP_Motor_IR/main.c **** 	set_bit(IO,D7);   disp_init();
 2405              		.loc 1 73 2 view .LVU599
 2406 0768 DA68     		ldr	r2, [r3, #12]	@ _11, MEM[(struct GPIO_TypeDef *)1073809408B].ODR
 2407 076a 42F01002 		orr	r2, r2, #16	@ _12, _11,
 2408 076e DA60     		str	r2, [r3, #12]	@ _12, MEM[(struct GPIO_TypeDef *)1073809408B].ODR
  73:../8-LCD-TEMP-STP_Motor_IR/main.c **** 	set_bit(IO,D7);   disp_init();
 2409              		.loc 1 73 20 view .LVU600
 2410 0770 DA68     		ldr	r2, [r3, #12]	@ _13, MEM[(struct GPIO_TypeDef *)1073809408B].ODR
 2411 0772 42F00802 		orr	r2, r2, #8	@ _14, _13,
 2412 0776 DA60     		str	r2, [r3, #12]	@ _14, MEM[(struct GPIO_TypeDef *)1073809408B].ODR
  74:../8-LCD-TEMP-STP_Motor_IR/main.c **** 	disp_cmd(0x0C);
 2413              		.loc 1 74 2 view .LVU601
 2414 0778 DA68     		ldr	r2, [r3, #12]	@ _15, MEM[(struct GPIO_TypeDef *)1073809408B].ODR
 2415 077a 42F00402 		orr	r2, r2, #4	@ _16, _15,
 2416 077e DA60     		str	r2, [r3, #12]	@ _16, MEM[(struct GPIO_TypeDef *)1073809408B].ODR
  74:../8-LCD-TEMP-STP_Motor_IR/main.c **** 	disp_cmd(0x0C);
 2417              		.loc 1 74 20 view .LVU602
 2418 0780 FFF7FEFF 		bl	disp_init		@
 2419              	.LVL119:
  75:../8-LCD-TEMP-STP_Motor_IR/main.c **** 
ARM GAS  /tmp/cc4r6sqw.s 			page 62


 2420              		.loc 1 75 2 view .LVU603
 2421 0784 0C20     		movs	r0, #12	@,
 2422 0786 FFF7FEFF 		bl	disp_cmd		@
 2423              	.LVL120:
  78:../8-LCD-TEMP-STP_Motor_IR/main.c **** 	disp_text("================", 1, 0);
 2424              		.loc 1 78 2 view .LVU604
 2425 078a 0022     		movs	r2, #0	@,
 2426 078c 1748     		ldr	r0, .L161+20	@,
 2427 078e 1146     		mov	r1, r2	@,
 2428 0790 FFF7FEFF 		bl	disp_text		@
 2429              	.LVL121:
  79:../8-LCD-TEMP-STP_Motor_IR/main.c **** 
 2430              		.loc 1 79 2 view .LVU605
 2431 0794 0022     		movs	r2, #0	@,
 2432 0796 0121     		movs	r1, #1	@,
 2433 0798 1548     		ldr	r0, .L161+24	@,
 2434 079a FFF7FEFF 		bl	disp_text		@
 2435              	.LVL122:
  81:../8-LCD-TEMP-STP_Motor_IR/main.c **** 		__delay_ms(VEL_ANIMACAO);
 2436              		.loc 1 81 2 view .LVU606
 2437              	.LBB21:
  81:../8-LCD-TEMP-STP_Motor_IR/main.c **** 		__delay_ms(VEL_ANIMACAO);
 2438              		.loc 1 81 7 view .LVU607
  81:../8-LCD-TEMP-STP_Motor_IR/main.c **** 		__delay_ms(VEL_ANIMACAO);
 2439              		.loc 1 81 16 view .LVU608
 2440              	.L159:
  81:../8-LCD-TEMP-STP_Motor_IR/main.c **** 		__delay_ms(VEL_ANIMACAO);
 2441              		.loc 1 81 16 is_stmt 0 view .LVU609
 2442 079e E5B2     		uxtb	r5, r4	@ _40, ivtmp.209
 2443              	.LVL123:
  82:../8-LCD-TEMP-STP_Motor_IR/main.c **** 		disp_text("=", 0 ,i);
 2444              		.loc 1 82 3 is_stmt 1 discriminator 3 view .LVU610
 2445 07a0 40F2DC50 		movw	r0, #1500	@,
 2446 07a4 FFF7FEFF 		bl	vTaskDelay		@
 2447              	.LVL124:
  83:../8-LCD-TEMP-STP_Motor_IR/main.c **** 		disp_text("-", 1 , 16 - i);
 2448              		.loc 1 83 3 discriminator 3 view .LVU611
 2449 07a8 2A46     		mov	r2, r5	@, _40
 2450 07aa 0021     		movs	r1, #0	@,
 2451 07ac 3846     		mov	r0, r7	@, tmp157
 2452 07ae FFF7FEFF 		bl	disp_text		@
 2453              	.LVL125:
  84:../8-LCD-TEMP-STP_Motor_IR/main.c **** 	}
 2454              		.loc 1 84 3 discriminator 3 view .LVU612
 2455 07b2 C5F11002 		rsb	r2, r5, #16	@ tmp153, _40,
 2456 07b6 0121     		movs	r1, #1	@,
 2457 07b8 3046     		mov	r0, r6	@, tmp158
 2458 07ba D2B2     		uxtb	r2, r2	@, tmp153
 2459              	@ ../8-LCD-TEMP-STP_Motor_IR/main.c:81: 	for (u8 i=0 ; i<16 ; i++){
  81:../8-LCD-TEMP-STP_Motor_IR/main.c **** 		__delay_ms(VEL_ANIMACAO);
 2460              		.loc 1 81 2 is_stmt 0 discriminator 3 view .LVU613
 2461 07bc 0134     		adds	r4, r4, #1	@ ivtmp.209, ivtmp.209,
 2462              	@ ../8-LCD-TEMP-STP_Motor_IR/main.c:84: 		disp_text("-", 1 , 16 - i);
  84:../8-LCD-TEMP-STP_Motor_IR/main.c **** 	}
 2463              		.loc 1 84 3 discriminator 3 view .LVU614
 2464 07be FFF7FEFF 		bl	disp_text		@
 2465              	.LVL126:
ARM GAS  /tmp/cc4r6sqw.s 			page 63


  81:../8-LCD-TEMP-STP_Motor_IR/main.c **** 		__delay_ms(VEL_ANIMACAO);
 2466              		.loc 1 81 23 is_stmt 1 discriminator 3 view .LVU615
  81:../8-LCD-TEMP-STP_Motor_IR/main.c **** 		__delay_ms(VEL_ANIMACAO);
 2467              		.loc 1 81 16 discriminator 3 view .LVU616
 2468              	@ ../8-LCD-TEMP-STP_Motor_IR/main.c:81: 	for (u8 i=0 ; i<16 ; i++){
  81:../8-LCD-TEMP-STP_Motor_IR/main.c **** 		__delay_ms(VEL_ANIMACAO);
 2469              		.loc 1 81 2 is_stmt 0 discriminator 3 view .LVU617
 2470 07c2 102C     		cmp	r4, #16	@ ivtmp.209,
 2471 07c4 EBD1     		bne	.L159		@,
 2472              	.LBE21:
  86:../8-LCD-TEMP-STP_Motor_IR/main.c **** 	disp_clear();
 2473              		.loc 1 86 2 is_stmt 1 view .LVU618
 2474 07c6 40F2DC50 		movw	r0, #1500	@,
 2475 07ca FFF7FEFF 		bl	vTaskDelay		@
 2476              	.LVL127:
  87:../8-LCD-TEMP-STP_Motor_IR/main.c **** }
 2477              		.loc 1 87 2 view .LVU619
 2478              	@ ../8-LCD-TEMP-STP_Motor_IR/main.c:88: }
  88:../8-LCD-TEMP-STP_Motor_IR/main.c **** 
 2479              		.loc 1 88 1 is_stmt 0 view .LVU620
 2480 07ce BDE8F840 		pop	{r3, r4, r5, r6, r7, lr}	@
 2481              	.LCFI18:
 2482              		.cfi_restore 14
 2483              		.cfi_restore 7
 2484              		.cfi_restore 6
 2485              		.cfi_restore 5
 2486              		.cfi_restore 4
 2487              		.cfi_restore 3
 2488              		.cfi_def_cfa_offset 0
 2489              	@ ../8-LCD-TEMP-STP_Motor_IR/main.c:87: 	disp_clear();
  87:../8-LCD-TEMP-STP_Motor_IR/main.c **** }
 2490              		.loc 1 87 2 view .LVU621
 2491 07d2 FFF7FEBF 		b	disp_clear		@
 2492              	.LVL128:
 2493              	.L162:
 2494 07d6 00BF     		.align	2
 2495              	.L161:
 2496 07d8 00100240 		.word	1073876992
 2497 07dc 00080140 		.word	1073809408
 2498 07e0 00333333 		.word	858993408
 2499 07e4 2F000000 		.word	.LC3
 2500 07e8 31000000 		.word	.LC4
 2501 07ec 0D000000 		.word	.LC1
 2502 07f0 1E000000 		.word	.LC2
 2503              		.cfi_endproc
 2504              	.LFE51:
 2505              		.size	LCD16x2_init, .-LCD16x2_init
 2506              		.section	.rodata.str1.1
 2507              	.LC5:
 2508 0033 54656D70 		.ascii	"Temperatura - C\000"
 2508      65726174 
 2508      75726120 
 2508      2D204300 
 2509              		.global	__aeabi_f2d
 2510              		.global	__aeabi_dmul
 2511              		.global	__aeabi_d2f
 2512              	.LC6:
ARM GAS  /tmp/cc4r6sqw.s 			page 64


 2513 0043 2D2D2D20 		.ascii	"--- IR Hex Code\000"
 2513      49522048 
 2513      65782043 
 2513      6F646500 
 2514              		.text
 2515              		.align	1
 2516              		.syntax unified
 2517              		.thumb
 2518              		.thumb_func
 2519              		.type	task1, %function
 2520              	task1:
 2521              	.LVL129:
 2522              	.LFB52:
  90:../8-LCD-TEMP-STP_Motor_IR/main.c **** 
 2523              		.loc 1 90 53 is_stmt 1 view -0
 2524              		.cfi_startproc
 2525              		@ args = 0, pretend = 0, frame = 32
 2526              		@ frame_needed = 0, uses_anonymous_args = 0
 100:../8-LCD-TEMP-STP_Motor_IR/main.c **** 	RCC->APB2ENR |= 1<<3;
 2527              		.loc 1 100 2 view .LVU623
 2528              	@ ../8-LCD-TEMP-STP_Motor_IR/main.c:90: static void task1(void *args __attribute((unused))) {
  90:../8-LCD-TEMP-STP_Motor_IR/main.c **** 
 2529              		.loc 1 90 53 is_stmt 0 view .LVU624
 2530 07f4 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}	@
 2531              	.LCFI19:
 2532              		.cfi_def_cfa_offset 36
 2533              		.cfi_offset 4, -36
 2534              		.cfi_offset 5, -32
 2535              		.cfi_offset 6, -28
 2536              		.cfi_offset 7, -24
 2537              		.cfi_offset 8, -20
 2538              		.cfi_offset 9, -16
 2539              		.cfi_offset 10, -12
 2540              		.cfi_offset 11, -8
 2541              		.cfi_offset 14, -4
 2542              	@ ../8-LCD-TEMP-STP_Motor_IR/main.c:150: 				floatToString((float) BUFF * ADC_Const, Float_point, 2
 150:../8-LCD-TEMP-STP_Motor_IR/main.c **** 				disp_text(Float_point, 1, 6);
 2543              		.loc 1 150 32 view .LVU625
 2544 07f8 0FF23C19 		adr	r9, .L190	@,
 2545 07fc D9E90089 		ldrd	r8, [r9]	@ tmp180,
 2546              	@ ../8-LCD-TEMP-STP_Motor_IR/main.c:111: 	u8 RD = 0;
 111:../8-LCD-TEMP-STP_Motor_IR/main.c **** 	u32 code_ir;
 2547              		.loc 1 111 5 view .LVU626
 2548 0800 0025     		movs	r5, #0	@ RD,
 2549              	@ ../8-LCD-TEMP-STP_Motor_IR/main.c:107: 	u8 ent_atual=1;
 107:../8-LCD-TEMP-STP_Motor_IR/main.c **** 
 2550              		.loc 1 107 5 view .LVU627
 2551 0802 0124     		movs	r4, #1	@ ent_atual,
 2552              	@ ../8-LCD-TEMP-STP_Motor_IR/main.c:104: 	int msg_buf_rev, BUFF = 0;
 104:../8-LCD-TEMP-STP_Motor_IR/main.c **** 
 2553              		.loc 1 104 19 view .LVU628
 2554 0804 2E46     		mov	r6, r5	@ BUFF, RD
 2555              	@ ../8-LCD-TEMP-STP_Motor_IR/main.c:90: static void task1(void *args __attribute((unused))) {
  90:../8-LCD-TEMP-STP_Motor_IR/main.c **** 
 2556              		.loc 1 90 53 view .LVU629
 2557 0806 89B0     		sub	sp, sp, #36	@,,
 2558              	.LCFI20:
ARM GAS  /tmp/cc4r6sqw.s 			page 65


 2559              		.cfi_def_cfa_offset 72
 2560              	@ ../8-LCD-TEMP-STP_Motor_IR/main.c:100: 	LCD16x2_init();
 100:../8-LCD-TEMP-STP_Motor_IR/main.c **** 	RCC->APB2ENR |= 1<<3;
 2561              		.loc 1 100 2 view .LVU630
 2562 0808 FFF7FEFF 		bl	LCD16x2_init		@
 2563              	.LVL130:
 101:../8-LCD-TEMP-STP_Motor_IR/main.c **** 	GPIOB->CRH |= 0x4<<0; // Input Pull
 2564              		.loc 1 101 2 is_stmt 1 view .LVU631
 2565              	@ ../8-LCD-TEMP-STP_Motor_IR/main.c:101: 	RCC->APB2ENR |= 1<<3;
 101:../8-LCD-TEMP-STP_Motor_IR/main.c **** 	GPIOB->CRH |= 0x4<<0; // Input Pull
 2566              		.loc 1 101 15 is_stmt 0 view .LVU632
 2567 080c 4C4A     		ldr	r2, .L190+8	@ tmp139,
 2568              	@ ../8-LCD-TEMP-STP_Motor_IR/main.c:117: 		if (xQueueReceive(LCD_Show_queue, 
 117:../8-LCD-TEMP-STP_Motor_IR/main.c **** 					&msg_buf_rev, pdMS_TO_TICKS(10)))
 2569              		.loc 1 117 7 view .LVU633
 2570 080e 4D4F     		ldr	r7, .L190+12	@ tmp146,
 2571              	@ ../8-LCD-TEMP-STP_Motor_IR/main.c:101: 	RCC->APB2ENR |= 1<<3;
 101:../8-LCD-TEMP-STP_Motor_IR/main.c **** 	GPIOB->CRH |= 0x4<<0; // Input Pull
 2572              		.loc 1 101 15 view .LVU634
 2573 0810 9369     		ldr	r3, [r2, #24]	@ _2, MEM[(struct RCC_TypeDef *)1073876992B].APB2ENR
 2574 0812 43F00803 		orr	r3, r3, #8	@ _4, _2,
 2575 0816 9361     		str	r3, [r2, #24]	@ _4, MEM[(struct RCC_TypeDef *)1073876992B].APB2ENR
 102:../8-LCD-TEMP-STP_Motor_IR/main.c **** 	GPIOB->ODR |= 1<<8; // Pull-up
 2576              		.loc 1 102 2 is_stmt 1 view .LVU635
 2577              	@ ../8-LCD-TEMP-STP_Motor_IR/main.c:102: 	GPIOB->CRH |= 0x4<<0; // Input Pull
 102:../8-LCD-TEMP-STP_Motor_IR/main.c **** 	GPIOB->ODR |= 1<<8; // Pull-up
 2578              		.loc 1 102 13 is_stmt 0 view .LVU636
 2579 0818 4B4B     		ldr	r3, .L190+16	@ tmp141,
 2580 081a 5A68     		ldr	r2, [r3, #4]	@ _6, MEM[(struct GPIO_TypeDef *)1073810432B].CRH
 2581 081c 42F00402 		orr	r2, r2, #4	@ _8, _6,
 2582 0820 5A60     		str	r2, [r3, #4]	@ _8, MEM[(struct GPIO_TypeDef *)1073810432B].CRH
 103:../8-LCD-TEMP-STP_Motor_IR/main.c **** 	int msg_buf_rev, BUFF = 0;
 2583              		.loc 1 103 2 is_stmt 1 view .LVU637
 2584              	@ ../8-LCD-TEMP-STP_Motor_IR/main.c:103: 	GPIOB->ODR |= 1<<8; // Pull-up
 103:../8-LCD-TEMP-STP_Motor_IR/main.c **** 	int msg_buf_rev, BUFF = 0;
 2585              		.loc 1 103 13 is_stmt 0 view .LVU638
 2586 0822 DA68     		ldr	r2, [r3, #12]	@ _10, MEM[(struct GPIO_TypeDef *)1073810432B].ODR
 2587 0824 42F48072 		orr	r2, r2, #256	@ _12, _10,
 2588 0828 DA60     		str	r2, [r3, #12]	@ _12, MEM[(struct GPIO_TypeDef *)1073810432B].ODR
 104:../8-LCD-TEMP-STP_Motor_IR/main.c **** 
 2589              		.loc 1 104 2 is_stmt 1 view .LVU639
 2590              	.LVL131:
 106:../8-LCD-TEMP-STP_Motor_IR/main.c **** 	u8 ent_atual=1;
 2591              		.loc 1 106 2 view .LVU640
 107:../8-LCD-TEMP-STP_Motor_IR/main.c **** 
 2592              		.loc 1 107 2 view .LVU641
 111:../8-LCD-TEMP-STP_Motor_IR/main.c **** 	u32 code_ir;
 2593              		.loc 1 111 2 view .LVU642
 2594              	.L164:
 112:../8-LCD-TEMP-STP_Motor_IR/main.c **** 	char word_IR[8];
 2595              		.loc 1 112 2 view .LVU643
 113:../8-LCD-TEMP-STP_Motor_IR/main.c **** 
 2596              		.loc 1 113 2 view .LVU644
 115:../8-LCD-TEMP-STP_Motor_IR/main.c **** // ----------- FILAS
 2597              		.loc 1 115 2 view .LVU645
 117:../8-LCD-TEMP-STP_Motor_IR/main.c **** 					&msg_buf_rev, pdMS_TO_TICKS(10)))
 2598              		.loc 1 117 3 view .LVU646
ARM GAS  /tmp/cc4r6sqw.s 			page 66


 2599              	@ ../8-LCD-TEMP-STP_Motor_IR/main.c:117: 		if (xQueueReceive(LCD_Show_queue, 
 117:../8-LCD-TEMP-STP_Motor_IR/main.c **** 					&msg_buf_rev, pdMS_TO_TICKS(10)))
 2600              		.loc 1 117 7 is_stmt 0 view .LVU647
 2601 082a 4FF47A72 		mov	r2, #1000	@,
 2602 082e B868     		ldr	r0, [r7, #8]	@, LCD_Show_queue
 2603 0830 02A9     		add	r1, sp, #8	@,,
 2604 0832 FFF7FEFF 		bl	xQueueReceive		@
 2605              	.LVL132:
 2606              	@ ../8-LCD-TEMP-STP_Motor_IR/main.c:117: 		if (xQueueReceive(LCD_Show_queue, 
 117:../8-LCD-TEMP-STP_Motor_IR/main.c **** 					&msg_buf_rev, pdMS_TO_TICKS(10)))
 2607              		.loc 1 117 6 view .LVU648
 2608 0836 00B1     		cbz	r0, .L165	@ tmp181,
 119:../8-LCD-TEMP-STP_Motor_IR/main.c **** 
 2609              		.loc 1 119 4 is_stmt 1 view .LVU649
 2610              	@ ../8-LCD-TEMP-STP_Motor_IR/main.c:119: 			BUFF = msg_buf_rev;
 119:../8-LCD-TEMP-STP_Motor_IR/main.c **** 
 2611              		.loc 1 119 9 is_stmt 0 view .LVU650
 2612 0838 029E     		ldr	r6, [sp, #8]	@ BUFF, msg_buf_rev
 2613              	.LVL133:
 2614              	.L165:
 122:../8-LCD-TEMP-STP_Motor_IR/main.c **** 		if (xQueuePeek(STMotor_queue, &code_ir, pdMS_TO_TICKS(10)))
 2615              		.loc 1 122 3 is_stmt 1 view .LVU651
 2616              	@ ../8-LCD-TEMP-STP_Motor_IR/main.c:122: 		code_ir = 0xffffff;
 122:../8-LCD-TEMP-STP_Motor_IR/main.c **** 		if (xQueuePeek(STMotor_queue, &code_ir, pdMS_TO_TICKS(10)))
 2617              		.loc 1 122 11 is_stmt 0 view .LVU652
 2618 083a 6FF07F43 		mvn	r3, #-16777216	@ tmp147,
 2619              	@ ../8-LCD-TEMP-STP_Motor_IR/main.c:123: 		if (xQueuePeek(STMotor_queue, &code_ir, pdMS_TO_TICKS(10
 123:../8-LCD-TEMP-STP_Motor_IR/main.c **** 			itoa (code_ir, word_IR, 16);
 2620              		.loc 1 123 7 view .LVU653
 2621 083e 4FF47A72 		mov	r2, #1000	@,
 2622 0842 7868     		ldr	r0, [r7, #4]	@, STMotor_queue
 2623 0844 03A9     		add	r1, sp, #12	@,,
 2624              	@ ../8-LCD-TEMP-STP_Motor_IR/main.c:122: 		code_ir = 0xffffff;
 122:../8-LCD-TEMP-STP_Motor_IR/main.c **** 		if (xQueuePeek(STMotor_queue, &code_ir, pdMS_TO_TICKS(10)))
 2625              		.loc 1 122 11 view .LVU654
 2626 0846 0393     		str	r3, [sp, #12]	@ tmp147, code_ir
 123:../8-LCD-TEMP-STP_Motor_IR/main.c **** 			itoa (code_ir, word_IR, 16);
 2627              		.loc 1 123 3 is_stmt 1 view .LVU655
 2628              	@ ../8-LCD-TEMP-STP_Motor_IR/main.c:123: 		if (xQueuePeek(STMotor_queue, &code_ir, pdMS_TO_TICKS(10
 123:../8-LCD-TEMP-STP_Motor_IR/main.c **** 			itoa (code_ir, word_IR, 16);
 2629              		.loc 1 123 7 is_stmt 0 view .LVU656
 2630 0848 FFF7FEFF 		bl	xQueuePeek		@
 2631              	.LVL134:
 2632              	@ ../8-LCD-TEMP-STP_Motor_IR/main.c:123: 		if (xQueuePeek(STMotor_queue, &code_ir, pdMS_TO_TICKS(10
 123:../8-LCD-TEMP-STP_Motor_IR/main.c **** 			itoa (code_ir, word_IR, 16);
 2633              		.loc 1 123 6 view .LVU657
 2634 084c 20B1     		cbz	r0, .L166	@ tmp182,
 124:../8-LCD-TEMP-STP_Motor_IR/main.c **** 
 2635              		.loc 1 124 4 is_stmt 1 view .LVU658
 2636 084e 1022     		movs	r2, #16	@,
 2637 0850 0398     		ldr	r0, [sp, #12]	@, code_ir
 2638 0852 06A9     		add	r1, sp, #24	@,,
 2639 0854 FFF7FEFF 		bl	itoa		@
 2640              	.LVL135:
 2641              	.L166:
 128:../8-LCD-TEMP-STP_Motor_IR/main.c **** 			
 2642              		.loc 1 128 9 view .LVU659
ARM GAS  /tmp/cc4r6sqw.s 			page 67


 2643 0858 0C2D     		cmp	r5, #12	@ RD,
 2644 085a 02D9     		bls	.L167		@,
 130:../8-LCD-TEMP-STP_Motor_IR/main.c **** 		disp_clear();
 2645              		.loc 1 130 3 view .LVU660
 2646              	.LVL136:
 131:../8-LCD-TEMP-STP_Motor_IR/main.c **** 		} RD ++;
 2647              		.loc 1 131 3 view .LVU661
 2648 085c FFF7FEFF 		bl	disp_clear		@
 2649              	.LVL137:
 128:../8-LCD-TEMP-STP_Motor_IR/main.c **** 			
 2650              		.loc 1 128 9 view .LVU662
 2651              	@ ../8-LCD-TEMP-STP_Motor_IR/main.c:130: 		RD = 0;
 130:../8-LCD-TEMP-STP_Motor_IR/main.c **** 		disp_clear();
 2652              		.loc 1 130 6 is_stmt 0 view .LVU663
 2653 0860 0025     		movs	r5, #0	@ RD,
 2654              	.LVL138:
 2655              	.L167:
 132:../8-LCD-TEMP-STP_Motor_IR/main.c **** 
 2656              		.loc 1 132 5 is_stmt 1 view .LVU664
 2657              	@ ../8-LCD-TEMP-STP_Motor_IR/main.c:136: 		if ((GPIOB->IDR & (1<<8)) || code_ir == CR_B4){{
 136:../8-LCD-TEMP-STP_Motor_IR/main.c **** 			ent_atual ++;
 2658              		.loc 1 136 13 is_stmt 0 view .LVU665
 2659 0862 394B     		ldr	r3, .L190+16	@ tmp154,
 2660              	@ ../8-LCD-TEMP-STP_Motor_IR/main.c:132: 		} RD ++;
 132:../8-LCD-TEMP-STP_Motor_IR/main.c **** 
 2661              		.loc 1 132 8 view .LVU666
 2662 0864 0135     		adds	r5, r5, #1	@ tmp153, RD,
 2663              	@ ../8-LCD-TEMP-STP_Motor_IR/main.c:136: 		if ((GPIOB->IDR & (1<<8)) || code_ir == CR_B4){{
 136:../8-LCD-TEMP-STP_Motor_IR/main.c **** 			ent_atual ++;
 2664              		.loc 1 136 13 view .LVU667
 2665 0866 9B68     		ldr	r3, [r3, #8]	@ _19, MEM[(struct GPIO_TypeDef *)1073810432B].IDR
 2666              	@ ../8-LCD-TEMP-STP_Motor_IR/main.c:132: 		} RD ++;
 132:../8-LCD-TEMP-STP_Motor_IR/main.c **** 
 2667              		.loc 1 132 8 view .LVU668
 2668 0868 EDB2     		uxtb	r5, r5	@ RD, tmp153
 2669              	.LVL139:
 136:../8-LCD-TEMP-STP_Motor_IR/main.c **** 			ent_atual ++;
 2670              		.loc 1 136 3 is_stmt 1 view .LVU669
 2671              	@ ../8-LCD-TEMP-STP_Motor_IR/main.c:136: 		if ((GPIOB->IDR & (1<<8)) || code_ir == CR_B4){{
 136:../8-LCD-TEMP-STP_Motor_IR/main.c **** 			ent_atual ++;
 2672              		.loc 1 136 6 is_stmt 0 view .LVU670
 2673 086a DB05     		lsls	r3, r3, #23	@, _19,
 2674 086c 03D4     		bmi	.L169		@,
 2675              	@ ../8-LCD-TEMP-STP_Motor_IR/main.c:136: 		if ((GPIOB->IDR & (1<<8)) || code_ir == CR_B4){{
 136:../8-LCD-TEMP-STP_Motor_IR/main.c **** 			ent_atual ++;
 2676              		.loc 1 136 29 discriminator 1 view .LVU671
 2677 086e 374B     		ldr	r3, .L190+20	@ tmp156,
 2678 0870 039A     		ldr	r2, [sp, #12]	@ code_ir, code_ir
 2679 0872 9A42     		cmp	r2, r3	@ code_ir, tmp156
 2680 0874 49D1     		bne	.L170		@,
 2681              	.L169:
 137:../8-LCD-TEMP-STP_Motor_IR/main.c **** 		}
 2682              		.loc 1 137 4 is_stmt 1 view .LVU672
 2683              	@ ../8-LCD-TEMP-STP_Motor_IR/main.c:137: 			ent_atual ++;
 137:../8-LCD-TEMP-STP_Motor_IR/main.c **** 		}
 2684              		.loc 1 137 14 is_stmt 0 view .LVU673
 2685 0876 0134     		adds	r4, r4, #1	@ tmp158, ent_atual,
ARM GAS  /tmp/cc4r6sqw.s 			page 68


 2686              	.LVL140:
 137:../8-LCD-TEMP-STP_Motor_IR/main.c **** 		}
 2687              		.loc 1 137 14 view .LVU674
 2688 0878 E4B2     		uxtb	r4, r4	@ ent_atual, tmp158
 2689              	.LVL141:
 140:../8-LCD-TEMP-STP_Motor_IR/main.c **** 			ent_atual = 1;
 2690              		.loc 1 140 3 is_stmt 1 view .LVU675
 2691              	@ ../8-LCD-TEMP-STP_Motor_IR/main.c:140: 		if (ent_atual > MAX_MENU )
 140:../8-LCD-TEMP-STP_Motor_IR/main.c **** 			ent_atual = 1;
 2692              		.loc 1 140 6 is_stmt 0 view .LVU676
 2693 087a 032C     		cmp	r4, #3	@ ent_atual,
 2694 087c 1CD9     		bls	.L171		@,
 141:../8-LCD-TEMP-STP_Motor_IR/main.c **** 		disp_clear();
 2695              		.loc 1 141 4 is_stmt 1 view .LVU677
 2696              	.LVL142:
 142:../8-LCD-TEMP-STP_Motor_IR/main.c **** 		}
 2697              		.loc 1 142 3 view .LVU678
 2698 087e FFF7FEFF 		bl	disp_clear		@
 2699              	.LVL143:
 147:../8-LCD-TEMP-STP_Motor_IR/main.c **** 				disp_text("Temperatura - C", 0, 0); 
 2700              		.loc 1 147 3 view .LVU679
 2701              	.L172:
 148:../8-LCD-TEMP-STP_Motor_IR/main.c **** 
 2702              		.loc 1 148 5 view .LVU680
 2703 0882 0022     		movs	r2, #0	@,
 2704 0884 3248     		ldr	r0, .L190+24	@,
 2705 0886 1146     		mov	r1, r2	@,
 2706 0888 FFF7FEFF 		bl	disp_text		@
 2707              	.LVL144:
 150:../8-LCD-TEMP-STP_Motor_IR/main.c **** 				disp_text(Float_point, 1, 6);
 2708              		.loc 1 150 5 view .LVU681
 2709              	@ ../8-LCD-TEMP-STP_Motor_IR/main.c:150: 				floatToString((float) BUFF * ADC_Const, Float_point, 2
 150:../8-LCD-TEMP-STP_Motor_IR/main.c **** 				disp_text(Float_point, 1, 6);
 2710              		.loc 1 150 19 is_stmt 0 view .LVU682
 2711 088c 3046     		mov	r0, r6	@, BUFF
 2712 088e FFF7FEFF 		bl	__aeabi_i2f		@
 2713              	.LVL145:
 2714 0892 FFF7FEFF 		bl	__aeabi_f2d		@
 2715              	.LVL146:
 2716              	@ ../8-LCD-TEMP-STP_Motor_IR/main.c:150: 				floatToString((float) BUFF * ADC_Const, Float_point, 2
 150:../8-LCD-TEMP-STP_Motor_IR/main.c **** 				disp_text(Float_point, 1, 6);
 2717              		.loc 1 150 32 view .LVU683
 2718 0896 4B46     		mov	r3, r9	@,
 2719 0898 4246     		mov	r2, r8	@, tmp180
 2720 089a FFF7FEFF 		bl	__aeabi_dmul		@
 2721              	.LVL147:
 2722              	@ ../8-LCD-TEMP-STP_Motor_IR/main.c:150: 				floatToString((float) BUFF * ADC_Const, Float_point, 2
 150:../8-LCD-TEMP-STP_Motor_IR/main.c **** 				disp_text(Float_point, 1, 6);
 2723              		.loc 1 150 5 view .LVU684
 2724 089e FFF7FEFF 		bl	__aeabi_d2f		@
 2725              	.LVL148:
 2726 08a2 0222     		movs	r2, #2	@,
 2727 08a4 04A9     		add	r1, sp, #16	@ tmp184,,
 2728 08a6 FFF7FEFF 		bl	floatToString		@
 2729              	.LVL149:
 151:../8-LCD-TEMP-STP_Motor_IR/main.c **** 		} 
 2730              		.loc 1 151 5 is_stmt 1 view .LVU685
ARM GAS  /tmp/cc4r6sqw.s 			page 69


 2731 08aa 0622     		movs	r2, #6	@,
 2732 08ac 0121     		movs	r1, #1	@,
 2733 08ae 04A8     		add	r0, sp, #16	@ tmp185,,
 2734 08b0 FFF7FEFF 		bl	disp_text		@
 2735              	.LVL150:
 153:../8-LCD-TEMP-STP_Motor_IR/main.c **** 			disp_text("----------------", 0 ,0);
 2736              		.loc 1 153 3 view .LVU686
 164:../8-LCD-TEMP-STP_Motor_IR/main.c **** 			disp_text("--- IR Hex Code", 0, 0); 
 2737              		.loc 1 164 3 view .LVU687
 2738              	@ ../8-LCD-TEMP-STP_Motor_IR/main.c:151: 				disp_text(Float_point, 1, 6);
 151:../8-LCD-TEMP-STP_Motor_IR/main.c **** 		} 
 2739              		.loc 1 151 5 is_stmt 0 view .LVU688
 2740 08b4 0124     		movs	r4, #1	@ ent_atual,
 2741 08b6 B8E7     		b	.L164		@
 2742              	.LVL151:
 2743              	.L171:
 142:../8-LCD-TEMP-STP_Motor_IR/main.c **** 		}
 2744              		.loc 1 142 3 is_stmt 1 view .LVU689
 2745 08b8 FFF7FEFF 		bl	disp_clear		@
 2746              	.LVL152:
 147:../8-LCD-TEMP-STP_Motor_IR/main.c **** 				disp_text("Temperatura - C", 0, 0); 
 2747              		.loc 1 147 3 view .LVU690
 2748              	.L173:
 153:../8-LCD-TEMP-STP_Motor_IR/main.c **** 			disp_text("----------------", 0 ,0);
 2749              		.loc 1 153 3 view .LVU691
 2750              	@ ../8-LCD-TEMP-STP_Motor_IR/main.c:153: 		if (ent_atual == 2 ){
 153:../8-LCD-TEMP-STP_Motor_IR/main.c **** 			disp_text("----------------", 0 ,0);
 2751              		.loc 1 153 6 is_stmt 0 view .LVU692
 2752 08bc 022C     		cmp	r4, #2	@ ent_atual,
 2753 08be 27D1     		bne	.L189		@,
 154:../8-LCD-TEMP-STP_Motor_IR/main.c **** 			disp_text("================", 1, 0);
 2754              		.loc 1 154 4 is_stmt 1 view .LVU693
 2755 08c0 0022     		movs	r2, #0	@,
 2756 08c2 2448     		ldr	r0, .L190+28	@,
 2757 08c4 1146     		mov	r1, r2	@,
 2758 08c6 FFF7FEFF 		bl	disp_text		@
 2759              	.LVL153:
 155:../8-LCD-TEMP-STP_Motor_IR/main.c **** 
 2760              		.loc 1 155 4 view .LVU694
 2761 08ca 0022     		movs	r2, #0	@,
 2762 08cc 0121     		movs	r1, #1	@,
 2763 08ce 2248     		ldr	r0, .L190+32	@,
 2764 08d0 FFF7FEFF 		bl	disp_text		@
 2765              	.LVL154:
 157:../8-LCD-TEMP-STP_Motor_IR/main.c **** 				__delay_ms(10);
 2766              		.loc 1 157 4 view .LVU695
 2767              	.LBB22:
 157:../8-LCD-TEMP-STP_Motor_IR/main.c **** 				__delay_ms(10);
 2768              		.loc 1 157 9 view .LVU696
 157:../8-LCD-TEMP-STP_Motor_IR/main.c **** 				__delay_ms(10);
 2769              		.loc 1 157 18 view .LVU697
 2770              	.LBE22:
 2771              	@ ../8-LCD-TEMP-STP_Motor_IR/main.c:155: 			disp_text("================", 1, 0);
 155:../8-LCD-TEMP-STP_Motor_IR/main.c **** 
 2772              		.loc 1 155 4 is_stmt 0 view .LVU698
 2773 08d4 0023     		movs	r3, #0	@ ivtmp.218,
 2774              	.LBB23:
ARM GAS  /tmp/cc4r6sqw.s 			page 70


 2775              	@ ../8-LCD-TEMP-STP_Motor_IR/main.c:159: 				disp_text("=", 0 ,i);
 159:../8-LCD-TEMP-STP_Motor_IR/main.c **** 				disp_text("-", 1 , 15 - i);
 2776              		.loc 1 159 5 view .LVU699
 2777 08d6 DFF884B0 		ldr	fp, .L190+36	@ tmp178,
 2778              	.LVL155:
 2779              	.L178:
 159:../8-LCD-TEMP-STP_Motor_IR/main.c **** 				disp_text("-", 1 , 15 - i);
 2780              		.loc 1 159 5 view .LVU700
 2781 08da 5FFA83FA 		uxtb	r10, r3	@ _32, ivtmp.218
 2782              	@ ../8-LCD-TEMP-STP_Motor_IR/main.c:158: 				__delay_ms(10);
 158:../8-LCD-TEMP-STP_Motor_IR/main.c **** 				disp_text("=", 0 ,i);
 2783              		.loc 1 158 5 discriminator 3 view .LVU701
 2784 08de 4FF47A70 		mov	r0, #1000	@,
 2785 08e2 0193     		str	r3, [sp, #4]	@ ivtmp.218, %sfp
 2786              	.LVL156:
 158:../8-LCD-TEMP-STP_Motor_IR/main.c **** 				disp_text("=", 0 ,i);
 2787              		.loc 1 158 5 is_stmt 1 discriminator 3 view .LVU702
 2788 08e4 FFF7FEFF 		bl	vTaskDelay		@
 2789              	.LVL157:
 159:../8-LCD-TEMP-STP_Motor_IR/main.c **** 				disp_text("-", 1 , 15 - i);
 2790              		.loc 1 159 5 discriminator 3 view .LVU703
 2791 08e8 5246     		mov	r2, r10	@, _32
 2792 08ea 0021     		movs	r1, #0	@,
 2793 08ec 5846     		mov	r0, fp	@, tmp178
 2794 08ee FFF7FEFF 		bl	disp_text		@
 2795              	.LVL158:
 160:../8-LCD-TEMP-STP_Motor_IR/main.c **** 			}
 2796              		.loc 1 160 5 discriminator 3 view .LVU704
 2797 08f2 CAF10F02 		rsb	r2, r10, #15	@ tmp171, _32,
 2798 08f6 0121     		movs	r1, #1	@,
 2799 08f8 1948     		ldr	r0, .L190+40	@,
 2800 08fa D2B2     		uxtb	r2, r2	@, tmp171
 2801 08fc FFF7FEFF 		bl	disp_text		@
 2802              	.LVL159:
 157:../8-LCD-TEMP-STP_Motor_IR/main.c **** 				__delay_ms(10);
 2803              		.loc 1 157 25 discriminator 3 view .LVU705
 157:../8-LCD-TEMP-STP_Motor_IR/main.c **** 				__delay_ms(10);
 2804              		.loc 1 157 18 discriminator 3 view .LVU706
 2805              	@ ../8-LCD-TEMP-STP_Motor_IR/main.c:157: 			for (u8 i=0 ; i<16 ; i++){
 157:../8-LCD-TEMP-STP_Motor_IR/main.c **** 				__delay_ms(10);
 2806              		.loc 1 157 4 is_stmt 0 discriminator 3 view .LVU707
 2807 0900 019B     		ldr	r3, [sp, #4]	@ ivtmp.218, %sfp
 2808 0902 0133     		adds	r3, r3, #1	@ ivtmp.218, ivtmp.218,
 2809 0904 102B     		cmp	r3, #16	@ ivtmp.218,
 2810 0906 E8D1     		bne	.L178		@,
 2811 0908 8FE7     		b	.L164		@
 2812              	.LVL160:
 2813              	.L170:
 157:../8-LCD-TEMP-STP_Motor_IR/main.c **** 				__delay_ms(10);
 2814              		.loc 1 157 4 discriminator 3 view .LVU708
 2815              	.LBE23:
 147:../8-LCD-TEMP-STP_Motor_IR/main.c **** 				disp_text("Temperatura - C", 0, 0); 
 2816              		.loc 1 147 3 is_stmt 1 view .LVU709
 2817              	@ ../8-LCD-TEMP-STP_Motor_IR/main.c:147: 		if (ent_atual == 1 ){
 147:../8-LCD-TEMP-STP_Motor_IR/main.c **** 				disp_text("Temperatura - C", 0, 0); 
 2818              		.loc 1 147 6 is_stmt 0 view .LVU710
 2819 090a 012C     		cmp	r4, #1	@ ent_atual,
ARM GAS  /tmp/cc4r6sqw.s 			page 71


 2820 090c B9D0     		beq	.L172		@,
 2821 090e D5E7     		b	.L173		@
 2822              	.L189:
 164:../8-LCD-TEMP-STP_Motor_IR/main.c **** 			disp_text("--- IR Hex Code", 0, 0); 
 2823              		.loc 1 164 3 is_stmt 1 view .LVU711
 2824              	@ ../8-LCD-TEMP-STP_Motor_IR/main.c:164: 		if (ent_atual == 3 ){
 164:../8-LCD-TEMP-STP_Motor_IR/main.c **** 			disp_text("--- IR Hex Code", 0, 0); 
 2825              		.loc 1 164 6 is_stmt 0 view .LVU712
 2826 0910 032C     		cmp	r4, #3	@ ent_atual,
 2827 0912 8AD1     		bne	.L164		@,
 165:../8-LCD-TEMP-STP_Motor_IR/main.c **** 			disp_text( word_IR, 1, 4);
 2828              		.loc 1 165 4 is_stmt 1 view .LVU713
 2829 0914 0022     		movs	r2, #0	@,
 2830 0916 1348     		ldr	r0, .L190+44	@,
 2831 0918 1146     		mov	r1, r2	@,
 2832 091a FFF7FEFF 		bl	disp_text		@
 2833              	.LVL161:
 166:../8-LCD-TEMP-STP_Motor_IR/main.c **** 			__delay_ms(100);
 2834              		.loc 1 166 4 view .LVU714
 2835 091e 06A8     		add	r0, sp, #24	@,,
 2836 0920 0422     		movs	r2, #4	@,
 2837 0922 0121     		movs	r1, #1	@,
 2838 0924 FFF7FEFF 		bl	disp_text		@
 2839              	.LVL162:
 167:../8-LCD-TEMP-STP_Motor_IR/main.c **** 		}
 2840              		.loc 1 167 4 view .LVU715
 2841 0928 42F21070 		movw	r0, #10000	@,
 2842 092c FFF7FEFF 		bl	vTaskDelay		@
 2843              	.LVL163:
 2844 0930 7BE7     		b	.L164		@
 2845              	.L191:
 2846 0932 00BFAFF3 		.align	3
 2846      0080
 2847              	.L190:
 2848 0938 5CE84A04 		.word	72018012
 2849 093c AA7F803F 		.word	1065385898
 2850 0940 00100240 		.word	1073876992
 2851 0944 00000000 		.word	.LANCHOR0
 2852 0948 000C0140 		.word	1073810432
 2853 094c B9FBE7FF 		.word	-1573959
 2854 0950 33000000 		.word	.LC5
 2855 0954 0D000000 		.word	.LC1
 2856 0958 1E000000 		.word	.LC2
 2857 095c 2F000000 		.word	.LC3
 2858 0960 31000000 		.word	.LC4
 2859 0964 43000000 		.word	.LC6
 2860              		.cfi_endproc
 2861              	.LFE52:
 2862              		.size	task1, .-task1
 2863              		.section	.rodata.str1.1
 2864              	.LC7:
 2865 0053 4C43445F 		.ascii	"LCD_16x2\000"
 2865      31367832 
 2865      00
 2866              	.LC8:
 2867 005c 4C45445F 		.ascii	"LED_13\000"
 2867      313300
ARM GAS  /tmp/cc4r6sqw.s 			page 72


 2868              	.LC9:
 2869 0063 4C4D3335 		.ascii	"LM35_read\000"
 2869      5F726561 
 2869      6400
 2870              	.LC10:
 2871 006d 53746570 		.ascii	"StepperMotor\000"
 2871      7065724D 
 2871      6F746F72 
 2871      00
 2872              	.LC11:
 2873 007a 49525F52 		.ascii	"IR_Rev\000"
 2873      657600
 2874              	.LC12:
 2875 0081 50574D5F 		.ascii	"PWM_atuad\000"
 2875      61747561 
 2875      6400
 2876              		.section	.text.startup,"ax",%progbits
 2877              		.align	1
 2878              		.global	main
 2879              		.syntax unified
 2880              		.thumb
 2881              		.thumb_func
 2882              		.type	main, %function
 2883              	main:
 2884              	.LFB58:
 327:../8-LCD-TEMP-STP_Motor_IR/main.c ****    }
 328:../8-LCD-TEMP-STP_Motor_IR/main.c **** }
 329:../8-LCD-TEMP-STP_Motor_IR/main.c **** 
 330:../8-LCD-TEMP-STP_Motor_IR/main.c **** int main(void) {
 2885              		.loc 1 330 16 view -0
 2886              		.cfi_startproc
 2887              		@ Volatile: function does not return.
 2888              		@ args = 0, pretend = 0, frame = 0
 2889              		@ frame_needed = 0, uses_anonymous_args = 0
 331:../8-LCD-TEMP-STP_Motor_IR/main.c **** 
 332:../8-LCD-TEMP-STP_Motor_IR/main.c **** 	// O tamanho da fila é x - 1 !!
 333:../8-LCD-TEMP-STP_Motor_IR/main.c **** 	LCD_Show_queue = xQueueCreate(ELEMENTOS_FILA_LCD, sizeof(u32));
 2890              		.loc 1 333 2 view .LVU717
 2891              	@ ../8-LCD-TEMP-STP_Motor_IR/main.c:330: int main(void) {
 330:../8-LCD-TEMP-STP_Motor_IR/main.c **** 
 2892              		.loc 1 330 16 is_stmt 0 view .LVU718
 2893 0000 07B5     		push	{r0, r1, r2, lr}	@
 2894              	.LCFI21:
 2895              		.cfi_def_cfa_offset 16
 2896              		.cfi_offset 14, -4
 2897              	@ ../8-LCD-TEMP-STP_Motor_IR/main.c:333: 	LCD_Show_queue = xQueueCreate(ELEMENTOS_FILA_LCD, sizeof(
 2898              		.loc 1 333 19 view .LVU719
 2899 0002 0022     		movs	r2, #0	@,
 2900 0004 0421     		movs	r1, #4	@,
 2901 0006 0220     		movs	r0, #2	@,
 2902 0008 FFF7FEFF 		bl	xQueueGenericCreate		@
 2903              	.LVL164:
 2904              	@ ../8-LCD-TEMP-STP_Motor_IR/main.c:333: 	LCD_Show_queue = xQueueCreate(ELEMENTOS_FILA_LCD, sizeof(
 2905              		.loc 1 333 17 view .LVU720
 2906 000c 224C     		ldr	r4, .L194	@ tmp117,
 2907              	@ ../8-LCD-TEMP-STP_Motor_IR/main.c:334: 	STMotor_queue  = xQueueCreate(ELEMENTOS_FILA_SM, sizeof(u
 334:../8-LCD-TEMP-STP_Motor_IR/main.c **** 	STMotor_queue  = xQueueCreate(ELEMENTOS_FILA_SM, sizeof(u32)); 
ARM GAS  /tmp/cc4r6sqw.s 			page 73


 2908              		.loc 1 334 19 view .LVU721
 2909 000e 0022     		movs	r2, #0	@,
 2910              	@ ../8-LCD-TEMP-STP_Motor_IR/main.c:333: 	LCD_Show_queue = xQueueCreate(ELEMENTOS_FILA_LCD, sizeof(
 333:../8-LCD-TEMP-STP_Motor_IR/main.c **** 	STMotor_queue  = xQueueCreate(ELEMENTOS_FILA_SM, sizeof(u32)); 
 2911              		.loc 1 333 17 view .LVU722
 2912 0010 A060     		str	r0, [r4, #8]	@ tmp144, LCD_Show_queue
 2913              		.loc 1 334 2 is_stmt 1 view .LVU723
 2914              	@ ../8-LCD-TEMP-STP_Motor_IR/main.c:334: 	STMotor_queue  = xQueueCreate(ELEMENTOS_FILA_SM, sizeof(u
 2915              		.loc 1 334 19 is_stmt 0 view .LVU724
 2916 0012 0421     		movs	r1, #4	@,
 2917 0014 0120     		movs	r0, #1	@,
 2918 0016 FFF7FEFF 		bl	xQueueGenericCreate		@
 2919              	.LVL165:
 2920              	@ ../8-LCD-TEMP-STP_Motor_IR/main.c:335: 	PWM_data_queue = xQueueCreate(ELEMENTOS_FILA_PWM, sizeof(
 335:../8-LCD-TEMP-STP_Motor_IR/main.c **** 	PWM_data_queue = xQueueCreate(ELEMENTOS_FILA_PWM, sizeof(u32));
 2921              		.loc 1 335 19 view .LVU725
 2922 001a 0022     		movs	r2, #0	@,
 2923 001c 0421     		movs	r1, #4	@,
 2924              	@ ../8-LCD-TEMP-STP_Motor_IR/main.c:334: 	STMotor_queue  = xQueueCreate(ELEMENTOS_FILA_SM, sizeof(u
 334:../8-LCD-TEMP-STP_Motor_IR/main.c **** 	STMotor_queue  = xQueueCreate(ELEMENTOS_FILA_SM, sizeof(u32)); 
 2925              		.loc 1 334 17 view .LVU726
 2926 001e 6060     		str	r0, [r4, #4]	@ tmp145, STMotor_queue
 2927              		.loc 1 335 2 is_stmt 1 view .LVU727
 2928              	@ ../8-LCD-TEMP-STP_Motor_IR/main.c:335: 	PWM_data_queue = xQueueCreate(ELEMENTOS_FILA_PWM, sizeof(
 2929              		.loc 1 335 19 is_stmt 0 view .LVU728
 2930 0020 0120     		movs	r0, #1	@,
 2931 0022 FFF7FEFF 		bl	xQueueGenericCreate		@
 2932              	.LVL166:
 2933              	@ ../8-LCD-TEMP-STP_Motor_IR/main.c:339: 	xTaskCreate(task1,"LCD_16x2", 100 ,NULL, 4 ,NULL);
 336:../8-LCD-TEMP-STP_Motor_IR/main.c **** 	
 337:../8-LCD-TEMP-STP_Motor_IR/main.c **** 	set_system_clock_to_72Mhz();
 338:../8-LCD-TEMP-STP_Motor_IR/main.c **** 
 339:../8-LCD-TEMP-STP_Motor_IR/main.c **** 	xTaskCreate(task1,"LCD_16x2", 100 ,NULL, 4 ,NULL);
 2934              		.loc 1 339 2 view .LVU729
 2935 0026 0425     		movs	r5, #4	@ tmp123,
 2936              	@ ../8-LCD-TEMP-STP_Motor_IR/main.c:335: 	PWM_data_queue = xQueueCreate(ELEMENTOS_FILA_PWM, sizeof(
 335:../8-LCD-TEMP-STP_Motor_IR/main.c **** 	PWM_data_queue = xQueueCreate(ELEMENTOS_FILA_PWM, sizeof(u32));
 2937              		.loc 1 335 17 view .LVU730
 2938 0028 2060     		str	r0, [r4]	@ tmp146, PWM_data_queue
 337:../8-LCD-TEMP-STP_Motor_IR/main.c **** 
 2939              		.loc 1 337 2 is_stmt 1 view .LVU731
 2940              	@ ../8-LCD-TEMP-STP_Motor_IR/main.c:339: 	xTaskCreate(task1,"LCD_16x2", 100 ,NULL, 4 ,NULL);
 2941              		.loc 1 339 2 is_stmt 0 view .LVU732
 2942 002a 0024     		movs	r4, #0	@ tmp122,
 2943              	@ ../8-LCD-TEMP-STP_Motor_IR/main.c:337: 	set_system_clock_to_72Mhz();
 337:../8-LCD-TEMP-STP_Motor_IR/main.c **** 
 2944              		.loc 1 337 2 view .LVU733
 2945 002c FFF7FEFF 		bl	set_system_clock_to_72Mhz		@
 2946              	.LVL167:
 2947              		.loc 1 339 2 is_stmt 1 view .LVU734
 2948 0030 1A48     		ldr	r0, .L194+4	@,
 2949 0032 2346     		mov	r3, r4	@, tmp122
 2950 0034 6422     		movs	r2, #100	@,
 2951 0036 1A49     		ldr	r1, .L194+8	@,
 2952 0038 CDE90054 		strd	r5, r4, [sp]	@ tmp123, tmp122,
 2953 003c FFF7FEFF 		bl	xTaskCreate		@
 2954              	.LVL168:
ARM GAS  /tmp/cc4r6sqw.s 			page 74


 340:../8-LCD-TEMP-STP_Motor_IR/main.c **** 	xTaskCreate(task2, "LED_13", 100 , NULL, 4, NULL);
 2955              		.loc 1 340 2 view .LVU735
 2956 0040 2346     		mov	r3, r4	@, tmp122
 2957 0042 6422     		movs	r2, #100	@,
 2958 0044 1749     		ldr	r1, .L194+12	@,
 2959 0046 CDE90054 		strd	r5, r4, [sp]	@ tmp123, tmp122,
 2960 004a 1748     		ldr	r0, .L194+16	@,
 2961 004c FFF7FEFF 		bl	xTaskCreate		@
 2962              	.LVL169:
 341:../8-LCD-TEMP-STP_Motor_IR/main.c **** 	xTaskCreate(task3, "LM35_read", 100 , NULL, 4 , NULL);
 2963              		.loc 1 341 2 view .LVU736
 2964 0050 2346     		mov	r3, r4	@, tmp122
 2965 0052 6422     		movs	r2, #100	@,
 2966 0054 1549     		ldr	r1, .L194+20	@,
 2967 0056 CDE90054 		strd	r5, r4, [sp]	@ tmp123, tmp122,
 2968 005a 1548     		ldr	r0, .L194+24	@,
 2969 005c FFF7FEFF 		bl	xTaskCreate		@
 2970              	.LVL170:
 342:../8-LCD-TEMP-STP_Motor_IR/main.c **** 	xTaskCreate(task4, "StepperMotor", 100 , NULL, 4 , NULL);
 2971              		.loc 1 342 2 view .LVU737
 2972 0060 2346     		mov	r3, r4	@, tmp122
 2973 0062 6422     		movs	r2, #100	@,
 2974 0064 1349     		ldr	r1, .L194+28	@,
 2975 0066 CDE90054 		strd	r5, r4, [sp]	@ tmp123, tmp122,
 2976 006a 1348     		ldr	r0, .L194+32	@,
 2977 006c FFF7FEFF 		bl	xTaskCreate		@
 2978              	.LVL171:
 343:../8-LCD-TEMP-STP_Motor_IR/main.c **** 	xTaskCreate(task5, "IR_Rev", 100 , NULL, 4 , NULL);
 2979              		.loc 1 343 2 view .LVU738
 2980 0070 2346     		mov	r3, r4	@, tmp122
 2981 0072 6422     		movs	r2, #100	@,
 2982 0074 1149     		ldr	r1, .L194+36	@,
 2983 0076 CDE90054 		strd	r5, r4, [sp]	@ tmp123, tmp122,
 2984 007a 1148     		ldr	r0, .L194+40	@,
 2985 007c FFF7FEFF 		bl	xTaskCreate		@
 2986              	.LVL172:
 344:../8-LCD-TEMP-STP_Motor_IR/main.c **** 	xTaskCreate(task6, "PWM_atuad", 100 , NULL, 4 , NULL);
 2987              		.loc 1 344 2 view .LVU739
 2988 0080 2346     		mov	r3, r4	@, tmp122
 2989 0082 6422     		movs	r2, #100	@,
 2990 0084 0F49     		ldr	r1, .L194+44	@,
 2991 0086 CDE90054 		strd	r5, r4, [sp]	@ tmp123, tmp122,
 2992 008a 0F48     		ldr	r0, .L194+48	@,
 2993 008c FFF7FEFF 		bl	xTaskCreate		@
 2994              	.LVL173:
 345:../8-LCD-TEMP-STP_Motor_IR/main.c **** 
 346:../8-LCD-TEMP-STP_Motor_IR/main.c **** 	vTaskStartScheduler(); 
 2995              		.loc 1 346 2 view .LVU740
 2996 0090 FFF7FEFF 		bl	vTaskStartScheduler		@
 2997              	.LVL174:
 2998              	.L193:
 347:../8-LCD-TEMP-STP_Motor_IR/main.c **** 
 348:../8-LCD-TEMP-STP_Motor_IR/main.c **** 	while(1);
 2999              		.loc 1 348 2 discriminator 1 view .LVU741
 3000              		.loc 1 348 10 discriminator 1 view .LVU742
 3001              		.loc 1 348 7 discriminator 1 view .LVU743
 3002 0094 FEE7     		b	.L193		@
ARM GAS  /tmp/cc4r6sqw.s 			page 75


 3003              	.L195:
 3004 0096 00BF     		.align	2
 3005              	.L194:
 3006 0098 00000000 		.word	.LANCHOR0
 3007 009c 00000000 		.word	task1
 3008 00a0 53000000 		.word	.LC7
 3009 00a4 5C000000 		.word	.LC8
 3010 00a8 00000000 		.word	task2
 3011 00ac 63000000 		.word	.LC9
 3012 00b0 00000000 		.word	task3
 3013 00b4 6D000000 		.word	.LC10
 3014 00b8 00000000 		.word	task4
 3015 00bc 7A000000 		.word	.LC11
 3016 00c0 00000000 		.word	task5
 3017 00c4 81000000 		.word	.LC12
 3018 00c8 00000000 		.word	task6
 3019              		.cfi_endproc
 3020              	.LFE58:
 3021              		.size	main, .-main
 3022              		.bss
 3023              		.align	2
 3024              		.set	.LANCHOR0,. + 0
 3025              		.type	PWM_data_queue, %object
 3026              		.size	PWM_data_queue, 4
 3027              	PWM_data_queue:
 3028 0000 00000000 		.space	4
 3029              		.type	STMotor_queue, %object
 3030              		.size	STMotor_queue, 4
 3031              	STMotor_queue:
 3032 0004 00000000 		.space	4
 3033              		.type	LCD_Show_queue, %object
 3034              		.size	LCD_Show_queue, 4
 3035              	LCD_Show_queue:
 3036 0008 00000000 		.space	4
 3037              		.text
 3038              	.Letext0:
 3039              		.file 6 "/usr/arm-none-eabi/include/machine/_default_types.h"
 3040              		.file 7 "/usr/arm-none-eabi/include/sys/_stdint.h"
 3041              		.file 8 "../freertos/portable/GCC/ARM_CM3/portmacro.h"
 3042              		.file 9 "../freertos/include/queue.h"
 3043              		.file 10 "../stm32f10x_lib/CMSIS/CM3/DeviceSupport/ST/STM32F10x/stm32f10x.h"
 3044              		.file 11 "../stm32f10x_lib/CMSIS/CM3/CoreSupport/core_cm3.h"
 3045              		.file 12 "../stm32f10x_lib/STM32F10x_StdPeriph_Driver/inc/stm32f10x_gpio.h"
 3046              		.file 13 "../stm32f10x_lib/STM32F10x_StdPeriph_Driver/inc/stm32f10x_usart.h"
 3047              		.file 14 "../freertos/include/task.h"
 3048              		.file 15 "/usr/arm-none-eabi/include/stdlib.h"
 3049              		.file 16 "../8-LCD-TEMP-STP_Motor_IR/myLcd.h"
 3050              		.file 17 "../stm32f10x_lib/STM32F10x_StdPeriph_Driver/inc/stm32f10x_rcc.h"
 3051              		.section	.debug_info,"",%progbits
 3052              	.Ldebug_info0:
 3053 0000 111D0000 		.4byte	0x1d11
 3054 0004 0200     		.2byte	0x2
 3055 0006 00000000 		.4byte	.Ldebug_abbrev0
 3056 000a 04       		.byte	0x4
 3057 000b 01       		.uleb128 0x1
 3058 000c B1090000 		.4byte	.LASF257
 3059 0010 0C       		.byte	0xc
ARM GAS  /tmp/cc4r6sqw.s 			page 76


 3060 0011 8A0B0000 		.4byte	.LASF258
 3061 0015 DC0B0000 		.4byte	.LASF259
 3062 0019 A0000000 		.4byte	.Ldebug_ranges0+0xa0
 3063 001d 00000000 		.4byte	0
 3064 0021 00000000 		.4byte	0
 3065 0025 00000000 		.4byte	.Ldebug_line0
 3066 0029 02       		.uleb128 0x2
 3067 002a 04       		.byte	0x4
 3068 002b 05       		.byte	0x5
 3069 002c 696E7400 		.ascii	"int\000"
 3070 0030 03       		.uleb128 0x3
 3071 0031 04       		.byte	0x4
 3072 0032 07       		.byte	0x7
 3073 0033 59060000 		.4byte	.LASF0
 3074 0037 03       		.uleb128 0x3
 3075 0038 08       		.byte	0x8
 3076 0039 05       		.byte	0x5
 3077 003a C4050000 		.4byte	.LASF1
 3078 003e 03       		.uleb128 0x3
 3079 003f 08       		.byte	0x8
 3080 0040 04       		.byte	0x4
 3081 0041 03070000 		.4byte	.LASF2
 3082 0045 03       		.uleb128 0x3
 3083 0046 01       		.byte	0x1
 3084 0047 06       		.byte	0x6
 3085 0048 F1010000 		.4byte	.LASF3
 3086 004c 04       		.uleb128 0x4
 3087 004d 0B010000 		.4byte	.LASF6
 3088 0051 06       		.byte	0x6
 3089 0052 2B       		.byte	0x2b
 3090 0053 18       		.byte	0x18
 3091 0054 58000000 		.4byte	0x58
 3092 0058 03       		.uleb128 0x3
 3093 0059 01       		.byte	0x1
 3094 005a 08       		.byte	0x8
 3095 005b 3C020000 		.4byte	.LASF4
 3096 005f 03       		.uleb128 0x3
 3097 0060 02       		.byte	0x2
 3098 0061 05       		.byte	0x5
 3099 0062 27090000 		.4byte	.LASF5
 3100 0066 04       		.uleb128 0x4
 3101 0067 70030000 		.4byte	.LASF7
 3102 006b 06       		.byte	0x6
 3103 006c 39       		.byte	0x39
 3104 006d 19       		.byte	0x19
 3105 006e 72000000 		.4byte	0x72
 3106 0072 03       		.uleb128 0x3
 3107 0073 02       		.byte	0x2
 3108 0074 07       		.byte	0x7
 3109 0075 320B0000 		.4byte	.LASF8
 3110 0079 03       		.uleb128 0x3
 3111 007a 04       		.byte	0x4
 3112 007b 05       		.byte	0x5
 3113 007c 3D010000 		.4byte	.LASF9
 3114 0080 04       		.uleb128 0x4
 3115 0081 B9050000 		.4byte	.LASF10
 3116 0085 06       		.byte	0x6
ARM GAS  /tmp/cc4r6sqw.s 			page 77


 3117 0086 4F       		.byte	0x4f
 3118 0087 19       		.byte	0x19
 3119 0088 8C000000 		.4byte	0x8c
 3120 008c 03       		.uleb128 0x3
 3121 008d 04       		.byte	0x4
 3122 008e 07       		.byte	0x7
 3123 008f E1040000 		.4byte	.LASF11
 3124 0093 03       		.uleb128 0x3
 3125 0094 08       		.byte	0x8
 3126 0095 07       		.byte	0x7
 3127 0096 58070000 		.4byte	.LASF12
 3128 009a 04       		.uleb128 0x4
 3129 009b FD010000 		.4byte	.LASF13
 3130 009f 07       		.byte	0x7
 3131 00a0 18       		.byte	0x18
 3132 00a1 13       		.byte	0x13
 3133 00a2 4C000000 		.4byte	0x4c
 3134 00a6 05       		.uleb128 0x5
 3135 00a7 9A000000 		.4byte	0x9a
 3136 00ab 04       		.uleb128 0x4
 3137 00ac 6F070000 		.4byte	.LASF14
 3138 00b0 07       		.byte	0x7
 3139 00b1 24       		.byte	0x24
 3140 00b2 14       		.byte	0x14
 3141 00b3 66000000 		.4byte	0x66
 3142 00b7 05       		.uleb128 0x5
 3143 00b8 AB000000 		.4byte	0xab
 3144 00bc 04       		.uleb128 0x4
 3145 00bd BC0A0000 		.4byte	.LASF15
 3146 00c1 07       		.byte	0x7
 3147 00c2 30       		.byte	0x30
 3148 00c3 14       		.byte	0x14
 3149 00c4 80000000 		.4byte	0x80
 3150 00c8 05       		.uleb128 0x5
 3151 00c9 BC000000 		.4byte	0xbc
 3152 00cd 06       		.uleb128 0x6
 3153 00ce 04       		.byte	0x4
 3154 00cf 04       		.uleb128 0x4
 3155 00d0 A1000000 		.4byte	.LASF16
 3156 00d4 08       		.byte	0x8
 3157 00d5 38       		.byte	0x38
 3158 00d6 0E       		.byte	0xe
 3159 00d7 79000000 		.4byte	0x79
 3160 00db 04       		.uleb128 0x4
 3161 00dc 21080000 		.4byte	.LASF17
 3162 00e0 08       		.byte	0x8
 3163 00e1 3F       		.byte	0x3f
 3164 00e2 13       		.byte	0x13
 3165 00e3 BC000000 		.4byte	0xbc
 3166 00e7 03       		.uleb128 0x3
 3167 00e8 01       		.byte	0x1
 3168 00e9 08       		.byte	0x8
 3169 00ea 39030000 		.4byte	.LASF18
 3170 00ee 04       		.uleb128 0x4
 3171 00ef E3010000 		.4byte	.LASF19
 3172 00f3 09       		.byte	0x9
 3173 00f4 30       		.byte	0x30
ARM GAS  /tmp/cc4r6sqw.s 			page 78


 3174 00f5 22       		.byte	0x22
 3175 00f6 FA000000 		.4byte	0xfa
 3176 00fa 07       		.uleb128 0x7
 3177 00fb 04       		.byte	0x4
 3178 00fc 00010000 		.4byte	0x100
 3179 0100 08       		.uleb128 0x8
 3180 0101 46010000 		.4byte	.LASF260
 3181 0105 01       		.byte	0x1
 3182 0106 07       		.uleb128 0x7
 3183 0107 04       		.byte	0x4
 3184 0108 E7000000 		.4byte	0xe7
 3185 010c 09       		.uleb128 0x9
 3186 010d E7000000 		.4byte	0xe7
 3187 0111 1C010000 		.4byte	0x11c
 3188 0115 0A       		.uleb128 0xa
 3189 0116 30000000 		.4byte	0x30
 3190 011a 07       		.byte	0x7
 3191 011b 00       		.byte	0
 3192 011c 0B       		.uleb128 0xb
 3193 011d 89010000 		.4byte	.LASF221
 3194 0121 05       		.byte	0x5
 3195 0122 01       		.byte	0x1
 3196 0123 45000000 		.4byte	0x45
 3197 0127 0A       		.byte	0xa
 3198 0128 A7       		.byte	0xa7
 3199 0129 0E       		.byte	0xe
 3200 012a 61020000 		.4byte	0x261
 3201 012e 0C       		.uleb128 0xc
 3202 012f C3040000 		.4byte	.LASF20
 3203 0133 72       		.sleb128 -14
 3204 0134 0C       		.uleb128 0xc
 3205 0135 FB040000 		.4byte	.LASF21
 3206 0139 74       		.sleb128 -12
 3207 013a 0C       		.uleb128 0xc
 3208 013b 9E050000 		.4byte	.LASF22
 3209 013f 75       		.sleb128 -11
 3210 0140 0C       		.uleb128 0xc
 3211 0141 0F030000 		.4byte	.LASF23
 3212 0145 76       		.sleb128 -10
 3213 0146 0C       		.uleb128 0xc
 3214 0147 12060000 		.4byte	.LASF24
 3215 014b 7B       		.sleb128 -5
 3216 014c 0C       		.uleb128 0xc
 3217 014d C8080000 		.4byte	.LASF25
 3218 0151 7C       		.sleb128 -4
 3219 0152 0C       		.uleb128 0xc
 3220 0153 6B0B0000 		.4byte	.LASF26
 3221 0157 7E       		.sleb128 -2
 3222 0158 0C       		.uleb128 0xc
 3223 0159 C5010000 		.4byte	.LASF27
 3224 015d 7F       		.sleb128 -1
 3225 015e 0D       		.uleb128 0xd
 3226 015f D7040000 		.4byte	.LASF28
 3227 0163 00       		.byte	0
 3228 0164 0D       		.uleb128 0xd
 3229 0165 80080000 		.4byte	.LASF29
 3230 0169 01       		.byte	0x1
ARM GAS  /tmp/cc4r6sqw.s 			page 79


 3231 016a 0D       		.uleb128 0xd
 3232 016b 64010000 		.4byte	.LASF30
 3233 016f 02       		.byte	0x2
 3234 0170 0D       		.uleb128 0xd
 3235 0171 3C0C0000 		.4byte	.LASF31
 3236 0175 03       		.byte	0x3
 3237 0176 0D       		.uleb128 0xd
 3238 0177 B2000000 		.4byte	.LASF32
 3239 017b 04       		.byte	0x4
 3240 017c 0D       		.uleb128 0xd
 3241 017d 31090000 		.4byte	.LASF33
 3242 0181 05       		.byte	0x5
 3243 0182 0D       		.uleb128 0xd
 3244 0183 8E080000 		.4byte	.LASF34
 3245 0187 06       		.byte	0x6
 3246 0188 0D       		.uleb128 0xd
 3247 0189 77040000 		.4byte	.LASF35
 3248 018d 07       		.byte	0x7
 3249 018e 0D       		.uleb128 0xd
 3250 018f 1D000000 		.4byte	.LASF36
 3251 0193 08       		.byte	0x8
 3252 0194 0D       		.uleb128 0xd
 3253 0195 600B0000 		.4byte	.LASF37
 3254 0199 09       		.byte	0x9
 3255 019a 0D       		.uleb128 0xd
 3256 019b 270B0000 		.4byte	.LASF38
 3257 019f 0A       		.byte	0xa
 3258 01a0 0D       		.uleb128 0xd
 3259 01a1 D7020000 		.4byte	.LASF39
 3260 01a5 0B       		.byte	0xb
 3261 01a6 0D       		.uleb128 0xd
 3262 01a7 820A0000 		.4byte	.LASF40
 3263 01ab 0C       		.byte	0xc
 3264 01ac 0D       		.uleb128 0xd
 3265 01ad 03090000 		.4byte	.LASF41
 3266 01b1 0D       		.byte	0xd
 3267 01b2 0D       		.uleb128 0xd
 3268 01b3 11050000 		.4byte	.LASF42
 3269 01b7 0E       		.byte	0xe
 3270 01b8 0D       		.uleb128 0xd
 3271 01b9 87000000 		.4byte	.LASF43
 3272 01bd 0F       		.byte	0xf
 3273 01be 0D       		.uleb128 0xd
 3274 01bf B80B0000 		.4byte	.LASF44
 3275 01c3 10       		.byte	0x10
 3276 01c4 0D       		.uleb128 0xd
 3277 01c5 99060000 		.4byte	.LASF45
 3278 01c9 11       		.byte	0x11
 3279 01ca 0D       		.uleb128 0xd
 3280 01cb 89090000 		.4byte	.LASF46
 3281 01cf 12       		.byte	0x12
 3282 01d0 0D       		.uleb128 0xd
 3283 01d1 25030000 		.4byte	.LASF47
 3284 01d5 13       		.byte	0x13
 3285 01d6 0D       		.uleb128 0xd
 3286 01d7 EE080000 		.4byte	.LASF48
 3287 01db 14       		.byte	0x14
ARM GAS  /tmp/cc4r6sqw.s 			page 80


 3288 01dc 0D       		.uleb128 0xd
 3289 01dd D20A0000 		.4byte	.LASF49
 3290 01e1 15       		.byte	0x15
 3291 01e2 0D       		.uleb128 0xd
 3292 01e3 31050000 		.4byte	.LASF50
 3293 01e7 16       		.byte	0x16
 3294 01e8 0D       		.uleb128 0xd
 3295 01e9 090B0000 		.4byte	.LASF51
 3296 01ed 17       		.byte	0x17
 3297 01ee 0D       		.uleb128 0xd
 3298 01ef EA020000 		.4byte	.LASF52
 3299 01f3 18       		.byte	0x18
 3300 01f4 0D       		.uleb128 0xd
 3301 01f5 C50A0000 		.4byte	.LASF53
 3302 01f9 19       		.byte	0x19
 3303 01fa 0D       		.uleb128 0xd
 3304 01fb 0F070000 		.4byte	.LASF54
 3305 01ff 1A       		.byte	0x1a
 3306 0200 0D       		.uleb128 0xd
 3307 0201 6A040000 		.4byte	.LASF55
 3308 0205 1B       		.byte	0x1b
 3309 0206 0D       		.uleb128 0xd
 3310 0207 E3000000 		.4byte	.LASF56
 3311 020b 1C       		.byte	0x1c
 3312 020c 0D       		.uleb128 0xd
 3313 020d 78070000 		.4byte	.LASF57
 3314 0211 1D       		.byte	0x1d
 3315 0212 0D       		.uleb128 0xd
 3316 0213 DD030000 		.4byte	.LASF58
 3317 0217 1E       		.byte	0x1e
 3318 0218 0D       		.uleb128 0xd
 3319 0219 12040000 		.4byte	.LASF59
 3320 021d 1F       		.byte	0x1f
 3321 021e 0D       		.uleb128 0xd
 3322 021f B6020000 		.4byte	.LASF60
 3323 0223 20       		.byte	0x20
 3324 0224 0D       		.uleb128 0xd
 3325 0225 79060000 		.4byte	.LASF61
 3326 0229 21       		.byte	0x21
 3327 022a 0D       		.uleb128 0xd
 3328 022b 84050000 		.4byte	.LASF62
 3329 022f 22       		.byte	0x22
 3330 0230 0D       		.uleb128 0xd
 3331 0231 01060000 		.4byte	.LASF63
 3332 0235 23       		.byte	0x23
 3333 0236 0D       		.uleb128 0xd
 3334 0237 15010000 		.4byte	.LASF64
 3335 023b 24       		.byte	0x24
 3336 023c 0D       		.uleb128 0xd
 3337 023d 92070000 		.4byte	.LASF65
 3338 0241 25       		.byte	0x25
 3339 0242 0D       		.uleb128 0xd
 3340 0243 E7030000 		.4byte	.LASF66
 3341 0247 26       		.byte	0x26
 3342 0248 0D       		.uleb128 0xd
 3343 0249 D7010000 		.4byte	.LASF67
 3344 024d 27       		.byte	0x27
ARM GAS  /tmp/cc4r6sqw.s 			page 81


 3345 024e 0D       		.uleb128 0xd
 3346 024f 49070000 		.4byte	.LASF68
 3347 0253 28       		.byte	0x28
 3348 0254 0D       		.uleb128 0xd
 3349 0255 27060000 		.4byte	.LASF69
 3350 0259 29       		.byte	0x29
 3351 025a 0D       		.uleb128 0xd
 3352 025b CE030000 		.4byte	.LASF70
 3353 025f 2A       		.byte	0x2a
 3354 0260 00       		.byte	0
 3355 0261 0E       		.uleb128 0xe
 3356 0262 3F050000 		.4byte	.LASF71
 3357 0266 0A       		.byte	0xa
 3358 0267 D801     		.2byte	0x1d8
 3359 0269 03       		.byte	0x3
 3360 026a 1C010000 		.4byte	0x11c
 3361 026e 0F       		.uleb128 0xf
 3362 026f 040E     		.2byte	0xe04
 3363 0271 0B       		.byte	0xb
 3364 0272 84       		.byte	0x84
 3365 0273 09       		.byte	0x9
 3366 0274 46030000 		.4byte	0x346
 3367 0278 10       		.uleb128 0x10
 3368 0279 850B0000 		.4byte	.LASF72
 3369 027d 0B       		.byte	0xb
 3370 027e 86       		.byte	0x86
 3371 027f 11       		.byte	0x11
 3372 0280 56030000 		.4byte	0x356
 3373 0284 02       		.byte	0x2
 3374 0285 23       		.byte	0x23
 3375 0286 00       		.uleb128 0
 3376 0287 10       		.uleb128 0x10
 3377 0288 28020000 		.4byte	.LASF73
 3378 028c 0B       		.byte	0xb
 3379 028d 87       		.byte	0x87
 3380 028e 11       		.byte	0x11
 3381 028f 5B030000 		.4byte	0x35b
 3382 0293 02       		.byte	0x2
 3383 0294 23       		.byte	0x23
 3384 0295 20       		.uleb128 0x20
 3385 0296 10       		.uleb128 0x10
 3386 0297 43080000 		.4byte	.LASF74
 3387 029b 0B       		.byte	0xb
 3388 029c 88       		.byte	0x88
 3389 029d 11       		.byte	0x11
 3390 029e 56030000 		.4byte	0x356
 3391 02a2 03       		.byte	0x3
 3392 02a3 23       		.byte	0x23
 3393 02a4 8001     		.uleb128 0x80
 3394 02a6 10       		.uleb128 0x10
 3395 02a7 14000000 		.4byte	.LASF75
 3396 02ab 0B       		.byte	0xb
 3397 02ac 89       		.byte	0x89
 3398 02ad 11       		.byte	0x11
 3399 02ae 5B030000 		.4byte	0x35b
 3400 02b2 03       		.byte	0x3
 3401 02b3 23       		.byte	0x23
ARM GAS  /tmp/cc4r6sqw.s 			page 82


 3402 02b4 A001     		.uleb128 0xa0
 3403 02b6 10       		.uleb128 0x10
 3404 02b7 5B0B0000 		.4byte	.LASF76
 3405 02bb 0B       		.byte	0xb
 3406 02bc 8A       		.byte	0x8a
 3407 02bd 11       		.byte	0x11
 3408 02be 56030000 		.4byte	0x356
 3409 02c2 03       		.byte	0x3
 3410 02c3 23       		.byte	0x23
 3411 02c4 8002     		.uleb128 0x100
 3412 02c6 10       		.uleb128 0x10
 3413 02c7 F8020000 		.4byte	.LASF77
 3414 02cb 0B       		.byte	0xb
 3415 02cc 8B       		.byte	0x8b
 3416 02cd 11       		.byte	0x11
 3417 02ce 5B030000 		.4byte	0x35b
 3418 02d2 03       		.byte	0x3
 3419 02d3 23       		.byte	0x23
 3420 02d4 A002     		.uleb128 0x120
 3421 02d6 10       		.uleb128 0x10
 3422 02d7 F2000000 		.4byte	.LASF78
 3423 02db 0B       		.byte	0xb
 3424 02dc 8C       		.byte	0x8c
 3425 02dd 11       		.byte	0x11
 3426 02de 56030000 		.4byte	0x356
 3427 02e2 03       		.byte	0x3
 3428 02e3 23       		.byte	0x23
 3429 02e4 8003     		.uleb128 0x180
 3430 02e6 10       		.uleb128 0x10
 3431 02e7 4A020000 		.4byte	.LASF79
 3432 02eb 0B       		.byte	0xb
 3433 02ec 8D       		.byte	0x8d
 3434 02ed 11       		.byte	0x11
 3435 02ee 5B030000 		.4byte	0x35b
 3436 02f2 03       		.byte	0x3
 3437 02f3 23       		.byte	0x23
 3438 02f4 A003     		.uleb128 0x1a0
 3439 02f6 10       		.uleb128 0x10
 3440 02f7 A0020000 		.4byte	.LASF80
 3441 02fb 0B       		.byte	0xb
 3442 02fc 8E       		.byte	0x8e
 3443 02fd 11       		.byte	0x11
 3444 02fe 56030000 		.4byte	0x356
 3445 0302 03       		.byte	0x3
 3446 0303 23       		.byte	0x23
 3447 0304 8004     		.uleb128 0x200
 3448 0306 10       		.uleb128 0x10
 3449 0307 54020000 		.4byte	.LASF81
 3450 030b 0B       		.byte	0xb
 3451 030c 8F       		.byte	0x8f
 3452 030d 11       		.byte	0x11
 3453 030e 6B030000 		.4byte	0x36b
 3454 0312 03       		.byte	0x3
 3455 0313 23       		.byte	0x23
 3456 0314 A004     		.uleb128 0x220
 3457 0316 11       		.uleb128 0x11
 3458 0317 495000   		.ascii	"IP\000"
ARM GAS  /tmp/cc4r6sqw.s 			page 83


 3459 031a 0B       		.byte	0xb
 3460 031b 90       		.byte	0x90
 3461 031c 11       		.byte	0x11
 3462 031d 8B030000 		.4byte	0x38b
 3463 0321 03       		.byte	0x3
 3464 0322 23       		.byte	0x23
 3465 0323 8006     		.uleb128 0x300
 3466 0325 10       		.uleb128 0x10
 3467 0326 5E020000 		.4byte	.LASF82
 3468 032a 0B       		.byte	0xb
 3469 032b 91       		.byte	0x91
 3470 032c 11       		.byte	0x11
 3471 032d 90030000 		.4byte	0x390
 3472 0331 03       		.byte	0x3
 3473 0332 23       		.byte	0x23
 3474 0333 F007     		.uleb128 0x3f0
 3475 0335 10       		.uleb128 0x10
 3476 0336 0D040000 		.4byte	.LASF83
 3477 033a 0B       		.byte	0xb
 3478 033b 92       		.byte	0x92
 3479 033c 11       		.byte	0x11
 3480 033d C8000000 		.4byte	0xc8
 3481 0341 03       		.byte	0x3
 3482 0342 23       		.byte	0x23
 3483 0343 801C     		.uleb128 0xe00
 3484 0345 00       		.byte	0
 3485 0346 09       		.uleb128 0x9
 3486 0347 C8000000 		.4byte	0xc8
 3487 034b 56030000 		.4byte	0x356
 3488 034f 0A       		.uleb128 0xa
 3489 0350 30000000 		.4byte	0x30
 3490 0354 07       		.byte	0x7
 3491 0355 00       		.byte	0
 3492 0356 05       		.uleb128 0x5
 3493 0357 46030000 		.4byte	0x346
 3494 035b 09       		.uleb128 0x9
 3495 035c BC000000 		.4byte	0xbc
 3496 0360 6B030000 		.4byte	0x36b
 3497 0364 0A       		.uleb128 0xa
 3498 0365 30000000 		.4byte	0x30
 3499 0369 17       		.byte	0x17
 3500 036a 00       		.byte	0
 3501 036b 09       		.uleb128 0x9
 3502 036c BC000000 		.4byte	0xbc
 3503 0370 7B030000 		.4byte	0x37b
 3504 0374 0A       		.uleb128 0xa
 3505 0375 30000000 		.4byte	0x30
 3506 0379 37       		.byte	0x37
 3507 037a 00       		.byte	0
 3508 037b 09       		.uleb128 0x9
 3509 037c A6000000 		.4byte	0xa6
 3510 0380 8B030000 		.4byte	0x38b
 3511 0384 0A       		.uleb128 0xa
 3512 0385 30000000 		.4byte	0x30
 3513 0389 EF       		.byte	0xef
 3514 038a 00       		.byte	0
 3515 038b 05       		.uleb128 0x5
ARM GAS  /tmp/cc4r6sqw.s 			page 84


 3516 038c 7B030000 		.4byte	0x37b
 3517 0390 09       		.uleb128 0x9
 3518 0391 BC000000 		.4byte	0xbc
 3519 0395 A1030000 		.4byte	0x3a1
 3520 0399 12       		.uleb128 0x12
 3521 039a 30000000 		.4byte	0x30
 3522 039e 8302     		.2byte	0x283
 3523 03a0 00       		.byte	0
 3524 03a1 04       		.uleb128 0x4
 3525 03a2 3F070000 		.4byte	.LASF84
 3526 03a6 0B       		.byte	0xb
 3527 03a7 93       		.byte	0x93
 3528 03a8 04       		.byte	0x4
 3529 03a9 6E020000 		.4byte	0x26e
 3530 03ad 13       		.uleb128 0x13
 3531 03ae 75333200 		.ascii	"u32\000"
 3532 03b2 0A       		.byte	0xa
 3533 03b3 F701     		.2byte	0x1f7
 3534 03b5 13       		.byte	0x13
 3535 03b6 BC000000 		.4byte	0xbc
 3536 03ba 05       		.uleb128 0x5
 3537 03bb AD030000 		.4byte	0x3ad
 3538 03bf 13       		.uleb128 0x13
 3539 03c0 75313600 		.ascii	"u16\000"
 3540 03c4 0A       		.byte	0xa
 3541 03c5 F801     		.2byte	0x1f8
 3542 03c7 12       		.byte	0x12
 3543 03c8 AB000000 		.4byte	0xab
 3544 03cc 13       		.uleb128 0x13
 3545 03cd 753800   		.ascii	"u8\000"
 3546 03d0 0A       		.byte	0xa
 3547 03d1 F901     		.2byte	0x1f9
 3548 03d3 12       		.byte	0x12
 3549 03d4 9A000000 		.4byte	0x9a
 3550 03d8 14       		.uleb128 0x14
 3551 03d9 07       		.byte	0x7
 3552 03da 01       		.byte	0x1
 3553 03db 58000000 		.4byte	0x58
 3554 03df 0A       		.byte	0xa
 3555 03e0 0702     		.2byte	0x207
 3556 03e2 0E       		.byte	0xe
 3557 03e3 F4030000 		.4byte	0x3f4
 3558 03e7 0D       		.uleb128 0xd
 3559 03e8 5E080000 		.4byte	.LASF85
 3560 03ec 00       		.byte	0
 3561 03ed 15       		.uleb128 0x15
 3562 03ee 53455400 		.ascii	"SET\000"
 3563 03f2 01       		.byte	0x1
 3564 03f3 00       		.byte	0
 3565 03f4 14       		.uleb128 0x14
 3566 03f5 07       		.byte	0x7
 3567 03f6 01       		.byte	0x1
 3568 03f7 58000000 		.4byte	0x58
 3569 03fb 0A       		.byte	0xa
 3570 03fc 0902     		.2byte	0x209
 3571 03fe 0E       		.byte	0xe
 3572 03ff 10040000 		.4byte	0x410
ARM GAS  /tmp/cc4r6sqw.s 			page 85


 3573 0403 0D       		.uleb128 0xd
 3574 0404 FB060000 		.4byte	.LASF86
 3575 0408 00       		.byte	0
 3576 0409 0D       		.uleb128 0xd
 3577 040a 95090000 		.4byte	.LASF87
 3578 040e 01       		.byte	0x1
 3579 040f 00       		.byte	0
 3580 0410 16       		.uleb128 0x16
 3581 0411 50       		.byte	0x50
 3582 0412 0A       		.byte	0xa
 3583 0413 1E02     		.2byte	0x21e
 3584 0415 09       		.byte	0x9
 3585 0416 59050000 		.4byte	0x559
 3586 041a 17       		.uleb128 0x17
 3587 041b 535200   		.ascii	"SR\000"
 3588 041e 0A       		.byte	0xa
 3589 041f 2002     		.2byte	0x220
 3590 0421 11       		.byte	0x11
 3591 0422 C8000000 		.4byte	0xc8
 3592 0426 02       		.byte	0x2
 3593 0427 23       		.byte	0x23
 3594 0428 00       		.uleb128 0
 3595 0429 17       		.uleb128 0x17
 3596 042a 43523100 		.ascii	"CR1\000"
 3597 042e 0A       		.byte	0xa
 3598 042f 2102     		.2byte	0x221
 3599 0431 11       		.byte	0x11
 3600 0432 C8000000 		.4byte	0xc8
 3601 0436 02       		.byte	0x2
 3602 0437 23       		.byte	0x23
 3603 0438 04       		.uleb128 0x4
 3604 0439 17       		.uleb128 0x17
 3605 043a 43523200 		.ascii	"CR2\000"
 3606 043e 0A       		.byte	0xa
 3607 043f 2202     		.2byte	0x222
 3608 0441 11       		.byte	0x11
 3609 0442 C8000000 		.4byte	0xc8
 3610 0446 02       		.byte	0x2
 3611 0447 23       		.byte	0x23
 3612 0448 08       		.uleb128 0x8
 3613 0449 18       		.uleb128 0x18
 3614 044a 49050000 		.4byte	.LASF88
 3615 044e 0A       		.byte	0xa
 3616 044f 2302     		.2byte	0x223
 3617 0451 11       		.byte	0x11
 3618 0452 C8000000 		.4byte	0xc8
 3619 0456 02       		.byte	0x2
 3620 0457 23       		.byte	0x23
 3621 0458 0C       		.uleb128 0xc
 3622 0459 18       		.uleb128 0x18
 3623 045a 4F050000 		.4byte	.LASF89
 3624 045e 0A       		.byte	0xa
 3625 045f 2402     		.2byte	0x224
 3626 0461 11       		.byte	0x11
 3627 0462 C8000000 		.4byte	0xc8
 3628 0466 02       		.byte	0x2
 3629 0467 23       		.byte	0x23
ARM GAS  /tmp/cc4r6sqw.s 			page 86


 3630 0468 10       		.uleb128 0x10
 3631 0469 18       		.uleb128 0x18
 3632 046a 67090000 		.4byte	.LASF90
 3633 046e 0A       		.byte	0xa
 3634 046f 2502     		.2byte	0x225
 3635 0471 11       		.byte	0x11
 3636 0472 C8000000 		.4byte	0xc8
 3637 0476 02       		.byte	0x2
 3638 0477 23       		.byte	0x23
 3639 0478 14       		.uleb128 0x14
 3640 0479 18       		.uleb128 0x18
 3641 047a 6D090000 		.4byte	.LASF91
 3642 047e 0A       		.byte	0xa
 3643 047f 2602     		.2byte	0x226
 3644 0481 11       		.byte	0x11
 3645 0482 C8000000 		.4byte	0xc8
 3646 0486 02       		.byte	0x2
 3647 0487 23       		.byte	0x23
 3648 0488 18       		.uleb128 0x18
 3649 0489 18       		.uleb128 0x18
 3650 048a 73090000 		.4byte	.LASF92
 3651 048e 0A       		.byte	0xa
 3652 048f 2702     		.2byte	0x227
 3653 0491 11       		.byte	0x11
 3654 0492 C8000000 		.4byte	0xc8
 3655 0496 02       		.byte	0x2
 3656 0497 23       		.byte	0x23
 3657 0498 1C       		.uleb128 0x1c
 3658 0499 18       		.uleb128 0x18
 3659 049a 79090000 		.4byte	.LASF93
 3660 049e 0A       		.byte	0xa
 3661 049f 2802     		.2byte	0x228
 3662 04a1 11       		.byte	0x11
 3663 04a2 C8000000 		.4byte	0xc8
 3664 04a6 02       		.byte	0x2
 3665 04a7 23       		.byte	0x23
 3666 04a8 20       		.uleb128 0x20
 3667 04a9 17       		.uleb128 0x17
 3668 04aa 48545200 		.ascii	"HTR\000"
 3669 04ae 0A       		.byte	0xa
 3670 04af 2902     		.2byte	0x229
 3671 04b1 11       		.byte	0x11
 3672 04b2 C8000000 		.4byte	0xc8
 3673 04b6 02       		.byte	0x2
 3674 04b7 23       		.byte	0x23
 3675 04b8 24       		.uleb128 0x24
 3676 04b9 17       		.uleb128 0x17
 3677 04ba 4C545200 		.ascii	"LTR\000"
 3678 04be 0A       		.byte	0xa
 3679 04bf 2A02     		.2byte	0x22a
 3680 04c1 11       		.byte	0x11
 3681 04c2 C8000000 		.4byte	0xc8
 3682 04c6 02       		.byte	0x2
 3683 04c7 23       		.byte	0x23
 3684 04c8 28       		.uleb128 0x28
 3685 04c9 18       		.uleb128 0x18
 3686 04ca 61000000 		.4byte	.LASF94
ARM GAS  /tmp/cc4r6sqw.s 			page 87


 3687 04ce 0A       		.byte	0xa
 3688 04cf 2B02     		.2byte	0x22b
 3689 04d1 11       		.byte	0x11
 3690 04d2 C8000000 		.4byte	0xc8
 3691 04d6 02       		.byte	0x2
 3692 04d7 23       		.byte	0x23
 3693 04d8 2C       		.uleb128 0x2c
 3694 04d9 18       		.uleb128 0x18
 3695 04da 66000000 		.4byte	.LASF95
 3696 04de 0A       		.byte	0xa
 3697 04df 2C02     		.2byte	0x22c
 3698 04e1 11       		.byte	0x11
 3699 04e2 C8000000 		.4byte	0xc8
 3700 04e6 02       		.byte	0x2
 3701 04e7 23       		.byte	0x23
 3702 04e8 30       		.uleb128 0x30
 3703 04e9 18       		.uleb128 0x18
 3704 04ea 6B000000 		.4byte	.LASF96
 3705 04ee 0A       		.byte	0xa
 3706 04ef 2D02     		.2byte	0x22d
 3707 04f1 11       		.byte	0x11
 3708 04f2 C8000000 		.4byte	0xc8
 3709 04f6 02       		.byte	0x2
 3710 04f7 23       		.byte	0x23
 3711 04f8 34       		.uleb128 0x34
 3712 04f9 18       		.uleb128 0x18
 3713 04fa 700A0000 		.4byte	.LASF97
 3714 04fe 0A       		.byte	0xa
 3715 04ff 2E02     		.2byte	0x22e
 3716 0501 11       		.byte	0x11
 3717 0502 C8000000 		.4byte	0xc8
 3718 0506 02       		.byte	0x2
 3719 0507 23       		.byte	0x23
 3720 0508 38       		.uleb128 0x38
 3721 0509 18       		.uleb128 0x18
 3722 050a 360A0000 		.4byte	.LASF98
 3723 050e 0A       		.byte	0xa
 3724 050f 2F02     		.2byte	0x22f
 3725 0511 11       		.byte	0x11
 3726 0512 C8000000 		.4byte	0xc8
 3727 0516 02       		.byte	0x2
 3728 0517 23       		.byte	0x23
 3729 0518 3C       		.uleb128 0x3c
 3730 0519 18       		.uleb128 0x18
 3731 051a 3B0A0000 		.4byte	.LASF99
 3732 051e 0A       		.byte	0xa
 3733 051f 3002     		.2byte	0x230
 3734 0521 11       		.byte	0x11
 3735 0522 C8000000 		.4byte	0xc8
 3736 0526 02       		.byte	0x2
 3737 0527 23       		.byte	0x23
 3738 0528 40       		.uleb128 0x40
 3739 0529 18       		.uleb128 0x18
 3740 052a 400A0000 		.4byte	.LASF100
 3741 052e 0A       		.byte	0xa
 3742 052f 3102     		.2byte	0x231
 3743 0531 11       		.byte	0x11
ARM GAS  /tmp/cc4r6sqw.s 			page 88


 3744 0532 C8000000 		.4byte	0xc8
 3745 0536 02       		.byte	0x2
 3746 0537 23       		.byte	0x23
 3747 0538 44       		.uleb128 0x44
 3748 0539 18       		.uleb128 0x18
 3749 053a 450A0000 		.4byte	.LASF101
 3750 053e 0A       		.byte	0xa
 3751 053f 3202     		.2byte	0x232
 3752 0541 11       		.byte	0x11
 3753 0542 C8000000 		.4byte	0xc8
 3754 0546 02       		.byte	0x2
 3755 0547 23       		.byte	0x23
 3756 0548 48       		.uleb128 0x48
 3757 0549 17       		.uleb128 0x17
 3758 054a 445200   		.ascii	"DR\000"
 3759 054d 0A       		.byte	0xa
 3760 054e 3302     		.2byte	0x233
 3761 0550 11       		.byte	0x11
 3762 0551 C8000000 		.4byte	0xc8
 3763 0555 02       		.byte	0x2
 3764 0556 23       		.byte	0x23
 3765 0557 4C       		.uleb128 0x4c
 3766 0558 00       		.byte	0
 3767 0559 0E       		.uleb128 0xe
 3768 055a 1F040000 		.4byte	.LASF102
 3769 055e 0A       		.byte	0xa
 3770 055f 3402     		.2byte	0x234
 3771 0561 03       		.byte	0x3
 3772 0562 10040000 		.4byte	0x410
 3773 0566 16       		.uleb128 0x16
 3774 0567 24       		.byte	0x24
 3775 0568 0A       		.byte	0xa
 3776 0569 8503     		.2byte	0x385
 3777 056b 09       		.byte	0x9
 3778 056c FE050000 		.4byte	0x5fe
 3779 0570 17       		.uleb128 0x17
 3780 0571 41435200 		.ascii	"ACR\000"
 3781 0575 0A       		.byte	0xa
 3782 0576 8703     		.2byte	0x387
 3783 0578 11       		.byte	0x11
 3784 0579 C8000000 		.4byte	0xc8
 3785 057d 02       		.byte	0x2
 3786 057e 23       		.byte	0x23
 3787 057f 00       		.uleb128 0
 3788 0580 18       		.uleb128 0x18
 3789 0581 16090000 		.4byte	.LASF103
 3790 0585 0A       		.byte	0xa
 3791 0586 8803     		.2byte	0x388
 3792 0588 11       		.byte	0x11
 3793 0589 C8000000 		.4byte	0xc8
 3794 058d 02       		.byte	0x2
 3795 058e 23       		.byte	0x23
 3796 058f 04       		.uleb128 0x4
 3797 0590 18       		.uleb128 0x18
 3798 0591 A5040000 		.4byte	.LASF104
 3799 0595 0A       		.byte	0xa
 3800 0596 8903     		.2byte	0x389
ARM GAS  /tmp/cc4r6sqw.s 			page 89


 3801 0598 11       		.byte	0x11
 3802 0599 C8000000 		.4byte	0xc8
 3803 059d 02       		.byte	0x2
 3804 059e 23       		.byte	0x23
 3805 059f 08       		.uleb128 0x8
 3806 05a0 17       		.uleb128 0x17
 3807 05a1 535200   		.ascii	"SR\000"
 3808 05a4 0A       		.byte	0xa
 3809 05a5 8A03     		.2byte	0x38a
 3810 05a7 11       		.byte	0x11
 3811 05a8 C8000000 		.4byte	0xc8
 3812 05ac 02       		.byte	0x2
 3813 05ad 23       		.byte	0x23
 3814 05ae 0C       		.uleb128 0xc
 3815 05af 17       		.uleb128 0x17
 3816 05b0 435200   		.ascii	"CR\000"
 3817 05b3 0A       		.byte	0xa
 3818 05b4 8B03     		.2byte	0x38b
 3819 05b6 11       		.byte	0x11
 3820 05b7 C8000000 		.4byte	0xc8
 3821 05bb 02       		.byte	0x2
 3822 05bc 23       		.byte	0x23
 3823 05bd 10       		.uleb128 0x10
 3824 05be 17       		.uleb128 0x17
 3825 05bf 415200   		.ascii	"AR\000"
 3826 05c2 0A       		.byte	0xa
 3827 05c3 8C03     		.2byte	0x38c
 3828 05c5 11       		.byte	0x11
 3829 05c6 C8000000 		.4byte	0xc8
 3830 05ca 02       		.byte	0x2
 3831 05cb 23       		.byte	0x23
 3832 05cc 14       		.uleb128 0x14
 3833 05cd 18       		.uleb128 0x18
 3834 05ce 2B040000 		.4byte	.LASF105
 3835 05d2 0A       		.byte	0xa
 3836 05d3 8D03     		.2byte	0x38d
 3837 05d5 11       		.byte	0x11
 3838 05d6 C8000000 		.4byte	0xc8
 3839 05da 02       		.byte	0x2
 3840 05db 23       		.byte	0x23
 3841 05dc 18       		.uleb128 0x18
 3842 05dd 17       		.uleb128 0x17
 3843 05de 4F425200 		.ascii	"OBR\000"
 3844 05e2 0A       		.byte	0xa
 3845 05e3 8E03     		.2byte	0x38e
 3846 05e5 11       		.byte	0x11
 3847 05e6 C8000000 		.4byte	0xc8
 3848 05ea 02       		.byte	0x2
 3849 05eb 23       		.byte	0x23
 3850 05ec 1C       		.uleb128 0x1c
 3851 05ed 18       		.uleb128 0x18
 3852 05ee D2010000 		.4byte	.LASF106
 3853 05f2 0A       		.byte	0xa
 3854 05f3 8F03     		.2byte	0x38f
 3855 05f5 11       		.byte	0x11
 3856 05f6 C8000000 		.4byte	0xc8
 3857 05fa 02       		.byte	0x2
ARM GAS  /tmp/cc4r6sqw.s 			page 90


 3858 05fb 23       		.byte	0x23
 3859 05fc 20       		.uleb128 0x20
 3860 05fd 00       		.byte	0
 3861 05fe 0E       		.uleb128 0xe
 3862 05ff 950A0000 		.4byte	.LASF107
 3863 0603 0A       		.byte	0xa
 3864 0604 9803     		.2byte	0x398
 3865 0606 03       		.byte	0x3
 3866 0607 66050000 		.4byte	0x566
 3867 060b 16       		.uleb128 0x16
 3868 060c 1C       		.byte	0x1c
 3869 060d 0A       		.byte	0xa
 3870 060e E903     		.2byte	0x3e9
 3871 0610 09       		.byte	0x9
 3872 0611 86060000 		.4byte	0x686
 3873 0615 17       		.uleb128 0x17
 3874 0616 43524C00 		.ascii	"CRL\000"
 3875 061a 0A       		.byte	0xa
 3876 061b EB03     		.2byte	0x3eb
 3877 061d 11       		.byte	0x11
 3878 061e C8000000 		.4byte	0xc8
 3879 0622 02       		.byte	0x2
 3880 0623 23       		.byte	0x23
 3881 0624 00       		.uleb128 0
 3882 0625 17       		.uleb128 0x17
 3883 0626 43524800 		.ascii	"CRH\000"
 3884 062a 0A       		.byte	0xa
 3885 062b EC03     		.2byte	0x3ec
 3886 062d 11       		.byte	0x11
 3887 062e C8000000 		.4byte	0xc8
 3888 0632 02       		.byte	0x2
 3889 0633 23       		.byte	0x23
 3890 0634 04       		.uleb128 0x4
 3891 0635 17       		.uleb128 0x17
 3892 0636 49445200 		.ascii	"IDR\000"
 3893 063a 0A       		.byte	0xa
 3894 063b ED03     		.2byte	0x3ed
 3895 063d 11       		.byte	0x11
 3896 063e C8000000 		.4byte	0xc8
 3897 0642 02       		.byte	0x2
 3898 0643 23       		.byte	0x23
 3899 0644 08       		.uleb128 0x8
 3900 0645 17       		.uleb128 0x17
 3901 0646 4F445200 		.ascii	"ODR\000"
 3902 064a 0A       		.byte	0xa
 3903 064b EE03     		.2byte	0x3ee
 3904 064d 11       		.byte	0x11
 3905 064e C8000000 		.4byte	0xc8
 3906 0652 02       		.byte	0x2
 3907 0653 23       		.byte	0x23
 3908 0654 0C       		.uleb128 0xc
 3909 0655 18       		.uleb128 0x18
 3910 0656 310A0000 		.4byte	.LASF108
 3911 065a 0A       		.byte	0xa
 3912 065b EF03     		.2byte	0x3ef
 3913 065d 11       		.byte	0x11
 3914 065e C8000000 		.4byte	0xc8
ARM GAS  /tmp/cc4r6sqw.s 			page 91


 3915 0662 02       		.byte	0x2
 3916 0663 23       		.byte	0x23
 3917 0664 10       		.uleb128 0x10
 3918 0665 17       		.uleb128 0x17
 3919 0666 42525200 		.ascii	"BRR\000"
 3920 066a 0A       		.byte	0xa
 3921 066b F003     		.2byte	0x3f0
 3922 066d 11       		.byte	0x11
 3923 066e C8000000 		.4byte	0xc8
 3924 0672 02       		.byte	0x2
 3925 0673 23       		.byte	0x23
 3926 0674 14       		.uleb128 0x14
 3927 0675 18       		.uleb128 0x18
 3928 0676 7F050000 		.4byte	.LASF109
 3929 067a 0A       		.byte	0xa
 3930 067b F103     		.2byte	0x3f1
 3931 067d 11       		.byte	0x11
 3932 067e C8000000 		.4byte	0xc8
 3933 0682 02       		.byte	0x2
 3934 0683 23       		.byte	0x23
 3935 0684 18       		.uleb128 0x18
 3936 0685 00       		.byte	0
 3937 0686 0E       		.uleb128 0xe
 3938 0687 750A0000 		.4byte	.LASF110
 3939 068b 0A       		.byte	0xa
 3940 068c F203     		.2byte	0x3f2
 3941 068e 03       		.byte	0x3
 3942 068f 0B060000 		.4byte	0x60b
 3943 0693 16       		.uleb128 0x16
 3944 0694 20       		.byte	0x20
 3945 0695 0A       		.byte	0xa
 3946 0696 F803     		.2byte	0x3f8
 3947 0698 09       		.byte	0x9
 3948 0699 EE060000 		.4byte	0x6ee
 3949 069d 18       		.uleb128 0x18
 3950 069e AC050000 		.4byte	.LASF111
 3951 06a2 0A       		.byte	0xa
 3952 06a3 FA03     		.2byte	0x3fa
 3953 06a5 11       		.byte	0x11
 3954 06a6 C8000000 		.4byte	0xc8
 3955 06aa 02       		.byte	0x2
 3956 06ab 23       		.byte	0x23
 3957 06ac 00       		.uleb128 0
 3958 06ad 18       		.uleb128 0x18
 3959 06ae E0070000 		.4byte	.LASF112
 3960 06b2 0A       		.byte	0xa
 3961 06b3 FB03     		.2byte	0x3fb
 3962 06b5 11       		.byte	0x11
 3963 06b6 C8000000 		.4byte	0xc8
 3964 06ba 02       		.byte	0x2
 3965 06bb 23       		.byte	0x23
 3966 06bc 04       		.uleb128 0x4
 3967 06bd 18       		.uleb128 0x18
 3968 06be 45000000 		.4byte	.LASF113
 3969 06c2 0A       		.byte	0xa
 3970 06c3 FC03     		.2byte	0x3fc
 3971 06c5 11       		.byte	0x11
ARM GAS  /tmp/cc4r6sqw.s 			page 92


 3972 06c6 FE060000 		.4byte	0x6fe
 3973 06ca 02       		.byte	0x2
 3974 06cb 23       		.byte	0x23
 3975 06cc 08       		.uleb128 0x8
 3976 06cd 18       		.uleb128 0x18
 3977 06ce 28020000 		.4byte	.LASF73
 3978 06d2 0A       		.byte	0xa
 3979 06d3 FD03     		.2byte	0x3fd
 3980 06d5 0C       		.byte	0xc
 3981 06d6 BC000000 		.4byte	0xbc
 3982 06da 02       		.byte	0x2
 3983 06db 23       		.byte	0x23
 3984 06dc 18       		.uleb128 0x18
 3985 06dd 18       		.uleb128 0x18
 3986 06de AB030000 		.4byte	.LASF114
 3987 06e2 0A       		.byte	0xa
 3988 06e3 FE03     		.2byte	0x3fe
 3989 06e5 11       		.byte	0x11
 3990 06e6 C8000000 		.4byte	0xc8
 3991 06ea 02       		.byte	0x2
 3992 06eb 23       		.byte	0x23
 3993 06ec 1C       		.uleb128 0x1c
 3994 06ed 00       		.byte	0
 3995 06ee 09       		.uleb128 0x9
 3996 06ef C8000000 		.4byte	0xc8
 3997 06f3 FE060000 		.4byte	0x6fe
 3998 06f7 0A       		.uleb128 0xa
 3999 06f8 30000000 		.4byte	0x30
 4000 06fc 03       		.byte	0x3
 4001 06fd 00       		.byte	0
 4002 06fe 05       		.uleb128 0x5
 4003 06ff EE060000 		.4byte	0x6ee
 4004 0703 0E       		.uleb128 0xe
 4005 0704 5A090000 		.4byte	.LASF115
 4006 0708 0A       		.byte	0xa
 4007 0709 FF03     		.2byte	0x3ff
 4008 070b 03       		.byte	0x3
 4009 070c 93060000 		.4byte	0x693
 4010 0710 16       		.uleb128 0x16
 4011 0711 30       		.byte	0x30
 4012 0712 0A       		.byte	0xa
 4013 0713 3404     		.2byte	0x434
 4014 0715 09       		.byte	0x9
 4015 0716 DA070000 		.4byte	0x7da
 4016 071a 17       		.uleb128 0x17
 4017 071b 435200   		.ascii	"CR\000"
 4018 071e 0A       		.byte	0xa
 4019 071f 3604     		.2byte	0x436
 4020 0721 11       		.byte	0x11
 4021 0722 C8000000 		.4byte	0xc8
 4022 0726 02       		.byte	0x2
 4023 0727 23       		.byte	0x23
 4024 0728 00       		.uleb128 0
 4025 0729 18       		.uleb128 0x18
 4026 072a 5A040000 		.4byte	.LASF116
 4027 072e 0A       		.byte	0xa
 4028 072f 3704     		.2byte	0x437
ARM GAS  /tmp/cc4r6sqw.s 			page 93


 4029 0731 11       		.byte	0x11
 4030 0732 C8000000 		.4byte	0xc8
 4031 0736 02       		.byte	0x2
 4032 0737 23       		.byte	0x23
 4033 0738 04       		.uleb128 0x4
 4034 0739 17       		.uleb128 0x17
 4035 073a 43495200 		.ascii	"CIR\000"
 4036 073e 0A       		.byte	0xa
 4037 073f 3804     		.2byte	0x438
 4038 0741 11       		.byte	0x11
 4039 0742 C8000000 		.4byte	0xc8
 4040 0746 02       		.byte	0x2
 4041 0747 23       		.byte	0x23
 4042 0748 08       		.uleb128 0x8
 4043 0749 18       		.uleb128 0x18
 4044 074a 1E060000 		.4byte	.LASF117
 4045 074e 0A       		.byte	0xa
 4046 074f 3904     		.2byte	0x439
 4047 0751 11       		.byte	0x11
 4048 0752 C8000000 		.4byte	0xc8
 4049 0756 02       		.byte	0x2
 4050 0757 23       		.byte	0x23
 4051 0758 0C       		.uleb128 0xc
 4052 0759 18       		.uleb128 0x18
 4053 075a 21070000 		.4byte	.LASF118
 4054 075e 0A       		.byte	0xa
 4055 075f 3A04     		.2byte	0x43a
 4056 0761 11       		.byte	0x11
 4057 0762 C8000000 		.4byte	0xc8
 4058 0766 02       		.byte	0x2
 4059 0767 23       		.byte	0x23
 4060 0768 10       		.uleb128 0x10
 4061 0769 18       		.uleb128 0x18
 4062 076a AA090000 		.4byte	.LASF119
 4063 076e 0A       		.byte	0xa
 4064 076f 3B04     		.2byte	0x43b
 4065 0771 11       		.byte	0x11
 4066 0772 C8000000 		.4byte	0xc8
 4067 0776 02       		.byte	0x2
 4068 0777 23       		.byte	0x23
 4069 0778 14       		.uleb128 0x14
 4070 0779 18       		.uleb128 0x18
 4071 077a 99010000 		.4byte	.LASF120
 4072 077e 0A       		.byte	0xa
 4073 077f 3C04     		.2byte	0x43c
 4074 0781 11       		.byte	0x11
 4075 0782 C8000000 		.4byte	0xc8
 4076 0786 02       		.byte	0x2
 4077 0787 23       		.byte	0x23
 4078 0788 18       		.uleb128 0x18
 4079 0789 18       		.uleb128 0x18
 4080 078a F3040000 		.4byte	.LASF121
 4081 078e 0A       		.byte	0xa
 4082 078f 3D04     		.2byte	0x43d
 4083 0791 11       		.byte	0x11
 4084 0792 C8000000 		.4byte	0xc8
 4085 0796 02       		.byte	0x2
ARM GAS  /tmp/cc4r6sqw.s 			page 94


 4086 0797 23       		.byte	0x23
 4087 0798 1C       		.uleb128 0x1c
 4088 0799 18       		.uleb128 0x18
 4089 079a 08040000 		.4byte	.LASF122
 4090 079e 0A       		.byte	0xa
 4091 079f 3E04     		.2byte	0x43e
 4092 07a1 11       		.byte	0x11
 4093 07a2 C8000000 		.4byte	0xc8
 4094 07a6 02       		.byte	0x2
 4095 07a7 23       		.byte	0x23
 4096 07a8 20       		.uleb128 0x20
 4097 07a9 17       		.uleb128 0x17
 4098 07aa 43535200 		.ascii	"CSR\000"
 4099 07ae 0A       		.byte	0xa
 4100 07af 3F04     		.2byte	0x43f
 4101 07b1 11       		.byte	0x11
 4102 07b2 C8000000 		.4byte	0xc8
 4103 07b6 02       		.byte	0x2
 4104 07b7 23       		.byte	0x23
 4105 07b8 24       		.uleb128 0x24
 4106 07b9 18       		.uleb128 0x18
 4107 07ba 96050000 		.4byte	.LASF123
 4108 07be 0A       		.byte	0xa
 4109 07bf 4004     		.2byte	0x440
 4110 07c1 11       		.byte	0x11
 4111 07c2 C8000000 		.4byte	0xc8
 4112 07c6 02       		.byte	0x2
 4113 07c7 23       		.byte	0x23
 4114 07c8 28       		.uleb128 0x28
 4115 07c9 18       		.uleb128 0x18
 4116 07ca 73060000 		.4byte	.LASF124
 4117 07ce 0A       		.byte	0xa
 4118 07cf 4104     		.2byte	0x441
 4119 07d1 11       		.byte	0x11
 4120 07d2 C8000000 		.4byte	0xc8
 4121 07d6 02       		.byte	0x2
 4122 07d7 23       		.byte	0x23
 4123 07d8 2C       		.uleb128 0x2c
 4124 07d9 00       		.byte	0
 4125 07da 0E       		.uleb128 0xe
 4126 07db 1B090000 		.4byte	.LASF125
 4127 07df 0A       		.byte	0xa
 4128 07e0 4204     		.2byte	0x442
 4129 07e2 03       		.byte	0x3
 4130 07e3 10070000 		.4byte	0x710
 4131 07e7 16       		.uleb128 0x16
 4132 07e8 50       		.byte	0x50
 4133 07e9 0A       		.byte	0xa
 4134 07ea 9A04     		.2byte	0x49a
 4135 07ec 09       		.byte	0x9
 4136 07ed 710A0000 		.4byte	0xa71
 4137 07f1 17       		.uleb128 0x17
 4138 07f2 43523100 		.ascii	"CR1\000"
 4139 07f6 0A       		.byte	0xa
 4140 07f7 9C04     		.2byte	0x49c
 4141 07f9 11       		.byte	0x11
 4142 07fa B7000000 		.4byte	0xb7
ARM GAS  /tmp/cc4r6sqw.s 			page 95


 4143 07fe 02       		.byte	0x2
 4144 07ff 23       		.byte	0x23
 4145 0800 00       		.uleb128 0
 4146 0801 18       		.uleb128 0x18
 4147 0802 28020000 		.4byte	.LASF73
 4148 0806 0A       		.byte	0xa
 4149 0807 9D04     		.2byte	0x49d
 4150 0809 0D       		.byte	0xd
 4151 080a AB000000 		.4byte	0xab
 4152 080e 02       		.byte	0x2
 4153 080f 23       		.byte	0x23
 4154 0810 02       		.uleb128 0x2
 4155 0811 17       		.uleb128 0x17
 4156 0812 43523200 		.ascii	"CR2\000"
 4157 0816 0A       		.byte	0xa
 4158 0817 9E04     		.2byte	0x49e
 4159 0819 11       		.byte	0x11
 4160 081a B7000000 		.4byte	0xb7
 4161 081e 02       		.byte	0x2
 4162 081f 23       		.byte	0x23
 4163 0820 04       		.uleb128 0x4
 4164 0821 18       		.uleb128 0x18
 4165 0822 32020000 		.4byte	.LASF126
 4166 0826 0A       		.byte	0xa
 4167 0827 9F04     		.2byte	0x49f
 4168 0829 0D       		.byte	0xd
 4169 082a AB000000 		.4byte	0xab
 4170 082e 02       		.byte	0x2
 4171 082f 23       		.byte	0x23
 4172 0830 06       		.uleb128 0x6
 4173 0831 18       		.uleb128 0x18
 4174 0832 48080000 		.4byte	.LASF127
 4175 0836 0A       		.byte	0xa
 4176 0837 A004     		.2byte	0x4a0
 4177 0839 11       		.byte	0x11
 4178 083a B7000000 		.4byte	0xb7
 4179 083e 02       		.byte	0x2
 4180 083f 23       		.byte	0x23
 4181 0840 08       		.uleb128 0x8
 4182 0841 18       		.uleb128 0x18
 4183 0842 F8020000 		.4byte	.LASF77
 4184 0846 0A       		.byte	0xa
 4185 0847 A104     		.2byte	0x4a1
 4186 0849 0D       		.byte	0xd
 4187 084a AB000000 		.4byte	0xab
 4188 084e 02       		.byte	0x2
 4189 084f 23       		.byte	0x23
 4190 0850 0A       		.uleb128 0xa
 4191 0851 18       		.uleb128 0x18
 4192 0852 24050000 		.4byte	.LASF128
 4193 0856 0A       		.byte	0xa
 4194 0857 A204     		.2byte	0x4a2
 4195 0859 11       		.byte	0x11
 4196 085a B7000000 		.4byte	0xb7
 4197 085e 02       		.byte	0x2
 4198 085f 23       		.byte	0x23
 4199 0860 0C       		.uleb128 0xc
ARM GAS  /tmp/cc4r6sqw.s 			page 96


 4200 0861 18       		.uleb128 0x18
 4201 0862 4A020000 		.4byte	.LASF79
 4202 0866 0A       		.byte	0xa
 4203 0867 A304     		.2byte	0x4a3
 4204 0869 0D       		.byte	0xd
 4205 086a AB000000 		.4byte	0xab
 4206 086e 02       		.byte	0x2
 4207 086f 23       		.byte	0x23
 4208 0870 0E       		.uleb128 0xe
 4209 0871 17       		.uleb128 0x17
 4210 0872 535200   		.ascii	"SR\000"
 4211 0875 0A       		.byte	0xa
 4212 0876 A404     		.2byte	0x4a4
 4213 0878 11       		.byte	0x11
 4214 0879 B7000000 		.4byte	0xb7
 4215 087d 02       		.byte	0x2
 4216 087e 23       		.byte	0x23
 4217 087f 10       		.uleb128 0x10
 4218 0880 18       		.uleb128 0x18
 4219 0881 54020000 		.4byte	.LASF81
 4220 0885 0A       		.byte	0xa
 4221 0886 A504     		.2byte	0x4a5
 4222 0888 0D       		.byte	0xd
 4223 0889 AB000000 		.4byte	0xab
 4224 088d 02       		.byte	0x2
 4225 088e 23       		.byte	0x23
 4226 088f 12       		.uleb128 0x12
 4227 0890 17       		.uleb128 0x17
 4228 0891 45475200 		.ascii	"EGR\000"
 4229 0895 0A       		.byte	0xa
 4230 0896 A604     		.2byte	0x4a6
 4231 0898 11       		.byte	0x11
 4232 0899 B7000000 		.4byte	0xb7
 4233 089d 02       		.byte	0x2
 4234 089e 23       		.byte	0x23
 4235 089f 14       		.uleb128 0x14
 4236 08a0 18       		.uleb128 0x18
 4237 08a1 5E020000 		.4byte	.LASF82
 4238 08a5 0A       		.byte	0xa
 4239 08a6 A704     		.2byte	0x4a7
 4240 08a8 0D       		.byte	0xd
 4241 08a9 AB000000 		.4byte	0xab
 4242 08ad 02       		.byte	0x2
 4243 08ae 23       		.byte	0x23
 4244 08af 16       		.uleb128 0x16
 4245 08b0 18       		.uleb128 0x18
 4246 08b1 1F030000 		.4byte	.LASF129
 4247 08b5 0A       		.byte	0xa
 4248 08b6 A804     		.2byte	0x4a8
 4249 08b8 11       		.byte	0x11
 4250 08b9 B7000000 		.4byte	0xb7
 4251 08bd 02       		.byte	0x2
 4252 08be 23       		.byte	0x23
 4253 08bf 18       		.uleb128 0x18
 4254 08c0 18       		.uleb128 0x18
 4255 08c1 68020000 		.4byte	.LASF130
 4256 08c5 0A       		.byte	0xa
ARM GAS  /tmp/cc4r6sqw.s 			page 97


 4257 08c6 A904     		.2byte	0x4a9
 4258 08c8 0D       		.byte	0xd
 4259 08c9 AB000000 		.4byte	0xab
 4260 08cd 02       		.byte	0x2
 4261 08ce 23       		.byte	0x23
 4262 08cf 1A       		.uleb128 0x1a
 4263 08d0 18       		.uleb128 0x18
 4264 08d1 93060000 		.4byte	.LASF131
 4265 08d5 0A       		.byte	0xa
 4266 08d6 AA04     		.2byte	0x4aa
 4267 08d8 11       		.byte	0x11
 4268 08d9 B7000000 		.4byte	0xb7
 4269 08dd 02       		.byte	0x2
 4270 08de 23       		.byte	0x23
 4271 08df 1C       		.uleb128 0x1c
 4272 08e0 18       		.uleb128 0x18
 4273 08e1 72020000 		.4byte	.LASF132
 4274 08e5 0A       		.byte	0xa
 4275 08e6 AB04     		.2byte	0x4ab
 4276 08e8 0D       		.byte	0xd
 4277 08e9 AB000000 		.4byte	0xab
 4278 08ed 02       		.byte	0x2
 4279 08ee 23       		.byte	0x23
 4280 08ef 1E       		.uleb128 0x1e
 4281 08f0 18       		.uleb128 0x18
 4282 08f1 82070000 		.4byte	.LASF133
 4283 08f5 0A       		.byte	0xa
 4284 08f6 AC04     		.2byte	0x4ac
 4285 08f8 11       		.byte	0x11
 4286 08f9 B7000000 		.4byte	0xb7
 4287 08fd 02       		.byte	0x2
 4288 08fe 23       		.byte	0x23
 4289 08ff 20       		.uleb128 0x20
 4290 0900 18       		.uleb128 0x18
 4291 0901 7C020000 		.4byte	.LASF134
 4292 0905 0A       		.byte	0xa
 4293 0906 AD04     		.2byte	0x4ad
 4294 0908 0D       		.byte	0xd
 4295 0909 AB000000 		.4byte	0xab
 4296 090d 02       		.byte	0x2
 4297 090e 23       		.byte	0x23
 4298 090f 22       		.uleb128 0x22
 4299 0910 17       		.uleb128 0x17
 4300 0911 434E5400 		.ascii	"CNT\000"
 4301 0915 0A       		.byte	0xa
 4302 0916 AE04     		.2byte	0x4ae
 4303 0918 11       		.byte	0x11
 4304 0919 B7000000 		.4byte	0xb7
 4305 091d 02       		.byte	0x2
 4306 091e 23       		.byte	0x23
 4307 091f 24       		.uleb128 0x24
 4308 0920 18       		.uleb128 0x18
 4309 0921 86020000 		.4byte	.LASF135
 4310 0925 0A       		.byte	0xa
 4311 0926 AF04     		.2byte	0x4af
 4312 0928 0D       		.byte	0xd
 4313 0929 AB000000 		.4byte	0xab
ARM GAS  /tmp/cc4r6sqw.s 			page 98


 4314 092d 02       		.byte	0x2
 4315 092e 23       		.byte	0x23
 4316 092f 26       		.uleb128 0x26
 4317 0930 17       		.uleb128 0x17
 4318 0931 50534300 		.ascii	"PSC\000"
 4319 0935 0A       		.byte	0xa
 4320 0936 B004     		.2byte	0x4b0
 4321 0938 11       		.byte	0x11
 4322 0939 B7000000 		.4byte	0xb7
 4323 093d 02       		.byte	0x2
 4324 093e 23       		.byte	0x23
 4325 093f 28       		.uleb128 0x28
 4326 0940 18       		.uleb128 0x18
 4327 0941 450B0000 		.4byte	.LASF136
 4328 0945 0A       		.byte	0xa
 4329 0946 B104     		.2byte	0x4b1
 4330 0948 0D       		.byte	0xd
 4331 0949 AB000000 		.4byte	0xab
 4332 094d 02       		.byte	0x2
 4333 094e 23       		.byte	0x23
 4334 094f 2A       		.uleb128 0x2a
 4335 0950 17       		.uleb128 0x17
 4336 0951 41525200 		.ascii	"ARR\000"
 4337 0955 0A       		.byte	0xa
 4338 0956 B204     		.2byte	0x4b2
 4339 0958 11       		.byte	0x11
 4340 0959 B7000000 		.4byte	0xb7
 4341 095d 02       		.byte	0x2
 4342 095e 23       		.byte	0x23
 4343 095f 2C       		.uleb128 0x2c
 4344 0960 18       		.uleb128 0x18
 4345 0961 500B0000 		.4byte	.LASF137
 4346 0965 0A       		.byte	0xa
 4347 0966 B304     		.2byte	0x4b3
 4348 0968 0D       		.byte	0xd
 4349 0969 AB000000 		.4byte	0xab
 4350 096d 02       		.byte	0x2
 4351 096e 23       		.byte	0x23
 4352 096f 2E       		.uleb128 0x2e
 4353 0970 17       		.uleb128 0x17
 4354 0971 52435200 		.ascii	"RCR\000"
 4355 0975 0A       		.byte	0xa
 4356 0976 B404     		.2byte	0x4b4
 4357 0978 11       		.byte	0x11
 4358 0979 B7000000 		.4byte	0xb7
 4359 097d 02       		.byte	0x2
 4360 097e 23       		.byte	0x23
 4361 097f 30       		.uleb128 0x30
 4362 0980 18       		.uleb128 0x18
 4363 0981 87070000 		.4byte	.LASF138
 4364 0985 0A       		.byte	0xa
 4365 0986 B504     		.2byte	0x4b5
 4366 0988 0D       		.byte	0xd
 4367 0989 AB000000 		.4byte	0xab
 4368 098d 02       		.byte	0x2
 4369 098e 23       		.byte	0x23
 4370 098f 32       		.uleb128 0x32
ARM GAS  /tmp/cc4r6sqw.s 			page 99


 4371 0990 18       		.uleb128 0x18
 4372 0991 F7000000 		.4byte	.LASF139
 4373 0995 0A       		.byte	0xa
 4374 0996 B604     		.2byte	0x4b6
 4375 0998 11       		.byte	0x11
 4376 0999 B7000000 		.4byte	0xb7
 4377 099d 02       		.byte	0x2
 4378 099e 23       		.byte	0x23
 4379 099f 34       		.uleb128 0x34
 4380 09a0 18       		.uleb128 0x18
 4381 09a1 8E010000 		.4byte	.LASF140
 4382 09a5 0A       		.byte	0xa
 4383 09a6 B704     		.2byte	0x4b7
 4384 09a8 0D       		.byte	0xd
 4385 09a9 AB000000 		.4byte	0xab
 4386 09ad 02       		.byte	0x2
 4387 09ae 23       		.byte	0x23
 4388 09af 36       		.uleb128 0x36
 4389 09b0 18       		.uleb128 0x18
 4390 09b1 FC000000 		.4byte	.LASF141
 4391 09b5 0A       		.byte	0xa
 4392 09b6 B804     		.2byte	0x4b8
 4393 09b8 11       		.byte	0x11
 4394 09b9 B7000000 		.4byte	0xb7
 4395 09bd 02       		.byte	0x2
 4396 09be 23       		.byte	0x23
 4397 09bf 38       		.uleb128 0x38
 4398 09c0 18       		.uleb128 0x18
 4399 09c1 9E070000 		.4byte	.LASF142
 4400 09c5 0A       		.byte	0xa
 4401 09c6 B904     		.2byte	0x4b9
 4402 09c8 0D       		.byte	0xd
 4403 09c9 AB000000 		.4byte	0xab
 4404 09cd 02       		.byte	0x2
 4405 09ce 23       		.byte	0x23
 4406 09cf 3A       		.uleb128 0x3a
 4407 09d0 18       		.uleb128 0x18
 4408 09d1 01010000 		.4byte	.LASF143
 4409 09d5 0A       		.byte	0xa
 4410 09d6 BA04     		.2byte	0x4ba
 4411 09d8 11       		.byte	0x11
 4412 09d9 B7000000 		.4byte	0xb7
 4413 09dd 02       		.byte	0x2
 4414 09de 23       		.byte	0x23
 4415 09df 3C       		.uleb128 0x3c
 4416 09e0 18       		.uleb128 0x18
 4417 09e1 A9070000 		.4byte	.LASF144
 4418 09e5 0A       		.byte	0xa
 4419 09e6 BB04     		.2byte	0x4bb
 4420 09e8 0D       		.byte	0xd
 4421 09e9 AB000000 		.4byte	0xab
 4422 09ed 02       		.byte	0x2
 4423 09ee 23       		.byte	0x23
 4424 09ef 3E       		.uleb128 0x3e
 4425 09f0 18       		.uleb128 0x18
 4426 09f1 06010000 		.4byte	.LASF145
 4427 09f5 0A       		.byte	0xa
ARM GAS  /tmp/cc4r6sqw.s 			page 100


 4428 09f6 BC04     		.2byte	0x4bc
 4429 09f8 11       		.byte	0x11
 4430 09f9 B7000000 		.4byte	0xb7
 4431 09fd 02       		.byte	0x2
 4432 09fe 23       		.byte	0x23
 4433 09ff 40       		.uleb128 0x40
 4434 0a00 18       		.uleb128 0x18
 4435 0a01 B4070000 		.4byte	.LASF146
 4436 0a05 0A       		.byte	0xa
 4437 0a06 BD04     		.2byte	0x4bd
 4438 0a08 0D       		.byte	0xd
 4439 0a09 AB000000 		.4byte	0xab
 4440 0a0d 02       		.byte	0x2
 4441 0a0e 23       		.byte	0x23
 4442 0a0f 42       		.uleb128 0x42
 4443 0a10 18       		.uleb128 0x18
 4444 0a11 AB0A0000 		.4byte	.LASF147
 4445 0a15 0A       		.byte	0xa
 4446 0a16 BE04     		.2byte	0x4be
 4447 0a18 11       		.byte	0x11
 4448 0a19 B7000000 		.4byte	0xb7
 4449 0a1d 02       		.byte	0x2
 4450 0a1e 23       		.byte	0x23
 4451 0a1f 44       		.uleb128 0x44
 4452 0a20 18       		.uleb128 0x18
 4453 0a21 BF070000 		.4byte	.LASF148
 4454 0a25 0A       		.byte	0xa
 4455 0a26 BF04     		.2byte	0x4bf
 4456 0a28 0D       		.byte	0xd
 4457 0a29 AB000000 		.4byte	0xab
 4458 0a2d 02       		.byte	0x2
 4459 0a2e 23       		.byte	0x23
 4460 0a2f 46       		.uleb128 0x46
 4461 0a30 17       		.uleb128 0x17
 4462 0a31 44435200 		.ascii	"DCR\000"
 4463 0a35 0A       		.byte	0xa
 4464 0a36 C004     		.2byte	0x4c0
 4465 0a38 11       		.byte	0x11
 4466 0a39 B7000000 		.4byte	0xb7
 4467 0a3d 02       		.byte	0x2
 4468 0a3e 23       		.byte	0x23
 4469 0a3f 48       		.uleb128 0x48
 4470 0a40 18       		.uleb128 0x18
 4471 0a41 CA070000 		.4byte	.LASF149
 4472 0a45 0A       		.byte	0xa
 4473 0a46 C104     		.2byte	0x4c1
 4474 0a48 0D       		.byte	0xd
 4475 0a49 AB000000 		.4byte	0xab
 4476 0a4d 02       		.byte	0x2
 4477 0a4e 23       		.byte	0x23
 4478 0a4f 4A       		.uleb128 0x4a
 4479 0a50 18       		.uleb128 0x18
 4480 0a51 ED000000 		.4byte	.LASF150
 4481 0a55 0A       		.byte	0xa
 4482 0a56 C204     		.2byte	0x4c2
 4483 0a58 11       		.byte	0x11
 4484 0a59 B7000000 		.4byte	0xb7
ARM GAS  /tmp/cc4r6sqw.s 			page 101


 4485 0a5d 02       		.byte	0x2
 4486 0a5e 23       		.byte	0x23
 4487 0a5f 4C       		.uleb128 0x4c
 4488 0a60 18       		.uleb128 0x18
 4489 0a61 D5070000 		.4byte	.LASF151
 4490 0a65 0A       		.byte	0xa
 4491 0a66 C304     		.2byte	0x4c3
 4492 0a68 0D       		.byte	0xd
 4493 0a69 AB000000 		.4byte	0xab
 4494 0a6d 02       		.byte	0x2
 4495 0a6e 23       		.byte	0x23
 4496 0a6f 4E       		.uleb128 0x4e
 4497 0a70 00       		.byte	0
 4498 0a71 0E       		.uleb128 0xe
 4499 0a72 1C020000 		.4byte	.LASF152
 4500 0a76 0A       		.byte	0xa
 4501 0a77 C404     		.2byte	0x4c4
 4502 0a79 03       		.byte	0x3
 4503 0a7a E7070000 		.4byte	0x7e7
 4504 0a7e 16       		.uleb128 0x16
 4505 0a7f 1C       		.byte	0x1c
 4506 0a80 0A       		.byte	0xa
 4507 0a81 CA04     		.2byte	0x4ca
 4508 0a83 09       		.byte	0x9
 4509 0a84 670B0000 		.4byte	0xb67
 4510 0a88 17       		.uleb128 0x17
 4511 0a89 535200   		.ascii	"SR\000"
 4512 0a8c 0A       		.byte	0xa
 4513 0a8d CC04     		.2byte	0x4cc
 4514 0a8f 11       		.byte	0x11
 4515 0a90 B7000000 		.4byte	0xb7
 4516 0a94 02       		.byte	0x2
 4517 0a95 23       		.byte	0x23
 4518 0a96 00       		.uleb128 0
 4519 0a97 18       		.uleb128 0x18
 4520 0a98 28020000 		.4byte	.LASF73
 4521 0a9c 0A       		.byte	0xa
 4522 0a9d CD04     		.2byte	0x4cd
 4523 0a9f 0D       		.byte	0xd
 4524 0aa0 AB000000 		.4byte	0xab
 4525 0aa4 02       		.byte	0x2
 4526 0aa5 23       		.byte	0x23
 4527 0aa6 02       		.uleb128 0x2
 4528 0aa7 17       		.uleb128 0x17
 4529 0aa8 445200   		.ascii	"DR\000"
 4530 0aab 0A       		.byte	0xa
 4531 0aac CE04     		.2byte	0x4ce
 4532 0aae 11       		.byte	0x11
 4533 0aaf B7000000 		.4byte	0xb7
 4534 0ab3 02       		.byte	0x2
 4535 0ab4 23       		.byte	0x23
 4536 0ab5 04       		.uleb128 0x4
 4537 0ab6 18       		.uleb128 0x18
 4538 0ab7 32020000 		.4byte	.LASF126
 4539 0abb 0A       		.byte	0xa
 4540 0abc CF04     		.2byte	0x4cf
 4541 0abe 0D       		.byte	0xd
ARM GAS  /tmp/cc4r6sqw.s 			page 102


 4542 0abf AB000000 		.4byte	0xab
 4543 0ac3 02       		.byte	0x2
 4544 0ac4 23       		.byte	0x23
 4545 0ac5 06       		.uleb128 0x6
 4546 0ac6 17       		.uleb128 0x17
 4547 0ac7 42525200 		.ascii	"BRR\000"
 4548 0acb 0A       		.byte	0xa
 4549 0acc D004     		.2byte	0x4d0
 4550 0ace 11       		.byte	0x11
 4551 0acf B7000000 		.4byte	0xb7
 4552 0ad3 02       		.byte	0x2
 4553 0ad4 23       		.byte	0x23
 4554 0ad5 08       		.uleb128 0x8
 4555 0ad6 18       		.uleb128 0x18
 4556 0ad7 F8020000 		.4byte	.LASF77
 4557 0adb 0A       		.byte	0xa
 4558 0adc D104     		.2byte	0x4d1
 4559 0ade 0D       		.byte	0xd
 4560 0adf AB000000 		.4byte	0xab
 4561 0ae3 02       		.byte	0x2
 4562 0ae4 23       		.byte	0x23
 4563 0ae5 0A       		.uleb128 0xa
 4564 0ae6 17       		.uleb128 0x17
 4565 0ae7 43523100 		.ascii	"CR1\000"
 4566 0aeb 0A       		.byte	0xa
 4567 0aec D204     		.2byte	0x4d2
 4568 0aee 11       		.byte	0x11
 4569 0aef B7000000 		.4byte	0xb7
 4570 0af3 02       		.byte	0x2
 4571 0af4 23       		.byte	0x23
 4572 0af5 0C       		.uleb128 0xc
 4573 0af6 18       		.uleb128 0x18
 4574 0af7 4A020000 		.4byte	.LASF79
 4575 0afb 0A       		.byte	0xa
 4576 0afc D304     		.2byte	0x4d3
 4577 0afe 0D       		.byte	0xd
 4578 0aff AB000000 		.4byte	0xab
 4579 0b03 02       		.byte	0x2
 4580 0b04 23       		.byte	0x23
 4581 0b05 0E       		.uleb128 0xe
 4582 0b06 17       		.uleb128 0x17
 4583 0b07 43523200 		.ascii	"CR2\000"
 4584 0b0b 0A       		.byte	0xa
 4585 0b0c D404     		.2byte	0x4d4
 4586 0b0e 11       		.byte	0x11
 4587 0b0f B7000000 		.4byte	0xb7
 4588 0b13 02       		.byte	0x2
 4589 0b14 23       		.byte	0x23
 4590 0b15 10       		.uleb128 0x10
 4591 0b16 18       		.uleb128 0x18
 4592 0b17 54020000 		.4byte	.LASF81
 4593 0b1b 0A       		.byte	0xa
 4594 0b1c D504     		.2byte	0x4d5
 4595 0b1e 0D       		.byte	0xd
 4596 0b1f AB000000 		.4byte	0xab
 4597 0b23 02       		.byte	0x2
 4598 0b24 23       		.byte	0x23
ARM GAS  /tmp/cc4r6sqw.s 			page 103


 4599 0b25 12       		.uleb128 0x12
 4600 0b26 17       		.uleb128 0x17
 4601 0b27 43523300 		.ascii	"CR3\000"
 4602 0b2b 0A       		.byte	0xa
 4603 0b2c D604     		.2byte	0x4d6
 4604 0b2e 11       		.byte	0x11
 4605 0b2f B7000000 		.4byte	0xb7
 4606 0b33 02       		.byte	0x2
 4607 0b34 23       		.byte	0x23
 4608 0b35 14       		.uleb128 0x14
 4609 0b36 18       		.uleb128 0x18
 4610 0b37 5E020000 		.4byte	.LASF82
 4611 0b3b 0A       		.byte	0xa
 4612 0b3c D704     		.2byte	0x4d7
 4613 0b3e 0D       		.byte	0xd
 4614 0b3f AB000000 		.4byte	0xab
 4615 0b43 02       		.byte	0x2
 4616 0b44 23       		.byte	0x23
 4617 0b45 16       		.uleb128 0x16
 4618 0b46 18       		.uleb128 0x18
 4619 0b47 82000000 		.4byte	.LASF153
 4620 0b4b 0A       		.byte	0xa
 4621 0b4c D804     		.2byte	0x4d8
 4622 0b4e 11       		.byte	0x11
 4623 0b4f B7000000 		.4byte	0xb7
 4624 0b53 02       		.byte	0x2
 4625 0b54 23       		.byte	0x23
 4626 0b55 18       		.uleb128 0x18
 4627 0b56 18       		.uleb128 0x18
 4628 0b57 68020000 		.4byte	.LASF130
 4629 0b5b 0A       		.byte	0xa
 4630 0b5c D904     		.2byte	0x4d9
 4631 0b5e 0D       		.byte	0xd
 4632 0b5f AB000000 		.4byte	0xab
 4633 0b63 02       		.byte	0x2
 4634 0b64 23       		.byte	0x23
 4635 0b65 1A       		.uleb128 0x1a
 4636 0b66 00       		.byte	0
 4637 0b67 0E       		.uleb128 0xe
 4638 0b68 B1030000 		.4byte	.LASF154
 4639 0b6c 0A       		.byte	0xa
 4640 0b6d DA04     		.2byte	0x4da
 4641 0b6f 03       		.byte	0x3
 4642 0b70 7E0A0000 		.4byte	0xa7e
 4643 0b74 19       		.uleb128 0x19
 4644 0b75 07       		.byte	0x7
 4645 0b76 01       		.byte	0x1
 4646 0b77 58000000 		.4byte	0x58
 4647 0b7b 0C       		.byte	0xc
 4648 0b7c 3B       		.byte	0x3b
 4649 0b7d 01       		.byte	0x1
 4650 0b7e 950B0000 		.4byte	0xb95
 4651 0b82 0D       		.uleb128 0xd
 4652 0b83 160B0000 		.4byte	.LASF155
 4653 0b87 01       		.byte	0x1
 4654 0b88 0D       		.uleb128 0xd
 4655 0b89 A6080000 		.4byte	.LASF156
ARM GAS  /tmp/cc4r6sqw.s 			page 104


 4656 0b8d 02       		.byte	0x2
 4657 0b8e 0D       		.uleb128 0xd
 4658 0b8f 9A030000 		.4byte	.LASF157
 4659 0b93 03       		.byte	0x3
 4660 0b94 00       		.byte	0
 4661 0b95 04       		.uleb128 0x4
 4662 0b96 B6080000 		.4byte	.LASF158
 4663 0b9a 0C       		.byte	0xc
 4664 0b9b 3F       		.byte	0x3f
 4665 0b9c 02       		.byte	0x2
 4666 0b9d 740B0000 		.4byte	0xb74
 4667 0ba1 19       		.uleb128 0x19
 4668 0ba2 07       		.byte	0x7
 4669 0ba3 01       		.byte	0x1
 4670 0ba4 58000000 		.4byte	0x58
 4671 0ba8 0C       		.byte	0xc
 4672 0ba9 48       		.byte	0x48
 4673 0baa 01       		.byte	0x1
 4674 0bab E00B0000 		.4byte	0xbe0
 4675 0baf 0D       		.uleb128 0xd
 4676 0bb0 56010000 		.4byte	.LASF159
 4677 0bb4 00       		.byte	0
 4678 0bb5 0D       		.uleb128 0xd
 4679 0bb6 3A090000 		.4byte	.LASF160
 4680 0bba 04       		.byte	0x4
 4681 0bbb 0D       		.uleb128 0xd
 4682 0bbc 520C0000 		.4byte	.LASF161
 4683 0bc0 28       		.byte	0x28
 4684 0bc1 0D       		.uleb128 0xd
 4685 0bc2 28000000 		.4byte	.LASF162
 4686 0bc6 48       		.byte	0x48
 4687 0bc7 0D       		.uleb128 0xd
 4688 0bc8 5F030000 		.4byte	.LASF163
 4689 0bcc 14       		.byte	0x14
 4690 0bcd 0D       		.uleb128 0xd
 4691 0bce 82040000 		.4byte	.LASF164
 4692 0bd2 10       		.byte	0x10
 4693 0bd3 0D       		.uleb128 0xd
 4694 0bd4 B5010000 		.4byte	.LASF165
 4695 0bd8 1C       		.byte	0x1c
 4696 0bd9 0D       		.uleb128 0xd
 4697 0bda 90020000 		.4byte	.LASF166
 4698 0bde 18       		.byte	0x18
 4699 0bdf 00       		.byte	0
 4700 0be0 04       		.uleb128 0x4
 4701 0be1 4D080000 		.4byte	.LASF167
 4702 0be5 0C       		.byte	0xc
 4703 0be6 50       		.byte	0x50
 4704 0be7 02       		.byte	0x2
 4705 0be8 A10B0000 		.4byte	0xba1
 4706 0bec 1A       		.uleb128 0x1a
 4707 0bed 04       		.byte	0x4
 4708 0bee 0C       		.byte	0xc
 4709 0bef 5B       		.byte	0x5b
 4710 0bf0 09       		.byte	0x9
 4711 0bf1 230C0000 		.4byte	0xc23
 4712 0bf5 10       		.uleb128 0x10
ARM GAS  /tmp/cc4r6sqw.s 			page 105


 4713 0bf6 DA080000 		.4byte	.LASF168
 4714 0bfa 0C       		.byte	0xc
 4715 0bfb 5D       		.byte	0x5d
 4716 0bfc 0C       		.byte	0xc
 4717 0bfd AB000000 		.4byte	0xab
 4718 0c01 02       		.byte	0x2
 4719 0c02 23       		.byte	0x23
 4720 0c03 00       		.uleb128 0
 4721 0c04 10       		.uleb128 0x10
 4722 0c05 1F010000 		.4byte	.LASF169
 4723 0c09 0C       		.byte	0xc
 4724 0c0a 60       		.byte	0x60
 4725 0c0b 15       		.byte	0x15
 4726 0c0c 950B0000 		.4byte	0xb95
 4727 0c10 02       		.byte	0x2
 4728 0c11 23       		.byte	0x23
 4729 0c12 02       		.uleb128 0x2
 4730 0c13 10       		.uleb128 0x10
 4731 0c14 0D080000 		.4byte	.LASF170
 4732 0c18 0C       		.byte	0xc
 4733 0c19 63       		.byte	0x63
 4734 0c1a 14       		.byte	0x14
 4735 0c1b E00B0000 		.4byte	0xbe0
 4736 0c1f 02       		.byte	0x2
 4737 0c20 23       		.byte	0x23
 4738 0c21 03       		.uleb128 0x3
 4739 0c22 00       		.byte	0
 4740 0c23 04       		.uleb128 0x4
 4741 0c24 05020000 		.4byte	.LASF171
 4742 0c28 0C       		.byte	0xc
 4743 0c29 65       		.byte	0x65
 4744 0c2a 02       		.byte	0x2
 4745 0c2b EC0B0000 		.4byte	0xbec
 4746 0c2f 1A       		.uleb128 0x1a
 4747 0c30 10       		.byte	0x10
 4748 0c31 0D       		.byte	0xd
 4749 0c32 32       		.byte	0x32
 4750 0c33 09       		.byte	0x9
 4751 0c34 930C0000 		.4byte	0xc93
 4752 0c38 10       		.uleb128 0x10
 4753 0c39 4B040000 		.4byte	.LASF172
 4754 0c3d 0D       		.byte	0xd
 4755 0c3e 34       		.byte	0x34
 4756 0c3f 0C       		.byte	0xc
 4757 0c40 BC000000 		.4byte	0xbc
 4758 0c44 02       		.byte	0x2
 4759 0c45 23       		.byte	0x23
 4760 0c46 00       		.uleb128 0
 4761 0c47 10       		.uleb128 0x10
 4762 0c48 A5020000 		.4byte	.LASF173
 4763 0c4c 0D       		.byte	0xd
 4764 0c4d 39       		.byte	0x39
 4765 0c4e 0C       		.byte	0xc
 4766 0c4f AB000000 		.4byte	0xab
 4767 0c53 02       		.byte	0x2
 4768 0c54 23       		.byte	0x23
 4769 0c55 04       		.uleb128 0x4
ARM GAS  /tmp/cc4r6sqw.s 			page 106


 4770 0c56 10       		.uleb128 0x10
 4771 0c57 70050000 		.4byte	.LASF174
 4772 0c5b 0D       		.byte	0xd
 4773 0c5c 3C       		.byte	0x3c
 4774 0c5d 0C       		.byte	0xc
 4775 0c5e AB000000 		.4byte	0xab
 4776 0c62 02       		.byte	0x2
 4777 0c63 23       		.byte	0x23
 4778 0c64 06       		.uleb128 0x6
 4779 0c65 10       		.uleb128 0x10
 4780 0c66 02030000 		.4byte	.LASF175
 4781 0c6a 0D       		.byte	0xd
 4782 0c6b 3F       		.byte	0x3f
 4783 0c6c 0C       		.byte	0xc
 4784 0c6d AB000000 		.4byte	0xab
 4785 0c71 02       		.byte	0x2
 4786 0c72 23       		.byte	0x23
 4787 0c73 08       		.uleb128 0x8
 4788 0c74 10       		.uleb128 0x10
 4789 0c75 5F040000 		.4byte	.LASF176
 4790 0c79 0D       		.byte	0xd
 4791 0c7a 46       		.byte	0x46
 4792 0c7b 0C       		.byte	0xc
 4793 0c7c AB000000 		.4byte	0xab
 4794 0c80 02       		.byte	0x2
 4795 0c81 23       		.byte	0x23
 4796 0c82 0A       		.uleb128 0xa
 4797 0c83 10       		.uleb128 0x10
 4798 0c84 E00A0000 		.4byte	.LASF177
 4799 0c88 0D       		.byte	0xd
 4800 0c89 49       		.byte	0x49
 4801 0c8a 0C       		.byte	0xc
 4802 0c8b AB000000 		.4byte	0xab
 4803 0c8f 02       		.byte	0x2
 4804 0c90 23       		.byte	0x23
 4805 0c91 0C       		.uleb128 0xc
 4806 0c92 00       		.byte	0
 4807 0c93 04       		.uleb128 0x4
 4808 0c94 6E080000 		.4byte	.LASF178
 4809 0c98 0D       		.byte	0xd
 4810 0c99 4C       		.byte	0x4c
 4811 0c9a 03       		.byte	0x3
 4812 0c9b 2F0C0000 		.4byte	0xc2f
 4813 0c9f 03       		.uleb128 0x3
 4814 0ca0 04       		.byte	0x4
 4815 0ca1 04       		.byte	0x4
 4816 0ca2 49060000 		.4byte	.LASF179
 4817 0ca6 03       		.uleb128 0x3
 4818 0ca7 08       		.byte	0x8
 4819 0ca8 04       		.byte	0x4
 4820 0ca9 0B060000 		.4byte	.LASF180
 4821 0cad 1B       		.uleb128 0x1b
 4822 0cae BF030000 		.4byte	.LASF181
 4823 0cb2 01       		.byte	0x1
 4824 0cb3 3E       		.byte	0x3e
 4825 0cb4 16       		.byte	0x16
 4826 0cb5 EE000000 		.4byte	0xee
ARM GAS  /tmp/cc4r6sqw.s 			page 107


 4827 0cb9 05       		.byte	0x5
 4828 0cba 03       		.byte	0x3
 4829 0cbb 08000000 		.4byte	LCD_Show_queue
 4830 0cbf 1B       		.uleb128 0x1b
 4831 0cc0 240C0000 		.4byte	.LASF182
 4832 0cc4 01       		.byte	0x1
 4833 0cc5 3F       		.byte	0x3f
 4834 0cc6 16       		.byte	0x16
 4835 0cc7 EE000000 		.4byte	0xee
 4836 0ccb 05       		.byte	0x5
 4837 0ccc 03       		.byte	0x3
 4838 0ccd 04000000 		.4byte	STMotor_queue
 4839 0cd1 1B       		.uleb128 0x1b
 4840 0cd2 D4000000 		.4byte	.LASF183
 4841 0cd6 01       		.byte	0x1
 4842 0cd7 40       		.byte	0x40
 4843 0cd8 16       		.byte	0x16
 4844 0cd9 EE000000 		.4byte	0xee
 4845 0cdd 05       		.byte	0x5
 4846 0cde 03       		.byte	0x3
 4847 0cdf 00000000 		.4byte	PWM_data_queue
 4848 0ce3 1C       		.uleb128 0x1c
 4849 0ce4 01       		.byte	0x1
 4850 0ce5 84010000 		.4byte	.LASF198
 4851 0ce9 01       		.byte	0x1
 4852 0cea 4A01     		.2byte	0x14a
 4853 0cec 05       		.byte	0x5
 4854 0ced 01       		.byte	0x1
 4855 0cee 29000000 		.4byte	0x29
 4856 0cf2 00000000 		.4byte	.LFB58
 4857 0cf6 CC000000 		.4byte	.LFE58
 4858 0cfa 00000000 		.4byte	.LLST50
 4859 0cfe 01       		.byte	0x1
 4860 0cff C90E0000 		.4byte	0xec9
 4861 0d03 1D       		.uleb128 0x1d
 4862 0d04 0C000000 		.4byte	.LVL164
 4863 0d08 951B0000 		.4byte	0x1b95
 4864 0d0c 200D0000 		.4byte	0xd20
 4865 0d10 1E       		.uleb128 0x1e
 4866 0d11 01       		.byte	0x1
 4867 0d12 50       		.byte	0x50
 4868 0d13 01       		.byte	0x1
 4869 0d14 32       		.byte	0x32
 4870 0d15 1E       		.uleb128 0x1e
 4871 0d16 01       		.byte	0x1
 4872 0d17 51       		.byte	0x51
 4873 0d18 01       		.byte	0x1
 4874 0d19 34       		.byte	0x34
 4875 0d1a 1E       		.uleb128 0x1e
 4876 0d1b 01       		.byte	0x1
 4877 0d1c 52       		.byte	0x52
 4878 0d1d 01       		.byte	0x1
 4879 0d1e 30       		.byte	0x30
 4880 0d1f 00       		.byte	0
 4881 0d20 1D       		.uleb128 0x1d
 4882 0d21 1A000000 		.4byte	.LVL165
 4883 0d25 951B0000 		.4byte	0x1b95
ARM GAS  /tmp/cc4r6sqw.s 			page 108


 4884 0d29 3D0D0000 		.4byte	0xd3d
 4885 0d2d 1E       		.uleb128 0x1e
 4886 0d2e 01       		.byte	0x1
 4887 0d2f 50       		.byte	0x50
 4888 0d30 01       		.byte	0x1
 4889 0d31 31       		.byte	0x31
 4890 0d32 1E       		.uleb128 0x1e
 4891 0d33 01       		.byte	0x1
 4892 0d34 51       		.byte	0x51
 4893 0d35 01       		.byte	0x1
 4894 0d36 34       		.byte	0x34
 4895 0d37 1E       		.uleb128 0x1e
 4896 0d38 01       		.byte	0x1
 4897 0d39 52       		.byte	0x52
 4898 0d3a 01       		.byte	0x1
 4899 0d3b 30       		.byte	0x30
 4900 0d3c 00       		.byte	0
 4901 0d3d 1D       		.uleb128 0x1d
 4902 0d3e 26000000 		.4byte	.LVL166
 4903 0d42 951B0000 		.4byte	0x1b95
 4904 0d46 5A0D0000 		.4byte	0xd5a
 4905 0d4a 1E       		.uleb128 0x1e
 4906 0d4b 01       		.byte	0x1
 4907 0d4c 50       		.byte	0x50
 4908 0d4d 01       		.byte	0x1
 4909 0d4e 31       		.byte	0x31
 4910 0d4f 1E       		.uleb128 0x1e
 4911 0d50 01       		.byte	0x1
 4912 0d51 51       		.byte	0x51
 4913 0d52 01       		.byte	0x1
 4914 0d53 34       		.byte	0x34
 4915 0d54 1E       		.uleb128 0x1e
 4916 0d55 01       		.byte	0x1
 4917 0d56 52       		.byte	0x52
 4918 0d57 01       		.byte	0x1
 4919 0d58 30       		.byte	0x30
 4920 0d59 00       		.byte	0
 4921 0d5a 1F       		.uleb128 0x1f
 4922 0d5b 30000000 		.4byte	.LVL167
 4923 0d5f BC1A0000 		.4byte	0x1abc
 4924 0d63 1D       		.uleb128 0x1d
 4925 0d64 40000000 		.4byte	.LVL168
 4926 0d68 A41B0000 		.4byte	0x1ba4
 4927 0d6c 9D0D0000 		.4byte	0xd9d
 4928 0d70 1E       		.uleb128 0x1e
 4929 0d71 01       		.byte	0x1
 4930 0d72 50       		.byte	0x50
 4931 0d73 05       		.byte	0x5
 4932 0d74 03       		.byte	0x3
 4933 0d75 00000000 		.4byte	task1
 4934 0d79 1E       		.uleb128 0x1e
 4935 0d7a 01       		.byte	0x1
 4936 0d7b 51       		.byte	0x51
 4937 0d7c 05       		.byte	0x5
 4938 0d7d 03       		.byte	0x3
 4939 0d7e 53000000 		.4byte	.LC7
 4940 0d82 1E       		.uleb128 0x1e
ARM GAS  /tmp/cc4r6sqw.s 			page 109


 4941 0d83 01       		.byte	0x1
 4942 0d84 52       		.byte	0x52
 4943 0d85 02       		.byte	0x2
 4944 0d86 08       		.byte	0x8
 4945 0d87 64       		.byte	0x64
 4946 0d88 1E       		.uleb128 0x1e
 4947 0d89 01       		.byte	0x1
 4948 0d8a 53       		.byte	0x53
 4949 0d8b 02       		.byte	0x2
 4950 0d8c 74       		.byte	0x74
 4951 0d8d 00       		.sleb128 0
 4952 0d8e 1E       		.uleb128 0x1e
 4953 0d8f 02       		.byte	0x2
 4954 0d90 7D       		.byte	0x7d
 4955 0d91 00       		.sleb128 0
 4956 0d92 02       		.byte	0x2
 4957 0d93 75       		.byte	0x75
 4958 0d94 00       		.sleb128 0
 4959 0d95 1E       		.uleb128 0x1e
 4960 0d96 02       		.byte	0x2
 4961 0d97 7D       		.byte	0x7d
 4962 0d98 04       		.sleb128 4
 4963 0d99 02       		.byte	0x2
 4964 0d9a 74       		.byte	0x74
 4965 0d9b 00       		.sleb128 0
 4966 0d9c 00       		.byte	0
 4967 0d9d 1D       		.uleb128 0x1d
 4968 0d9e 50000000 		.4byte	.LVL169
 4969 0da2 A41B0000 		.4byte	0x1ba4
 4970 0da6 D70D0000 		.4byte	0xdd7
 4971 0daa 1E       		.uleb128 0x1e
 4972 0dab 01       		.byte	0x1
 4973 0dac 50       		.byte	0x50
 4974 0dad 05       		.byte	0x5
 4975 0dae 03       		.byte	0x3
 4976 0daf 00000000 		.4byte	task2
 4977 0db3 1E       		.uleb128 0x1e
 4978 0db4 01       		.byte	0x1
 4979 0db5 51       		.byte	0x51
 4980 0db6 05       		.byte	0x5
 4981 0db7 03       		.byte	0x3
 4982 0db8 5C000000 		.4byte	.LC8
 4983 0dbc 1E       		.uleb128 0x1e
 4984 0dbd 01       		.byte	0x1
 4985 0dbe 52       		.byte	0x52
 4986 0dbf 02       		.byte	0x2
 4987 0dc0 08       		.byte	0x8
 4988 0dc1 64       		.byte	0x64
 4989 0dc2 1E       		.uleb128 0x1e
 4990 0dc3 01       		.byte	0x1
 4991 0dc4 53       		.byte	0x53
 4992 0dc5 02       		.byte	0x2
 4993 0dc6 74       		.byte	0x74
 4994 0dc7 00       		.sleb128 0
 4995 0dc8 1E       		.uleb128 0x1e
 4996 0dc9 02       		.byte	0x2
 4997 0dca 7D       		.byte	0x7d
ARM GAS  /tmp/cc4r6sqw.s 			page 110


 4998 0dcb 00       		.sleb128 0
 4999 0dcc 02       		.byte	0x2
 5000 0dcd 75       		.byte	0x75
 5001 0dce 00       		.sleb128 0
 5002 0dcf 1E       		.uleb128 0x1e
 5003 0dd0 02       		.byte	0x2
 5004 0dd1 7D       		.byte	0x7d
 5005 0dd2 04       		.sleb128 4
 5006 0dd3 02       		.byte	0x2
 5007 0dd4 74       		.byte	0x74
 5008 0dd5 00       		.sleb128 0
 5009 0dd6 00       		.byte	0
 5010 0dd7 1D       		.uleb128 0x1d
 5011 0dd8 60000000 		.4byte	.LVL170
 5012 0ddc A41B0000 		.4byte	0x1ba4
 5013 0de0 110E0000 		.4byte	0xe11
 5014 0de4 1E       		.uleb128 0x1e
 5015 0de5 01       		.byte	0x1
 5016 0de6 50       		.byte	0x50
 5017 0de7 05       		.byte	0x5
 5018 0de8 03       		.byte	0x3
 5019 0de9 00000000 		.4byte	task3
 5020 0ded 1E       		.uleb128 0x1e
 5021 0dee 01       		.byte	0x1
 5022 0def 51       		.byte	0x51
 5023 0df0 05       		.byte	0x5
 5024 0df1 03       		.byte	0x3
 5025 0df2 63000000 		.4byte	.LC9
 5026 0df6 1E       		.uleb128 0x1e
 5027 0df7 01       		.byte	0x1
 5028 0df8 52       		.byte	0x52
 5029 0df9 02       		.byte	0x2
 5030 0dfa 08       		.byte	0x8
 5031 0dfb 64       		.byte	0x64
 5032 0dfc 1E       		.uleb128 0x1e
 5033 0dfd 01       		.byte	0x1
 5034 0dfe 53       		.byte	0x53
 5035 0dff 02       		.byte	0x2
 5036 0e00 74       		.byte	0x74
 5037 0e01 00       		.sleb128 0
 5038 0e02 1E       		.uleb128 0x1e
 5039 0e03 02       		.byte	0x2
 5040 0e04 7D       		.byte	0x7d
 5041 0e05 00       		.sleb128 0
 5042 0e06 02       		.byte	0x2
 5043 0e07 75       		.byte	0x75
 5044 0e08 00       		.sleb128 0
 5045 0e09 1E       		.uleb128 0x1e
 5046 0e0a 02       		.byte	0x2
 5047 0e0b 7D       		.byte	0x7d
 5048 0e0c 04       		.sleb128 4
 5049 0e0d 02       		.byte	0x2
 5050 0e0e 74       		.byte	0x74
 5051 0e0f 00       		.sleb128 0
 5052 0e10 00       		.byte	0
 5053 0e11 1D       		.uleb128 0x1d
 5054 0e12 70000000 		.4byte	.LVL171
ARM GAS  /tmp/cc4r6sqw.s 			page 111


 5055 0e16 A41B0000 		.4byte	0x1ba4
 5056 0e1a 4B0E0000 		.4byte	0xe4b
 5057 0e1e 1E       		.uleb128 0x1e
 5058 0e1f 01       		.byte	0x1
 5059 0e20 50       		.byte	0x50
 5060 0e21 05       		.byte	0x5
 5061 0e22 03       		.byte	0x3
 5062 0e23 00000000 		.4byte	task4
 5063 0e27 1E       		.uleb128 0x1e
 5064 0e28 01       		.byte	0x1
 5065 0e29 51       		.byte	0x51
 5066 0e2a 05       		.byte	0x5
 5067 0e2b 03       		.byte	0x3
 5068 0e2c 6D000000 		.4byte	.LC10
 5069 0e30 1E       		.uleb128 0x1e
 5070 0e31 01       		.byte	0x1
 5071 0e32 52       		.byte	0x52
 5072 0e33 02       		.byte	0x2
 5073 0e34 08       		.byte	0x8
 5074 0e35 64       		.byte	0x64
 5075 0e36 1E       		.uleb128 0x1e
 5076 0e37 01       		.byte	0x1
 5077 0e38 53       		.byte	0x53
 5078 0e39 02       		.byte	0x2
 5079 0e3a 74       		.byte	0x74
 5080 0e3b 00       		.sleb128 0
 5081 0e3c 1E       		.uleb128 0x1e
 5082 0e3d 02       		.byte	0x2
 5083 0e3e 7D       		.byte	0x7d
 5084 0e3f 00       		.sleb128 0
 5085 0e40 02       		.byte	0x2
 5086 0e41 75       		.byte	0x75
 5087 0e42 00       		.sleb128 0
 5088 0e43 1E       		.uleb128 0x1e
 5089 0e44 02       		.byte	0x2
 5090 0e45 7D       		.byte	0x7d
 5091 0e46 04       		.sleb128 4
 5092 0e47 02       		.byte	0x2
 5093 0e48 74       		.byte	0x74
 5094 0e49 00       		.sleb128 0
 5095 0e4a 00       		.byte	0
 5096 0e4b 1D       		.uleb128 0x1d
 5097 0e4c 80000000 		.4byte	.LVL172
 5098 0e50 A41B0000 		.4byte	0x1ba4
 5099 0e54 850E0000 		.4byte	0xe85
 5100 0e58 1E       		.uleb128 0x1e
 5101 0e59 01       		.byte	0x1
 5102 0e5a 50       		.byte	0x50
 5103 0e5b 05       		.byte	0x5
 5104 0e5c 03       		.byte	0x3
 5105 0e5d 00000000 		.4byte	task5
 5106 0e61 1E       		.uleb128 0x1e
 5107 0e62 01       		.byte	0x1
 5108 0e63 51       		.byte	0x51
 5109 0e64 05       		.byte	0x5
 5110 0e65 03       		.byte	0x3
 5111 0e66 7A000000 		.4byte	.LC11
ARM GAS  /tmp/cc4r6sqw.s 			page 112


 5112 0e6a 1E       		.uleb128 0x1e
 5113 0e6b 01       		.byte	0x1
 5114 0e6c 52       		.byte	0x52
 5115 0e6d 02       		.byte	0x2
 5116 0e6e 08       		.byte	0x8
 5117 0e6f 64       		.byte	0x64
 5118 0e70 1E       		.uleb128 0x1e
 5119 0e71 01       		.byte	0x1
 5120 0e72 53       		.byte	0x53
 5121 0e73 02       		.byte	0x2
 5122 0e74 74       		.byte	0x74
 5123 0e75 00       		.sleb128 0
 5124 0e76 1E       		.uleb128 0x1e
 5125 0e77 02       		.byte	0x2
 5126 0e78 7D       		.byte	0x7d
 5127 0e79 00       		.sleb128 0
 5128 0e7a 02       		.byte	0x2
 5129 0e7b 75       		.byte	0x75
 5130 0e7c 00       		.sleb128 0
 5131 0e7d 1E       		.uleb128 0x1e
 5132 0e7e 02       		.byte	0x2
 5133 0e7f 7D       		.byte	0x7d
 5134 0e80 04       		.sleb128 4
 5135 0e81 02       		.byte	0x2
 5136 0e82 74       		.byte	0x74
 5137 0e83 00       		.sleb128 0
 5138 0e84 00       		.byte	0
 5139 0e85 1D       		.uleb128 0x1d
 5140 0e86 90000000 		.4byte	.LVL173
 5141 0e8a A41B0000 		.4byte	0x1ba4
 5142 0e8e BF0E0000 		.4byte	0xebf
 5143 0e92 1E       		.uleb128 0x1e
 5144 0e93 01       		.byte	0x1
 5145 0e94 50       		.byte	0x50
 5146 0e95 05       		.byte	0x5
 5147 0e96 03       		.byte	0x3
 5148 0e97 00000000 		.4byte	task6
 5149 0e9b 1E       		.uleb128 0x1e
 5150 0e9c 01       		.byte	0x1
 5151 0e9d 51       		.byte	0x51
 5152 0e9e 05       		.byte	0x5
 5153 0e9f 03       		.byte	0x3
 5154 0ea0 81000000 		.4byte	.LC12
 5155 0ea4 1E       		.uleb128 0x1e
 5156 0ea5 01       		.byte	0x1
 5157 0ea6 52       		.byte	0x52
 5158 0ea7 02       		.byte	0x2
 5159 0ea8 08       		.byte	0x8
 5160 0ea9 64       		.byte	0x64
 5161 0eaa 1E       		.uleb128 0x1e
 5162 0eab 01       		.byte	0x1
 5163 0eac 53       		.byte	0x53
 5164 0ead 02       		.byte	0x2
 5165 0eae 74       		.byte	0x74
 5166 0eaf 00       		.sleb128 0
 5167 0eb0 1E       		.uleb128 0x1e
 5168 0eb1 02       		.byte	0x2
ARM GAS  /tmp/cc4r6sqw.s 			page 113


 5169 0eb2 7D       		.byte	0x7d
 5170 0eb3 00       		.sleb128 0
 5171 0eb4 02       		.byte	0x2
 5172 0eb5 75       		.byte	0x75
 5173 0eb6 00       		.sleb128 0
 5174 0eb7 1E       		.uleb128 0x1e
 5175 0eb8 02       		.byte	0x2
 5176 0eb9 7D       		.byte	0x7d
 5177 0eba 04       		.sleb128 4
 5178 0ebb 02       		.byte	0x2
 5179 0ebc 74       		.byte	0x74
 5180 0ebd 00       		.sleb128 0
 5181 0ebe 00       		.byte	0
 5182 0ebf 1F       		.uleb128 0x1f
 5183 0ec0 94000000 		.4byte	.LVL174
 5184 0ec4 B31B0000 		.4byte	0x1bb3
 5185 0ec8 00       		.byte	0
 5186 0ec9 20       		.uleb128 0x20
 5187 0eca F5060000 		.4byte	.LASF185
 5188 0ece 01       		.byte	0x1
 5189 0ecf 2F01     		.2byte	0x12f
 5190 0ed1 0D       		.byte	0xd
 5191 0ed2 01       		.byte	0x1
 5192 0ed3 30000000 		.4byte	.LFB57
 5193 0ed7 8C000000 		.4byte	.LFE57
 5194 0edb 20000000 		.4byte	.LLST2
 5195 0edf 01       		.byte	0x1
 5196 0ee0 360F0000 		.4byte	0xf36
 5197 0ee4 21       		.uleb128 0x21
 5198 0ee5 91050000 		.4byte	.LASF187
 5199 0ee9 01       		.byte	0x1
 5200 0eea 2F01     		.2byte	0x12f
 5201 0eec 19       		.byte	0x19
 5202 0eed CD000000 		.4byte	0xcd
 5203 0ef1 44000000 		.4byte	.LLST3
 5204 0ef5 40000000 		.4byte	.LVUS3
 5205 0ef9 22       		.uleb128 0x22
 5206 0efa B1050000 		.4byte	.LASF184
 5207 0efe 01       		.byte	0x1
 5208 0eff 3301     		.2byte	0x133
 5209 0f01 06       		.byte	0x6
 5210 0f02 AD030000 		.4byte	0x3ad
 5211 0f06 02       		.byte	0x2
 5212 0f07 91       		.byte	0x91
 5213 0f08 64       		.sleb128 -28
 5214 0f09 23       		.uleb128 0x23
 5215 0f0a E5070000 		.4byte	.LASF190
 5216 0f0e 01       		.byte	0x1
 5217 0f0f 3501     		.2byte	0x135
 5218 0f11 08       		.byte	0x8
 5219 0f12 BF030000 		.4byte	0x3bf
 5220 0f16 69000000 		.4byte	.LLST4
 5221 0f1a 65000000 		.4byte	.LVUS4
 5222 0f1e 24       		.uleb128 0x24
 5223 0f1f 56000000 		.4byte	.LVL5
 5224 0f23 C21B0000 		.4byte	0x1bc2
 5225 0f27 1E       		.uleb128 0x1e
ARM GAS  /tmp/cc4r6sqw.s 			page 114


 5226 0f28 01       		.byte	0x1
 5227 0f29 51       		.byte	0x51
 5228 0f2a 02       		.byte	0x2
 5229 0f2b 91       		.byte	0x91
 5230 0f2c 64       		.sleb128 -28
 5231 0f2d 1E       		.uleb128 0x1e
 5232 0f2e 01       		.byte	0x1
 5233 0f2f 52       		.byte	0x52
 5234 0f30 03       		.byte	0x3
 5235 0f31 0A       		.byte	0xa
 5236 0f32 E803     		.2byte	0x3e8
 5237 0f34 00       		.byte	0
 5238 0f35 00       		.byte	0
 5239 0f36 25       		.uleb128 0x25
 5240 0f37 EF060000 		.4byte	.LASF186
 5241 0f3b 01       		.byte	0x1
 5242 0f3c FA       		.byte	0xfa
 5243 0f3d 0D       		.byte	0xd
 5244 0f3e 01       		.byte	0x1
 5245 0f3f 8C060000 		.4byte	.LFB56
 5246 0f43 30070000 		.4byte	.LFE56
 5247 0f47 87000000 		.4byte	.LLST40
 5248 0f4b 01       		.byte	0x1
 5249 0f4c 43100000 		.4byte	0x1043
 5250 0f50 26       		.uleb128 0x26
 5251 0f51 91050000 		.4byte	.LASF187
 5252 0f55 01       		.byte	0x1
 5253 0f56 FA       		.byte	0xfa
 5254 0f57 19       		.byte	0x19
 5255 0f58 CD000000 		.4byte	0xcd
 5256 0f5c AB000000 		.4byte	.LLST41
 5257 0f60 A7000000 		.4byte	.LVUS41
 5258 0f64 22       		.uleb128 0x22
 5259 0f65 BD000000 		.4byte	.LASF188
 5260 0f69 01       		.byte	0x1
 5261 0f6a 0C01     		.2byte	0x10c
 5262 0f6c 07       		.byte	0x7
 5263 0f6d 0C010000 		.4byte	0x10c
 5264 0f71 02       		.byte	0x2
 5265 0f72 91       		.byte	0x91
 5266 0f73 70       		.sleb128 -16
 5267 0f74 22       		.uleb128 0x22
 5268 0f75 B1050000 		.4byte	.LASF184
 5269 0f79 01       		.byte	0x1
 5270 0f7a 0E01     		.2byte	0x10e
 5271 0f7c 06       		.byte	0x6
 5272 0f7d AD030000 		.4byte	0x3ad
 5273 0f81 02       		.byte	0x2
 5274 0f82 91       		.byte	0x91
 5275 0f83 6C       		.sleb128 -20
 5276 0f84 1F       		.uleb128 0x1f
 5277 0f85 92060000 		.4byte	.LVL108
 5278 0f89 AA170000 		.4byte	0x17aa
 5279 0f8d 1F       		.uleb128 0x1f
 5280 0f8e 96060000 		.4byte	.LVL109
 5281 0f92 C6160000 		.4byte	0x16c6
 5282 0f96 1F       		.uleb128 0x1f
ARM GAS  /tmp/cc4r6sqw.s 			page 115


 5283 0f97 A6060000 		.4byte	.LVL110
 5284 0f9b 91150000 		.4byte	0x1591
 5285 0f9f 1D       		.uleb128 0x1d
 5286 0fa0 B2060000 		.4byte	.LVL111
 5287 0fa4 50170000 		.4byte	0x1750
 5288 0fa8 B30F0000 		.4byte	0xfb3
 5289 0fac 1E       		.uleb128 0x1e
 5290 0fad 01       		.byte	0x1
 5291 0fae 50       		.byte	0x50
 5292 0faf 02       		.byte	0x2
 5293 0fb0 75       		.byte	0x75
 5294 0fb1 00       		.sleb128 0
 5295 0fb2 00       		.byte	0
 5296 0fb3 1D       		.uleb128 0x1d
 5297 0fb4 BC060000 		.4byte	.LVL112
 5298 0fb8 D11B0000 		.4byte	0x1bd1
 5299 0fbc CC0F0000 		.4byte	0xfcc
 5300 0fc0 1E       		.uleb128 0x1e
 5301 0fc1 01       		.byte	0x1
 5302 0fc2 51       		.byte	0x51
 5303 0fc3 02       		.byte	0x2
 5304 0fc4 91       		.byte	0x91
 5305 0fc5 70       		.sleb128 -16
 5306 0fc6 1E       		.uleb128 0x1e
 5307 0fc7 01       		.byte	0x1
 5308 0fc8 52       		.byte	0x52
 5309 0fc9 01       		.byte	0x1
 5310 0fca 40       		.byte	0x40
 5311 0fcb 00       		.byte	0
 5312 0fcc 1D       		.uleb128 0x1d
 5313 0fcd C2060000 		.4byte	.LVL113
 5314 0fd1 50170000 		.4byte	0x1750
 5315 0fd5 E00F0000 		.4byte	0xfe0
 5316 0fd9 1E       		.uleb128 0x1e
 5317 0fda 01       		.byte	0x1
 5318 0fdb 50       		.byte	0x50
 5319 0fdc 02       		.byte	0x2
 5320 0fdd 91       		.byte	0x91
 5321 0fde 70       		.sleb128 -16
 5322 0fdf 00       		.byte	0
 5323 0fe0 1F       		.uleb128 0x1f
 5324 0fe1 D6060000 		.4byte	.LVL114
 5325 0fe5 DF1B0000 		.4byte	0x1bdf
 5326 0fe9 1D       		.uleb128 0x1d
 5327 0fea E8060000 		.4byte	.LVL115
 5328 0fee EE1B0000 		.4byte	0x1bee
 5329 0ff2 09100000 		.4byte	0x1009
 5330 0ff6 1E       		.uleb128 0x1e
 5331 0ff7 01       		.byte	0x1
 5332 0ff8 51       		.byte	0x51
 5333 0ff9 02       		.byte	0x2
 5334 0ffa 91       		.byte	0x91
 5335 0ffb 6C       		.sleb128 -20
 5336 0ffc 1E       		.uleb128 0x1e
 5337 0ffd 01       		.byte	0x1
 5338 0ffe 52       		.byte	0x52
 5339 0fff 03       		.byte	0x3
ARM GAS  /tmp/cc4r6sqw.s 			page 116


 5340 1000 0A       		.byte	0xa
 5341 1001 E803     		.2byte	0x3e8
 5342 1003 1E       		.uleb128 0x1e
 5343 1004 01       		.byte	0x1
 5344 1005 53       		.byte	0x53
 5345 1006 01       		.byte	0x1
 5346 1007 30       		.byte	0x30
 5347 1008 00       		.byte	0
 5348 1009 1F       		.uleb128 0x1f
 5349 100a FC060000 		.4byte	.LVL116
 5350 100e DF1B0000 		.4byte	0x1bdf
 5351 1012 1D       		.uleb128 0x1d
 5352 1013 0E070000 		.4byte	.LVL117
 5353 1017 EE1B0000 		.4byte	0x1bee
 5354 101b 32100000 		.4byte	0x1032
 5355 101f 1E       		.uleb128 0x1e
 5356 1020 01       		.byte	0x1
 5357 1021 51       		.byte	0x51
 5358 1022 02       		.byte	0x2
 5359 1023 91       		.byte	0x91
 5360 1024 6C       		.sleb128 -20
 5361 1025 1E       		.uleb128 0x1e
 5362 1026 01       		.byte	0x1
 5363 1027 52       		.byte	0x52
 5364 1028 03       		.byte	0x3
 5365 1029 0A       		.byte	0xa
 5366 102a E803     		.2byte	0x3e8
 5367 102c 1E       		.uleb128 0x1e
 5368 102d 01       		.byte	0x1
 5369 102e 53       		.byte	0x53
 5370 102f 01       		.byte	0x1
 5371 1030 30       		.byte	0x30
 5372 1031 00       		.byte	0
 5373 1032 24       		.uleb128 0x24
 5374 1033 14070000 		.4byte	.LVL118
 5375 1037 FD1B0000 		.4byte	0x1bfd
 5376 103b 1E       		.uleb128 0x1e
 5377 103c 01       		.byte	0x1
 5378 103d 50       		.byte	0x50
 5379 103e 02       		.byte	0x2
 5380 103f 08       		.byte	0x8
 5381 1040 FA       		.byte	0xfa
 5382 1041 00       		.byte	0
 5383 1042 00       		.byte	0
 5384 1043 25       		.uleb128 0x25
 5385 1044 E9060000 		.4byte	.LASF189
 5386 1048 01       		.byte	0x1
 5387 1049 D1       		.byte	0xd1
 5388 104a 0D       		.byte	0xd
 5389 104b 01       		.byte	0x1
 5390 104c EC030000 		.4byte	.LFB55
 5391 1050 6C040000 		.4byte	.LFE55
 5392 1054 CC000000 		.4byte	.LLST25
 5393 1058 01       		.byte	0x1
 5394 1059 20110000 		.4byte	0x1120
 5395 105d 26       		.uleb128 0x26
 5396 105e 91050000 		.4byte	.LASF187
ARM GAS  /tmp/cc4r6sqw.s 			page 117


 5397 1062 01       		.byte	0x1
 5398 1063 D1       		.byte	0xd1
 5399 1064 19       		.byte	0x19
 5400 1065 CD000000 		.4byte	0xcd
 5401 1069 F0000000 		.4byte	.LLST26
 5402 106d EC000000 		.4byte	.LVUS26
 5403 1071 1B       		.uleb128 0x1b
 5404 1072 B1050000 		.4byte	.LASF184
 5405 1076 01       		.byte	0x1
 5406 1077 E0       		.byte	0xe0
 5407 1078 06       		.byte	0x6
 5408 1079 AD030000 		.4byte	0x3ad
 5409 107d 02       		.byte	0x2
 5410 107e 91       		.byte	0x91
 5411 107f 64       		.sleb128 -28
 5412 1080 27       		.uleb128 0x27
 5413 1081 26040000 		.4byte	.LBB17
 5414 1085 3E040000 		.4byte	.LBE17
 5415 1089 C4100000 		.4byte	0x10c4
 5416 108d 28       		.uleb128 0x28
 5417 108e 6900     		.ascii	"i\000"
 5418 1090 01       		.byte	0x1
 5419 1091 E8       		.byte	0xe8
 5420 1092 0E       		.byte	0xe
 5421 1093 AD030000 		.4byte	0x3ad
 5422 1097 17010000 		.4byte	.LLST27
 5423 109b 11010000 		.4byte	.LVUS27
 5424 109f 1D       		.uleb128 0x1d
 5425 10a0 32040000 		.4byte	.LVL59
 5426 10a4 77180000 		.4byte	0x1877
 5427 10a8 B3100000 		.4byte	0x10b3
 5428 10ac 1E       		.uleb128 0x1e
 5429 10ad 01       		.byte	0x1
 5430 10ae 50       		.byte	0x50
 5431 10af 02       		.byte	0x2
 5432 10b0 74       		.byte	0x74
 5433 10b1 00       		.sleb128 0
 5434 10b2 00       		.byte	0
 5435 10b3 24       		.uleb128 0x24
 5436 10b4 3A040000 		.4byte	.LVL61
 5437 10b8 FD1B0000 		.4byte	0x1bfd
 5438 10bc 1E       		.uleb128 0x1e
 5439 10bd 01       		.byte	0x1
 5440 10be 50       		.byte	0x50
 5441 10bf 02       		.byte	0x2
 5442 10c0 08       		.byte	0x8
 5443 10c1 8C       		.byte	0x8c
 5444 10c2 00       		.byte	0
 5445 10c3 00       		.byte	0
 5446 10c4 27       		.uleb128 0x27
 5447 10c5 44040000 		.4byte	.LBB18
 5448 10c9 6C040000 		.4byte	.LBE18
 5449 10cd 08110000 		.4byte	0x1108
 5450 10d1 28       		.uleb128 0x28
 5451 10d2 6900     		.ascii	"i\000"
 5452 10d4 01       		.byte	0x1
 5453 10d5 EE       		.byte	0xee
ARM GAS  /tmp/cc4r6sqw.s 			page 118


 5454 10d6 0E       		.byte	0xe
 5455 10d7 AD030000 		.4byte	0x3ad
 5456 10db 48010000 		.4byte	.LLST28
 5457 10df 42010000 		.4byte	.LVUS28
 5458 10e3 1D       		.uleb128 0x1d
 5459 10e4 4E040000 		.4byte	.LVL64
 5460 10e8 77180000 		.4byte	0x1877
 5461 10ec F7100000 		.4byte	0x10f7
 5462 10f0 1E       		.uleb128 0x1e
 5463 10f1 01       		.byte	0x1
 5464 10f2 50       		.byte	0x50
 5465 10f3 02       		.byte	0x2
 5466 10f4 74       		.byte	0x74
 5467 10f5 00       		.sleb128 0
 5468 10f6 00       		.byte	0
 5469 10f7 24       		.uleb128 0x24
 5470 10f8 54040000 		.4byte	.LVL65
 5471 10fc FD1B0000 		.4byte	0x1bfd
 5472 1100 1E       		.uleb128 0x1e
 5473 1101 01       		.byte	0x1
 5474 1102 50       		.byte	0x50
 5475 1103 02       		.byte	0x2
 5476 1104 08       		.byte	0x8
 5477 1105 82       		.byte	0x82
 5478 1106 00       		.byte	0
 5479 1107 00       		.byte	0
 5480 1108 24       		.uleb128 0x24
 5481 1109 1C040000 		.4byte	.LVL57
 5482 110d C21B0000 		.4byte	0x1bc2
 5483 1111 1E       		.uleb128 0x1e
 5484 1112 01       		.byte	0x1
 5485 1113 51       		.byte	0x51
 5486 1114 02       		.byte	0x2
 5487 1115 91       		.byte	0x91
 5488 1116 64       		.sleb128 -28
 5489 1117 1E       		.uleb128 0x1e
 5490 1118 01       		.byte	0x1
 5491 1119 52       		.byte	0x52
 5492 111a 03       		.byte	0x3
 5493 111b 0A       		.byte	0xa
 5494 111c E803     		.2byte	0x3e8
 5495 111e 00       		.byte	0
 5496 111f 00       		.byte	0
 5497 1120 29       		.uleb128 0x29
 5498 1121 01       		.byte	0x1
 5499 1122 E3060000 		.4byte	.LASF202
 5500 1126 01       		.byte	0x1
 5501 1127 B7       		.byte	0xb7
 5502 1128 07       		.byte	0x7
 5503 1129 01       		.byte	0x1
 5504 112a 84050000 		.4byte	.LFB54
 5505 112e BC050000 		.4byte	.LFE54
 5506 1132 73010000 		.4byte	.LLST32
 5507 1136 01       		.byte	0x1
 5508 1137 A2110000 		.4byte	0x11a2
 5509 113b 26       		.uleb128 0x26
 5510 113c 91050000 		.4byte	.LASF187
ARM GAS  /tmp/cc4r6sqw.s 			page 119


 5511 1140 01       		.byte	0x1
 5512 1141 B7       		.byte	0xb7
 5513 1142 13       		.byte	0x13
 5514 1143 CD000000 		.4byte	0xcd
 5515 1147 97010000 		.4byte	.LLST33
 5516 114b 93010000 		.4byte	.LVUS33
 5517 114f 1B       		.uleb128 0x1b
 5518 1150 B5060000 		.4byte	.LASF191
 5519 1154 01       		.byte	0x1
 5520 1155 C3       		.byte	0xc3
 5521 1156 06       		.byte	0x6
 5522 1157 AD030000 		.4byte	0x3ad
 5523 115b 02       		.byte	0x2
 5524 115c 91       		.byte	0x91
 5525 115d 74       		.sleb128 -12
 5526 115e 1F       		.uleb128 0x1f
 5527 115f 8A050000 		.4byte	.LVL79
 5528 1163 3B170000 		.4byte	0x173b
 5529 1167 1F       		.uleb128 0x1f
 5530 1168 98050000 		.4byte	.LVL81
 5531 116c DF1B0000 		.4byte	0x1bdf
 5532 1170 1D       		.uleb128 0x1d
 5533 1171 AA050000 		.4byte	.LVL82
 5534 1175 EE1B0000 		.4byte	0x1bee
 5535 1179 90110000 		.4byte	0x1190
 5536 117d 1E       		.uleb128 0x1e
 5537 117e 01       		.byte	0x1
 5538 117f 51       		.byte	0x51
 5539 1180 02       		.byte	0x2
 5540 1181 91       		.byte	0x91
 5541 1182 74       		.sleb128 -12
 5542 1183 1E       		.uleb128 0x1e
 5543 1184 01       		.byte	0x1
 5544 1185 52       		.byte	0x52
 5545 1186 03       		.byte	0x3
 5546 1187 0A       		.byte	0xa
 5547 1188 E803     		.2byte	0x3e8
 5548 118a 1E       		.uleb128 0x1e
 5549 118b 01       		.byte	0x1
 5550 118c 53       		.byte	0x53
 5551 118d 01       		.byte	0x1
 5552 118e 30       		.byte	0x30
 5553 118f 00       		.byte	0
 5554 1190 24       		.uleb128 0x24
 5555 1191 B2050000 		.4byte	.LVL83
 5556 1195 FD1B0000 		.4byte	0x1bfd
 5557 1199 1E       		.uleb128 0x1e
 5558 119a 01       		.byte	0x1
 5559 119b 50       		.byte	0x50
 5560 119c 03       		.byte	0x3
 5561 119d 0A       		.byte	0xa
 5562 119e 50C3     		.2byte	0xc350
 5563 11a0 00       		.byte	0
 5564 11a1 00       		.byte	0
 5565 11a2 25       		.uleb128 0x25
 5566 11a3 DD060000 		.4byte	.LASF192
 5567 11a7 01       		.byte	0x1
ARM GAS  /tmp/cc4r6sqw.s 			page 120


 5568 11a8 AC       		.byte	0xac
 5569 11a9 0D       		.byte	0xd
 5570 11aa 01       		.byte	0x1
 5571 11ab 00000000 		.4byte	.LFB53
 5572 11af 30000000 		.4byte	.LFE53
 5573 11b3 B8010000 		.4byte	.LLST0
 5574 11b7 01       		.byte	0x1
 5575 11b8 E2110000 		.4byte	0x11e2
 5576 11bc 26       		.uleb128 0x26
 5577 11bd 91050000 		.4byte	.LASF187
 5578 11c1 01       		.byte	0x1
 5579 11c2 AC       		.byte	0xac
 5580 11c3 19       		.byte	0x19
 5581 11c4 CD000000 		.4byte	0xcd
 5582 11c8 DC010000 		.4byte	.LLST1
 5583 11cc D8010000 		.4byte	.LVUS1
 5584 11d0 24       		.uleb128 0x24
 5585 11d1 26000000 		.4byte	.LVL2
 5586 11d5 FD1B0000 		.4byte	0x1bfd
 5587 11d9 1E       		.uleb128 0x1e
 5588 11da 01       		.byte	0x1
 5589 11db 50       		.byte	0x50
 5590 11dc 03       		.byte	0x3
 5591 11dd 0A       		.byte	0xa
 5592 11de 8813     		.2byte	0x1388
 5593 11e0 00       		.byte	0
 5594 11e1 00       		.byte	0
 5595 11e2 25       		.uleb128 0x25
 5596 11e3 D7060000 		.4byte	.LASF193
 5597 11e7 01       		.byte	0x1
 5598 11e8 5A       		.byte	0x5a
 5599 11e9 0D       		.byte	0xd
 5600 11ea 01       		.byte	0x1
 5601 11eb F4070000 		.4byte	.LFB52
 5602 11ef 68090000 		.4byte	.LFE52
 5603 11f3 FD010000 		.4byte	.LLST44
 5604 11f7 01       		.byte	0x1
 5605 11f8 79140000 		.4byte	0x1479
 5606 11fc 26       		.uleb128 0x26
 5607 11fd 91050000 		.4byte	.LASF187
 5608 1201 01       		.byte	0x1
 5609 1202 5A       		.byte	0x5a
 5610 1203 19       		.byte	0x19
 5611 1204 CD000000 		.4byte	0xcd
 5612 1208 2E020000 		.4byte	.LLST45
 5613 120c 2A020000 		.4byte	.LVUS45
 5614 1210 1B       		.uleb128 0x1b
 5615 1211 B00A0000 		.4byte	.LASF194
 5616 1215 01       		.byte	0x1
 5617 1216 68       		.byte	0x68
 5618 1217 06       		.byte	0x6
 5619 1218 29000000 		.4byte	0x29
 5620 121c 02       		.byte	0x2
 5621 121d 91       		.byte	0x91
 5622 121e 40       		.sleb128 -64
 5623 121f 2A       		.uleb128 0x2a
 5624 1220 4D0C0000 		.4byte	.LASF195
ARM GAS  /tmp/cc4r6sqw.s 			page 121


 5625 1224 01       		.byte	0x1
 5626 1225 68       		.byte	0x68
 5627 1226 13       		.byte	0x13
 5628 1227 29000000 		.4byte	0x29
 5629 122b 53020000 		.4byte	.LLST46
 5630 122f 4F020000 		.4byte	.LVUS46
 5631 1233 1B       		.uleb128 0x1b
 5632 1234 4A0A0000 		.4byte	.LASF196
 5633 1238 01       		.byte	0x1
 5634 1239 6A       		.byte	0x6a
 5635 123a 07       		.byte	0x7
 5636 123b 79140000 		.4byte	0x1479
 5637 123f 02       		.byte	0x2
 5638 1240 91       		.byte	0x91
 5639 1241 48       		.sleb128 -56
 5640 1242 2A       		.uleb128 0x2a
 5641 1243 7F090000 		.4byte	.LASF197
 5642 1247 01       		.byte	0x1
 5643 1248 6B       		.byte	0x6b
 5644 1249 05       		.byte	0x5
 5645 124a CC030000 		.4byte	0x3cc
 5646 124e 7C020000 		.4byte	.LLST47
 5647 1252 72020000 		.4byte	.LVUS47
 5648 1256 28       		.uleb128 0x28
 5649 1257 524400   		.ascii	"RD\000"
 5650 125a 01       		.byte	0x1
 5651 125b 6F       		.byte	0x6f
 5652 125c 05       		.byte	0x5
 5653 125d CC030000 		.4byte	0x3cc
 5654 1261 C3020000 		.4byte	.LLST48
 5655 1265 BD020000 		.4byte	.LVUS48
 5656 1269 1B       		.uleb128 0x1b
 5657 126a B1050000 		.4byte	.LASF184
 5658 126e 01       		.byte	0x1
 5659 126f 70       		.byte	0x70
 5660 1270 06       		.byte	0x6
 5661 1271 AD030000 		.4byte	0x3ad
 5662 1275 02       		.byte	0x2
 5663 1276 91       		.byte	0x91
 5664 1277 44       		.sleb128 -60
 5665 1278 1B       		.uleb128 0x1b
 5666 1279 BD000000 		.4byte	.LASF188
 5667 127d 01       		.byte	0x1
 5668 127e 71       		.byte	0x71
 5669 127f 07       		.byte	0x7
 5670 1280 0C010000 		.4byte	0x10c
 5671 1284 02       		.byte	0x2
 5672 1285 91       		.byte	0x91
 5673 1286 50       		.sleb128 -48
 5674 1287 2B       		.uleb128 0x2b
 5675 1288 88000000 		.4byte	.Ldebug_ranges0+0x88
 5676 128c F7120000 		.4byte	0x12f7
 5677 1290 28       		.uleb128 0x28
 5678 1291 6900     		.ascii	"i\000"
 5679 1293 01       		.byte	0x1
 5680 1294 9D       		.byte	0x9d
 5681 1295 0C       		.byte	0xc
ARM GAS  /tmp/cc4r6sqw.s 			page 122


 5682 1296 CC030000 		.4byte	0x3cc
 5683 129a F3020000 		.4byte	.LLST49
 5684 129e ED020000 		.4byte	.LVUS49
 5685 12a2 1D       		.uleb128 0x1d
 5686 12a3 E8080000 		.4byte	.LVL157
 5687 12a7 FD1B0000 		.4byte	0x1bfd
 5688 12ab B7120000 		.4byte	0x12b7
 5689 12af 1E       		.uleb128 0x1e
 5690 12b0 01       		.byte	0x1
 5691 12b1 50       		.byte	0x50
 5692 12b2 03       		.byte	0x3
 5693 12b3 0A       		.byte	0xa
 5694 12b4 E803     		.2byte	0x3e8
 5695 12b6 00       		.byte	0
 5696 12b7 1D       		.uleb128 0x1d
 5697 12b8 F2080000 		.4byte	.LVL158
 5698 12bc 0C1C0000 		.4byte	0x1c0c
 5699 12c0 D6120000 		.4byte	0x12d6
 5700 12c4 1E       		.uleb128 0x1e
 5701 12c5 01       		.byte	0x1
 5702 12c6 50       		.byte	0x50
 5703 12c7 02       		.byte	0x2
 5704 12c8 7B       		.byte	0x7b
 5705 12c9 00       		.sleb128 0
 5706 12ca 1E       		.uleb128 0x1e
 5707 12cb 01       		.byte	0x1
 5708 12cc 51       		.byte	0x51
 5709 12cd 01       		.byte	0x1
 5710 12ce 30       		.byte	0x30
 5711 12cf 1E       		.uleb128 0x1e
 5712 12d0 01       		.byte	0x1
 5713 12d1 52       		.byte	0x52
 5714 12d2 02       		.byte	0x2
 5715 12d3 7A       		.byte	0x7a
 5716 12d4 00       		.sleb128 0
 5717 12d5 00       		.byte	0
 5718 12d6 24       		.uleb128 0x24
 5719 12d7 00090000 		.4byte	.LVL159
 5720 12db 0C1C0000 		.4byte	0x1c0c
 5721 12df 1E       		.uleb128 0x1e
 5722 12e0 01       		.byte	0x1
 5723 12e1 50       		.byte	0x50
 5724 12e2 05       		.byte	0x5
 5725 12e3 03       		.byte	0x3
 5726 12e4 31000000 		.4byte	.LC4
 5727 12e8 1E       		.uleb128 0x1e
 5728 12e9 01       		.byte	0x1
 5729 12ea 51       		.byte	0x51
 5730 12eb 01       		.byte	0x1
 5731 12ec 31       		.byte	0x31
 5732 12ed 1E       		.uleb128 0x1e
 5733 12ee 01       		.byte	0x1
 5734 12ef 52       		.byte	0x52
 5735 12f0 04       		.byte	0x4
 5736 12f1 3F       		.byte	0x3f
 5737 12f2 7A       		.byte	0x7a
 5738 12f3 00       		.sleb128 0
ARM GAS  /tmp/cc4r6sqw.s 			page 123


 5739 12f4 1C       		.byte	0x1c
 5740 12f5 00       		.byte	0
 5741 12f6 00       		.byte	0
 5742 12f7 1F       		.uleb128 0x1f
 5743 12f8 0C080000 		.4byte	.LVL130
 5744 12fc 89140000 		.4byte	0x1489
 5745 1300 1D       		.uleb128 0x1d
 5746 1301 36080000 		.4byte	.LVL132
 5747 1305 C21B0000 		.4byte	0x1bc2
 5748 1309 1B130000 		.4byte	0x131b
 5749 130d 1E       		.uleb128 0x1e
 5750 130e 01       		.byte	0x1
 5751 130f 51       		.byte	0x51
 5752 1310 02       		.byte	0x2
 5753 1311 91       		.byte	0x91
 5754 1312 40       		.sleb128 -64
 5755 1313 1E       		.uleb128 0x1e
 5756 1314 01       		.byte	0x1
 5757 1315 52       		.byte	0x52
 5758 1316 03       		.byte	0x3
 5759 1317 0A       		.byte	0xa
 5760 1318 E803     		.2byte	0x3e8
 5761 131a 00       		.byte	0
 5762 131b 1D       		.uleb128 0x1d
 5763 131c 4C080000 		.4byte	.LVL134
 5764 1320 1A1C0000 		.4byte	0x1c1a
 5765 1324 36130000 		.4byte	0x1336
 5766 1328 1E       		.uleb128 0x1e
 5767 1329 01       		.byte	0x1
 5768 132a 51       		.byte	0x51
 5769 132b 02       		.byte	0x2
 5770 132c 91       		.byte	0x91
 5771 132d 44       		.sleb128 -60
 5772 132e 1E       		.uleb128 0x1e
 5773 132f 01       		.byte	0x1
 5774 1330 52       		.byte	0x52
 5775 1331 03       		.byte	0x3
 5776 1332 0A       		.byte	0xa
 5777 1333 E803     		.2byte	0x3e8
 5778 1335 00       		.byte	0
 5779 1336 1D       		.uleb128 0x1d
 5780 1337 58080000 		.4byte	.LVL135
 5781 133b D11B0000 		.4byte	0x1bd1
 5782 133f 4F130000 		.4byte	0x134f
 5783 1343 1E       		.uleb128 0x1e
 5784 1344 01       		.byte	0x1
 5785 1345 51       		.byte	0x51
 5786 1346 02       		.byte	0x2
 5787 1347 91       		.byte	0x91
 5788 1348 50       		.sleb128 -48
 5789 1349 1E       		.uleb128 0x1e
 5790 134a 01       		.byte	0x1
 5791 134b 52       		.byte	0x52
 5792 134c 01       		.byte	0x1
 5793 134d 40       		.byte	0x40
 5794 134e 00       		.byte	0
 5795 134f 1F       		.uleb128 0x1f
ARM GAS  /tmp/cc4r6sqw.s 			page 124


 5796 1350 60080000 		.4byte	.LVL137
 5797 1354 291C0000 		.4byte	0x1c29
 5798 1358 1F       		.uleb128 0x1f
 5799 1359 82080000 		.4byte	.LVL143
 5800 135d 291C0000 		.4byte	0x1c29
 5801 1361 1D       		.uleb128 0x1d
 5802 1362 8C080000 		.4byte	.LVL144
 5803 1366 0C1C0000 		.4byte	0x1c0c
 5804 136a 82130000 		.4byte	0x1382
 5805 136e 1E       		.uleb128 0x1e
 5806 136f 01       		.byte	0x1
 5807 1370 50       		.byte	0x50
 5808 1371 05       		.byte	0x5
 5809 1372 03       		.byte	0x3
 5810 1373 33000000 		.4byte	.LC5
 5811 1377 1E       		.uleb128 0x1e
 5812 1378 01       		.byte	0x1
 5813 1379 51       		.byte	0x51
 5814 137a 01       		.byte	0x1
 5815 137b 30       		.byte	0x30
 5816 137c 1E       		.uleb128 0x1e
 5817 137d 01       		.byte	0x1
 5818 137e 52       		.byte	0x52
 5819 137f 01       		.byte	0x1
 5820 1380 30       		.byte	0x30
 5821 1381 00       		.byte	0
 5822 1382 1F       		.uleb128 0x1f
 5823 1383 92080000 		.4byte	.LVL145
 5824 1387 371C0000 		.4byte	0x1c37
 5825 138b 1F       		.uleb128 0x1f
 5826 138c 96080000 		.4byte	.LVL146
 5827 1390 421C0000 		.4byte	0x1c42
 5828 1394 1F       		.uleb128 0x1f
 5829 1395 9E080000 		.4byte	.LVL147
 5830 1399 4D1C0000 		.4byte	0x1c4d
 5831 139d 1F       		.uleb128 0x1f
 5832 139e A2080000 		.4byte	.LVL148
 5833 13a2 581C0000 		.4byte	0x1c58
 5834 13a6 1D       		.uleb128 0x1d
 5835 13a7 AA080000 		.4byte	.LVL149
 5836 13ab F4180000 		.4byte	0x18f4
 5837 13af BF130000 		.4byte	0x13bf
 5838 13b3 1E       		.uleb128 0x1e
 5839 13b4 01       		.byte	0x1
 5840 13b5 51       		.byte	0x51
 5841 13b6 02       		.byte	0x2
 5842 13b7 91       		.byte	0x91
 5843 13b8 48       		.sleb128 -56
 5844 13b9 1E       		.uleb128 0x1e
 5845 13ba 01       		.byte	0x1
 5846 13bb 52       		.byte	0x52
 5847 13bc 01       		.byte	0x1
 5848 13bd 32       		.byte	0x32
 5849 13be 00       		.byte	0
 5850 13bf 1D       		.uleb128 0x1d
 5851 13c0 B4080000 		.4byte	.LVL150
 5852 13c4 0C1C0000 		.4byte	0x1c0c
ARM GAS  /tmp/cc4r6sqw.s 			page 125


 5853 13c8 DD130000 		.4byte	0x13dd
 5854 13cc 1E       		.uleb128 0x1e
 5855 13cd 01       		.byte	0x1
 5856 13ce 50       		.byte	0x50
 5857 13cf 02       		.byte	0x2
 5858 13d0 91       		.byte	0x91
 5859 13d1 48       		.sleb128 -56
 5860 13d2 1E       		.uleb128 0x1e
 5861 13d3 01       		.byte	0x1
 5862 13d4 51       		.byte	0x51
 5863 13d5 01       		.byte	0x1
 5864 13d6 31       		.byte	0x31
 5865 13d7 1E       		.uleb128 0x1e
 5866 13d8 01       		.byte	0x1
 5867 13d9 52       		.byte	0x52
 5868 13da 01       		.byte	0x1
 5869 13db 36       		.byte	0x36
 5870 13dc 00       		.byte	0
 5871 13dd 1F       		.uleb128 0x1f
 5872 13de BC080000 		.4byte	.LVL152
 5873 13e2 291C0000 		.4byte	0x1c29
 5874 13e6 1D       		.uleb128 0x1d
 5875 13e7 CA080000 		.4byte	.LVL153
 5876 13eb 0C1C0000 		.4byte	0x1c0c
 5877 13ef 07140000 		.4byte	0x1407
 5878 13f3 1E       		.uleb128 0x1e
 5879 13f4 01       		.byte	0x1
 5880 13f5 50       		.byte	0x50
 5881 13f6 05       		.byte	0x5
 5882 13f7 03       		.byte	0x3
 5883 13f8 0D000000 		.4byte	.LC1
 5884 13fc 1E       		.uleb128 0x1e
 5885 13fd 01       		.byte	0x1
 5886 13fe 51       		.byte	0x51
 5887 13ff 01       		.byte	0x1
 5888 1400 30       		.byte	0x30
 5889 1401 1E       		.uleb128 0x1e
 5890 1402 01       		.byte	0x1
 5891 1403 52       		.byte	0x52
 5892 1404 01       		.byte	0x1
 5893 1405 30       		.byte	0x30
 5894 1406 00       		.byte	0
 5895 1407 1D       		.uleb128 0x1d
 5896 1408 D4080000 		.4byte	.LVL154
 5897 140c 0C1C0000 		.4byte	0x1c0c
 5898 1410 28140000 		.4byte	0x1428
 5899 1414 1E       		.uleb128 0x1e
 5900 1415 01       		.byte	0x1
 5901 1416 50       		.byte	0x50
 5902 1417 05       		.byte	0x5
 5903 1418 03       		.byte	0x3
 5904 1419 1E000000 		.4byte	.LC2
 5905 141d 1E       		.uleb128 0x1e
 5906 141e 01       		.byte	0x1
 5907 141f 51       		.byte	0x51
 5908 1420 01       		.byte	0x1
 5909 1421 31       		.byte	0x31
ARM GAS  /tmp/cc4r6sqw.s 			page 126


 5910 1422 1E       		.uleb128 0x1e
 5911 1423 01       		.byte	0x1
 5912 1424 52       		.byte	0x52
 5913 1425 01       		.byte	0x1
 5914 1426 30       		.byte	0x30
 5915 1427 00       		.byte	0
 5916 1428 1D       		.uleb128 0x1d
 5917 1429 1E090000 		.4byte	.LVL161
 5918 142d 0C1C0000 		.4byte	0x1c0c
 5919 1431 49140000 		.4byte	0x1449
 5920 1435 1E       		.uleb128 0x1e
 5921 1436 01       		.byte	0x1
 5922 1437 50       		.byte	0x50
 5923 1438 05       		.byte	0x5
 5924 1439 03       		.byte	0x3
 5925 143a 43000000 		.4byte	.LC6
 5926 143e 1E       		.uleb128 0x1e
 5927 143f 01       		.byte	0x1
 5928 1440 51       		.byte	0x51
 5929 1441 01       		.byte	0x1
 5930 1442 30       		.byte	0x30
 5931 1443 1E       		.uleb128 0x1e
 5932 1444 01       		.byte	0x1
 5933 1445 52       		.byte	0x52
 5934 1446 01       		.byte	0x1
 5935 1447 30       		.byte	0x30
 5936 1448 00       		.byte	0
 5937 1449 1D       		.uleb128 0x1d
 5938 144a 28090000 		.4byte	.LVL162
 5939 144e 0C1C0000 		.4byte	0x1c0c
 5940 1452 67140000 		.4byte	0x1467
 5941 1456 1E       		.uleb128 0x1e
 5942 1457 01       		.byte	0x1
 5943 1458 50       		.byte	0x50
 5944 1459 02       		.byte	0x2
 5945 145a 91       		.byte	0x91
 5946 145b 50       		.sleb128 -48
 5947 145c 1E       		.uleb128 0x1e
 5948 145d 01       		.byte	0x1
 5949 145e 51       		.byte	0x51
 5950 145f 01       		.byte	0x1
 5951 1460 31       		.byte	0x31
 5952 1461 1E       		.uleb128 0x1e
 5953 1462 01       		.byte	0x1
 5954 1463 52       		.byte	0x52
 5955 1464 01       		.byte	0x1
 5956 1465 34       		.byte	0x34
 5957 1466 00       		.byte	0
 5958 1467 24       		.uleb128 0x24
 5959 1468 30090000 		.4byte	.LVL163
 5960 146c FD1B0000 		.4byte	0x1bfd
 5961 1470 1E       		.uleb128 0x1e
 5962 1471 01       		.byte	0x1
 5963 1472 50       		.byte	0x50
 5964 1473 03       		.byte	0x3
 5965 1474 0A       		.byte	0xa
 5966 1475 1027     		.2byte	0x2710
ARM GAS  /tmp/cc4r6sqw.s 			page 127


 5967 1477 00       		.byte	0
 5968 1478 00       		.byte	0
 5969 1479 09       		.uleb128 0x9
 5970 147a E7000000 		.4byte	0xe7
 5971 147e 89140000 		.4byte	0x1489
 5972 1482 0A       		.uleb128 0xa
 5973 1483 30000000 		.4byte	0x30
 5974 1487 05       		.byte	0x5
 5975 1488 00       		.byte	0
 5976 1489 2C       		.uleb128 0x2c
 5977 148a 01       		.byte	0x1
 5978 148b 63050000 		.4byte	.LASF261
 5979 148f 01       		.byte	0x1
 5980 1490 42       		.byte	0x42
 5981 1491 06       		.byte	0x6
 5982 1492 30070000 		.4byte	.LFB51
 5983 1496 F4070000 		.4byte	.LFE51
 5984 149a 24030000 		.4byte	.LLST42
 5985 149e 01       		.byte	0x1
 5986 149f 91150000 		.4byte	0x1591
 5987 14a3 2B       		.uleb128 0x2b
 5988 14a4 68000000 		.4byte	.Ldebug_ranges0+0x68
 5989 14a8 10150000 		.4byte	0x1510
 5990 14ac 28       		.uleb128 0x28
 5991 14ad 6900     		.ascii	"i\000"
 5992 14af 01       		.byte	0x1
 5993 14b0 51       		.byte	0x51
 5994 14b1 0A       		.byte	0xa
 5995 14b2 CC030000 		.4byte	0x3cc
 5996 14b6 54030000 		.4byte	.LLST43
 5997 14ba 50030000 		.4byte	.LVUS43
 5998 14be 1D       		.uleb128 0x1d
 5999 14bf A8070000 		.4byte	.LVL124
 6000 14c3 FD1B0000 		.4byte	0x1bfd
 6001 14c7 D3140000 		.4byte	0x14d3
 6002 14cb 1E       		.uleb128 0x1e
 6003 14cc 01       		.byte	0x1
 6004 14cd 50       		.byte	0x50
 6005 14ce 03       		.byte	0x3
 6006 14cf 0A       		.byte	0xa
 6007 14d0 DC05     		.2byte	0x5dc
 6008 14d2 00       		.byte	0
 6009 14d3 1D       		.uleb128 0x1d
 6010 14d4 B2070000 		.4byte	.LVL125
 6011 14d8 0C1C0000 		.4byte	0x1c0c
 6012 14dc F2140000 		.4byte	0x14f2
 6013 14e0 1E       		.uleb128 0x1e
 6014 14e1 01       		.byte	0x1
 6015 14e2 50       		.byte	0x50
 6016 14e3 02       		.byte	0x2
 6017 14e4 77       		.byte	0x77
 6018 14e5 00       		.sleb128 0
 6019 14e6 1E       		.uleb128 0x1e
 6020 14e7 01       		.byte	0x1
 6021 14e8 51       		.byte	0x51
 6022 14e9 01       		.byte	0x1
 6023 14ea 30       		.byte	0x30
ARM GAS  /tmp/cc4r6sqw.s 			page 128


 6024 14eb 1E       		.uleb128 0x1e
 6025 14ec 01       		.byte	0x1
 6026 14ed 52       		.byte	0x52
 6027 14ee 02       		.byte	0x2
 6028 14ef 75       		.byte	0x75
 6029 14f0 00       		.sleb128 0
 6030 14f1 00       		.byte	0
 6031 14f2 24       		.uleb128 0x24
 6032 14f3 C2070000 		.4byte	.LVL126
 6033 14f7 0C1C0000 		.4byte	0x1c0c
 6034 14fb 1E       		.uleb128 0x1e
 6035 14fc 01       		.byte	0x1
 6036 14fd 50       		.byte	0x50
 6037 14fe 02       		.byte	0x2
 6038 14ff 76       		.byte	0x76
 6039 1500 00       		.sleb128 0
 6040 1501 1E       		.uleb128 0x1e
 6041 1502 01       		.byte	0x1
 6042 1503 51       		.byte	0x51
 6043 1504 01       		.byte	0x1
 6044 1505 31       		.byte	0x31
 6045 1506 1E       		.uleb128 0x1e
 6046 1507 01       		.byte	0x1
 6047 1508 52       		.byte	0x52
 6048 1509 04       		.byte	0x4
 6049 150a 40       		.byte	0x40
 6050 150b 75       		.byte	0x75
 6051 150c 00       		.sleb128 0
 6052 150d 1C       		.byte	0x1c
 6053 150e 00       		.byte	0
 6054 150f 00       		.byte	0
 6055 1510 1F       		.uleb128 0x1f
 6056 1511 84070000 		.4byte	.LVL119
 6057 1515 631C0000 		.4byte	0x1c63
 6058 1519 1D       		.uleb128 0x1d
 6059 151a 8A070000 		.4byte	.LVL120
 6060 151e 711C0000 		.4byte	0x1c71
 6061 1522 2C150000 		.4byte	0x152c
 6062 1526 1E       		.uleb128 0x1e
 6063 1527 01       		.byte	0x1
 6064 1528 50       		.byte	0x50
 6065 1529 01       		.byte	0x1
 6066 152a 3C       		.byte	0x3c
 6067 152b 00       		.byte	0
 6068 152c 1D       		.uleb128 0x1d
 6069 152d 94070000 		.4byte	.LVL121
 6070 1531 0C1C0000 		.4byte	0x1c0c
 6071 1535 4F150000 		.4byte	0x154f
 6072 1539 1E       		.uleb128 0x1e
 6073 153a 01       		.byte	0x1
 6074 153b 50       		.byte	0x50
 6075 153c 05       		.byte	0x5
 6076 153d 03       		.byte	0x3
 6077 153e 0D000000 		.4byte	.LC1
 6078 1542 1E       		.uleb128 0x1e
 6079 1543 01       		.byte	0x1
 6080 1544 51       		.byte	0x51
ARM GAS  /tmp/cc4r6sqw.s 			page 129


 6081 1545 02       		.byte	0x2
 6082 1546 74       		.byte	0x74
 6083 1547 00       		.sleb128 0
 6084 1548 1E       		.uleb128 0x1e
 6085 1549 01       		.byte	0x1
 6086 154a 52       		.byte	0x52
 6087 154b 02       		.byte	0x2
 6088 154c 74       		.byte	0x74
 6089 154d 00       		.sleb128 0
 6090 154e 00       		.byte	0
 6091 154f 1D       		.uleb128 0x1d
 6092 1550 9E070000 		.4byte	.LVL122
 6093 1554 0C1C0000 		.4byte	0x1c0c
 6094 1558 71150000 		.4byte	0x1571
 6095 155c 1E       		.uleb128 0x1e
 6096 155d 01       		.byte	0x1
 6097 155e 50       		.byte	0x50
 6098 155f 05       		.byte	0x5
 6099 1560 03       		.byte	0x3
 6100 1561 1E000000 		.4byte	.LC2
 6101 1565 1E       		.uleb128 0x1e
 6102 1566 01       		.byte	0x1
 6103 1567 51       		.byte	0x51
 6104 1568 01       		.byte	0x1
 6105 1569 31       		.byte	0x31
 6106 156a 1E       		.uleb128 0x1e
 6107 156b 01       		.byte	0x1
 6108 156c 52       		.byte	0x52
 6109 156d 02       		.byte	0x2
 6110 156e 74       		.byte	0x74
 6111 156f 00       		.sleb128 0
 6112 1570 00       		.byte	0
 6113 1571 1D       		.uleb128 0x1d
 6114 1572 CE070000 		.4byte	.LVL127
 6115 1576 FD1B0000 		.4byte	0x1bfd
 6116 157a 86150000 		.4byte	0x1586
 6117 157e 1E       		.uleb128 0x1e
 6118 157f 01       		.byte	0x1
 6119 1580 50       		.byte	0x50
 6120 1581 03       		.byte	0x3
 6121 1582 0A       		.byte	0xa
 6122 1583 DC05     		.2byte	0x5dc
 6123 1585 00       		.byte	0
 6124 1586 2D       		.uleb128 0x2d
 6125 1587 D6070000 		.4byte	.LVL128
 6126 158b 01       		.byte	0x1
 6127 158c 291C0000 		.4byte	0x1c29
 6128 1590 00       		.byte	0
 6129 1591 2E       		.uleb128 0x2e
 6130 1592 01       		.byte	0x1
 6131 1593 A30A0000 		.4byte	.LASF199
 6132 1597 05       		.byte	0x5
 6133 1598 15       		.byte	0x15
 6134 1599 0A       		.byte	0xa
 6135 159a 01       		.byte	0x1
 6136 159b BC000000 		.4byte	0xbc
 6137 159f 04060000 		.4byte	.LFB50
ARM GAS  /tmp/cc4r6sqw.s 			page 130


 6138 15a3 8C060000 		.4byte	.LFE50
 6139 15a7 73030000 		.4byte	.LLST35
 6140 15ab 01       		.byte	0x1
 6141 15ac C6160000 		.4byte	0x16c6
 6142 15b0 2A       		.uleb128 0x2a
 6143 15b1 89080000 		.4byte	.LASF200
 6144 15b5 05       		.byte	0x5
 6145 15b6 16       		.byte	0x16
 6146 15b7 0C       		.byte	0xc
 6147 15b8 BC000000 		.4byte	0xbc
 6148 15bc 99030000 		.4byte	.LLST36
 6149 15c0 93030000 		.4byte	.LVUS36
 6150 15c4 28       		.uleb128 0x28
 6151 15c5 62697400 		.ascii	"bit\000"
 6152 15c9 05       		.byte	0x5
 6153 15ca 17       		.byte	0x17
 6154 15cb 0C       		.byte	0xc
 6155 15cc BC000000 		.4byte	0xbc
 6156 15d0 CE030000 		.4byte	.LLST37
 6157 15d4 C4030000 		.4byte	.LVUS37
 6158 15d8 2A       		.uleb128 0x2a
 6159 15d9 CB0B0000 		.4byte	.LASF201
 6160 15dd 05       		.byte	0x5
 6161 15de 18       		.byte	0x18
 6162 15df 0C       		.byte	0xc
 6163 15e0 BC000000 		.4byte	0xbc
 6164 15e4 17040000 		.4byte	.LLST38
 6165 15e8 11040000 		.4byte	.LVUS38
 6166 15ec 28       		.uleb128 0x28
 6167 15ed 6B00     		.ascii	"k\000"
 6168 15ef 05       		.byte	0x5
 6169 15f0 1B       		.byte	0x1b
 6170 15f1 06       		.byte	0x6
 6171 15f2 CC030000 		.4byte	0x3cc
 6172 15f6 51040000 		.4byte	.LLST39
 6173 15fa 47040000 		.4byte	.LVUS39
 6174 15fe 1D       		.uleb128 0x1d
 6175 15ff 10060000 		.4byte	.LVL87
 6176 1603 7F1C0000 		.4byte	0x1c7f
 6177 1607 18160000 		.4byte	0x1618
 6178 160b 1E       		.uleb128 0x1e
 6179 160c 01       		.byte	0x1
 6180 160d 50       		.byte	0x50
 6181 160e 02       		.byte	0x2
 6182 160f 74       		.byte	0x74
 6183 1610 00       		.sleb128 0
 6184 1611 1E       		.uleb128 0x1e
 6185 1612 01       		.byte	0x1
 6186 1613 51       		.byte	0x51
 6187 1614 02       		.byte	0x2
 6188 1615 08       		.byte	0x8
 6189 1616 40       		.byte	0x40
 6190 1617 00       		.byte	0
 6191 1618 1D       		.uleb128 0x1d
 6192 1619 20060000 		.4byte	.LVL89
 6193 161d 7F1C0000 		.4byte	0x1c7f
 6194 1621 32160000 		.4byte	0x1632
ARM GAS  /tmp/cc4r6sqw.s 			page 131


 6195 1625 1E       		.uleb128 0x1e
 6196 1626 01       		.byte	0x1
 6197 1627 50       		.byte	0x50
 6198 1628 02       		.byte	0x2
 6199 1629 75       		.byte	0x75
 6200 162a 00       		.sleb128 0
 6201 162b 1E       		.uleb128 0x1e
 6202 162c 01       		.byte	0x1
 6203 162d 51       		.byte	0x51
 6204 162e 02       		.byte	0x2
 6205 162f 08       		.byte	0x8
 6206 1630 40       		.byte	0x40
 6207 1631 00       		.byte	0
 6208 1632 1D       		.uleb128 0x1d
 6209 1633 36060000 		.4byte	.LVL92
 6210 1637 FD1B0000 		.4byte	0x1bfd
 6211 163b 45160000 		.4byte	0x1645
 6212 163f 1E       		.uleb128 0x1e
 6213 1640 01       		.byte	0x1
 6214 1641 50       		.byte	0x50
 6215 1642 01       		.byte	0x1
 6216 1643 31       		.byte	0x31
 6217 1644 00       		.byte	0
 6218 1645 1D       		.uleb128 0x1d
 6219 1646 3E060000 		.4byte	.LVL94
 6220 164a FD1B0000 		.4byte	0x1bfd
 6221 164e 58160000 		.4byte	0x1658
 6222 1652 1E       		.uleb128 0x1e
 6223 1653 01       		.byte	0x1
 6224 1654 50       		.byte	0x50
 6225 1655 01       		.byte	0x1
 6226 1656 31       		.byte	0x31
 6227 1657 00       		.byte	0
 6228 1658 1D       		.uleb128 0x1d
 6229 1659 46060000 		.4byte	.LVL95
 6230 165d 7F1C0000 		.4byte	0x1c7f
 6231 1661 72160000 		.4byte	0x1672
 6232 1665 1E       		.uleb128 0x1e
 6233 1666 01       		.byte	0x1
 6234 1667 50       		.byte	0x50
 6235 1668 02       		.byte	0x2
 6236 1669 76       		.byte	0x76
 6237 166a 00       		.sleb128 0
 6238 166b 1E       		.uleb128 0x1e
 6239 166c 01       		.byte	0x1
 6240 166d 51       		.byte	0x51
 6241 166e 02       		.byte	0x2
 6242 166f 08       		.byte	0x8
 6243 1670 40       		.byte	0x40
 6244 1671 00       		.byte	0
 6245 1672 1D       		.uleb128 0x1d
 6246 1673 5C060000 		.4byte	.LVL98
 6247 1677 FD1B0000 		.4byte	0x1bfd
 6248 167b 86160000 		.4byte	0x1686
 6249 167f 1E       		.uleb128 0x1e
 6250 1680 01       		.byte	0x1
 6251 1681 50       		.byte	0x50
ARM GAS  /tmp/cc4r6sqw.s 			page 132


 6252 1682 02       		.byte	0x2
 6253 1683 08       		.byte	0x8
 6254 1684 3C       		.byte	0x3c
 6255 1685 00       		.byte	0
 6256 1686 1D       		.uleb128 0x1d
 6257 1687 64060000 		.4byte	.LVL99
 6258 168b 7F1C0000 		.4byte	0x1c7f
 6259 168f A0160000 		.4byte	0x16a0
 6260 1693 1E       		.uleb128 0x1e
 6261 1694 01       		.byte	0x1
 6262 1695 50       		.byte	0x50
 6263 1696 02       		.byte	0x2
 6264 1697 76       		.byte	0x76
 6265 1698 00       		.sleb128 0
 6266 1699 1E       		.uleb128 0x1e
 6267 169a 01       		.byte	0x1
 6268 169b 51       		.byte	0x51
 6269 169c 02       		.byte	0x2
 6270 169d 08       		.byte	0x8
 6271 169e 40       		.byte	0x40
 6272 169f 00       		.byte	0
 6273 16a0 1D       		.uleb128 0x1d
 6274 16a1 74060000 		.4byte	.LVL103
 6275 16a5 FD1B0000 		.4byte	0x1bfd
 6276 16a9 B4160000 		.4byte	0x16b4
 6277 16ad 1E       		.uleb128 0x1e
 6278 16ae 01       		.byte	0x1
 6279 16af 50       		.byte	0x50
 6280 16b0 02       		.byte	0x2
 6281 16b1 08       		.byte	0x8
 6282 16b2 A0       		.byte	0xa0
 6283 16b3 00       		.byte	0
 6284 16b4 24       		.uleb128 0x24
 6285 16b5 80060000 		.4byte	.LVL104
 6286 16b9 FD1B0000 		.4byte	0x1bfd
 6287 16bd 1E       		.uleb128 0x1e
 6288 16be 01       		.byte	0x1
 6289 16bf 50       		.byte	0x50
 6290 16c0 03       		.byte	0x3
 6291 16c1 0A       		.byte	0xa
 6292 16c2 F401     		.2byte	0x1f4
 6293 16c4 00       		.byte	0
 6294 16c5 00       		.byte	0
 6295 16c6 29       		.uleb128 0x29
 6296 16c7 01       		.byte	0x1
 6297 16c8 29050000 		.4byte	.LASF203
 6298 16cc 05       		.byte	0x5
 6299 16cd 08       		.byte	0x8
 6300 16ce 06       		.byte	0x6
 6301 16cf 01       		.byte	0x1
 6302 16d0 D8050000 		.4byte	.LFB49
 6303 16d4 04060000 		.4byte	.LFE49
 6304 16d8 A1040000 		.4byte	.LLST34
 6305 16dc 01       		.byte	0x1
 6306 16dd 22170000 		.4byte	0x1722
 6307 16e1 1B       		.uleb128 0x1b
 6308 16e2 FA070000 		.4byte	.LASF204
ARM GAS  /tmp/cc4r6sqw.s 			page 133


 6309 16e6 05       		.byte	0x5
 6310 16e7 09       		.byte	0x9
 6311 16e8 14       		.byte	0x14
 6312 16e9 230C0000 		.4byte	0xc23
 6313 16ed 02       		.byte	0x2
 6314 16ee 91       		.byte	0x91
 6315 16ef 74       		.sleb128 -12
 6316 16f0 1D       		.uleb128 0x1d
 6317 16f1 E2050000 		.4byte	.LVL84
 6318 16f5 8E1C0000 		.4byte	0x1c8e
 6319 16f9 08170000 		.4byte	0x1708
 6320 16fd 1E       		.uleb128 0x1e
 6321 16fe 01       		.byte	0x1
 6322 16ff 50       		.byte	0x50
 6323 1700 01       		.byte	0x1
 6324 1701 38       		.byte	0x38
 6325 1702 1E       		.uleb128 0x1e
 6326 1703 01       		.byte	0x1
 6327 1704 51       		.byte	0x51
 6328 1705 01       		.byte	0x1
 6329 1706 31       		.byte	0x31
 6330 1707 00       		.byte	0
 6331 1708 24       		.uleb128 0x24
 6332 1709 F8050000 		.4byte	.LVL85
 6333 170d 9D1C0000 		.4byte	0x1c9d
 6334 1711 1E       		.uleb128 0x1e
 6335 1712 01       		.byte	0x1
 6336 1713 50       		.byte	0x50
 6337 1714 05       		.byte	0x5
 6338 1715 0C       		.byte	0xc
 6339 1716 000C0140 		.4byte	0x40010c00
 6340 171a 1E       		.uleb128 0x1e
 6341 171b 01       		.byte	0x1
 6342 171c 51       		.byte	0x51
 6343 171d 02       		.byte	0x2
 6344 171e 91       		.byte	0x91
 6345 171f 74       		.sleb128 -12
 6346 1720 00       		.byte	0
 6347 1721 00       		.byte	0
 6348 1722 2F       		.uleb128 0x2f
 6349 1723 01       		.byte	0x1
 6350 1724 9C090000 		.4byte	.LASF223
 6351 1728 04       		.byte	0x4
 6352 1729 20       		.byte	0x20
 6353 172a 0A       		.byte	0xa
 6354 172b AB000000 		.4byte	0xab
 6355 172f BC050000 		.4byte	.LFB48
 6356 1733 D8050000 		.4byte	.LFE48
 6357 1737 02       		.byte	0x2
 6358 1738 7D       		.byte	0x7d
 6359 1739 00       		.sleb128 0
 6360 173a 01       		.byte	0x1
 6361 173b 30       		.uleb128 0x30
 6362 173c 01       		.byte	0x1
 6363 173d 2A010000 		.4byte	.LASF209
 6364 1741 04       		.byte	0x4
 6365 1742 02       		.byte	0x2
ARM GAS  /tmp/cc4r6sqw.s 			page 134


 6366 1743 06       		.byte	0x6
 6367 1744 14050000 		.4byte	.LFB47
 6368 1748 84050000 		.4byte	.LFE47
 6369 174c 02       		.byte	0x2
 6370 174d 7D       		.byte	0x7d
 6371 174e 00       		.sleb128 0
 6372 174f 01       		.byte	0x1
 6373 1750 29       		.uleb128 0x29
 6374 1751 01       		.byte	0x1
 6375 1752 4F060000 		.4byte	.LASF205
 6376 1756 03       		.byte	0x3
 6377 1757 28       		.byte	0x28
 6378 1758 06       		.byte	0x6
 6379 1759 01       		.byte	0x1
 6380 175a EC040000 		.4byte	.LFB46
 6381 175e 14050000 		.4byte	.LFE46
 6382 1762 CD040000 		.4byte	.LLST30
 6383 1766 01       		.byte	0x1
 6384 1767 AA170000 		.4byte	0x17aa
 6385 176b 26       		.uleb128 0x26
 6386 176c F0070000 		.4byte	.LASF206
 6387 1770 03       		.byte	0x3
 6388 1771 28       		.byte	0x28
 6389 1772 16       		.byte	0x16
 6390 1773 06010000 		.4byte	0x106
 6391 1777 F5040000 		.4byte	.LLST31
 6392 177b ED040000 		.4byte	.LVUS31
 6393 177f 1D       		.uleb128 0x1d
 6394 1780 00050000 		.4byte	.LVL76
 6395 1784 AC1C0000 		.4byte	0x1cac
 6396 1788 93170000 		.4byte	0x1793
 6397 178c 1E       		.uleb128 0x1e
 6398 178d 01       		.byte	0x1
 6399 178e 50       		.byte	0x50
 6400 178f 02       		.byte	0x2
 6401 1790 75       		.byte	0x75
 6402 1791 00       		.sleb128 0
 6403 1792 00       		.byte	0
 6404 1793 24       		.uleb128 0x24
 6405 1794 08050000 		.4byte	.LVL77
 6406 1798 BB1C0000 		.4byte	0x1cbb
 6407 179c 1E       		.uleb128 0x1e
 6408 179d 01       		.byte	0x1
 6409 179e 50       		.byte	0x50
 6410 179f 02       		.byte	0x2
 6411 17a0 75       		.byte	0x75
 6412 17a1 00       		.sleb128 0
 6413 17a2 1E       		.uleb128 0x1e
 6414 17a3 01       		.byte	0x1
 6415 17a4 51       		.byte	0x51
 6416 17a5 02       		.byte	0x2
 6417 17a6 08       		.byte	0x8
 6418 17a7 40       		.byte	0x40
 6419 17a8 00       		.byte	0
 6420 17a9 00       		.byte	0
 6421 17aa 29       		.uleb128 0x29
 6422 17ab 01       		.byte	0x1
ARM GAS  /tmp/cc4r6sqw.s 			page 135


 6423 17ac D2050000 		.4byte	.LASF207
 6424 17b0 03       		.byte	0x3
 6425 17b1 07       		.byte	0x7
 6426 17b2 06       		.byte	0x6
 6427 17b3 01       		.byte	0x1
 6428 17b4 7C040000 		.4byte	.LFB45
 6429 17b8 EC040000 		.4byte	.LFE45
 6430 17bc 2D050000 		.4byte	.LLST29
 6431 17c0 01       		.byte	0x1
 6432 17c1 61180000 		.4byte	0x1861
 6433 17c5 1B       		.uleb128 0x1b
 6434 17c6 FA070000 		.4byte	.LASF204
 6435 17ca 03       		.byte	0x3
 6436 17cb 0C       		.byte	0xc
 6437 17cc 15       		.byte	0x15
 6438 17cd 230C0000 		.4byte	0xc23
 6439 17d1 02       		.byte	0x2
 6440 17d2 91       		.byte	0x91
 6441 17d3 64       		.sleb128 -28
 6442 17d4 1B       		.uleb128 0x1b
 6443 17d5 A1010000 		.4byte	.LASF208
 6444 17d9 03       		.byte	0x3
 6445 17da 1A       		.byte	0x1a
 6446 17db 16       		.byte	0x16
 6447 17dc 930C0000 		.4byte	0xc93
 6448 17e0 02       		.byte	0x2
 6449 17e1 91       		.byte	0x91
 6450 17e2 68       		.sleb128 -24
 6451 17e3 1D       		.uleb128 0x1d
 6452 17e4 8A040000 		.4byte	.LVL67
 6453 17e8 8E1C0000 		.4byte	0x1c8e
 6454 17ec FD170000 		.4byte	0x17fd
 6455 17f0 1E       		.uleb128 0x1e
 6456 17f1 01       		.byte	0x1
 6457 17f2 50       		.byte	0x50
 6458 17f3 03       		.byte	0x3
 6459 17f4 0A       		.byte	0xa
 6460 17f5 0440     		.2byte	0x4004
 6461 17f7 1E       		.uleb128 0x1e
 6462 17f8 01       		.byte	0x1
 6463 17f9 51       		.byte	0x51
 6464 17fa 01       		.byte	0x1
 6465 17fb 31       		.byte	0x31
 6466 17fc 00       		.byte	0
 6467 17fd 1D       		.uleb128 0x1d
 6468 17fe A4040000 		.4byte	.LVL68
 6469 1802 9D1C0000 		.4byte	0x1c9d
 6470 1806 17180000 		.4byte	0x1817
 6471 180a 1E       		.uleb128 0x1e
 6472 180b 01       		.byte	0x1
 6473 180c 50       		.byte	0x50
 6474 180d 02       		.byte	0x2
 6475 180e 74       		.byte	0x74
 6476 180f 00       		.sleb128 0
 6477 1810 1E       		.uleb128 0x1e
 6478 1811 01       		.byte	0x1
 6479 1812 51       		.byte	0x51
ARM GAS  /tmp/cc4r6sqw.s 			page 136


 6480 1813 02       		.byte	0x2
 6481 1814 91       		.byte	0x91
 6482 1815 64       		.sleb128 -28
 6483 1816 00       		.byte	0
 6484 1817 1D       		.uleb128 0x1d
 6485 1818 BC040000 		.4byte	.LVL69
 6486 181c 9D1C0000 		.4byte	0x1c9d
 6487 1820 31180000 		.4byte	0x1831
 6488 1824 1E       		.uleb128 0x1e
 6489 1825 01       		.byte	0x1
 6490 1826 50       		.byte	0x50
 6491 1827 02       		.byte	0x2
 6492 1828 74       		.byte	0x74
 6493 1829 00       		.sleb128 0
 6494 182a 1E       		.uleb128 0x1e
 6495 182b 01       		.byte	0x1
 6496 182c 51       		.byte	0x51
 6497 182d 02       		.byte	0x2
 6498 182e 91       		.byte	0x91
 6499 182f 64       		.sleb128 -28
 6500 1830 00       		.byte	0
 6501 1831 1D       		.uleb128 0x1d
 6502 1832 DC040000 		.4byte	.LVL70
 6503 1836 CA1C0000 		.4byte	0x1cca
 6504 183a 4B180000 		.4byte	0x184b
 6505 183e 1E       		.uleb128 0x1e
 6506 183f 01       		.byte	0x1
 6507 1840 50       		.byte	0x50
 6508 1841 02       		.byte	0x2
 6509 1842 74       		.byte	0x74
 6510 1843 00       		.sleb128 0
 6511 1844 1E       		.uleb128 0x1e
 6512 1845 01       		.byte	0x1
 6513 1846 51       		.byte	0x51
 6514 1847 02       		.byte	0x2
 6515 1848 91       		.byte	0x91
 6516 1849 68       		.sleb128 -24
 6517 184a 00       		.byte	0
 6518 184b 24       		.uleb128 0x24
 6519 184c E4040000 		.4byte	.LVL71
 6520 1850 D91C0000 		.4byte	0x1cd9
 6521 1854 1E       		.uleb128 0x1e
 6522 1855 01       		.byte	0x1
 6523 1856 50       		.byte	0x50
 6524 1857 02       		.byte	0x2
 6525 1858 74       		.byte	0x74
 6526 1859 00       		.sleb128 0
 6527 185a 1E       		.uleb128 0x1e
 6528 185b 01       		.byte	0x1
 6529 185c 51       		.byte	0x51
 6530 185d 01       		.byte	0x1
 6531 185e 31       		.byte	0x31
 6532 185f 00       		.byte	0
 6533 1860 00       		.byte	0
 6534 1861 31       		.uleb128 0x31
 6535 1862 01       		.byte	0x1
 6536 1863 3E030000 		.4byte	.LASF210
ARM GAS  /tmp/cc4r6sqw.s 			page 137


 6537 1867 02       		.byte	0x2
 6538 1868 0E01     		.2byte	0x10e
 6539 186a 06       		.byte	0x6
 6540 186b 6C040000 		.4byte	.LFB44
 6541 186f 7C040000 		.4byte	.LFE44
 6542 1873 02       		.byte	0x2
 6543 1874 7D       		.byte	0x7d
 6544 1875 00       		.sleb128 0
 6545 1876 01       		.byte	0x1
 6546 1877 32       		.uleb128 0x32
 6547 1878 01       		.byte	0x1
 6548 1879 00000000 		.4byte	.LASF211
 6549 187d 02       		.byte	0x2
 6550 187e E8       		.byte	0xe8
 6551 187f 06       		.byte	0x6
 6552 1880 01       		.byte	0x1
 6553 1881 88030000 		.4byte	.LFB43
 6554 1885 EC030000 		.4byte	.LFE43
 6555 1889 02       		.byte	0x2
 6556 188a 7D       		.byte	0x7d
 6557 188b 00       		.sleb128 0
 6558 188c 01       		.byte	0x1
 6559 188d A6180000 		.4byte	0x18a6
 6560 1891 26       		.uleb128 0x26
 6561 1892 16020000 		.4byte	.LASF212
 6562 1896 02       		.byte	0x2
 6563 1897 E8       		.byte	0xe8
 6564 1898 1E       		.byte	0x1e
 6565 1899 29000000 		.4byte	0x29
 6566 189d 6B050000 		.4byte	.LLST24
 6567 18a1 65050000 		.4byte	.LVUS24
 6568 18a5 00       		.byte	0
 6569 18a6 33       		.uleb128 0x33
 6570 18a7 01       		.byte	0x1
 6571 18a8 AC060000 		.4byte	.LASF218
 6572 18ac 02       		.byte	0x2
 6573 18ad C5       		.byte	0xc5
 6574 18ae 06       		.byte	0x6
 6575 18af 01       		.byte	0x1
 6576 18b0 01       		.byte	0x1
 6577 18b1 F4180000 		.4byte	0x18f4
 6578 18b5 34       		.uleb128 0x34
 6579 18b6 6E756D00 		.ascii	"num\000"
 6580 18ba 02       		.byte	0x2
 6581 18bb C5       		.byte	0xc5
 6582 18bc 13       		.byte	0x13
 6583 18bd 29000000 		.4byte	0x29
 6584 18c1 34       		.uleb128 0x34
 6585 18c2 73747200 		.ascii	"str\000"
 6586 18c6 02       		.byte	0x2
 6587 18c7 C5       		.byte	0xc5
 6588 18c8 1E       		.byte	0x1e
 6589 18c9 06010000 		.4byte	0x106
 6590 18cd 35       		.uleb128 0x35
 6591 18ce 6C656E00 		.ascii	"len\000"
 6592 18d2 02       		.byte	0x2
 6593 18d3 CD       		.byte	0xcd
ARM GAS  /tmp/cc4r6sqw.s 			page 138


 6594 18d4 09       		.byte	0x9
 6595 18d5 29000000 		.4byte	0x29
 6596 18d9 36       		.uleb128 0x36
 6597 18da 03040000 		.4byte	.LASF213
 6598 18de 02       		.byte	0x2
 6599 18df CE       		.byte	0xce
 6600 18e0 09       		.byte	0x9
 6601 18e1 29000000 		.4byte	0x29
 6602 18e5 37       		.uleb128 0x37
 6603 18e6 36       		.uleb128 0x36
 6604 18e7 9A000000 		.4byte	.LASF214
 6605 18eb 02       		.byte	0x2
 6606 18ec D8       		.byte	0xd8
 6607 18ed 0D       		.byte	0xd
 6608 18ee 29000000 		.4byte	0x29
 6609 18f2 00       		.byte	0
 6610 18f3 00       		.byte	0
 6611 18f4 29       		.uleb128 0x29
 6612 18f5 01       		.byte	0x1
 6613 18f6 770B0000 		.4byte	.LASF215
 6614 18fa 02       		.byte	0x2
 6615 18fb A7       		.byte	0xa7
 6616 18fc 06       		.byte	0x6
 6617 18fd 01       		.byte	0x1
 6618 18fe 04030000 		.4byte	.LFB41
 6619 1902 88030000 		.4byte	.LFE41
 6620 1906 A5050000 		.4byte	.LLST16
 6621 190a 01       		.byte	0x1
 6622 190b 201A0000 		.4byte	0x1a20
 6623 190f 38       		.uleb128 0x38
 6624 1910 6E756D00 		.ascii	"num\000"
 6625 1914 02       		.byte	0x2
 6626 1915 A7       		.byte	0xa7
 6627 1916 1A       		.byte	0x1a
 6628 1917 9F0C0000 		.4byte	0xc9f
 6629 191b C9050000 		.4byte	.LLST17
 6630 191f C5050000 		.4byte	.LVUS17
 6631 1923 38       		.uleb128 0x38
 6632 1924 73747200 		.ascii	"str\000"
 6633 1928 02       		.byte	0x2
 6634 1929 A7       		.byte	0xa7
 6635 192a 25       		.byte	0x25
 6636 192b 06010000 		.4byte	0x106
 6637 192f F9050000 		.4byte	.LLST18
 6638 1933 E7050000 		.4byte	.LVUS18
 6639 1937 26       		.uleb128 0x26
 6640 1938 50090000 		.4byte	.LASF216
 6641 193c 02       		.byte	0x2
 6642 193d A7       		.byte	0xa7
 6643 193e 2E       		.byte	0x2e
 6644 193f 29000000 		.4byte	0x29
 6645 1943 70060000 		.4byte	.LLST19
 6646 1947 68060000 		.4byte	.LVUS19
 6647 194b 2A       		.uleb128 0x2a
 6648 194c 450C0000 		.4byte	.LASF217
 6649 1950 02       		.byte	0x2
 6650 1951 AF       		.byte	0xaf
ARM GAS  /tmp/cc4r6sqw.s 			page 139


 6651 1952 09       		.byte	0x9
 6652 1953 29000000 		.4byte	0x29
 6653 1957 AB060000 		.4byte	.LLST20
 6654 195b A7060000 		.4byte	.LVUS20
 6655 195f 39       		.uleb128 0x39
 6656 1960 01       		.byte	0x1
 6657 1961 AC060000 		.4byte	.LASF218
 6658 1965 02       		.byte	0x2
 6659 1966 B0       		.byte	0xb0
 6660 1967 05       		.byte	0x5
 6661 1968 29000000 		.4byte	0x29
 6662 196c 01       		.byte	0x1
 6663 196d 73190000 		.4byte	0x1973
 6664 1971 3A       		.uleb128 0x3a
 6665 1972 00       		.byte	0
 6666 1973 2A       		.uleb128 0x2a
 6667 1974 4C000000 		.4byte	.LASF219
 6668 1978 02       		.byte	0x2
 6669 1979 B9       		.byte	0xb9
 6670 197a 0B       		.byte	0xb
 6671 197b 9F0C0000 		.4byte	0xc9f
 6672 197f CF060000 		.4byte	.LLST21
 6673 1983 C9060000 		.4byte	.LVUS21
 6674 1987 2B       		.uleb128 0x2b
 6675 1988 30000000 		.4byte	.Ldebug_ranges0+0x30
 6676 198c E1190000 		.4byte	0x19e1
 6677 1990 28       		.uleb128 0x28
 6678 1991 6900     		.ascii	"i\000"
 6679 1993 02       		.byte	0x2
 6680 1994 BA       		.byte	0xba
 6681 1995 0E       		.byte	0xe
 6682 1996 29000000 		.4byte	0x29
 6683 199a 06070000 		.4byte	.LLST22
 6684 199e F8060000 		.4byte	.LVUS22
 6685 19a2 3B       		.uleb128 0x3b
 6686 19a3 50000000 		.4byte	.Ldebug_ranges0+0x50
 6687 19a7 2A       		.uleb128 0x2a
 6688 19a8 9A000000 		.4byte	.LASF214
 6689 19ac 02       		.byte	0x2
 6690 19ad BC       		.byte	0xbc
 6691 19ae 0D       		.byte	0xd
 6692 19af 29000000 		.4byte	0x29
 6693 19b3 73070000 		.4byte	.LLST23
 6694 19b7 71070000 		.4byte	.LVUS23
 6695 19bb 1F       		.uleb128 0x1f
 6696 19bc 68030000 		.4byte	.LVL46
 6697 19c0 E81C0000 		.4byte	0x1ce8
 6698 19c4 1F       		.uleb128 0x1f
 6699 19c5 6E030000 		.4byte	.LVL48
 6700 19c9 F31C0000 		.4byte	0x1cf3
 6701 19cd 1F       		.uleb128 0x1f
 6702 19ce 7A030000 		.4byte	.LVL50
 6703 19d2 371C0000 		.4byte	0x1c37
 6704 19d6 1F       		.uleb128 0x1f
 6705 19d7 82030000 		.4byte	.LVL51
 6706 19db FE1C0000 		.4byte	0x1cfe
 6707 19df 00       		.byte	0
ARM GAS  /tmp/cc4r6sqw.s 			page 140


 6708 19e0 00       		.byte	0
 6709 19e1 1F       		.uleb128 0x1f
 6710 19e2 14030000 		.4byte	.LVL30
 6711 19e6 091D0000 		.4byte	0x1d09
 6712 19ea 1F       		.uleb128 0x1f
 6713 19eb 26030000 		.4byte	.LVL33
 6714 19ef F31C0000 		.4byte	0x1cf3
 6715 19f3 1D       		.uleb128 0x1d
 6716 19f4 2E030000 		.4byte	.LVL35
 6717 19f8 A6180000 		.4byte	0x18a6
 6718 19fc 0D1A0000 		.4byte	0x1a0d
 6719 1a00 1E       		.uleb128 0x1e
 6720 1a01 01       		.byte	0x1
 6721 1a02 50       		.byte	0x50
 6722 1a03 02       		.byte	0x2
 6723 1a04 77       		.byte	0x77
 6724 1a05 00       		.sleb128 0
 6725 1a06 1E       		.uleb128 0x1e
 6726 1a07 01       		.byte	0x1
 6727 1a08 51       		.byte	0x51
 6728 1a09 02       		.byte	0x2
 6729 1a0a 74       		.byte	0x74
 6730 1a0b 00       		.sleb128 0
 6731 1a0c 00       		.byte	0
 6732 1a0d 1F       		.uleb128 0x1f
 6733 1a0e 42030000 		.4byte	.LVL38
 6734 1a12 371C0000 		.4byte	0x1c37
 6735 1a16 1F       		.uleb128 0x1f
 6736 1a17 4A030000 		.4byte	.LVL39
 6737 1a1b FE1C0000 		.4byte	0x1cfe
 6738 1a1f 00       		.byte	0
 6739 1a20 32       		.uleb128 0x32
 6740 1a21 01       		.byte	0x1
 6741 1a22 7B030000 		.4byte	.LASF220
 6742 1a26 02       		.byte	0x2
 6743 1a27 99       		.byte	0x99
 6744 1a28 06       		.byte	0x6
 6745 1a29 01       		.byte	0x1
 6746 1a2a AC020000 		.4byte	.LFB40
 6747 1a2e C8020000 		.4byte	.LFE40
 6748 1a32 02       		.byte	0x2
 6749 1a33 7D       		.byte	0x7d
 6750 1a34 00       		.sleb128 0
 6751 1a35 01       		.byte	0x1
 6752 1a36 4F1A0000 		.4byte	0x1a4f
 6753 1a3a 26       		.uleb128 0x26
 6754 1a3b 89010000 		.4byte	.LASF221
 6755 1a3f 02       		.byte	0x2
 6756 1a40 99       		.byte	0x99
 6757 1a41 22       		.byte	0x22
 6758 1a42 61020000 		.4byte	0x261
 6759 1a46 8A070000 		.4byte	.LLST7
 6760 1a4a 86070000 		.4byte	.LVUS7
 6761 1a4e 00       		.byte	0
 6762 1a4f 32       		.uleb128 0x32
 6763 1a50 01       		.byte	0x1
 6764 1a51 F0050000 		.4byte	.LASF222
ARM GAS  /tmp/cc4r6sqw.s 			page 141


 6765 1a55 02       		.byte	0x2
 6766 1a56 91       		.byte	0x91
 6767 1a57 06       		.byte	0x6
 6768 1a58 01       		.byte	0x1
 6769 1a59 94020000 		.4byte	.LFB39
 6770 1a5d AC020000 		.4byte	.LFE39
 6771 1a61 02       		.byte	0x2
 6772 1a62 7D       		.byte	0x7d
 6773 1a63 00       		.sleb128 0
 6774 1a64 01       		.byte	0x1
 6775 1a65 7E1A0000 		.4byte	0x1a7e
 6776 1a69 26       		.uleb128 0x26
 6777 1a6a 89010000 		.4byte	.LASF221
 6778 1a6e 02       		.byte	0x2
 6779 1a6f 91       		.byte	0x91
 6780 1a70 21       		.byte	0x21
 6781 1a71 61020000 		.4byte	0x261
 6782 1a75 AF070000 		.4byte	.LLST6
 6783 1a79 AB070000 		.4byte	.LVUS6
 6784 1a7d 00       		.byte	0
 6785 1a7e 3C       		.uleb128 0x3c
 6786 1a7f 01       		.byte	0x1
 6787 1a80 70000000 		.4byte	.LASF224
 6788 1a84 02       		.byte	0x2
 6789 1a85 85       		.byte	0x85
 6790 1a86 06       		.byte	0x6
 6791 1a87 01       		.byte	0x1
 6792 1a88 6C020000 		.4byte	.LFB38
 6793 1a8c 94020000 		.4byte	.LFE38
 6794 1a90 02       		.byte	0x2
 6795 1a91 7D       		.byte	0x7d
 6796 1a92 00       		.sleb128 0
 6797 1a93 01       		.byte	0x1
 6798 1a94 29       		.uleb128 0x29
 6799 1a95 01       		.byte	0x1
 6800 1a96 AC000000 		.4byte	.LASF225
 6801 1a9a 02       		.byte	0x2
 6802 1a9b 7E       		.byte	0x7e
 6803 1a9c 06       		.byte	0x6
 6804 1a9d 01       		.byte	0x1
 6805 1a9e 3C020000 		.4byte	.LFB37
 6806 1aa2 6C020000 		.4byte	.LFE37
 6807 1aa6 D0070000 		.4byte	.LLST5
 6808 1aaa 01       		.byte	0x1
 6809 1aab BC1A0000 		.4byte	0x1abc
 6810 1aaf 3D       		.uleb128 0x3d
 6811 1ab0 5400     		.ascii	"T\000"
 6812 1ab2 02       		.byte	0x2
 6813 1ab3 7E       		.byte	0x7e
 6814 1ab4 17       		.byte	0x17
 6815 1ab5 BA030000 		.4byte	0x3ba
 6816 1ab9 01       		.byte	0x1
 6817 1aba 50       		.byte	0x50
 6818 1abb 00       		.byte	0
 6819 1abc 3C       		.uleb128 0x3c
 6820 1abd 01       		.byte	0x1
 6821 1abe 560A0000 		.4byte	.LASF226
ARM GAS  /tmp/cc4r6sqw.s 			page 142


 6822 1ac2 02       		.byte	0x2
 6823 1ac3 5C       		.byte	0x5c
 6824 1ac4 06       		.byte	0x6
 6825 1ac5 01       		.byte	0x1
 6826 1ac6 C8010000 		.4byte	.LFB36
 6827 1aca 3C020000 		.4byte	.LFE36
 6828 1ace 02       		.byte	0x2
 6829 1acf 7D       		.byte	0x7d
 6830 1ad0 00       		.sleb128 0
 6831 1ad1 01       		.byte	0x1
 6832 1ad2 30       		.uleb128 0x30
 6833 1ad3 01       		.byte	0x1
 6834 1ad4 C5000000 		.4byte	.LASF227
 6835 1ad8 02       		.byte	0x2
 6836 1ad9 2C       		.byte	0x2c
 6837 1ada 06       		.byte	0x6
 6838 1adb 3C010000 		.4byte	.LFB35
 6839 1adf C8010000 		.4byte	.LFE35
 6840 1ae3 02       		.byte	0x2
 6841 1ae4 7D       		.byte	0x7d
 6842 1ae5 00       		.sleb128 0
 6843 1ae6 01       		.byte	0x1
 6844 1ae7 30       		.uleb128 0x30
 6845 1ae8 01       		.byte	0x1
 6846 1ae9 DD050000 		.4byte	.LASF228
 6847 1aed 02       		.byte	0x2
 6848 1aee 0D       		.byte	0xd
 6849 1aef 06       		.byte	0x6
 6850 1af0 8C000000 		.4byte	.LFB34
 6851 1af4 3C010000 		.4byte	.LFE34
 6852 1af8 02       		.byte	0x2
 6853 1af9 7D       		.byte	0x7d
 6854 1afa 00       		.sleb128 0
 6855 1afb 01       		.byte	0x1
 6856 1afc 3E       		.uleb128 0x3e
 6857 1afd A6180000 		.4byte	0x18a6
 6858 1b01 C8020000 		.4byte	.LFB42
 6859 1b05 04030000 		.4byte	.LFE42
 6860 1b09 08080000 		.4byte	.LLST8
 6861 1b0d 01       		.byte	0x1
 6862 1b0e 951B0000 		.4byte	0x1b95
 6863 1b12 3F       		.uleb128 0x3f
 6864 1b13 B5180000 		.4byte	0x18b5
 6865 1b17 32080000 		.4byte	.LLST9
 6866 1b1b 28080000 		.4byte	.LVUS9
 6867 1b1f 3F       		.uleb128 0x3f
 6868 1b20 C1180000 		.4byte	0x18c1
 6869 1b24 81080000 		.4byte	.LLST10
 6870 1b28 77080000 		.4byte	.LVUS10
 6871 1b2c 40       		.uleb128 0x40
 6872 1b2d CD180000 		.4byte	0x18cd
 6873 1b31 40       		.uleb128 0x40
 6874 1b32 D9180000 		.4byte	0x18d9
 6875 1b36 41       		.uleb128 0x41
 6876 1b37 A6180000 		.4byte	0x18a6
 6877 1b3b 00000000 		.4byte	.Ldebug_ranges0+0
 6878 1b3f 02       		.byte	0x2
ARM GAS  /tmp/cc4r6sqw.s 			page 143


 6879 1b40 C5       		.byte	0xc5
 6880 1b41 06       		.byte	0x6
 6881 1b42 3F       		.uleb128 0x3f
 6882 1b43 C1180000 		.4byte	0x18c1
 6883 1b47 CB080000 		.4byte	.LLST11
 6884 1b4b C5080000 		.4byte	.LVUS11
 6885 1b4f 3F       		.uleb128 0x3f
 6886 1b50 B5180000 		.4byte	0x18b5
 6887 1b54 FA080000 		.4byte	.LLST12
 6888 1b58 F6080000 		.4byte	.LVUS12
 6889 1b5c 3B       		.uleb128 0x3b
 6890 1b5d 00000000 		.4byte	.Ldebug_ranges0+0
 6891 1b61 42       		.uleb128 0x42
 6892 1b62 CD180000 		.4byte	0x18cd
 6893 1b66 1A090000 		.4byte	.LLST13
 6894 1b6a 18090000 		.4byte	.LVUS13
 6895 1b6e 42       		.uleb128 0x42
 6896 1b6f D9180000 		.4byte	0x18d9
 6897 1b73 2F090000 		.4byte	.LLST14
 6898 1b77 2D090000 		.4byte	.LVUS14
 6899 1b7b 43       		.uleb128 0x43
 6900 1b7c E5180000 		.4byte	0x18e5
 6901 1b80 18000000 		.4byte	.Ldebug_ranges0+0x18
 6902 1b84 42       		.uleb128 0x42
 6903 1b85 E6180000 		.4byte	0x18e6
 6904 1b89 44090000 		.4byte	.LLST15
 6905 1b8d 42090000 		.4byte	.LVUS15
 6906 1b91 00       		.byte	0
 6907 1b92 00       		.byte	0
 6908 1b93 00       		.byte	0
 6909 1b94 00       		.byte	0
 6910 1b95 44       		.uleb128 0x44
 6911 1b96 01       		.byte	0x1
 6912 1b97 01       		.byte	0x1
 6913 1b98 C3020000 		.4byte	.LASF229
 6914 1b9c C3020000 		.4byte	.LASF229
 6915 1ba0 09       		.byte	0x9
 6916 1ba1 D805     		.2byte	0x5d8
 6917 1ba3 10       		.byte	0x10
 6918 1ba4 44       		.uleb128 0x44
 6919 1ba5 01       		.byte	0x1
 6920 1ba6 01       		.byte	0x1
 6921 1ba7 CB060000 		.4byte	.LASF230
 6922 1bab CB060000 		.4byte	.LASF230
 6923 1baf 0E       		.byte	0xe
 6924 1bb0 4A01     		.2byte	0x14a
 6925 1bb2 0D       		.byte	0xd
 6926 1bb3 44       		.uleb128 0x44
 6927 1bb4 01       		.byte	0x1
 6928 1bb5 01       		.byte	0x1
 6929 1bb6 70010000 		.4byte	.LASF231
 6930 1bba 70010000 		.4byte	.LASF231
 6931 1bbe 0E       		.byte	0xe
 6932 1bbf 9704     		.2byte	0x497
 6933 1bc1 06       		.byte	0x6
 6934 1bc2 44       		.uleb128 0x44
 6935 1bc3 01       		.byte	0x1
ARM GAS  /tmp/cc4r6sqw.s 			page 144


 6936 1bc4 01       		.byte	0x1
 6937 1bc5 55050000 		.4byte	.LASF232
 6938 1bc9 55050000 		.4byte	.LASF232
 6939 1bcd 09       		.byte	0x9
 6940 1bce 6403     		.2byte	0x364
 6941 1bd0 0C       		.byte	0xc
 6942 1bd1 45       		.uleb128 0x45
 6943 1bd2 01       		.byte	0x1
 6944 1bd3 01       		.byte	0x1
 6945 1bd4 FE030000 		.4byte	.LASF233
 6946 1bd8 FE030000 		.4byte	.LASF233
 6947 1bdc 0F       		.byte	0xf
 6948 1bdd E3       		.byte	0xe3
 6949 1bde 08       		.byte	0x8
 6950 1bdf 44       		.uleb128 0x44
 6951 1be0 01       		.byte	0x1
 6952 1be1 01       		.byte	0x1
 6953 1be2 2C080000 		.4byte	.LASF234
 6954 1be6 2C080000 		.4byte	.LASF234
 6955 1bea 09       		.byte	0x9
 6956 1beb 7303     		.2byte	0x373
 6957 1bed 0D       		.byte	0xd
 6958 1bee 44       		.uleb128 0x44
 6959 1bef 01       		.byte	0x1
 6960 1bf0 01       		.byte	0x1
 6961 1bf1 93040000 		.4byte	.LASF235
 6962 1bf5 93040000 		.4byte	.LASF235
 6963 1bf9 09       		.byte	0x9
 6964 1bfa 8A02     		.2byte	0x28a
 6965 1bfc 0C       		.byte	0xc
 6966 1bfd 44       		.uleb128 0x44
 6967 1bfe 01       		.byte	0x1
 6968 1bff 01       		.byte	0x1
 6969 1c00 2A070000 		.4byte	.LASF236
 6970 1c04 2A070000 		.4byte	.LASF236
 6971 1c08 0E       		.byte	0xe
 6972 1c09 F602     		.2byte	0x2f6
 6973 1c0b 06       		.byte	0x6
 6974 1c0c 45       		.uleb128 0x45
 6975 1c0d 01       		.byte	0x1
 6976 1c0e 01       		.byte	0x1
 6977 1c0f 320C0000 		.4byte	.LASF237
 6978 1c13 320C0000 		.4byte	.LASF237
 6979 1c17 10       		.byte	0x10
 6980 1c18 2C       		.byte	0x2c
 6981 1c19 06       		.byte	0x6
 6982 1c1a 44       		.uleb128 0x44
 6983 1c1b 01       		.byte	0x1
 6984 1c1c 01       		.byte	0x1
 6985 1c1d 34040000 		.4byte	.LASF238
 6986 1c21 34040000 		.4byte	.LASF238
 6987 1c25 09       		.byte	0x9
 6988 1c26 E802     		.2byte	0x2e8
 6989 1c28 0C       		.byte	0xc
 6990 1c29 45       		.uleb128 0x45
 6991 1c2a 01       		.byte	0x1
 6992 1c2b 01       		.byte	0x1
ARM GAS  /tmp/cc4r6sqw.s 			page 145


 6993 1c2c E3080000 		.4byte	.LASF239
 6994 1c30 E3080000 		.4byte	.LASF239
 6995 1c34 10       		.byte	0x10
 6996 1c35 30       		.byte	0x30
 6997 1c36 06       		.byte	0x6
 6998 1c37 46       		.uleb128 0x46
 6999 1c38 01       		.byte	0x1
 7000 1c39 01       		.byte	0x1
 7001 1c3a D00B0000 		.4byte	.LASF240
 7002 1c3e D00B0000 		.4byte	.LASF240
 7003 1c42 46       		.uleb128 0x46
 7004 1c43 01       		.byte	0x1
 7005 1c44 01       		.byte	0x1
 7006 1c45 3F040000 		.4byte	.LASF241
 7007 1c49 3F040000 		.4byte	.LASF241
 7008 1c4d 46       		.uleb128 0x46
 7009 1c4e 01       		.byte	0x1
 7010 1c4f 01       		.byte	0x1
 7011 1c50 66060000 		.4byte	.LASF242
 7012 1c54 66060000 		.4byte	.LASF242
 7013 1c58 46       		.uleb128 0x46
 7014 1c59 01       		.byte	0x1
 7015 1c5a 01       		.byte	0x1
 7016 1c5b AC0B0000 		.4byte	.LASF243
 7017 1c5f AC0B0000 		.4byte	.LASF243
 7018 1c63 45       		.uleb128 0x45
 7019 1c64 01       		.byte	0x1
 7020 1c65 01       		.byte	0x1
 7021 1c66 64080000 		.4byte	.LASF244
 7022 1c6a 64080000 		.4byte	.LASF244
 7023 1c6e 10       		.byte	0x10
 7024 1c6f 2F       		.byte	0x2f
 7025 1c70 06       		.byte	0x6
 7026 1c71 45       		.uleb128 0x45
 7027 1c72 01       		.byte	0x1
 7028 1c73 01       		.byte	0x1
 7029 1c74 58000000 		.4byte	.LASF245
 7030 1c78 58000000 		.4byte	.LASF245
 7031 1c7c 10       		.byte	0x10
 7032 1c7d 2E       		.byte	0x2e
 7033 1c7e 06       		.byte	0x6
 7034 1c7f 44       		.uleb128 0x44
 7035 1c80 01       		.byte	0x1
 7036 1c81 01       		.byte	0x1
 7037 1c82 AD040000 		.4byte	.LASF246
 7038 1c86 AD040000 		.4byte	.LASF246
 7039 1c8a 0C       		.byte	0xc
 7040 1c8b 6101     		.2byte	0x161
 7041 1c8d 09       		.byte	0x9
 7042 1c8e 44       		.uleb128 0x44
 7043 1c8f 01       		.byte	0x1
 7044 1c90 01       		.byte	0x1
 7045 1c91 48030000 		.4byte	.LASF247
 7046 1c95 48030000 		.4byte	.LASF247
 7047 1c99 11       		.byte	0x11
 7048 1c9a B502     		.2byte	0x2b5
 7049 1c9c 06       		.byte	0x6
ARM GAS  /tmp/cc4r6sqw.s 			page 146


 7050 1c9d 44       		.uleb128 0x44
 7051 1c9e 01       		.byte	0x1
 7052 1c9f 01       		.byte	0x1
 7053 1ca0 35070000 		.4byte	.LASF248
 7054 1ca4 35070000 		.4byte	.LASF248
 7055 1ca8 0C       		.byte	0xc
 7056 1ca9 5F01     		.2byte	0x15f
 7057 1cab 06       		.byte	0x6
 7058 1cac 44       		.uleb128 0x44
 7059 1cad 01       		.byte	0x1
 7060 1cae 01       		.byte	0x1
 7061 1caf 36000000 		.4byte	.LASF249
 7062 1cb3 36000000 		.4byte	.LASF249
 7063 1cb7 0D       		.byte	0xd
 7064 1cb8 7A01     		.2byte	0x17a
 7065 1cba 06       		.byte	0x6
 7066 1cbb 44       		.uleb128 0x44
 7067 1cbc 01       		.byte	0x1
 7068 1cbd 01       		.byte	0x1
 7069 1cbe 35060000 		.4byte	.LASF250
 7070 1cc2 35060000 		.4byte	.LASF250
 7071 1cc6 0D       		.byte	0xd
 7072 1cc7 8601     		.2byte	0x186
 7073 1cc9 0C       		.byte	0xc
 7074 1cca 44       		.uleb128 0x44
 7075 1ccb 01       		.byte	0x1
 7076 1ccc 01       		.byte	0x1
 7077 1ccd F3030000 		.4byte	.LASF251
 7078 1cd1 F3030000 		.4byte	.LASF251
 7079 1cd5 0D       		.byte	0xd
 7080 1cd6 6E01     		.2byte	0x16e
 7081 1cd8 06       		.byte	0x6
 7082 1cd9 44       		.uleb128 0x44
 7083 1cda 01       		.byte	0x1
 7084 1cdb 01       		.byte	0x1
 7085 1cdc 17080000 		.4byte	.LASF252
 7086 1ce0 17080000 		.4byte	.LASF252
 7087 1ce4 0D       		.byte	0xd
 7088 1ce5 7201     		.2byte	0x172
 7089 1ce7 06       		.byte	0x6
 7090 1ce8 46       		.uleb128 0x46
 7091 1ce9 01       		.byte	0x1
 7092 1cea 01       		.byte	0x1
 7093 1ceb 86060000 		.4byte	.LASF253
 7094 1cef 86060000 		.4byte	.LASF253
 7095 1cf3 46       		.uleb128 0x46
 7096 1cf4 01       		.byte	0x1
 7097 1cf5 01       		.byte	0x1
 7098 1cf6 8D030000 		.4byte	.LASF254
 7099 1cfa 8D030000 		.4byte	.LASF254
 7100 1cfe 46       		.uleb128 0x46
 7101 1cff 01       		.byte	0x1
 7102 1d00 01       		.byte	0x1
 7103 1d01 99080000 		.4byte	.LASF255
 7104 1d05 99080000 		.4byte	.LASF255
 7105 1d09 46       		.uleb128 0x46
 7106 1d0a 01       		.byte	0x1
ARM GAS  /tmp/cc4r6sqw.s 			page 147


 7107 1d0b 01       		.byte	0x1
 7108 1d0c FA0A0000 		.4byte	.LASF256
 7109 1d10 FA0A0000 		.4byte	.LASF256
 7110 1d14 00       		.byte	0
 7111              		.section	.debug_abbrev,"",%progbits
 7112              	.Ldebug_abbrev0:
 7113 0000 01       		.uleb128 0x1
 7114 0001 11       		.uleb128 0x11
 7115 0002 01       		.byte	0x1
 7116 0003 25       		.uleb128 0x25
 7117 0004 0E       		.uleb128 0xe
 7118 0005 13       		.uleb128 0x13
 7119 0006 0B       		.uleb128 0xb
 7120 0007 03       		.uleb128 0x3
 7121 0008 0E       		.uleb128 0xe
 7122 0009 1B       		.uleb128 0x1b
 7123 000a 0E       		.uleb128 0xe
 7124 000b 55       		.uleb128 0x55
 7125 000c 06       		.uleb128 0x6
 7126 000d 11       		.uleb128 0x11
 7127 000e 01       		.uleb128 0x1
 7128 000f 52       		.uleb128 0x52
 7129 0010 01       		.uleb128 0x1
 7130 0011 10       		.uleb128 0x10
 7131 0012 06       		.uleb128 0x6
 7132 0013 00       		.byte	0
 7133 0014 00       		.byte	0
 7134 0015 02       		.uleb128 0x2
 7135 0016 24       		.uleb128 0x24
 7136 0017 00       		.byte	0
 7137 0018 0B       		.uleb128 0xb
 7138 0019 0B       		.uleb128 0xb
 7139 001a 3E       		.uleb128 0x3e
 7140 001b 0B       		.uleb128 0xb
 7141 001c 03       		.uleb128 0x3
 7142 001d 08       		.uleb128 0x8
 7143 001e 00       		.byte	0
 7144 001f 00       		.byte	0
 7145 0020 03       		.uleb128 0x3
 7146 0021 24       		.uleb128 0x24
 7147 0022 00       		.byte	0
 7148 0023 0B       		.uleb128 0xb
 7149 0024 0B       		.uleb128 0xb
 7150 0025 3E       		.uleb128 0x3e
 7151 0026 0B       		.uleb128 0xb
 7152 0027 03       		.uleb128 0x3
 7153 0028 0E       		.uleb128 0xe
 7154 0029 00       		.byte	0
 7155 002a 00       		.byte	0
 7156 002b 04       		.uleb128 0x4
 7157 002c 16       		.uleb128 0x16
 7158 002d 00       		.byte	0
 7159 002e 03       		.uleb128 0x3
 7160 002f 0E       		.uleb128 0xe
 7161 0030 3A       		.uleb128 0x3a
 7162 0031 0B       		.uleb128 0xb
 7163 0032 3B       		.uleb128 0x3b
ARM GAS  /tmp/cc4r6sqw.s 			page 148


 7164 0033 0B       		.uleb128 0xb
 7165 0034 39       		.uleb128 0x39
 7166 0035 0B       		.uleb128 0xb
 7167 0036 49       		.uleb128 0x49
 7168 0037 13       		.uleb128 0x13
 7169 0038 00       		.byte	0
 7170 0039 00       		.byte	0
 7171 003a 05       		.uleb128 0x5
 7172 003b 35       		.uleb128 0x35
 7173 003c 00       		.byte	0
 7174 003d 49       		.uleb128 0x49
 7175 003e 13       		.uleb128 0x13
 7176 003f 00       		.byte	0
 7177 0040 00       		.byte	0
 7178 0041 06       		.uleb128 0x6
 7179 0042 0F       		.uleb128 0xf
 7180 0043 00       		.byte	0
 7181 0044 0B       		.uleb128 0xb
 7182 0045 0B       		.uleb128 0xb
 7183 0046 00       		.byte	0
 7184 0047 00       		.byte	0
 7185 0048 07       		.uleb128 0x7
 7186 0049 0F       		.uleb128 0xf
 7187 004a 00       		.byte	0
 7188 004b 0B       		.uleb128 0xb
 7189 004c 0B       		.uleb128 0xb
 7190 004d 49       		.uleb128 0x49
 7191 004e 13       		.uleb128 0x13
 7192 004f 00       		.byte	0
 7193 0050 00       		.byte	0
 7194 0051 08       		.uleb128 0x8
 7195 0052 13       		.uleb128 0x13
 7196 0053 00       		.byte	0
 7197 0054 03       		.uleb128 0x3
 7198 0055 0E       		.uleb128 0xe
 7199 0056 3C       		.uleb128 0x3c
 7200 0057 0C       		.uleb128 0xc
 7201 0058 00       		.byte	0
 7202 0059 00       		.byte	0
 7203 005a 09       		.uleb128 0x9
 7204 005b 01       		.uleb128 0x1
 7205 005c 01       		.byte	0x1
 7206 005d 49       		.uleb128 0x49
 7207 005e 13       		.uleb128 0x13
 7208 005f 01       		.uleb128 0x1
 7209 0060 13       		.uleb128 0x13
 7210 0061 00       		.byte	0
 7211 0062 00       		.byte	0
 7212 0063 0A       		.uleb128 0xa
 7213 0064 21       		.uleb128 0x21
 7214 0065 00       		.byte	0
 7215 0066 49       		.uleb128 0x49
 7216 0067 13       		.uleb128 0x13
 7217 0068 2F       		.uleb128 0x2f
 7218 0069 0B       		.uleb128 0xb
 7219 006a 00       		.byte	0
 7220 006b 00       		.byte	0
ARM GAS  /tmp/cc4r6sqw.s 			page 149


 7221 006c 0B       		.uleb128 0xb
 7222 006d 04       		.uleb128 0x4
 7223 006e 01       		.byte	0x1
 7224 006f 03       		.uleb128 0x3
 7225 0070 0E       		.uleb128 0xe
 7226 0071 3E       		.uleb128 0x3e
 7227 0072 0B       		.uleb128 0xb
 7228 0073 0B       		.uleb128 0xb
 7229 0074 0B       		.uleb128 0xb
 7230 0075 49       		.uleb128 0x49
 7231 0076 13       		.uleb128 0x13
 7232 0077 3A       		.uleb128 0x3a
 7233 0078 0B       		.uleb128 0xb
 7234 0079 3B       		.uleb128 0x3b
 7235 007a 0B       		.uleb128 0xb
 7236 007b 39       		.uleb128 0x39
 7237 007c 0B       		.uleb128 0xb
 7238 007d 01       		.uleb128 0x1
 7239 007e 13       		.uleb128 0x13
 7240 007f 00       		.byte	0
 7241 0080 00       		.byte	0
 7242 0081 0C       		.uleb128 0xc
 7243 0082 28       		.uleb128 0x28
 7244 0083 00       		.byte	0
 7245 0084 03       		.uleb128 0x3
 7246 0085 0E       		.uleb128 0xe
 7247 0086 1C       		.uleb128 0x1c
 7248 0087 0D       		.uleb128 0xd
 7249 0088 00       		.byte	0
 7250 0089 00       		.byte	0
 7251 008a 0D       		.uleb128 0xd
 7252 008b 28       		.uleb128 0x28
 7253 008c 00       		.byte	0
 7254 008d 03       		.uleb128 0x3
 7255 008e 0E       		.uleb128 0xe
 7256 008f 1C       		.uleb128 0x1c
 7257 0090 0B       		.uleb128 0xb
 7258 0091 00       		.byte	0
 7259 0092 00       		.byte	0
 7260 0093 0E       		.uleb128 0xe
 7261 0094 16       		.uleb128 0x16
 7262 0095 00       		.byte	0
 7263 0096 03       		.uleb128 0x3
 7264 0097 0E       		.uleb128 0xe
 7265 0098 3A       		.uleb128 0x3a
 7266 0099 0B       		.uleb128 0xb
 7267 009a 3B       		.uleb128 0x3b
 7268 009b 05       		.uleb128 0x5
 7269 009c 39       		.uleb128 0x39
 7270 009d 0B       		.uleb128 0xb
 7271 009e 49       		.uleb128 0x49
 7272 009f 13       		.uleb128 0x13
 7273 00a0 00       		.byte	0
 7274 00a1 00       		.byte	0
 7275 00a2 0F       		.uleb128 0xf
 7276 00a3 13       		.uleb128 0x13
 7277 00a4 01       		.byte	0x1
ARM GAS  /tmp/cc4r6sqw.s 			page 150


 7278 00a5 0B       		.uleb128 0xb
 7279 00a6 05       		.uleb128 0x5
 7280 00a7 3A       		.uleb128 0x3a
 7281 00a8 0B       		.uleb128 0xb
 7282 00a9 3B       		.uleb128 0x3b
 7283 00aa 0B       		.uleb128 0xb
 7284 00ab 39       		.uleb128 0x39
 7285 00ac 0B       		.uleb128 0xb
 7286 00ad 01       		.uleb128 0x1
 7287 00ae 13       		.uleb128 0x13
 7288 00af 00       		.byte	0
 7289 00b0 00       		.byte	0
 7290 00b1 10       		.uleb128 0x10
 7291 00b2 0D       		.uleb128 0xd
 7292 00b3 00       		.byte	0
 7293 00b4 03       		.uleb128 0x3
 7294 00b5 0E       		.uleb128 0xe
 7295 00b6 3A       		.uleb128 0x3a
 7296 00b7 0B       		.uleb128 0xb
 7297 00b8 3B       		.uleb128 0x3b
 7298 00b9 0B       		.uleb128 0xb
 7299 00ba 39       		.uleb128 0x39
 7300 00bb 0B       		.uleb128 0xb
 7301 00bc 49       		.uleb128 0x49
 7302 00bd 13       		.uleb128 0x13
 7303 00be 38       		.uleb128 0x38
 7304 00bf 0A       		.uleb128 0xa
 7305 00c0 00       		.byte	0
 7306 00c1 00       		.byte	0
 7307 00c2 11       		.uleb128 0x11
 7308 00c3 0D       		.uleb128 0xd
 7309 00c4 00       		.byte	0
 7310 00c5 03       		.uleb128 0x3
 7311 00c6 08       		.uleb128 0x8
 7312 00c7 3A       		.uleb128 0x3a
 7313 00c8 0B       		.uleb128 0xb
 7314 00c9 3B       		.uleb128 0x3b
 7315 00ca 0B       		.uleb128 0xb
 7316 00cb 39       		.uleb128 0x39
 7317 00cc 0B       		.uleb128 0xb
 7318 00cd 49       		.uleb128 0x49
 7319 00ce 13       		.uleb128 0x13
 7320 00cf 38       		.uleb128 0x38
 7321 00d0 0A       		.uleb128 0xa
 7322 00d1 00       		.byte	0
 7323 00d2 00       		.byte	0
 7324 00d3 12       		.uleb128 0x12
 7325 00d4 21       		.uleb128 0x21
 7326 00d5 00       		.byte	0
 7327 00d6 49       		.uleb128 0x49
 7328 00d7 13       		.uleb128 0x13
 7329 00d8 2F       		.uleb128 0x2f
 7330 00d9 05       		.uleb128 0x5
 7331 00da 00       		.byte	0
 7332 00db 00       		.byte	0
 7333 00dc 13       		.uleb128 0x13
 7334 00dd 16       		.uleb128 0x16
ARM GAS  /tmp/cc4r6sqw.s 			page 151


 7335 00de 00       		.byte	0
 7336 00df 03       		.uleb128 0x3
 7337 00e0 08       		.uleb128 0x8
 7338 00e1 3A       		.uleb128 0x3a
 7339 00e2 0B       		.uleb128 0xb
 7340 00e3 3B       		.uleb128 0x3b
 7341 00e4 05       		.uleb128 0x5
 7342 00e5 39       		.uleb128 0x39
 7343 00e6 0B       		.uleb128 0xb
 7344 00e7 49       		.uleb128 0x49
 7345 00e8 13       		.uleb128 0x13
 7346 00e9 00       		.byte	0
 7347 00ea 00       		.byte	0
 7348 00eb 14       		.uleb128 0x14
 7349 00ec 04       		.uleb128 0x4
 7350 00ed 01       		.byte	0x1
 7351 00ee 3E       		.uleb128 0x3e
 7352 00ef 0B       		.uleb128 0xb
 7353 00f0 0B       		.uleb128 0xb
 7354 00f1 0B       		.uleb128 0xb
 7355 00f2 49       		.uleb128 0x49
 7356 00f3 13       		.uleb128 0x13
 7357 00f4 3A       		.uleb128 0x3a
 7358 00f5 0B       		.uleb128 0xb
 7359 00f6 3B       		.uleb128 0x3b
 7360 00f7 05       		.uleb128 0x5
 7361 00f8 39       		.uleb128 0x39
 7362 00f9 0B       		.uleb128 0xb
 7363 00fa 01       		.uleb128 0x1
 7364 00fb 13       		.uleb128 0x13
 7365 00fc 00       		.byte	0
 7366 00fd 00       		.byte	0
 7367 00fe 15       		.uleb128 0x15
 7368 00ff 28       		.uleb128 0x28
 7369 0100 00       		.byte	0
 7370 0101 03       		.uleb128 0x3
 7371 0102 08       		.uleb128 0x8
 7372 0103 1C       		.uleb128 0x1c
 7373 0104 0B       		.uleb128 0xb
 7374 0105 00       		.byte	0
 7375 0106 00       		.byte	0
 7376 0107 16       		.uleb128 0x16
 7377 0108 13       		.uleb128 0x13
 7378 0109 01       		.byte	0x1
 7379 010a 0B       		.uleb128 0xb
 7380 010b 0B       		.uleb128 0xb
 7381 010c 3A       		.uleb128 0x3a
 7382 010d 0B       		.uleb128 0xb
 7383 010e 3B       		.uleb128 0x3b
 7384 010f 05       		.uleb128 0x5
 7385 0110 39       		.uleb128 0x39
 7386 0111 0B       		.uleb128 0xb
 7387 0112 01       		.uleb128 0x1
 7388 0113 13       		.uleb128 0x13
 7389 0114 00       		.byte	0
 7390 0115 00       		.byte	0
 7391 0116 17       		.uleb128 0x17
ARM GAS  /tmp/cc4r6sqw.s 			page 152


 7392 0117 0D       		.uleb128 0xd
 7393 0118 00       		.byte	0
 7394 0119 03       		.uleb128 0x3
 7395 011a 08       		.uleb128 0x8
 7396 011b 3A       		.uleb128 0x3a
 7397 011c 0B       		.uleb128 0xb
 7398 011d 3B       		.uleb128 0x3b
 7399 011e 05       		.uleb128 0x5
 7400 011f 39       		.uleb128 0x39
 7401 0120 0B       		.uleb128 0xb
 7402 0121 49       		.uleb128 0x49
 7403 0122 13       		.uleb128 0x13
 7404 0123 38       		.uleb128 0x38
 7405 0124 0A       		.uleb128 0xa
 7406 0125 00       		.byte	0
 7407 0126 00       		.byte	0
 7408 0127 18       		.uleb128 0x18
 7409 0128 0D       		.uleb128 0xd
 7410 0129 00       		.byte	0
 7411 012a 03       		.uleb128 0x3
 7412 012b 0E       		.uleb128 0xe
 7413 012c 3A       		.uleb128 0x3a
 7414 012d 0B       		.uleb128 0xb
 7415 012e 3B       		.uleb128 0x3b
 7416 012f 05       		.uleb128 0x5
 7417 0130 39       		.uleb128 0x39
 7418 0131 0B       		.uleb128 0xb
 7419 0132 49       		.uleb128 0x49
 7420 0133 13       		.uleb128 0x13
 7421 0134 38       		.uleb128 0x38
 7422 0135 0A       		.uleb128 0xa
 7423 0136 00       		.byte	0
 7424 0137 00       		.byte	0
 7425 0138 19       		.uleb128 0x19
 7426 0139 04       		.uleb128 0x4
 7427 013a 01       		.byte	0x1
 7428 013b 3E       		.uleb128 0x3e
 7429 013c 0B       		.uleb128 0xb
 7430 013d 0B       		.uleb128 0xb
 7431 013e 0B       		.uleb128 0xb
 7432 013f 49       		.uleb128 0x49
 7433 0140 13       		.uleb128 0x13
 7434 0141 3A       		.uleb128 0x3a
 7435 0142 0B       		.uleb128 0xb
 7436 0143 3B       		.uleb128 0x3b
 7437 0144 0B       		.uleb128 0xb
 7438 0145 39       		.uleb128 0x39
 7439 0146 0B       		.uleb128 0xb
 7440 0147 01       		.uleb128 0x1
 7441 0148 13       		.uleb128 0x13
 7442 0149 00       		.byte	0
 7443 014a 00       		.byte	0
 7444 014b 1A       		.uleb128 0x1a
 7445 014c 13       		.uleb128 0x13
 7446 014d 01       		.byte	0x1
 7447 014e 0B       		.uleb128 0xb
 7448 014f 0B       		.uleb128 0xb
ARM GAS  /tmp/cc4r6sqw.s 			page 153


 7449 0150 3A       		.uleb128 0x3a
 7450 0151 0B       		.uleb128 0xb
 7451 0152 3B       		.uleb128 0x3b
 7452 0153 0B       		.uleb128 0xb
 7453 0154 39       		.uleb128 0x39
 7454 0155 0B       		.uleb128 0xb
 7455 0156 01       		.uleb128 0x1
 7456 0157 13       		.uleb128 0x13
 7457 0158 00       		.byte	0
 7458 0159 00       		.byte	0
 7459 015a 1B       		.uleb128 0x1b
 7460 015b 34       		.uleb128 0x34
 7461 015c 00       		.byte	0
 7462 015d 03       		.uleb128 0x3
 7463 015e 0E       		.uleb128 0xe
 7464 015f 3A       		.uleb128 0x3a
 7465 0160 0B       		.uleb128 0xb
 7466 0161 3B       		.uleb128 0x3b
 7467 0162 0B       		.uleb128 0xb
 7468 0163 39       		.uleb128 0x39
 7469 0164 0B       		.uleb128 0xb
 7470 0165 49       		.uleb128 0x49
 7471 0166 13       		.uleb128 0x13
 7472 0167 02       		.uleb128 0x2
 7473 0168 0A       		.uleb128 0xa
 7474 0169 00       		.byte	0
 7475 016a 00       		.byte	0
 7476 016b 1C       		.uleb128 0x1c
 7477 016c 2E       		.uleb128 0x2e
 7478 016d 01       		.byte	0x1
 7479 016e 3F       		.uleb128 0x3f
 7480 016f 0C       		.uleb128 0xc
 7481 0170 03       		.uleb128 0x3
 7482 0171 0E       		.uleb128 0xe
 7483 0172 3A       		.uleb128 0x3a
 7484 0173 0B       		.uleb128 0xb
 7485 0174 3B       		.uleb128 0x3b
 7486 0175 05       		.uleb128 0x5
 7487 0176 39       		.uleb128 0x39
 7488 0177 0B       		.uleb128 0xb
 7489 0178 27       		.uleb128 0x27
 7490 0179 0C       		.uleb128 0xc
 7491 017a 49       		.uleb128 0x49
 7492 017b 13       		.uleb128 0x13
 7493 017c 11       		.uleb128 0x11
 7494 017d 01       		.uleb128 0x1
 7495 017e 12       		.uleb128 0x12
 7496 017f 01       		.uleb128 0x1
 7497 0180 40       		.uleb128 0x40
 7498 0181 06       		.uleb128 0x6
 7499 0182 9742     		.uleb128 0x2117
 7500 0184 0C       		.uleb128 0xc
 7501 0185 01       		.uleb128 0x1
 7502 0186 13       		.uleb128 0x13
 7503 0187 00       		.byte	0
 7504 0188 00       		.byte	0
 7505 0189 1D       		.uleb128 0x1d
ARM GAS  /tmp/cc4r6sqw.s 			page 154


 7506 018a 898201   		.uleb128 0x4109
 7507 018d 01       		.byte	0x1
 7508 018e 11       		.uleb128 0x11
 7509 018f 01       		.uleb128 0x1
 7510 0190 31       		.uleb128 0x31
 7511 0191 13       		.uleb128 0x13
 7512 0192 01       		.uleb128 0x1
 7513 0193 13       		.uleb128 0x13
 7514 0194 00       		.byte	0
 7515 0195 00       		.byte	0
 7516 0196 1E       		.uleb128 0x1e
 7517 0197 8A8201   		.uleb128 0x410a
 7518 019a 00       		.byte	0
 7519 019b 02       		.uleb128 0x2
 7520 019c 0A       		.uleb128 0xa
 7521 019d 9142     		.uleb128 0x2111
 7522 019f 0A       		.uleb128 0xa
 7523 01a0 00       		.byte	0
 7524 01a1 00       		.byte	0
 7525 01a2 1F       		.uleb128 0x1f
 7526 01a3 898201   		.uleb128 0x4109
 7527 01a6 00       		.byte	0
 7528 01a7 11       		.uleb128 0x11
 7529 01a8 01       		.uleb128 0x1
 7530 01a9 31       		.uleb128 0x31
 7531 01aa 13       		.uleb128 0x13
 7532 01ab 00       		.byte	0
 7533 01ac 00       		.byte	0
 7534 01ad 20       		.uleb128 0x20
 7535 01ae 2E       		.uleb128 0x2e
 7536 01af 01       		.byte	0x1
 7537 01b0 03       		.uleb128 0x3
 7538 01b1 0E       		.uleb128 0xe
 7539 01b2 3A       		.uleb128 0x3a
 7540 01b3 0B       		.uleb128 0xb
 7541 01b4 3B       		.uleb128 0x3b
 7542 01b5 05       		.uleb128 0x5
 7543 01b6 39       		.uleb128 0x39
 7544 01b7 0B       		.uleb128 0xb
 7545 01b8 27       		.uleb128 0x27
 7546 01b9 0C       		.uleb128 0xc
 7547 01ba 11       		.uleb128 0x11
 7548 01bb 01       		.uleb128 0x1
 7549 01bc 12       		.uleb128 0x12
 7550 01bd 01       		.uleb128 0x1
 7551 01be 40       		.uleb128 0x40
 7552 01bf 06       		.uleb128 0x6
 7553 01c0 9742     		.uleb128 0x2117
 7554 01c2 0C       		.uleb128 0xc
 7555 01c3 01       		.uleb128 0x1
 7556 01c4 13       		.uleb128 0x13
 7557 01c5 00       		.byte	0
 7558 01c6 00       		.byte	0
 7559 01c7 21       		.uleb128 0x21
 7560 01c8 05       		.uleb128 0x5
 7561 01c9 00       		.byte	0
 7562 01ca 03       		.uleb128 0x3
ARM GAS  /tmp/cc4r6sqw.s 			page 155


 7563 01cb 0E       		.uleb128 0xe
 7564 01cc 3A       		.uleb128 0x3a
 7565 01cd 0B       		.uleb128 0xb
 7566 01ce 3B       		.uleb128 0x3b
 7567 01cf 05       		.uleb128 0x5
 7568 01d0 39       		.uleb128 0x39
 7569 01d1 0B       		.uleb128 0xb
 7570 01d2 49       		.uleb128 0x49
 7571 01d3 13       		.uleb128 0x13
 7572 01d4 02       		.uleb128 0x2
 7573 01d5 06       		.uleb128 0x6
 7574 01d6 B742     		.uleb128 0x2137
 7575 01d8 06       		.uleb128 0x6
 7576 01d9 00       		.byte	0
 7577 01da 00       		.byte	0
 7578 01db 22       		.uleb128 0x22
 7579 01dc 34       		.uleb128 0x34
 7580 01dd 00       		.byte	0
 7581 01de 03       		.uleb128 0x3
 7582 01df 0E       		.uleb128 0xe
 7583 01e0 3A       		.uleb128 0x3a
 7584 01e1 0B       		.uleb128 0xb
 7585 01e2 3B       		.uleb128 0x3b
 7586 01e3 05       		.uleb128 0x5
 7587 01e4 39       		.uleb128 0x39
 7588 01e5 0B       		.uleb128 0xb
 7589 01e6 49       		.uleb128 0x49
 7590 01e7 13       		.uleb128 0x13
 7591 01e8 02       		.uleb128 0x2
 7592 01e9 0A       		.uleb128 0xa
 7593 01ea 00       		.byte	0
 7594 01eb 00       		.byte	0
 7595 01ec 23       		.uleb128 0x23
 7596 01ed 34       		.uleb128 0x34
 7597 01ee 00       		.byte	0
 7598 01ef 03       		.uleb128 0x3
 7599 01f0 0E       		.uleb128 0xe
 7600 01f1 3A       		.uleb128 0x3a
 7601 01f2 0B       		.uleb128 0xb
 7602 01f3 3B       		.uleb128 0x3b
 7603 01f4 05       		.uleb128 0x5
 7604 01f5 39       		.uleb128 0x39
 7605 01f6 0B       		.uleb128 0xb
 7606 01f7 49       		.uleb128 0x49
 7607 01f8 13       		.uleb128 0x13
 7608 01f9 02       		.uleb128 0x2
 7609 01fa 06       		.uleb128 0x6
 7610 01fb B742     		.uleb128 0x2137
 7611 01fd 06       		.uleb128 0x6
 7612 01fe 00       		.byte	0
 7613 01ff 00       		.byte	0
 7614 0200 24       		.uleb128 0x24
 7615 0201 898201   		.uleb128 0x4109
 7616 0204 01       		.byte	0x1
 7617 0205 11       		.uleb128 0x11
 7618 0206 01       		.uleb128 0x1
 7619 0207 31       		.uleb128 0x31
ARM GAS  /tmp/cc4r6sqw.s 			page 156


 7620 0208 13       		.uleb128 0x13
 7621 0209 00       		.byte	0
 7622 020a 00       		.byte	0
 7623 020b 25       		.uleb128 0x25
 7624 020c 2E       		.uleb128 0x2e
 7625 020d 01       		.byte	0x1
 7626 020e 03       		.uleb128 0x3
 7627 020f 0E       		.uleb128 0xe
 7628 0210 3A       		.uleb128 0x3a
 7629 0211 0B       		.uleb128 0xb
 7630 0212 3B       		.uleb128 0x3b
 7631 0213 0B       		.uleb128 0xb
 7632 0214 39       		.uleb128 0x39
 7633 0215 0B       		.uleb128 0xb
 7634 0216 27       		.uleb128 0x27
 7635 0217 0C       		.uleb128 0xc
 7636 0218 11       		.uleb128 0x11
 7637 0219 01       		.uleb128 0x1
 7638 021a 12       		.uleb128 0x12
 7639 021b 01       		.uleb128 0x1
 7640 021c 40       		.uleb128 0x40
 7641 021d 06       		.uleb128 0x6
 7642 021e 9742     		.uleb128 0x2117
 7643 0220 0C       		.uleb128 0xc
 7644 0221 01       		.uleb128 0x1
 7645 0222 13       		.uleb128 0x13
 7646 0223 00       		.byte	0
 7647 0224 00       		.byte	0
 7648 0225 26       		.uleb128 0x26
 7649 0226 05       		.uleb128 0x5
 7650 0227 00       		.byte	0
 7651 0228 03       		.uleb128 0x3
 7652 0229 0E       		.uleb128 0xe
 7653 022a 3A       		.uleb128 0x3a
 7654 022b 0B       		.uleb128 0xb
 7655 022c 3B       		.uleb128 0x3b
 7656 022d 0B       		.uleb128 0xb
 7657 022e 39       		.uleb128 0x39
 7658 022f 0B       		.uleb128 0xb
 7659 0230 49       		.uleb128 0x49
 7660 0231 13       		.uleb128 0x13
 7661 0232 02       		.uleb128 0x2
 7662 0233 06       		.uleb128 0x6
 7663 0234 B742     		.uleb128 0x2137
 7664 0236 06       		.uleb128 0x6
 7665 0237 00       		.byte	0
 7666 0238 00       		.byte	0
 7667 0239 27       		.uleb128 0x27
 7668 023a 0B       		.uleb128 0xb
 7669 023b 01       		.byte	0x1
 7670 023c 11       		.uleb128 0x11
 7671 023d 01       		.uleb128 0x1
 7672 023e 12       		.uleb128 0x12
 7673 023f 01       		.uleb128 0x1
 7674 0240 01       		.uleb128 0x1
 7675 0241 13       		.uleb128 0x13
 7676 0242 00       		.byte	0
ARM GAS  /tmp/cc4r6sqw.s 			page 157


 7677 0243 00       		.byte	0
 7678 0244 28       		.uleb128 0x28
 7679 0245 34       		.uleb128 0x34
 7680 0246 00       		.byte	0
 7681 0247 03       		.uleb128 0x3
 7682 0248 08       		.uleb128 0x8
 7683 0249 3A       		.uleb128 0x3a
 7684 024a 0B       		.uleb128 0xb
 7685 024b 3B       		.uleb128 0x3b
 7686 024c 0B       		.uleb128 0xb
 7687 024d 39       		.uleb128 0x39
 7688 024e 0B       		.uleb128 0xb
 7689 024f 49       		.uleb128 0x49
 7690 0250 13       		.uleb128 0x13
 7691 0251 02       		.uleb128 0x2
 7692 0252 06       		.uleb128 0x6
 7693 0253 B742     		.uleb128 0x2137
 7694 0255 06       		.uleb128 0x6
 7695 0256 00       		.byte	0
 7696 0257 00       		.byte	0
 7697 0258 29       		.uleb128 0x29
 7698 0259 2E       		.uleb128 0x2e
 7699 025a 01       		.byte	0x1
 7700 025b 3F       		.uleb128 0x3f
 7701 025c 0C       		.uleb128 0xc
 7702 025d 03       		.uleb128 0x3
 7703 025e 0E       		.uleb128 0xe
 7704 025f 3A       		.uleb128 0x3a
 7705 0260 0B       		.uleb128 0xb
 7706 0261 3B       		.uleb128 0x3b
 7707 0262 0B       		.uleb128 0xb
 7708 0263 39       		.uleb128 0x39
 7709 0264 0B       		.uleb128 0xb
 7710 0265 27       		.uleb128 0x27
 7711 0266 0C       		.uleb128 0xc
 7712 0267 11       		.uleb128 0x11
 7713 0268 01       		.uleb128 0x1
 7714 0269 12       		.uleb128 0x12
 7715 026a 01       		.uleb128 0x1
 7716 026b 40       		.uleb128 0x40
 7717 026c 06       		.uleb128 0x6
 7718 026d 9742     		.uleb128 0x2117
 7719 026f 0C       		.uleb128 0xc
 7720 0270 01       		.uleb128 0x1
 7721 0271 13       		.uleb128 0x13
 7722 0272 00       		.byte	0
 7723 0273 00       		.byte	0
 7724 0274 2A       		.uleb128 0x2a
 7725 0275 34       		.uleb128 0x34
 7726 0276 00       		.byte	0
 7727 0277 03       		.uleb128 0x3
 7728 0278 0E       		.uleb128 0xe
 7729 0279 3A       		.uleb128 0x3a
 7730 027a 0B       		.uleb128 0xb
 7731 027b 3B       		.uleb128 0x3b
 7732 027c 0B       		.uleb128 0xb
 7733 027d 39       		.uleb128 0x39
ARM GAS  /tmp/cc4r6sqw.s 			page 158


 7734 027e 0B       		.uleb128 0xb
 7735 027f 49       		.uleb128 0x49
 7736 0280 13       		.uleb128 0x13
 7737 0281 02       		.uleb128 0x2
 7738 0282 06       		.uleb128 0x6
 7739 0283 B742     		.uleb128 0x2137
 7740 0285 06       		.uleb128 0x6
 7741 0286 00       		.byte	0
 7742 0287 00       		.byte	0
 7743 0288 2B       		.uleb128 0x2b
 7744 0289 0B       		.uleb128 0xb
 7745 028a 01       		.byte	0x1
 7746 028b 55       		.uleb128 0x55
 7747 028c 06       		.uleb128 0x6
 7748 028d 01       		.uleb128 0x1
 7749 028e 13       		.uleb128 0x13
 7750 028f 00       		.byte	0
 7751 0290 00       		.byte	0
 7752 0291 2C       		.uleb128 0x2c
 7753 0292 2E       		.uleb128 0x2e
 7754 0293 01       		.byte	0x1
 7755 0294 3F       		.uleb128 0x3f
 7756 0295 0C       		.uleb128 0xc
 7757 0296 03       		.uleb128 0x3
 7758 0297 0E       		.uleb128 0xe
 7759 0298 3A       		.uleb128 0x3a
 7760 0299 0B       		.uleb128 0xb
 7761 029a 3B       		.uleb128 0x3b
 7762 029b 0B       		.uleb128 0xb
 7763 029c 39       		.uleb128 0x39
 7764 029d 0B       		.uleb128 0xb
 7765 029e 11       		.uleb128 0x11
 7766 029f 01       		.uleb128 0x1
 7767 02a0 12       		.uleb128 0x12
 7768 02a1 01       		.uleb128 0x1
 7769 02a2 40       		.uleb128 0x40
 7770 02a3 06       		.uleb128 0x6
 7771 02a4 9742     		.uleb128 0x2117
 7772 02a6 0C       		.uleb128 0xc
 7773 02a7 01       		.uleb128 0x1
 7774 02a8 13       		.uleb128 0x13
 7775 02a9 00       		.byte	0
 7776 02aa 00       		.byte	0
 7777 02ab 2D       		.uleb128 0x2d
 7778 02ac 898201   		.uleb128 0x4109
 7779 02af 00       		.byte	0
 7780 02b0 11       		.uleb128 0x11
 7781 02b1 01       		.uleb128 0x1
 7782 02b2 9542     		.uleb128 0x2115
 7783 02b4 0C       		.uleb128 0xc
 7784 02b5 31       		.uleb128 0x31
 7785 02b6 13       		.uleb128 0x13
 7786 02b7 00       		.byte	0
 7787 02b8 00       		.byte	0
 7788 02b9 2E       		.uleb128 0x2e
 7789 02ba 2E       		.uleb128 0x2e
 7790 02bb 01       		.byte	0x1
ARM GAS  /tmp/cc4r6sqw.s 			page 159


 7791 02bc 3F       		.uleb128 0x3f
 7792 02bd 0C       		.uleb128 0xc
 7793 02be 03       		.uleb128 0x3
 7794 02bf 0E       		.uleb128 0xe
 7795 02c0 3A       		.uleb128 0x3a
 7796 02c1 0B       		.uleb128 0xb
 7797 02c2 3B       		.uleb128 0x3b
 7798 02c3 0B       		.uleb128 0xb
 7799 02c4 39       		.uleb128 0x39
 7800 02c5 0B       		.uleb128 0xb
 7801 02c6 27       		.uleb128 0x27
 7802 02c7 0C       		.uleb128 0xc
 7803 02c8 49       		.uleb128 0x49
 7804 02c9 13       		.uleb128 0x13
 7805 02ca 11       		.uleb128 0x11
 7806 02cb 01       		.uleb128 0x1
 7807 02cc 12       		.uleb128 0x12
 7808 02cd 01       		.uleb128 0x1
 7809 02ce 40       		.uleb128 0x40
 7810 02cf 06       		.uleb128 0x6
 7811 02d0 9742     		.uleb128 0x2117
 7812 02d2 0C       		.uleb128 0xc
 7813 02d3 01       		.uleb128 0x1
 7814 02d4 13       		.uleb128 0x13
 7815 02d5 00       		.byte	0
 7816 02d6 00       		.byte	0
 7817 02d7 2F       		.uleb128 0x2f
 7818 02d8 2E       		.uleb128 0x2e
 7819 02d9 00       		.byte	0
 7820 02da 3F       		.uleb128 0x3f
 7821 02db 0C       		.uleb128 0xc
 7822 02dc 03       		.uleb128 0x3
 7823 02dd 0E       		.uleb128 0xe
 7824 02de 3A       		.uleb128 0x3a
 7825 02df 0B       		.uleb128 0xb
 7826 02e0 3B       		.uleb128 0x3b
 7827 02e1 0B       		.uleb128 0xb
 7828 02e2 39       		.uleb128 0x39
 7829 02e3 0B       		.uleb128 0xb
 7830 02e4 49       		.uleb128 0x49
 7831 02e5 13       		.uleb128 0x13
 7832 02e6 11       		.uleb128 0x11
 7833 02e7 01       		.uleb128 0x1
 7834 02e8 12       		.uleb128 0x12
 7835 02e9 01       		.uleb128 0x1
 7836 02ea 40       		.uleb128 0x40
 7837 02eb 0A       		.uleb128 0xa
 7838 02ec 9742     		.uleb128 0x2117
 7839 02ee 0C       		.uleb128 0xc
 7840 02ef 00       		.byte	0
 7841 02f0 00       		.byte	0
 7842 02f1 30       		.uleb128 0x30
 7843 02f2 2E       		.uleb128 0x2e
 7844 02f3 00       		.byte	0
 7845 02f4 3F       		.uleb128 0x3f
 7846 02f5 0C       		.uleb128 0xc
 7847 02f6 03       		.uleb128 0x3
ARM GAS  /tmp/cc4r6sqw.s 			page 160


 7848 02f7 0E       		.uleb128 0xe
 7849 02f8 3A       		.uleb128 0x3a
 7850 02f9 0B       		.uleb128 0xb
 7851 02fa 3B       		.uleb128 0x3b
 7852 02fb 0B       		.uleb128 0xb
 7853 02fc 39       		.uleb128 0x39
 7854 02fd 0B       		.uleb128 0xb
 7855 02fe 11       		.uleb128 0x11
 7856 02ff 01       		.uleb128 0x1
 7857 0300 12       		.uleb128 0x12
 7858 0301 01       		.uleb128 0x1
 7859 0302 40       		.uleb128 0x40
 7860 0303 0A       		.uleb128 0xa
 7861 0304 9742     		.uleb128 0x2117
 7862 0306 0C       		.uleb128 0xc
 7863 0307 00       		.byte	0
 7864 0308 00       		.byte	0
 7865 0309 31       		.uleb128 0x31
 7866 030a 2E       		.uleb128 0x2e
 7867 030b 00       		.byte	0
 7868 030c 3F       		.uleb128 0x3f
 7869 030d 0C       		.uleb128 0xc
 7870 030e 03       		.uleb128 0x3
 7871 030f 0E       		.uleb128 0xe
 7872 0310 3A       		.uleb128 0x3a
 7873 0311 0B       		.uleb128 0xb
 7874 0312 3B       		.uleb128 0x3b
 7875 0313 05       		.uleb128 0x5
 7876 0314 39       		.uleb128 0x39
 7877 0315 0B       		.uleb128 0xb
 7878 0316 11       		.uleb128 0x11
 7879 0317 01       		.uleb128 0x1
 7880 0318 12       		.uleb128 0x12
 7881 0319 01       		.uleb128 0x1
 7882 031a 40       		.uleb128 0x40
 7883 031b 0A       		.uleb128 0xa
 7884 031c 9742     		.uleb128 0x2117
 7885 031e 0C       		.uleb128 0xc
 7886 031f 00       		.byte	0
 7887 0320 00       		.byte	0
 7888 0321 32       		.uleb128 0x32
 7889 0322 2E       		.uleb128 0x2e
 7890 0323 01       		.byte	0x1
 7891 0324 3F       		.uleb128 0x3f
 7892 0325 0C       		.uleb128 0xc
 7893 0326 03       		.uleb128 0x3
 7894 0327 0E       		.uleb128 0xe
 7895 0328 3A       		.uleb128 0x3a
 7896 0329 0B       		.uleb128 0xb
 7897 032a 3B       		.uleb128 0x3b
 7898 032b 0B       		.uleb128 0xb
 7899 032c 39       		.uleb128 0x39
 7900 032d 0B       		.uleb128 0xb
 7901 032e 27       		.uleb128 0x27
 7902 032f 0C       		.uleb128 0xc
 7903 0330 11       		.uleb128 0x11
 7904 0331 01       		.uleb128 0x1
ARM GAS  /tmp/cc4r6sqw.s 			page 161


 7905 0332 12       		.uleb128 0x12
 7906 0333 01       		.uleb128 0x1
 7907 0334 40       		.uleb128 0x40
 7908 0335 0A       		.uleb128 0xa
 7909 0336 9742     		.uleb128 0x2117
 7910 0338 0C       		.uleb128 0xc
 7911 0339 01       		.uleb128 0x1
 7912 033a 13       		.uleb128 0x13
 7913 033b 00       		.byte	0
 7914 033c 00       		.byte	0
 7915 033d 33       		.uleb128 0x33
 7916 033e 2E       		.uleb128 0x2e
 7917 033f 01       		.byte	0x1
 7918 0340 3F       		.uleb128 0x3f
 7919 0341 0C       		.uleb128 0xc
 7920 0342 03       		.uleb128 0x3
 7921 0343 0E       		.uleb128 0xe
 7922 0344 3A       		.uleb128 0x3a
 7923 0345 0B       		.uleb128 0xb
 7924 0346 3B       		.uleb128 0x3b
 7925 0347 0B       		.uleb128 0xb
 7926 0348 39       		.uleb128 0x39
 7927 0349 0B       		.uleb128 0xb
 7928 034a 27       		.uleb128 0x27
 7929 034b 0C       		.uleb128 0xc
 7930 034c 20       		.uleb128 0x20
 7931 034d 0B       		.uleb128 0xb
 7932 034e 01       		.uleb128 0x1
 7933 034f 13       		.uleb128 0x13
 7934 0350 00       		.byte	0
 7935 0351 00       		.byte	0
 7936 0352 34       		.uleb128 0x34
 7937 0353 05       		.uleb128 0x5
 7938 0354 00       		.byte	0
 7939 0355 03       		.uleb128 0x3
 7940 0356 08       		.uleb128 0x8
 7941 0357 3A       		.uleb128 0x3a
 7942 0358 0B       		.uleb128 0xb
 7943 0359 3B       		.uleb128 0x3b
 7944 035a 0B       		.uleb128 0xb
 7945 035b 39       		.uleb128 0x39
 7946 035c 0B       		.uleb128 0xb
 7947 035d 49       		.uleb128 0x49
 7948 035e 13       		.uleb128 0x13
 7949 035f 00       		.byte	0
 7950 0360 00       		.byte	0
 7951 0361 35       		.uleb128 0x35
 7952 0362 34       		.uleb128 0x34
 7953 0363 00       		.byte	0
 7954 0364 03       		.uleb128 0x3
 7955 0365 08       		.uleb128 0x8
 7956 0366 3A       		.uleb128 0x3a
 7957 0367 0B       		.uleb128 0xb
 7958 0368 3B       		.uleb128 0x3b
 7959 0369 0B       		.uleb128 0xb
 7960 036a 39       		.uleb128 0x39
 7961 036b 0B       		.uleb128 0xb
ARM GAS  /tmp/cc4r6sqw.s 			page 162


 7962 036c 49       		.uleb128 0x49
 7963 036d 13       		.uleb128 0x13
 7964 036e 00       		.byte	0
 7965 036f 00       		.byte	0
 7966 0370 36       		.uleb128 0x36
 7967 0371 34       		.uleb128 0x34
 7968 0372 00       		.byte	0
 7969 0373 03       		.uleb128 0x3
 7970 0374 0E       		.uleb128 0xe
 7971 0375 3A       		.uleb128 0x3a
 7972 0376 0B       		.uleb128 0xb
 7973 0377 3B       		.uleb128 0x3b
 7974 0378 0B       		.uleb128 0xb
 7975 0379 39       		.uleb128 0x39
 7976 037a 0B       		.uleb128 0xb
 7977 037b 49       		.uleb128 0x49
 7978 037c 13       		.uleb128 0x13
 7979 037d 00       		.byte	0
 7980 037e 00       		.byte	0
 7981 037f 37       		.uleb128 0x37
 7982 0380 0B       		.uleb128 0xb
 7983 0381 01       		.byte	0x1
 7984 0382 00       		.byte	0
 7985 0383 00       		.byte	0
 7986 0384 38       		.uleb128 0x38
 7987 0385 05       		.uleb128 0x5
 7988 0386 00       		.byte	0
 7989 0387 03       		.uleb128 0x3
 7990 0388 08       		.uleb128 0x8
 7991 0389 3A       		.uleb128 0x3a
 7992 038a 0B       		.uleb128 0xb
 7993 038b 3B       		.uleb128 0x3b
 7994 038c 0B       		.uleb128 0xb
 7995 038d 39       		.uleb128 0x39
 7996 038e 0B       		.uleb128 0xb
 7997 038f 49       		.uleb128 0x49
 7998 0390 13       		.uleb128 0x13
 7999 0391 02       		.uleb128 0x2
 8000 0392 06       		.uleb128 0x6
 8001 0393 B742     		.uleb128 0x2137
 8002 0395 06       		.uleb128 0x6
 8003 0396 00       		.byte	0
 8004 0397 00       		.byte	0
 8005 0398 39       		.uleb128 0x39
 8006 0399 2E       		.uleb128 0x2e
 8007 039a 01       		.byte	0x1
 8008 039b 3F       		.uleb128 0x3f
 8009 039c 0C       		.uleb128 0xc
 8010 039d 03       		.uleb128 0x3
 8011 039e 0E       		.uleb128 0xe
 8012 039f 3A       		.uleb128 0x3a
 8013 03a0 0B       		.uleb128 0xb
 8014 03a1 3B       		.uleb128 0x3b
 8015 03a2 0B       		.uleb128 0xb
 8016 03a3 39       		.uleb128 0x39
 8017 03a4 0B       		.uleb128 0xb
 8018 03a5 49       		.uleb128 0x49
ARM GAS  /tmp/cc4r6sqw.s 			page 163


 8019 03a6 13       		.uleb128 0x13
 8020 03a7 3C       		.uleb128 0x3c
 8021 03a8 0C       		.uleb128 0xc
 8022 03a9 01       		.uleb128 0x1
 8023 03aa 13       		.uleb128 0x13
 8024 03ab 00       		.byte	0
 8025 03ac 00       		.byte	0
 8026 03ad 3A       		.uleb128 0x3a
 8027 03ae 18       		.uleb128 0x18
 8028 03af 00       		.byte	0
 8029 03b0 00       		.byte	0
 8030 03b1 00       		.byte	0
 8031 03b2 3B       		.uleb128 0x3b
 8032 03b3 0B       		.uleb128 0xb
 8033 03b4 01       		.byte	0x1
 8034 03b5 55       		.uleb128 0x55
 8035 03b6 06       		.uleb128 0x6
 8036 03b7 00       		.byte	0
 8037 03b8 00       		.byte	0
 8038 03b9 3C       		.uleb128 0x3c
 8039 03ba 2E       		.uleb128 0x2e
 8040 03bb 00       		.byte	0
 8041 03bc 3F       		.uleb128 0x3f
 8042 03bd 0C       		.uleb128 0xc
 8043 03be 03       		.uleb128 0x3
 8044 03bf 0E       		.uleb128 0xe
 8045 03c0 3A       		.uleb128 0x3a
 8046 03c1 0B       		.uleb128 0xb
 8047 03c2 3B       		.uleb128 0x3b
 8048 03c3 0B       		.uleb128 0xb
 8049 03c4 39       		.uleb128 0x39
 8050 03c5 0B       		.uleb128 0xb
 8051 03c6 27       		.uleb128 0x27
 8052 03c7 0C       		.uleb128 0xc
 8053 03c8 11       		.uleb128 0x11
 8054 03c9 01       		.uleb128 0x1
 8055 03ca 12       		.uleb128 0x12
 8056 03cb 01       		.uleb128 0x1
 8057 03cc 40       		.uleb128 0x40
 8058 03cd 0A       		.uleb128 0xa
 8059 03ce 9742     		.uleb128 0x2117
 8060 03d0 0C       		.uleb128 0xc
 8061 03d1 00       		.byte	0
 8062 03d2 00       		.byte	0
 8063 03d3 3D       		.uleb128 0x3d
 8064 03d4 05       		.uleb128 0x5
 8065 03d5 00       		.byte	0
 8066 03d6 03       		.uleb128 0x3
 8067 03d7 08       		.uleb128 0x8
 8068 03d8 3A       		.uleb128 0x3a
 8069 03d9 0B       		.uleb128 0xb
 8070 03da 3B       		.uleb128 0x3b
 8071 03db 0B       		.uleb128 0xb
 8072 03dc 39       		.uleb128 0x39
 8073 03dd 0B       		.uleb128 0xb
 8074 03de 49       		.uleb128 0x49
 8075 03df 13       		.uleb128 0x13
ARM GAS  /tmp/cc4r6sqw.s 			page 164


 8076 03e0 02       		.uleb128 0x2
 8077 03e1 0A       		.uleb128 0xa
 8078 03e2 00       		.byte	0
 8079 03e3 00       		.byte	0
 8080 03e4 3E       		.uleb128 0x3e
 8081 03e5 2E       		.uleb128 0x2e
 8082 03e6 01       		.byte	0x1
 8083 03e7 31       		.uleb128 0x31
 8084 03e8 13       		.uleb128 0x13
 8085 03e9 11       		.uleb128 0x11
 8086 03ea 01       		.uleb128 0x1
 8087 03eb 12       		.uleb128 0x12
 8088 03ec 01       		.uleb128 0x1
 8089 03ed 40       		.uleb128 0x40
 8090 03ee 06       		.uleb128 0x6
 8091 03ef 9742     		.uleb128 0x2117
 8092 03f1 0C       		.uleb128 0xc
 8093 03f2 01       		.uleb128 0x1
 8094 03f3 13       		.uleb128 0x13
 8095 03f4 00       		.byte	0
 8096 03f5 00       		.byte	0
 8097 03f6 3F       		.uleb128 0x3f
 8098 03f7 05       		.uleb128 0x5
 8099 03f8 00       		.byte	0
 8100 03f9 31       		.uleb128 0x31
 8101 03fa 13       		.uleb128 0x13
 8102 03fb 02       		.uleb128 0x2
 8103 03fc 06       		.uleb128 0x6
 8104 03fd B742     		.uleb128 0x2137
 8105 03ff 06       		.uleb128 0x6
 8106 0400 00       		.byte	0
 8107 0401 00       		.byte	0
 8108 0402 40       		.uleb128 0x40
 8109 0403 34       		.uleb128 0x34
 8110 0404 00       		.byte	0
 8111 0405 31       		.uleb128 0x31
 8112 0406 13       		.uleb128 0x13
 8113 0407 00       		.byte	0
 8114 0408 00       		.byte	0
 8115 0409 41       		.uleb128 0x41
 8116 040a 1D       		.uleb128 0x1d
 8117 040b 01       		.byte	0x1
 8118 040c 31       		.uleb128 0x31
 8119 040d 13       		.uleb128 0x13
 8120 040e 55       		.uleb128 0x55
 8121 040f 06       		.uleb128 0x6
 8122 0410 58       		.uleb128 0x58
 8123 0411 0B       		.uleb128 0xb
 8124 0412 59       		.uleb128 0x59
 8125 0413 0B       		.uleb128 0xb
 8126 0414 57       		.uleb128 0x57
 8127 0415 0B       		.uleb128 0xb
 8128 0416 00       		.byte	0
 8129 0417 00       		.byte	0
 8130 0418 42       		.uleb128 0x42
 8131 0419 34       		.uleb128 0x34
 8132 041a 00       		.byte	0
ARM GAS  /tmp/cc4r6sqw.s 			page 165


 8133 041b 31       		.uleb128 0x31
 8134 041c 13       		.uleb128 0x13
 8135 041d 02       		.uleb128 0x2
 8136 041e 06       		.uleb128 0x6
 8137 041f B742     		.uleb128 0x2137
 8138 0421 06       		.uleb128 0x6
 8139 0422 00       		.byte	0
 8140 0423 00       		.byte	0
 8141 0424 43       		.uleb128 0x43
 8142 0425 0B       		.uleb128 0xb
 8143 0426 01       		.byte	0x1
 8144 0427 31       		.uleb128 0x31
 8145 0428 13       		.uleb128 0x13
 8146 0429 55       		.uleb128 0x55
 8147 042a 06       		.uleb128 0x6
 8148 042b 00       		.byte	0
 8149 042c 00       		.byte	0
 8150 042d 44       		.uleb128 0x44
 8151 042e 2E       		.uleb128 0x2e
 8152 042f 00       		.byte	0
 8153 0430 3F       		.uleb128 0x3f
 8154 0431 0C       		.uleb128 0xc
 8155 0432 3C       		.uleb128 0x3c
 8156 0433 0C       		.uleb128 0xc
 8157 0434 8740     		.uleb128 0x2007
 8158 0436 0E       		.uleb128 0xe
 8159 0437 03       		.uleb128 0x3
 8160 0438 0E       		.uleb128 0xe
 8161 0439 3A       		.uleb128 0x3a
 8162 043a 0B       		.uleb128 0xb
 8163 043b 3B       		.uleb128 0x3b
 8164 043c 05       		.uleb128 0x5
 8165 043d 39       		.uleb128 0x39
 8166 043e 0B       		.uleb128 0xb
 8167 043f 00       		.byte	0
 8168 0440 00       		.byte	0
 8169 0441 45       		.uleb128 0x45
 8170 0442 2E       		.uleb128 0x2e
 8171 0443 00       		.byte	0
 8172 0444 3F       		.uleb128 0x3f
 8173 0445 0C       		.uleb128 0xc
 8174 0446 3C       		.uleb128 0x3c
 8175 0447 0C       		.uleb128 0xc
 8176 0448 8740     		.uleb128 0x2007
 8177 044a 0E       		.uleb128 0xe
 8178 044b 03       		.uleb128 0x3
 8179 044c 0E       		.uleb128 0xe
 8180 044d 3A       		.uleb128 0x3a
 8181 044e 0B       		.uleb128 0xb
 8182 044f 3B       		.uleb128 0x3b
 8183 0450 0B       		.uleb128 0xb
 8184 0451 39       		.uleb128 0x39
 8185 0452 0B       		.uleb128 0xb
 8186 0453 00       		.byte	0
 8187 0454 00       		.byte	0
 8188 0455 46       		.uleb128 0x46
 8189 0456 2E       		.uleb128 0x2e
ARM GAS  /tmp/cc4r6sqw.s 			page 166


 8190 0457 00       		.byte	0
 8191 0458 3F       		.uleb128 0x3f
 8192 0459 0C       		.uleb128 0xc
 8193 045a 3C       		.uleb128 0x3c
 8194 045b 0C       		.uleb128 0xc
 8195 045c 8740     		.uleb128 0x2007
 8196 045e 0E       		.uleb128 0xe
 8197 045f 03       		.uleb128 0x3
 8198 0460 0E       		.uleb128 0xe
 8199 0461 00       		.byte	0
 8200 0462 00       		.byte	0
 8201 0463 00       		.byte	0
 8202              		.section	.debug_loc,"",%progbits
 8203              	.Ldebug_loc0:
 8204              	.LLST50:
 8205 0000 00000000 		.4byte	.LFB58
 8206 0004 02000000 		.4byte	.LCFI21
 8207 0008 0200     		.2byte	0x2
 8208 000a 7D       		.byte	0x7d
 8209 000b 00       		.sleb128 0
 8210 000c 02000000 		.4byte	.LCFI21
 8211 0010 CC000000 		.4byte	.LFE58
 8212 0014 0200     		.2byte	0x2
 8213 0016 7D       		.byte	0x7d
 8214 0017 10       		.sleb128 16
 8215 0018 00000000 		.4byte	0
 8216 001c 00000000 		.4byte	0
 8217              	.LLST2:
 8218 0020 30000000 		.4byte	.LFB57
 8219 0024 32000000 		.4byte	.LCFI1
 8220 0028 0200     		.2byte	0x2
 8221 002a 7D       		.byte	0x7d
 8222 002b 00       		.sleb128 0
 8223 002c 32000000 		.4byte	.LCFI1
 8224 0030 8C000000 		.4byte	.LFE57
 8225 0034 0200     		.2byte	0x2
 8226 0036 7D       		.byte	0x7d
 8227 0037 20       		.sleb128 32
 8228 0038 00000000 		.4byte	0
 8229 003c 00000000 		.4byte	0
 8230              	.LVUS3:
 8231 0040 00       		.uleb128 0
 8232 0041 01       		.uleb128 .LVU30
 8233 0042 01       		.uleb128 .LVU30
 8234 0043 00       		.uleb128 0
 8235              	.LLST3:
 8236 0044 30000000 		.4byte	.LVL3
 8237 0048 4A000000 		.4byte	.LVL4
 8238 004c 0100     		.2byte	0x1
 8239 004e 50       		.byte	0x50
 8240 004f 4A000000 		.4byte	.LVL4
 8241 0053 8C000000 		.4byte	.LFE57
 8242 0057 0400     		.2byte	0x4
 8243 0059 F3       		.byte	0xf3
 8244 005a 01       		.uleb128 0x1
 8245 005b 50       		.byte	0x50
 8246 005c 9F       		.byte	0x9f
ARM GAS  /tmp/cc4r6sqw.s 			page 167


 8247 005d 00000000 		.4byte	0
 8248 0061 00000000 		.4byte	0
 8249              	.LVUS4:
 8250 0065 01       		.uleb128 .LVU30
 8251 0066 00       		.uleb128 .LVU39
 8252 0067 00       		.uleb128 .LVU40
 8253 0068 00       		.uleb128 .LVU50
 8254              	.LLST4:
 8255 0069 4A000000 		.4byte	.LVL4
 8256 006d 60000000 		.4byte	.LVL6
 8257 0071 0100     		.2byte	0x1
 8258 0073 54       		.byte	0x54
 8259 0074 62000000 		.4byte	.LVL7
 8260 0078 7A000000 		.4byte	.LVL9
 8261 007c 0100     		.2byte	0x1
 8262 007e 54       		.byte	0x54
 8263 007f 00000000 		.4byte	0
 8264 0083 00000000 		.4byte	0
 8265              	.LLST40:
 8266 0087 8C060000 		.4byte	.LFB56
 8267 008b 8E060000 		.4byte	.LCFI16
 8268 008f 0200     		.2byte	0x2
 8269 0091 7D       		.byte	0x7d
 8270 0092 00       		.sleb128 0
 8271 0093 8E060000 		.4byte	.LCFI16
 8272 0097 30070000 		.4byte	.LFE56
 8273 009b 0200     		.2byte	0x2
 8274 009d 7D       		.byte	0x7d
 8275 009e 18       		.sleb128 24
 8276 009f 00000000 		.4byte	0
 8277 00a3 00000000 		.4byte	0
 8278              	.LVUS41:
 8279 00a7 00       		.uleb128 0
 8280 00a8 00       		.uleb128 .LVU546
 8281 00a9 00       		.uleb128 .LVU546
 8282 00aa 00       		.uleb128 0
 8283              	.LLST41:
 8284 00ab 8C060000 		.4byte	.LVL107
 8285 00af 91060000 		.4byte	.LVL108-1
 8286 00b3 0100     		.2byte	0x1
 8287 00b5 50       		.byte	0x50
 8288 00b6 91060000 		.4byte	.LVL108-1
 8289 00ba 30070000 		.4byte	.LFE56
 8290 00be 0400     		.2byte	0x4
 8291 00c0 F3       		.byte	0xf3
 8292 00c1 01       		.uleb128 0x1
 8293 00c2 50       		.byte	0x50
 8294 00c3 9F       		.byte	0x9f
 8295 00c4 00000000 		.4byte	0
 8296 00c8 00000000 		.4byte	0
 8297              	.LLST25:
 8298 00cc EC030000 		.4byte	.LFB55
 8299 00d0 F2030000 		.4byte	.LCFI7
 8300 00d4 0200     		.2byte	0x2
 8301 00d6 7D       		.byte	0x7d
 8302 00d7 00       		.sleb128 0
 8303 00d8 F2030000 		.4byte	.LCFI7
ARM GAS  /tmp/cc4r6sqw.s 			page 168


 8304 00dc 6C040000 		.4byte	.LFE55
 8305 00e0 0200     		.2byte	0x2
 8306 00e2 7D       		.byte	0x7d
 8307 00e3 20       		.sleb128 32
 8308 00e4 00000000 		.4byte	0
 8309 00e8 00000000 		.4byte	0
 8310              	.LVUS26:
 8311 00ec 00       		.uleb128 0
 8312 00ed 00       		.uleb128 .LVU342
 8313 00ee 00       		.uleb128 .LVU342
 8314 00ef 00       		.uleb128 0
 8315              	.LLST26:
 8316 00f0 EC030000 		.4byte	.LVL55
 8317 00f4 10040000 		.4byte	.LVL56
 8318 00f8 0100     		.2byte	0x1
 8319 00fa 50       		.byte	0x50
 8320 00fb 10040000 		.4byte	.LVL56
 8321 00ff 6C040000 		.4byte	.LFE55
 8322 0103 0400     		.2byte	0x4
 8323 0105 F3       		.byte	0xf3
 8324 0106 01       		.uleb128 0x1
 8325 0107 50       		.byte	0x50
 8326 0108 9F       		.byte	0x9f
 8327 0109 00000000 		.4byte	0
 8328 010d 00000000 		.4byte	0
 8329              	.LVUS27:
 8330 0111 00       		.uleb128 .LVU351
 8331 0112 00       		.uleb128 .LVU354
 8332 0113 00       		.uleb128 .LVU354
 8333 0114 01       		.uleb128 .LVU356
 8334 0115 01       		.uleb128 .LVU356
 8335 0116 00       		.uleb128 .LVU358
 8336              	.LLST27:
 8337 0117 2C040000 		.4byte	.LVL58
 8338 011b 34040000 		.4byte	.LVL60
 8339 011f 0100     		.2byte	0x1
 8340 0121 54       		.byte	0x54
 8341 0122 34040000 		.4byte	.LVL60
 8342 0126 3A040000 		.4byte	.LVL61
 8343 012a 0300     		.2byte	0x3
 8344 012c 74       		.byte	0x74
 8345 012d 7F       		.sleb128 -1
 8346 012e 9F       		.byte	0x9f
 8347 012f 3A040000 		.4byte	.LVL61
 8348 0133 3E040000 		.4byte	.LVL62
 8349 0137 0100     		.2byte	0x1
 8350 0139 54       		.byte	0x54
 8351 013a 00000000 		.4byte	0
 8352 013e 00000000 		.4byte	0
 8353              	.LVUS28:
 8354 0142 00       		.uleb128 .LVU362
 8355 0143 01       		.uleb128 .LVU365
 8356 0144 01       		.uleb128 .LVU365
 8357 0145 00       		.uleb128 .LVU367
 8358 0146 00       		.uleb128 .LVU367
 8359 0147 00       		.uleb128 0
 8360              	.LLST28:
ARM GAS  /tmp/cc4r6sqw.s 			page 169


 8361 0148 48040000 		.4byte	.LVL63
 8362 014c 54040000 		.4byte	.LVL65
 8363 0150 0100     		.2byte	0x1
 8364 0152 54       		.byte	0x54
 8365 0153 54040000 		.4byte	.LVL65
 8366 0157 56040000 		.4byte	.LVL66
 8367 015b 0300     		.2byte	0x3
 8368 015d 74       		.byte	0x74
 8369 015e 7F       		.sleb128 -1
 8370 015f 9F       		.byte	0x9f
 8371 0160 56040000 		.4byte	.LVL66
 8372 0164 6C040000 		.4byte	.LFE55
 8373 0168 0100     		.2byte	0x1
 8374 016a 54       		.byte	0x54
 8375 016b 00000000 		.4byte	0
 8376 016f 00000000 		.4byte	0
 8377              	.LLST32:
 8378 0173 84050000 		.4byte	.LFB54
 8379 0177 86050000 		.4byte	.LCFI12
 8380 017b 0200     		.2byte	0x2
 8381 017d 7D       		.byte	0x7d
 8382 017e 00       		.sleb128 0
 8383 017f 86050000 		.4byte	.LCFI12
 8384 0183 BC050000 		.4byte	.LFE54
 8385 0187 0200     		.2byte	0x2
 8386 0189 7D       		.byte	0x7d
 8387 018a 10       		.sleb128 16
 8388 018b 00000000 		.4byte	0
 8389 018f 00000000 		.4byte	0
 8390              	.LVUS33:
 8391 0193 00       		.uleb128 0
 8392 0194 00       		.uleb128 .LVU457
 8393 0195 00       		.uleb128 .LVU457
 8394 0196 00       		.uleb128 0
 8395              	.LLST33:
 8396 0197 84050000 		.4byte	.LVL78
 8397 019b 8E050000 		.4byte	.LVL80
 8398 019f 0100     		.2byte	0x1
 8399 01a1 50       		.byte	0x50
 8400 01a2 8E050000 		.4byte	.LVL80
 8401 01a6 BC050000 		.4byte	.LFE54
 8402 01aa 0400     		.2byte	0x4
 8403 01ac F3       		.byte	0xf3
 8404 01ad 01       		.uleb128 0x1
 8405 01ae 50       		.byte	0x50
 8406 01af 9F       		.byte	0x9f
 8407 01b0 00000000 		.4byte	0
 8408 01b4 00000000 		.4byte	0
 8409              	.LLST0:
 8410 01b8 00000000 		.4byte	.LFB53
 8411 01bc 04000000 		.4byte	.LCFI0
 8412 01c0 0200     		.2byte	0x2
 8413 01c2 7D       		.byte	0x7d
 8414 01c3 00       		.sleb128 0
 8415 01c4 04000000 		.4byte	.LCFI0
 8416 01c8 30000000 		.4byte	.LFE53
 8417 01cc 0200     		.2byte	0x2
ARM GAS  /tmp/cc4r6sqw.s 			page 170


 8418 01ce 7D       		.byte	0x7d
 8419 01cf 08       		.sleb128 8
 8420 01d0 00000000 		.4byte	0
 8421 01d4 00000000 		.4byte	0
 8422              	.LVUS1:
 8423 01d8 00       		.uleb128 0
 8424 01d9 00       		.uleb128 .LVU9
 8425 01da 00       		.uleb128 .LVU9
 8426 01db 00       		.uleb128 0
 8427              	.LLST1:
 8428 01dc 00000000 		.4byte	.LVL0
 8429 01e0 16000000 		.4byte	.LVL1
 8430 01e4 0100     		.2byte	0x1
 8431 01e6 50       		.byte	0x50
 8432 01e7 16000000 		.4byte	.LVL1
 8433 01eb 30000000 		.4byte	.LFE53
 8434 01ef 0400     		.2byte	0x4
 8435 01f1 F3       		.byte	0xf3
 8436 01f2 01       		.uleb128 0x1
 8437 01f3 50       		.byte	0x50
 8438 01f4 9F       		.byte	0x9f
 8439 01f5 00000000 		.4byte	0
 8440 01f9 00000000 		.4byte	0
 8441              	.LLST44:
 8442 01fd F4070000 		.4byte	.LFB52
 8443 0201 F8070000 		.4byte	.LCFI19
 8444 0205 0200     		.2byte	0x2
 8445 0207 7D       		.byte	0x7d
 8446 0208 00       		.sleb128 0
 8447 0209 F8070000 		.4byte	.LCFI19
 8448 020d 08080000 		.4byte	.LCFI20
 8449 0211 0200     		.2byte	0x2
 8450 0213 7D       		.byte	0x7d
 8451 0214 24       		.sleb128 36
 8452 0215 08080000 		.4byte	.LCFI20
 8453 0219 68090000 		.4byte	.LFE52
 8454 021d 0300     		.2byte	0x3
 8455 021f 7D       		.byte	0x7d
 8456 0220 C800     		.sleb128 72
 8457 0222 00000000 		.4byte	0
 8458 0226 00000000 		.4byte	0
 8459              	.LVUS45:
 8460 022a 00       		.uleb128 0
 8461 022b 00       		.uleb128 .LVU631
 8462 022c 00       		.uleb128 .LVU631
 8463 022d 00       		.uleb128 0
 8464              	.LLST45:
 8465 022e F4070000 		.4byte	.LVL129
 8466 0232 0B080000 		.4byte	.LVL130-1
 8467 0236 0100     		.2byte	0x1
 8468 0238 50       		.byte	0x50
 8469 0239 0B080000 		.4byte	.LVL130-1
 8470 023d 68090000 		.4byte	.LFE52
 8471 0241 0400     		.2byte	0x4
 8472 0243 F3       		.byte	0xf3
 8473 0244 01       		.uleb128 0x1
 8474 0245 50       		.byte	0x50
ARM GAS  /tmp/cc4r6sqw.s 			page 171


 8475 0246 9F       		.byte	0x9f
 8476 0247 00000000 		.4byte	0
 8477 024b 00000000 		.4byte	0
 8478              	.LVUS46:
 8479 024f 01       		.uleb128 .LVU640
 8480 0250 04       		.uleb128 .LVU643
 8481 0251 04       		.uleb128 .LVU643
 8482 0252 00       		.uleb128 0
 8483              	.LLST46:
 8484 0253 2A080000 		.4byte	.LVL131
 8485 0257 2A080000 		.4byte	.LVL131
 8486 025b 0200     		.2byte	0x2
 8487 025d 30       		.byte	0x30
 8488 025e 9F       		.byte	0x9f
 8489 025f 2A080000 		.4byte	.LVL131
 8490 0263 68090000 		.4byte	.LFE52
 8491 0267 0100     		.2byte	0x1
 8492 0269 56       		.byte	0x56
 8493 026a 00000000 		.4byte	0
 8494 026e 00000000 		.4byte	0
 8495              	.LVUS47:
 8496 0272 03       		.uleb128 .LVU642
 8497 0273 04       		.uleb128 .LVU643
 8498 0274 04       		.uleb128 .LVU643
 8499 0275 00       		.uleb128 .LVU674
 8500 0276 00       		.uleb128 .LVU675
 8501 0277 01       		.uleb128 .LVU678
 8502 0278 01       		.uleb128 .LVU678
 8503 0279 01       		.uleb128 .LVU680
 8504 027a 00       		.uleb128 .LVU689
 8505 027b 00       		.uleb128 0
 8506              	.LLST47:
 8507 027c 2A080000 		.4byte	.LVL131
 8508 0280 2A080000 		.4byte	.LVL131
 8509 0284 0200     		.2byte	0x2
 8510 0286 31       		.byte	0x31
 8511 0287 9F       		.byte	0x9f
 8512 0288 2A080000 		.4byte	.LVL131
 8513 028c 78080000 		.4byte	.LVL140
 8514 0290 0100     		.2byte	0x1
 8515 0292 54       		.byte	0x54
 8516 0293 7A080000 		.4byte	.LVL141
 8517 0297 7E080000 		.4byte	.LVL142
 8518 029b 0100     		.2byte	0x1
 8519 029d 54       		.byte	0x54
 8520 029e 7E080000 		.4byte	.LVL142
 8521 02a2 82080000 		.4byte	.LVL143
 8522 02a6 0200     		.2byte	0x2
 8523 02a8 31       		.byte	0x31
 8524 02a9 9F       		.byte	0x9f
 8525 02aa B8080000 		.4byte	.LVL151
 8526 02ae 68090000 		.4byte	.LFE52
 8527 02b2 0100     		.2byte	0x1
 8528 02b4 54       		.byte	0x54
 8529 02b5 00000000 		.4byte	0
 8530 02b9 00000000 		.4byte	0
 8531              	.LVUS48:
ARM GAS  /tmp/cc4r6sqw.s 			page 172


 8532 02bd 04       		.uleb128 .LVU643
 8533 02be 01       		.uleb128 .LVU661
 8534 02bf 01       		.uleb128 .LVU661
 8535 02c0 00       		.uleb128 .LVU664
 8536 02c1 00       		.uleb128 .LVU669
 8537 02c2 00       		.uleb128 0
 8538              	.LLST48:
 8539 02c3 2A080000 		.4byte	.LVL131
 8540 02c7 5C080000 		.4byte	.LVL136
 8541 02cb 0100     		.2byte	0x1
 8542 02cd 55       		.byte	0x55
 8543 02ce 5C080000 		.4byte	.LVL136
 8544 02d2 62080000 		.4byte	.LVL138
 8545 02d6 0200     		.2byte	0x2
 8546 02d8 30       		.byte	0x30
 8547 02d9 9F       		.byte	0x9f
 8548 02da 6A080000 		.4byte	.LVL139
 8549 02de 68090000 		.4byte	.LFE52
 8550 02e2 0100     		.2byte	0x1
 8551 02e4 55       		.byte	0x55
 8552 02e5 00000000 		.4byte	0
 8553 02e9 00000000 		.4byte	0
 8554              	.LVUS49:
 8555 02ed 02       		.uleb128 .LVU697
 8556 02ee 00       		.uleb128 .LVU700
 8557 02ef 00       		.uleb128 .LVU702
 8558 02f0 01       		.uleb128 .LVU706
 8559 02f1 01       		.uleb128 .LVU706
 8560 02f2 00       		.uleb128 .LVU708
 8561              	.LLST49:
 8562 02f3 D4080000 		.4byte	.LVL154
 8563 02f7 DA080000 		.4byte	.LVL155
 8564 02fb 0200     		.2byte	0x2
 8565 02fd 30       		.byte	0x30
 8566 02fe 9F       		.byte	0x9f
 8567 02ff E4080000 		.4byte	.LVL156
 8568 0303 00090000 		.4byte	.LVL159
 8569 0307 0100     		.2byte	0x1
 8570 0309 5A       		.byte	0x5a
 8571 030a 00090000 		.4byte	.LVL159
 8572 030e 0A090000 		.4byte	.LVL160
 8573 0312 0800     		.2byte	0x8
 8574 0314 91       		.byte	0x91
 8575 0315 BC7F     		.sleb128 -68
 8576 0317 94       		.byte	0x94
 8577 0318 01       		.byte	0x1
 8578 0319 23       		.byte	0x23
 8579 031a 01       		.uleb128 0x1
 8580 031b 9F       		.byte	0x9f
 8581 031c 00000000 		.4byte	0
 8582 0320 00000000 		.4byte	0
 8583              	.LLST42:
 8584 0324 30070000 		.4byte	.LFB51
 8585 0328 34070000 		.4byte	.LCFI17
 8586 032c 0200     		.2byte	0x2
 8587 032e 7D       		.byte	0x7d
 8588 032f 00       		.sleb128 0
ARM GAS  /tmp/cc4r6sqw.s 			page 173


 8589 0330 34070000 		.4byte	.LCFI17
 8590 0334 D2070000 		.4byte	.LCFI18
 8591 0338 0200     		.2byte	0x2
 8592 033a 7D       		.byte	0x7d
 8593 033b 18       		.sleb128 24
 8594 033c D2070000 		.4byte	.LCFI18
 8595 0340 F4070000 		.4byte	.LFE51
 8596 0344 0200     		.2byte	0x2
 8597 0346 7D       		.byte	0x7d
 8598 0347 00       		.sleb128 0
 8599 0348 00000000 		.4byte	0
 8600 034c 00000000 		.4byte	0
 8601              	.LVUS43:
 8602 0350 02       		.uleb128 .LVU608
 8603 0351 03       		.uleb128 .LVU609
 8604 0352 00       		.uleb128 .LVU610
 8605 0353 01       		.uleb128 .LVU616
 8606              	.LLST43:
 8607 0354 9E070000 		.4byte	.LVL122
 8608 0358 9E070000 		.4byte	.LVL122
 8609 035c 0200     		.2byte	0x2
 8610 035e 30       		.byte	0x30
 8611 035f 9F       		.byte	0x9f
 8612 0360 A0070000 		.4byte	.LVL123
 8613 0364 C2070000 		.4byte	.LVL126
 8614 0368 0100     		.2byte	0x1
 8615 036a 55       		.byte	0x55
 8616 036b 00000000 		.4byte	0
 8617 036f 00000000 		.4byte	0
 8618              	.LLST35:
 8619 0373 04060000 		.4byte	.LFB50
 8620 0377 06060000 		.4byte	.LCFI15
 8621 037b 0200     		.2byte	0x2
 8622 037d 7D       		.byte	0x7d
 8623 037e 00       		.sleb128 0
 8624 037f 06060000 		.4byte	.LCFI15
 8625 0383 8C060000 		.4byte	.LFE50
 8626 0387 0200     		.2byte	0x2
 8627 0389 7D       		.byte	0x7d
 8628 038a 10       		.sleb128 16
 8629 038b 00000000 		.4byte	0
 8630 038f 00000000 		.4byte	0
 8631              	.LVUS36:
 8632 0393 02       		.uleb128 .LVU496
 8633 0394 00       		.uleb128 .LVU523
 8634 0395 00       		.uleb128 .LVU523
 8635 0396 00       		.uleb128 .LVU540
 8636 0397 00       		.uleb128 .LVU540
 8637 0398 00       		.uleb128 0
 8638              	.LLST36:
 8639 0399 04060000 		.4byte	.LVL86
 8640 039d 56060000 		.4byte	.LVL97
 8641 03a1 0200     		.2byte	0x2
 8642 03a3 30       		.byte	0x30
 8643 03a4 9F       		.byte	0x9f
 8644 03a5 56060000 		.4byte	.LVL97
 8645 03a9 84060000 		.4byte	.LVL105
ARM GAS  /tmp/cc4r6sqw.s 			page 174


 8646 03ad 0100     		.2byte	0x1
 8647 03af 55       		.byte	0x55
 8648 03b0 84060000 		.4byte	.LVL105
 8649 03b4 8C060000 		.4byte	.LFE50
 8650 03b8 0200     		.2byte	0x2
 8651 03ba 30       		.byte	0x30
 8652 03bb 9F       		.byte	0x9f
 8653 03bc 00000000 		.4byte	0
 8654 03c0 00000000 		.4byte	0
 8655              	.LVUS37:
 8656 03c4 03       		.uleb128 .LVU497
 8657 03c5 00       		.uleb128 .LVU523
 8658 03c6 00       		.uleb128 .LVU523
 8659 03c7 00       		.uleb128 .LVU533
 8660 03c8 00       		.uleb128 .LVU533
 8661 03c9 01       		.uleb128 .LVU535
 8662 03ca 01       		.uleb128 .LVU535
 8663 03cb 00       		.uleb128 .LVU540
 8664 03cc 00       		.uleb128 .LVU540
 8665 03cd 00       		.uleb128 0
 8666              	.LLST37:
 8667 03ce 04060000 		.4byte	.LVL86
 8668 03d2 56060000 		.4byte	.LVL97
 8669 03d6 0200     		.2byte	0x2
 8670 03d8 30       		.byte	0x30
 8671 03d9 9F       		.byte	0x9f
 8672 03da 56060000 		.4byte	.LVL97
 8673 03de 70060000 		.4byte	.LVL102
 8674 03e2 0100     		.2byte	0x1
 8675 03e4 54       		.byte	0x54
 8676 03e5 70060000 		.4byte	.LVL102
 8677 03e9 74060000 		.4byte	.LVL103
 8678 03ed 0300     		.2byte	0x3
 8679 03ef 74       		.byte	0x74
 8680 03f0 7F       		.sleb128 -1
 8681 03f1 9F       		.byte	0x9f
 8682 03f2 74060000 		.4byte	.LVL103
 8683 03f6 84060000 		.4byte	.LVL105
 8684 03fa 0100     		.2byte	0x1
 8685 03fc 54       		.byte	0x54
 8686 03fd 84060000 		.4byte	.LVL105
 8687 0401 8C060000 		.4byte	.LFE50
 8688 0405 0200     		.2byte	0x2
 8689 0407 30       		.byte	0x30
 8690 0408 9F       		.byte	0x9f
 8691 0409 00000000 		.4byte	0
 8692 040d 00000000 		.4byte	0
 8693              	.LVUS38:
 8694 0411 04       		.uleb128 .LVU498
 8695 0412 00       		.uleb128 .LVU523
 8696 0413 00       		.uleb128 .LVU526
 8697 0414 00       		.uleb128 .LVU532
 8698 0415 00       		.uleb128 .LVU540
 8699 0416 00       		.uleb128 0
 8700              	.LLST38:
 8701 0417 04060000 		.4byte	.LVL86
 8702 041b 56060000 		.4byte	.LVL97
ARM GAS  /tmp/cc4r6sqw.s 			page 175


 8703 041f 0200     		.2byte	0x2
 8704 0421 30       		.byte	0x30
 8705 0422 9F       		.byte	0x9f
 8706 0423 64060000 		.4byte	.LVL99
 8707 0427 6E060000 		.4byte	.LVL101
 8708 042b 0600     		.2byte	0x6
 8709 042d 70       		.byte	0x70
 8710 042e 00       		.sleb128 0
 8711 042f 08       		.byte	0x8
 8712 0430 FF       		.byte	0xff
 8713 0431 1A       		.byte	0x1a
 8714 0432 9F       		.byte	0x9f
 8715 0433 84060000 		.4byte	.LVL105
 8716 0437 8C060000 		.4byte	.LFE50
 8717 043b 0200     		.2byte	0x2
 8718 043d 30       		.byte	0x30
 8719 043e 9F       		.byte	0x9f
 8720 043f 00000000 		.4byte	0
 8721 0443 00000000 		.4byte	0
 8722              	.LVUS39:
 8723 0447 05       		.uleb128 .LVU499
 8724 0448 00       		.uleb128 .LVU507
 8725 0449 00       		.uleb128 .LVU507
 8726 044a 00       		.uleb128 .LVU511
 8727 044b 01       		.uleb128 .LVU514
 8728 044c 00       		.uleb128 .LVU515
 8729 044d 01       		.uleb128 .LVU516
 8730 044e 00       		.uleb128 .LVU521
 8731 044f 00       		.uleb128 .LVU540
 8732 0450 00       		.uleb128 .LVU541
 8733              	.LLST39:
 8734 0451 04060000 		.4byte	.LVL86
 8735 0455 18060000 		.4byte	.LVL88
 8736 0459 0200     		.2byte	0x2
 8737 045b 30       		.byte	0x30
 8738 045c 9F       		.byte	0x9f
 8739 045d 18060000 		.4byte	.LVL88
 8740 0461 24060000 		.4byte	.LVL90
 8741 0465 0500     		.2byte	0x5
 8742 0467 34       		.byte	0x34
 8743 0468 74       		.byte	0x74
 8744 0469 00       		.sleb128 0
 8745 046a 1C       		.byte	0x1c
 8746 046b 9F       		.byte	0x9f
 8747 046c 30060000 		.4byte	.LVL91
 8748 0470 38060000 		.4byte	.LVL93
 8749 0474 0500     		.2byte	0x5
 8750 0476 34       		.byte	0x34
 8751 0477 74       		.byte	0x74
 8752 0478 00       		.sleb128 0
 8753 0479 1C       		.byte	0x1c
 8754 047a 9F       		.byte	0x9f
 8755 047b 38060000 		.4byte	.LVL93
 8756 047f 50060000 		.4byte	.LVL96
 8757 0483 0500     		.2byte	0x5
 8758 0485 33       		.byte	0x33
 8759 0486 75       		.byte	0x75
ARM GAS  /tmp/cc4r6sqw.s 			page 176


 8760 0487 00       		.sleb128 0
 8761 0488 1C       		.byte	0x1c
 8762 0489 9F       		.byte	0x9f
 8763 048a 84060000 		.4byte	.LVL105
 8764 048e 86060000 		.4byte	.LVL106
 8765 0492 0500     		.2byte	0x5
 8766 0494 33       		.byte	0x33
 8767 0495 75       		.byte	0x75
 8768 0496 00       		.sleb128 0
 8769 0497 1C       		.byte	0x1c
 8770 0498 9F       		.byte	0x9f
 8771 0499 00000000 		.4byte	0
 8772 049d 00000000 		.4byte	0
 8773              	.LLST34:
 8774 04a1 D8050000 		.4byte	.LFB49
 8775 04a5 DA050000 		.4byte	.LCFI13
 8776 04a9 0200     		.2byte	0x2
 8777 04ab 7D       		.byte	0x7d
 8778 04ac 00       		.sleb128 0
 8779 04ad DA050000 		.4byte	.LCFI13
 8780 04b1 FA050000 		.4byte	.LCFI14
 8781 04b5 0200     		.2byte	0x2
 8782 04b7 7D       		.byte	0x7d
 8783 04b8 10       		.sleb128 16
 8784 04b9 FA050000 		.4byte	.LCFI14
 8785 04bd 04060000 		.4byte	.LFE49
 8786 04c1 0200     		.2byte	0x2
 8787 04c3 7D       		.byte	0x7d
 8788 04c4 04       		.sleb128 4
 8789 04c5 00000000 		.4byte	0
 8790 04c9 00000000 		.4byte	0
 8791              	.LLST30:
 8792 04cd EC040000 		.4byte	.LFB46
 8793 04d1 EE040000 		.4byte	.LCFI11
 8794 04d5 0200     		.2byte	0x2
 8795 04d7 7D       		.byte	0x7d
 8796 04d8 00       		.sleb128 0
 8797 04d9 EE040000 		.4byte	.LCFI11
 8798 04dd 14050000 		.4byte	.LFE46
 8799 04e1 0200     		.2byte	0x2
 8800 04e3 7D       		.byte	0x7d
 8801 04e4 10       		.sleb128 16
 8802 04e5 00000000 		.4byte	0
 8803 04e9 00000000 		.4byte	0
 8804              	.LVUS31:
 8805 04ed 00       		.uleb128 0
 8806 04ee 00       		.uleb128 .LVU413
 8807 04ef 00       		.uleb128 .LVU413
 8808 04f0 00       		.uleb128 .LVU415
 8809 04f1 00       		.uleb128 .LVU415
 8810 04f2 01       		.uleb128 .LVU418
 8811 04f3 01       		.uleb128 .LVU418
 8812 04f4 00       		.uleb128 0
 8813              	.LLST31:
 8814 04f5 EC040000 		.4byte	.LVL72
 8815 04f9 F2040000 		.4byte	.LVL73
 8816 04fd 0100     		.2byte	0x1
ARM GAS  /tmp/cc4r6sqw.s 			page 177


 8817 04ff 50       		.byte	0x50
 8818 0500 F2040000 		.4byte	.LVL73
 8819 0504 F6040000 		.4byte	.LVL74
 8820 0508 0300     		.2byte	0x3
 8821 050a 74       		.byte	0x74
 8822 050b 01       		.sleb128 1
 8823 050c 9F       		.byte	0x9f
 8824 050d F6040000 		.4byte	.LVL74
 8825 0511 FA040000 		.4byte	.LVL75
 8826 0515 0100     		.2byte	0x1
 8827 0517 54       		.byte	0x54
 8828 0518 FA040000 		.4byte	.LVL75
 8829 051c 14050000 		.4byte	.LFE46
 8830 0520 0300     		.2byte	0x3
 8831 0522 74       		.byte	0x74
 8832 0523 01       		.sleb128 1
 8833 0524 9F       		.byte	0x9f
 8834 0525 00000000 		.4byte	0
 8835 0529 00000000 		.4byte	0
 8836              	.LLST29:
 8837 052d 7C040000 		.4byte	.LFB45
 8838 0531 7E040000 		.4byte	.LCFI8
 8839 0535 0200     		.2byte	0x2
 8840 0537 7D       		.byte	0x7d
 8841 0538 00       		.sleb128 0
 8842 0539 7E040000 		.4byte	.LCFI8
 8843 053d 82040000 		.4byte	.LCFI9
 8844 0541 0200     		.2byte	0x2
 8845 0543 7D       		.byte	0x7d
 8846 0544 08       		.sleb128 8
 8847 0545 82040000 		.4byte	.LCFI9
 8848 0549 E6040000 		.4byte	.LCFI10
 8849 054d 0200     		.2byte	0x2
 8850 054f 7D       		.byte	0x7d
 8851 0550 20       		.sleb128 32
 8852 0551 E6040000 		.4byte	.LCFI10
 8853 0555 EC040000 		.4byte	.LFE45
 8854 0559 0200     		.2byte	0x2
 8855 055b 7D       		.byte	0x7d
 8856 055c 08       		.sleb128 8
 8857 055d 00000000 		.4byte	0
 8858 0561 00000000 		.4byte	0
 8859              	.LVUS24:
 8860 0565 00       		.uleb128 0
 8861 0566 01       		.uleb128 .LVU309
 8862 0567 01       		.uleb128 .LVU309
 8863 0568 00       		.uleb128 .LVU311
 8864 0569 00       		.uleb128 .LVU311
 8865 056a 00       		.uleb128 0
 8866              	.LLST24:
 8867 056b 88030000 		.4byte	.LVL52
 8868 056f 90030000 		.4byte	.LVL53
 8869 0573 0100     		.2byte	0x1
 8870 0575 50       		.byte	0x50
 8871 0576 90030000 		.4byte	.LVL53
 8872 057a 9C030000 		.4byte	.LVL54
 8873 057e 0900     		.2byte	0x9
ARM GAS  /tmp/cc4r6sqw.s 			page 178


 8874 0580 70       		.byte	0x70
 8875 0581 00       		.sleb128 0
 8876 0582 37       		.byte	0x37
 8877 0583 14       		.byte	0x14
 8878 0584 14       		.byte	0x14
 8879 0585 1B       		.byte	0x1b
 8880 0586 1E       		.byte	0x1e
 8881 0587 1C       		.byte	0x1c
 8882 0588 9F       		.byte	0x9f
 8883 0589 9C030000 		.4byte	.LVL54
 8884 058d EC030000 		.4byte	.LFE43
 8885 0591 0A00     		.2byte	0xa
 8886 0593 F3       		.byte	0xf3
 8887 0594 01       		.uleb128 0x1
 8888 0595 50       		.byte	0x50
 8889 0596 37       		.byte	0x37
 8890 0597 14       		.byte	0x14
 8891 0598 14       		.byte	0x14
 8892 0599 1B       		.byte	0x1b
 8893 059a 1E       		.byte	0x1e
 8894 059b 1C       		.byte	0x1c
 8895 059c 9F       		.byte	0x9f
 8896 059d 00000000 		.4byte	0
 8897 05a1 00000000 		.4byte	0
 8898              	.LLST16:
 8899 05a5 04030000 		.4byte	.LFB41
 8900 05a9 08030000 		.4byte	.LCFI6
 8901 05ad 0200     		.2byte	0x2
 8902 05af 7D       		.byte	0x7d
 8903 05b0 00       		.sleb128 0
 8904 05b1 08030000 		.4byte	.LCFI6
 8905 05b5 88030000 		.4byte	.LFE41
 8906 05b9 0200     		.2byte	0x2
 8907 05bb 7D       		.byte	0x7d
 8908 05bc 18       		.sleb128 24
 8909 05bd 00000000 		.4byte	0
 8910 05c1 00000000 		.4byte	0
 8911              	.LVUS17:
 8912 05c5 00       		.uleb128 0
 8913 05c6 00       		.uleb128 .LVU254
 8914 05c7 00       		.uleb128 .LVU254
 8915 05c8 00       		.uleb128 .LVU281
 8916              	.LLST17:
 8917 05c9 04030000 		.4byte	.LVL28
 8918 05cd 13030000 		.4byte	.LVL30-1
 8919 05d1 0100     		.2byte	0x1
 8920 05d3 50       		.byte	0x50
 8921 05d4 13030000 		.4byte	.LVL30-1
 8922 05d8 4C030000 		.4byte	.LVL40
 8923 05dc 0100     		.2byte	0x1
 8924 05de 55       		.byte	0x55
 8925 05df 00000000 		.4byte	0
 8926 05e3 00000000 		.4byte	0
 8927              	.LVUS18:
 8928 05e7 00       		.uleb128 0
 8929 05e8 00       		.uleb128 .LVU252
 8930 05e9 00       		.uleb128 .LVU252
ARM GAS  /tmp/cc4r6sqw.s 			page 179


 8931 05ea 01       		.uleb128 .LVU259
 8932 05eb 01       		.uleb128 .LVU259
 8933 05ec 00       		.uleb128 .LVU260
 8934 05ed 00       		.uleb128 .LVU260
 8935 05ee 00       		.uleb128 .LVU269
 8936 05ef 00       		.uleb128 .LVU269
 8937 05f0 01       		.uleb128 .LVU271
 8938 05f1 01       		.uleb128 .LVU271
 8939 05f2 00       		.uleb128 .LVU282
 8940 05f3 00       		.uleb128 .LVU282
 8941 05f4 01       		.uleb128 .LVU298
 8942 05f5 01       		.uleb128 .LVU298
 8943 05f6 00       		.uleb128 .LVU300
 8944 05f7 00       		.uleb128 .LVU300
 8945 05f8 00       		.uleb128 0
 8946              	.LLST18:
 8947 05f9 04030000 		.4byte	.LVL28
 8948 05fd 0C030000 		.4byte	.LVL29
 8949 0601 0100     		.2byte	0x1
 8950 0603 51       		.byte	0x51
 8951 0604 0C030000 		.4byte	.LVL29
 8952 0608 1C030000 		.4byte	.LVL31
 8953 060c 0100     		.2byte	0x1
 8954 060e 54       		.byte	0x54
 8955 060f 1C030000 		.4byte	.LVL31
 8956 0613 20030000 		.4byte	.LVL32
 8957 0617 0300     		.2byte	0x3
 8958 0619 74       		.byte	0x74
 8959 061a 01       		.sleb128 1
 8960 061b 9F       		.byte	0x9f
 8961 061c 20030000 		.4byte	.LVL32
 8962 0620 34030000 		.4byte	.LVL36
 8963 0624 0100     		.2byte	0x1
 8964 0626 54       		.byte	0x54
 8965 0627 34030000 		.4byte	.LVL36
 8966 062b 38030000 		.4byte	.LVL37
 8967 062f 0100     		.2byte	0x1
 8968 0631 53       		.byte	0x53
 8969 0632 38030000 		.4byte	.LVL37
 8970 0636 50030000 		.4byte	.LVL41
 8971 063a 0100     		.2byte	0x1
 8972 063c 54       		.byte	0x54
 8973 063d 50030000 		.4byte	.LVL41
 8974 0641 6E030000 		.4byte	.LVL48
 8975 0645 0100     		.2byte	0x1
 8976 0647 55       		.byte	0x55
 8977 0648 6E030000 		.4byte	.LVL48
 8978 064c 76030000 		.4byte	.LVL49
 8979 0650 0300     		.2byte	0x3
 8980 0652 75       		.byte	0x75
 8981 0653 01       		.sleb128 1
 8982 0654 9F       		.byte	0x9f
 8983 0655 76030000 		.4byte	.LVL49
 8984 0659 88030000 		.4byte	.LFE41
 8985 065d 0100     		.2byte	0x1
 8986 065f 55       		.byte	0x55
 8987 0660 00000000 		.4byte	0
ARM GAS  /tmp/cc4r6sqw.s 			page 180


 8988 0664 00000000 		.4byte	0
 8989              	.LVUS19:
 8990 0668 00       		.uleb128 0
 8991 0669 00       		.uleb128 .LVU254
 8992 066a 00       		.uleb128 .LVU254
 8993 066b 00       		.uleb128 .LVU290
 8994 066c 00       		.uleb128 .LVU290
 8995 066d 00       		.uleb128 .LVU292
 8996 066e 00       		.uleb128 .LVU292
 8997 066f 00       		.uleb128 0
 8998              	.LLST19:
 8999 0670 04030000 		.4byte	.LVL28
 9000 0674 13030000 		.4byte	.LVL30-1
 9001 0678 0100     		.2byte	0x1
 9002 067a 52       		.byte	0x52
 9003 067b 13030000 		.4byte	.LVL30-1
 9004 067f 5C030000 		.4byte	.LVL44
 9005 0683 0100     		.2byte	0x1
 9006 0685 56       		.byte	0x56
 9007 0686 5C030000 		.4byte	.LVL44
 9008 068a 62030000 		.4byte	.LVL45
 9009 068e 0400     		.2byte	0x4
 9010 0690 F3       		.byte	0xf3
 9011 0691 01       		.uleb128 0x1
 9012 0692 52       		.byte	0x52
 9013 0693 9F       		.byte	0x9f
 9014 0694 62030000 		.4byte	.LVL45
 9015 0698 88030000 		.4byte	.LFE41
 9016 069c 0100     		.2byte	0x1
 9017 069e 56       		.byte	0x56
 9018 069f 00000000 		.4byte	0
 9019 06a3 00000000 		.4byte	0
 9020              	.LVUS20:
 9021 06a7 00       		.uleb128 .LVU264
 9022 06a8 00       		.uleb128 .LVU265
 9023 06a9 00       		.uleb128 .LVU265
 9024 06aa 00       		.uleb128 .LVU282
 9025              	.LLST20:
 9026 06ab 2A030000 		.4byte	.LVL34
 9027 06af 2D030000 		.4byte	.LVL35-1
 9028 06b3 0100     		.2byte	0x1
 9029 06b5 50       		.byte	0x50
 9030 06b6 2D030000 		.4byte	.LVL35-1
 9031 06ba 50030000 		.4byte	.LVL41
 9032 06be 0100     		.2byte	0x1
 9033 06c0 57       		.byte	0x57
 9034 06c1 00000000 		.4byte	0
 9035 06c5 00000000 		.4byte	0
 9036              	.LVUS21:
 9037 06c9 00       		.uleb128 .LVU277
 9038 06ca 00       		.uleb128 .LVU282
 9039 06cb 00       		.uleb128 .LVU295
 9040 06cc 00       		.uleb128 .LVU297
 9041 06cd 00       		.uleb128 .LVU297
 9042 06ce 00       		.uleb128 0
 9043              	.LLST21:
 9044 06cf 4A030000 		.4byte	.LVL39
ARM GAS  /tmp/cc4r6sqw.s 			page 181


 9045 06d3 50030000 		.4byte	.LVL41
 9046 06d7 0100     		.2byte	0x1
 9047 06d9 50       		.byte	0x50
 9048 06da 6A030000 		.4byte	.LVL47
 9049 06de 6D030000 		.4byte	.LVL48-1
 9050 06e2 0100     		.2byte	0x1
 9051 06e4 50       		.byte	0x50
 9052 06e5 6D030000 		.4byte	.LVL48-1
 9053 06e9 88030000 		.4byte	.LFE41
 9054 06ed 0100     		.2byte	0x1
 9055 06ef 57       		.byte	0x57
 9056 06f0 00000000 		.4byte	0
 9057 06f4 00000000 		.4byte	0
 9058              	.LVUS22:
 9059 06f8 02       		.uleb128 .LVU279
 9060 06f9 00       		.uleb128 .LVU282
 9061 06fa 00       		.uleb128 .LVU282
 9062 06fb 00       		.uleb128 .LVU285
 9063 06fc 00       		.uleb128 .LVU285
 9064 06fd 00       		.uleb128 .LVU289
 9065 06fe 00       		.uleb128 .LVU289
 9066 06ff 00       		.uleb128 .LVU292
 9067 0700 00       		.uleb128 .LVU292
 9068 0701 00       		.uleb128 .LVU294
 9069 0702 00       		.uleb128 .LVU294
 9070 0703 00       		.uleb128 .LVU300
 9071 0704 00       		.uleb128 .LVU300
 9072 0705 01       		.uleb128 .LVU304
 9073              	.LLST22:
 9074 0706 4A030000 		.4byte	.LVL39
 9075 070a 50030000 		.4byte	.LVL41
 9076 070e 0200     		.2byte	0x2
 9077 0710 30       		.byte	0x30
 9078 0711 9F       		.byte	0x9f
 9079 0712 50030000 		.4byte	.LVL41
 9080 0716 52030000 		.4byte	.LVL42
 9081 071a 0600     		.2byte	0x6
 9082 071c 75       		.byte	0x75
 9083 071d 00       		.sleb128 0
 9084 071e 74       		.byte	0x74
 9085 071f 00       		.sleb128 0
 9086 0720 1C       		.byte	0x1c
 9087 0721 9F       		.byte	0x9f
 9088 0722 52030000 		.4byte	.LVL42
 9089 0726 58030000 		.4byte	.LVL43
 9090 072a 0100     		.2byte	0x1
 9091 072c 53       		.byte	0x53
 9092 072d 58030000 		.4byte	.LVL43
 9093 0731 62030000 		.4byte	.LVL45
 9094 0735 0600     		.2byte	0x6
 9095 0737 75       		.byte	0x75
 9096 0738 00       		.sleb128 0
 9097 0739 74       		.byte	0x74
 9098 073a 00       		.sleb128 0
 9099 073b 1C       		.byte	0x1c
 9100 073c 9F       		.byte	0x9f
 9101 073d 62030000 		.4byte	.LVL45
ARM GAS  /tmp/cc4r6sqw.s 			page 182


 9102 0741 67030000 		.4byte	.LVL46-1
 9103 0745 0100     		.2byte	0x1
 9104 0747 53       		.byte	0x53
 9105 0748 67030000 		.4byte	.LVL46-1
 9106 074c 76030000 		.4byte	.LVL49
 9107 0750 0600     		.2byte	0x6
 9108 0752 75       		.byte	0x75
 9109 0753 00       		.sleb128 0
 9110 0754 74       		.byte	0x74
 9111 0755 00       		.sleb128 0
 9112 0756 1C       		.byte	0x1c
 9113 0757 9F       		.byte	0x9f
 9114 0758 76030000 		.4byte	.LVL49
 9115 075c 82030000 		.4byte	.LVL51
 9116 0760 0700     		.2byte	0x7
 9117 0762 74       		.byte	0x74
 9118 0763 00       		.sleb128 0
 9119 0764 20       		.byte	0x20
 9120 0765 75       		.byte	0x75
 9121 0766 00       		.sleb128 0
 9122 0767 22       		.byte	0x22
 9123 0768 9F       		.byte	0x9f
 9124 0769 00000000 		.4byte	0
 9125 076d 00000000 		.4byte	0
 9126              	.LVUS23:
 9127 0771 00       		.uleb128 .LVU297
 9128 0772 00       		.uleb128 .LVU302
 9129              	.LLST23:
 9130 0773 6E030000 		.4byte	.LVL48
 9131 0777 79030000 		.4byte	.LVL50-1
 9132 077b 0100     		.2byte	0x1
 9133 077d 50       		.byte	0x50
 9134 077e 00000000 		.4byte	0
 9135 0782 00000000 		.4byte	0
 9136              	.LVUS7:
 9137 0786 00       		.uleb128 0
 9138 0787 00       		.uleb128 .LVU208
 9139 0788 00       		.uleb128 .LVU208
 9140 0789 00       		.uleb128 0
 9141              	.LLST7:
 9142 078a AC020000 		.4byte	.LVL13
 9143 078e B4020000 		.4byte	.LVL14
 9144 0792 0100     		.2byte	0x1
 9145 0794 50       		.byte	0x50
 9146 0795 B4020000 		.4byte	.LVL14
 9147 0799 C8020000 		.4byte	.LFE40
 9148 079d 0400     		.2byte	0x4
 9149 079f F3       		.byte	0xf3
 9150 07a0 01       		.uleb128 0x1
 9151 07a1 50       		.byte	0x50
 9152 07a2 9F       		.byte	0x9f
 9153 07a3 00000000 		.4byte	0
 9154 07a7 00000000 		.4byte	0
 9155              	.LVUS6:
 9156 07ab 00       		.uleb128 0
 9157 07ac 00       		.uleb128 .LVU200
 9158 07ad 00       		.uleb128 .LVU200
ARM GAS  /tmp/cc4r6sqw.s 			page 183


 9159 07ae 00       		.uleb128 0
 9160              	.LLST6:
 9161 07af 94020000 		.4byte	.LVL11
 9162 07b3 9C020000 		.4byte	.LVL12
 9163 07b7 0100     		.2byte	0x1
 9164 07b9 50       		.byte	0x50
 9165 07ba 9C020000 		.4byte	.LVL12
 9166 07be AC020000 		.4byte	.LFE39
 9167 07c2 0400     		.2byte	0x4
 9168 07c4 F3       		.byte	0xf3
 9169 07c5 01       		.uleb128 0x1
 9170 07c6 50       		.byte	0x50
 9171 07c7 9F       		.byte	0x9f
 9172 07c8 00000000 		.4byte	0
 9173 07cc 00000000 		.4byte	0
 9174              	.LLST5:
 9175 07d0 3C020000 		.4byte	.LFB37
 9176 07d4 3E020000 		.4byte	.LCFI2
 9177 07d8 0200     		.2byte	0x2
 9178 07da 7D       		.byte	0x7d
 9179 07db 00       		.sleb128 0
 9180 07dc 3E020000 		.4byte	.LCFI2
 9181 07e0 4A020000 		.4byte	.LCFI3
 9182 07e4 0200     		.2byte	0x2
 9183 07e6 7D       		.byte	0x7d
 9184 07e7 08       		.sleb128 8
 9185 07e8 4A020000 		.4byte	.LCFI3
 9186 07ec 4C020000 		.4byte	.LCFI4
 9187 07f0 0200     		.2byte	0x2
 9188 07f2 7D       		.byte	0x7d
 9189 07f3 00       		.sleb128 0
 9190 07f4 4C020000 		.4byte	.LCFI4
 9191 07f8 6C020000 		.4byte	.LFE37
 9192 07fc 0200     		.2byte	0x2
 9193 07fe 7D       		.byte	0x7d
 9194 07ff 08       		.sleb128 8
 9195 0800 00000000 		.4byte	0
 9196 0804 00000000 		.4byte	0
 9197              	.LLST8:
 9198 0808 C8020000 		.4byte	.LFB42
 9199 080c CA020000 		.4byte	.LCFI5
 9200 0810 0200     		.2byte	0x2
 9201 0812 7D       		.byte	0x7d
 9202 0813 00       		.sleb128 0
 9203 0814 CA020000 		.4byte	.LCFI5
 9204 0818 04030000 		.4byte	.LFE42
 9205 081c 0200     		.2byte	0x2
 9206 081e 7D       		.byte	0x7d
 9207 081f 08       		.sleb128 8
 9208 0820 00000000 		.4byte	0
 9209 0824 00000000 		.4byte	0
 9210              	.LVUS9:
 9211 0828 00       		.uleb128 0
 9212 0829 02       		.uleb128 .LVU221
 9213 082a 02       		.uleb128 .LVU221
 9214 082b 00       		.uleb128 .LVU222
 9215 082c 00       		.uleb128 .LVU222
ARM GAS  /tmp/cc4r6sqw.s 			page 184


 9216 082d 00       		.uleb128 .LVU234
 9217 082e 00       		.uleb128 .LVU234
 9218 082f 00       		.uleb128 .LVU244
 9219 0830 00       		.uleb128 .LVU244
 9220 0831 00       		.uleb128 0
 9221              	.LLST9:
 9222 0832 C8020000 		.4byte	.LVL15
 9223 0836 D2020000 		.4byte	.LVL17
 9224 083a 0100     		.2byte	0x1
 9225 083c 50       		.byte	0x50
 9226 083d D2020000 		.4byte	.LVL17
 9227 0841 D4020000 		.4byte	.LVL18
 9228 0845 0400     		.2byte	0x4
 9229 0847 F3       		.byte	0xf3
 9230 0848 01       		.uleb128 0x1
 9231 0849 50       		.byte	0x50
 9232 084a 9F       		.byte	0x9f
 9233 084b D4020000 		.4byte	.LVL18
 9234 084f E6020000 		.4byte	.LVL22
 9235 0853 0100     		.2byte	0x1
 9236 0855 50       		.byte	0x50
 9237 0856 E6020000 		.4byte	.LVL22
 9238 085a FC020000 		.4byte	.LVL27
 9239 085e 0400     		.2byte	0x4
 9240 0860 F3       		.byte	0xf3
 9241 0861 01       		.uleb128 0x1
 9242 0862 50       		.byte	0x50
 9243 0863 9F       		.byte	0x9f
 9244 0864 FC020000 		.4byte	.LVL27
 9245 0868 04030000 		.4byte	.LFE42
 9246 086c 0100     		.2byte	0x1
 9247 086e 50       		.byte	0x50
 9248 086f 00000000 		.4byte	0
 9249 0873 00000000 		.4byte	0
 9250              	.LVUS10:
 9251 0877 00       		.uleb128 0
 9252 0878 01       		.uleb128 .LVU216
 9253 0879 01       		.uleb128 .LVU216
 9254 087a 02       		.uleb128 .LVU221
 9255 087b 00       		.uleb128 .LVU222
 9256 087c 00       		.uleb128 .LVU234
 9257 087d 00       		.uleb128 .LVU234
 9258 087e 00       		.uleb128 .LVU244
 9259 087f 00       		.uleb128 .LVU244
 9260 0880 00       		.uleb128 0
 9261              	.LLST10:
 9262 0881 C8020000 		.4byte	.LVL15
 9263 0885 CC020000 		.4byte	.LVL16
 9264 0889 0100     		.2byte	0x1
 9265 088b 51       		.byte	0x51
 9266 088c CC020000 		.4byte	.LVL16
 9267 0890 D2020000 		.4byte	.LVL17
 9268 0894 0300     		.2byte	0x3
 9269 0896 71       		.byte	0x71
 9270 0897 01       		.sleb128 1
 9271 0898 9F       		.byte	0x9f
 9272 0899 D4020000 		.4byte	.LVL18
ARM GAS  /tmp/cc4r6sqw.s 			page 185


 9273 089d E6020000 		.4byte	.LVL22
 9274 08a1 0100     		.2byte	0x1
 9275 08a3 51       		.byte	0x51
 9276 08a4 E6020000 		.4byte	.LVL22
 9277 08a8 FC020000 		.4byte	.LVL27
 9278 08ac 0400     		.2byte	0x4
 9279 08ae F3       		.byte	0xf3
 9280 08af 01       		.uleb128 0x1
 9281 08b0 51       		.byte	0x51
 9282 08b1 9F       		.byte	0x9f
 9283 08b2 FC020000 		.4byte	.LVL27
 9284 08b6 04030000 		.4byte	.LFE42
 9285 08ba 0100     		.2byte	0x1
 9286 08bc 51       		.byte	0x51
 9287 08bd 00000000 		.4byte	0
 9288 08c1 00000000 		.4byte	0
 9289              	.LVUS11:
 9290 08c5 00       		.uleb128 .LVU230
 9291 08c6 02       		.uleb128 .LVU238
 9292 08c7 02       		.uleb128 .LVU238
 9293 08c8 00       		.uleb128 .LVU241
 9294 08c9 00       		.uleb128 .LVU241
 9295 08ca 00       		.uleb128 .LVU244
 9296              	.LLST11:
 9297 08cb E2020000 		.4byte	.LVL21
 9298 08cf EA020000 		.4byte	.LVL23
 9299 08d3 0100     		.2byte	0x1
 9300 08d5 52       		.byte	0x52
 9301 08d6 EA020000 		.4byte	.LVL23
 9302 08da F8020000 		.4byte	.LVL25
 9303 08de 0300     		.2byte	0x3
 9304 08e0 72       		.byte	0x72
 9305 08e1 7F       		.sleb128 -1
 9306 08e2 9F       		.byte	0x9f
 9307 08e3 F8020000 		.4byte	.LVL25
 9308 08e7 FC020000 		.4byte	.LVL27
 9309 08eb 0100     		.2byte	0x1
 9310 08ed 52       		.byte	0x52
 9311 08ee 00000000 		.4byte	0
 9312 08f2 00000000 		.4byte	0
 9313              	.LVUS12:
 9314 08f6 00       		.uleb128 .LVU234
 9315 08f7 00       		.uleb128 .LVU239
 9316 08f8 00       		.uleb128 .LVU243
 9317 08f9 00       		.uleb128 .LVU244
 9318              	.LLST12:
 9319 08fa E6020000 		.4byte	.LVL22
 9320 08fe F2020000 		.4byte	.LVL24
 9321 0902 0100     		.2byte	0x1
 9322 0904 50       		.byte	0x50
 9323 0905 FA020000 		.4byte	.LVL26
 9324 0909 FC020000 		.4byte	.LVL27
 9325 090d 0100     		.2byte	0x1
 9326 090f 50       		.byte	0x50
 9327 0910 00000000 		.4byte	0
 9328 0914 00000000 		.4byte	0
 9329              	.LVUS13:
ARM GAS  /tmp/cc4r6sqw.s 			page 186


 9330 0918 00       		.uleb128 .LVU222
 9331 0919 00       		.uleb128 .LVU234
 9332              	.LLST13:
 9333 091a D4020000 		.4byte	.LVL18
 9334 091e E6020000 		.4byte	.LVL22
 9335 0922 0100     		.2byte	0x1
 9336 0924 53       		.byte	0x53
 9337 0925 00000000 		.4byte	0
 9338 0929 00000000 		.4byte	0
 9339              	.LVUS14:
 9340 092d 00       		.uleb128 .LVU222
 9341 092e 00       		.uleb128 .LVU230
 9342              	.LLST14:
 9343 092f D4020000 		.4byte	.LVL18
 9344 0933 E2020000 		.4byte	.LVL21
 9345 0937 0100     		.2byte	0x1
 9346 0939 52       		.byte	0x52
 9347 093a 00000000 		.4byte	0
 9348 093e 00000000 		.4byte	0
 9349              	.LVUS15:
 9350 0942 01       		.uleb128 .LVU237
 9351 0943 00       		.uleb128 .LVU239
 9352              	.LLST15:
 9353 0944 EA020000 		.4byte	.LVL23
 9354 0948 F2020000 		.4byte	.LVL24
 9355 094c 0900     		.2byte	0x9
 9356 094e 70       		.byte	0x70
 9357 094f 00       		.sleb128 0
 9358 0950 3A       		.byte	0x3a
 9359 0951 14       		.byte	0x14
 9360 0952 14       		.byte	0x14
 9361 0953 1B       		.byte	0x1b
 9362 0954 1E       		.byte	0x1e
 9363 0955 1C       		.byte	0x1c
 9364 0956 9F       		.byte	0x9f
 9365 0957 00000000 		.4byte	0
 9366 095b 00000000 		.4byte	0
 9367              		.section	.debug_aranges,"",%progbits
 9368 0000 24000000 		.4byte	0x24
 9369 0004 0200     		.2byte	0x2
 9370 0006 00000000 		.4byte	.Ldebug_info0
 9371 000a 04       		.byte	0x4
 9372 000b 00       		.byte	0
 9373 000c 0000     		.2byte	0
 9374 000e 0000     		.2byte	0
 9375 0010 00000000 		.4byte	.Ltext0
 9376 0014 68090000 		.4byte	.Letext0-.Ltext0
 9377 0018 00000000 		.4byte	.LFB58
 9378 001c CC000000 		.4byte	.LFE58-.LFB58
 9379 0020 00000000 		.4byte	0
 9380 0024 00000000 		.4byte	0
 9381              		.section	.debug_ranges,"",%progbits
 9382              	.Ldebug_ranges0:
 9383 0000 D4020000 		.4byte	.LBB6
 9384 0004 FC020000 		.4byte	.LBE6
 9385 0008 FE020000 		.4byte	.LBB11
 9386 000c 04030000 		.4byte	.LBE11
ARM GAS  /tmp/cc4r6sqw.s 			page 187


 9387 0010 00000000 		.4byte	0
 9388 0014 00000000 		.4byte	0
 9389 0018 E4020000 		.4byte	.LBB8
 9390 001c E6020000 		.4byte	.LBE8
 9391 0020 EA020000 		.4byte	.LBB9
 9392 0024 FC020000 		.4byte	.LBE9
 9393 0028 00000000 		.4byte	0
 9394 002c 00000000 		.4byte	0
 9395 0030 4A030000 		.4byte	.LBB12
 9396 0034 4A030000 		.4byte	.LBE12
 9397 0038 4C030000 		.4byte	.LBB15
 9398 003c 56030000 		.4byte	.LBE15
 9399 0040 62030000 		.4byte	.LBB16
 9400 0044 88030000 		.4byte	.LBE16
 9401 0048 00000000 		.4byte	0
 9402 004c 00000000 		.4byte	0
 9403 0050 4C030000 		.4byte	.LBB13
 9404 0054 50030000 		.4byte	.LBE13
 9405 0058 62030000 		.4byte	.LBB14
 9406 005c 82030000 		.4byte	.LBE14
 9407 0060 00000000 		.4byte	0
 9408 0064 00000000 		.4byte	0
 9409 0068 42070000 		.4byte	.LBB19
 9410 006c 44070000 		.4byte	.LBE19
 9411 0070 48070000 		.4byte	.LBB20
 9412 0074 4A070000 		.4byte	.LBE20
 9413 0078 9E070000 		.4byte	.LBB21
 9414 007c C6070000 		.4byte	.LBE21
 9415 0080 00000000 		.4byte	0
 9416 0084 00000000 		.4byte	0
 9417 0088 D4080000 		.4byte	.LBB22
 9418 008c D4080000 		.4byte	.LBE22
 9419 0090 D6080000 		.4byte	.LBB23
 9420 0094 0A090000 		.4byte	.LBE23
 9421 0098 00000000 		.4byte	0
 9422 009c 00000000 		.4byte	0
 9423 00a0 00000000 		.4byte	.Ltext0
 9424 00a4 68090000 		.4byte	.Letext0
 9425 00a8 00000000 		.4byte	.LFB58
 9426 00ac CC000000 		.4byte	.LFE58
 9427 00b0 00000000 		.4byte	0
 9428 00b4 00000000 		.4byte	0
 9429              		.section	.debug_line,"",%progbits
 9430              	.Ldebug_line0:
 9431 0000 A90E0000 		.section	.debug_str,"MS",%progbits,1
 9431      03003702 
 9431      00000201 
 9431      FB0E0D00 
 9431      01010101 
 9432              	.LASF211:
 9433 0000 636F6E74 		.ascii	"controlarMotorPasso\000"
 9433      726F6C61 
 9433      724D6F74 
 9433      6F725061 
 9433      73736F00 
 9434              	.LASF75:
 9435 0014 52534552 		.ascii	"RSERVED1\000"
ARM GAS  /tmp/cc4r6sqw.s 			page 188


 9435      56454431 
 9435      00
 9436              	.LASF36:
 9437 001d 45585449 		.ascii	"EXTI2_IRQn\000"
 9437      325F4952 
 9437      516E00
 9438              	.LASF162:
 9439 0028 4750494F 		.ascii	"GPIO_Mode_IPU\000"
 9439      5F4D6F64 
 9439      655F4950 
 9439      5500
 9440              	.LASF249:
 9441 0036 55534152 		.ascii	"USART_SendData\000"
 9441      545F5365 
 9441      6E644461 
 9441      746100
 9442              	.LASF113:
 9443 0045 45585449 		.ascii	"EXTICR\000"
 9443      435200
 9444              	.LASF219:
 9445 004c 66726163 		.ascii	"fracionaria\000"
 9445      696F6E61 
 9445      72696100 
 9446              	.LASF245:
 9447 0058 64697370 		.ascii	"disp_cmd\000"
 9447      5F636D64 
 9447      00
 9448              	.LASF94:
 9449 0061 53515231 		.ascii	"SQR1\000"
 9449      00
 9450              	.LASF95:
 9451 0066 53515232 		.ascii	"SQR2\000"
 9451      00
 9452              	.LASF96:
 9453 006b 53515233 		.ascii	"SQR3\000"
 9453      00
 9454              	.LASF224:
 9455 0070 656E6162 		.ascii	"enable_TIM3_delay\000"
 9455      6C655F54 
 9455      494D335F 
 9455      64656C61 
 9455      7900
 9456              	.LASF153:
 9457 0082 47545052 		.ascii	"GTPR\000"
 9457      00
 9458              	.LASF43:
 9459 0087 444D4131 		.ascii	"DMA1_Channel5_IRQn\000"
 9459      5F436861 
 9459      6E6E656C 
 9459      355F4952 
 9459      516E00
 9460              	.LASF214:
 9461 009a 64696769 		.ascii	"digito\000"
 9461      746F00
 9462              	.LASF16:
 9463 00a1 42617365 		.ascii	"BaseType_t\000"
 9463      54797065 
ARM GAS  /tmp/cc4r6sqw.s 			page 189


 9463      5F7400
 9464              	.LASF225:
 9465 00ac 44656C61 		.ascii	"Delay\000"
 9465      7900
 9466              	.LASF32:
 9467 00b2 464C4153 		.ascii	"FLASH_IRQn\000"
 9467      485F4952 
 9467      516E00
 9468              	.LASF188:
 9469 00bd 776F7264 		.ascii	"word_IR\000"
 9469      5F495200 
 9470              	.LASF227:
 9471 00c5 41444331 		.ascii	"ADC1_configure\000"
 9471      5F636F6E 
 9471      66696775 
 9471      726500
 9472              	.LASF183:
 9473 00d4 50574D5F 		.ascii	"PWM_data_queue\000"
 9473      64617461 
 9473      5F717565 
 9473      756500
 9474              	.LASF56:
 9475 00e3 54494D32 		.ascii	"TIM2_IRQn\000"
 9475      5F495251 
 9475      6E00
 9476              	.LASF150:
 9477 00ed 444D4152 		.ascii	"DMAR\000"
 9477      00
 9478              	.LASF78:
 9479 00f2 49435052 		.ascii	"ICPR\000"
 9479      00
 9480              	.LASF139:
 9481 00f7 43435231 		.ascii	"CCR1\000"
 9481      00
 9482              	.LASF141:
 9483 00fc 43435232 		.ascii	"CCR2\000"
 9483      00
 9484              	.LASF143:
 9485 0101 43435233 		.ascii	"CCR3\000"
 9485      00
 9486              	.LASF145:
 9487 0106 43435234 		.ascii	"CCR4\000"
 9487      00
 9488              	.LASF6:
 9489 010b 5F5F7569 		.ascii	"__uint8_t\000"
 9489      6E74385F 
 9489      7400
 9490              	.LASF64:
 9491 0115 53504932 		.ascii	"SPI2_IRQn\000"
 9491      5F495251 
 9491      6E00
 9492              	.LASF169:
 9493 011f 4750494F 		.ascii	"GPIO_Speed\000"
 9493      5F537065 
 9493      656400
 9494              	.LASF209:
 9495 012a 41444339 		.ascii	"ADC9_Configuration\000"
ARM GAS  /tmp/cc4r6sqw.s 			page 190


 9495      5F436F6E 
 9495      66696775 
 9495      72617469 
 9495      6F6E00
 9496              	.LASF9:
 9497 013d 6C6F6E67 		.ascii	"long int\000"
 9497      20696E74 
 9497      00
 9498              	.LASF260:
 9499 0146 51756575 		.ascii	"QueueDefinition\000"
 9499      65446566 
 9499      696E6974 
 9499      696F6E00 
 9500              	.LASF159:
 9501 0156 4750494F 		.ascii	"GPIO_Mode_AIN\000"
 9501      5F4D6F64 
 9501      655F4149 
 9501      4E00
 9502              	.LASF30:
 9503 0164 54414D50 		.ascii	"TAMPER_IRQn\000"
 9503      45525F49 
 9503      52516E00 
 9504              	.LASF231:
 9505 0170 76546173 		.ascii	"vTaskStartScheduler\000"
 9505      6B537461 
 9505      72745363 
 9505      68656475 
 9505      6C657200 
 9506              	.LASF198:
 9507 0184 6D61696E 		.ascii	"main\000"
 9507      00
 9508              	.LASF221:
 9509 0189 4952516E 		.ascii	"IRQn\000"
 9509      00
 9510              	.LASF140:
 9511 018e 52455345 		.ascii	"RESERVED13\000"
 9511      52564544 
 9511      313300
 9512              	.LASF120:
 9513 0199 41504232 		.ascii	"APB2ENR\000"
 9513      454E5200 
 9514              	.LASF208:
 9515 01a1 55534152 		.ascii	"USART_InitStructure\000"
 9515      545F496E 
 9515      69745374 
 9515      72756374 
 9515      75726500 
 9516              	.LASF165:
 9517 01b5 4750494F 		.ascii	"GPIO_Mode_AF_OD\000"
 9517      5F4D6F64 
 9517      655F4146 
 9517      5F4F4400 
 9518              	.LASF27:
 9519 01c5 53797354 		.ascii	"SysTick_IRQn\000"
 9519      69636B5F 
 9519      4952516E 
 9519      00
ARM GAS  /tmp/cc4r6sqw.s 			page 191


 9520              	.LASF106:
 9521 01d2 57525052 		.ascii	"WRPR\000"
 9521      00
 9522              	.LASF67:
 9523 01d7 55534152 		.ascii	"USART3_IRQn\000"
 9523      54335F49 
 9523      52516E00 
 9524              	.LASF19:
 9525 01e3 51756575 		.ascii	"QueueHandle_t\000"
 9525      6548616E 
 9525      646C655F 
 9525      7400
 9526              	.LASF3:
 9527 01f1 7369676E 		.ascii	"signed char\000"
 9527      65642063 
 9527      68617200 
 9528              	.LASF13:
 9529 01fd 75696E74 		.ascii	"uint8_t\000"
 9529      385F7400 
 9530              	.LASF171:
 9531 0205 4750494F 		.ascii	"GPIO_InitTypeDef\000"
 9531      5F496E69 
 9531      74547970 
 9531      65446566 
 9531      00
 9532              	.LASF212:
 9533 0216 70617373 		.ascii	"passo\000"
 9533      6F00
 9534              	.LASF152:
 9535 021c 54494D5F 		.ascii	"TIM_TypeDef\000"
 9535      54797065 
 9535      44656600 
 9536              	.LASF73:
 9537 0228 52455345 		.ascii	"RESERVED0\000"
 9537      52564544 
 9537      3000
 9538              	.LASF126:
 9539 0232 52455345 		.ascii	"RESERVED1\000"
 9539      52564544 
 9539      3100
 9540              	.LASF4:
 9541 023c 756E7369 		.ascii	"unsigned char\000"
 9541      676E6564 
 9541      20636861 
 9541      7200
 9542              	.LASF79:
 9543 024a 52455345 		.ascii	"RESERVED3\000"
 9543      52564544 
 9543      3300
 9544              	.LASF81:
 9545 0254 52455345 		.ascii	"RESERVED4\000"
 9545      52564544 
 9545      3400
 9546              	.LASF82:
 9547 025e 52455345 		.ascii	"RESERVED5\000"
 9547      52564544 
 9547      3500
ARM GAS  /tmp/cc4r6sqw.s 			page 192


 9548              	.LASF130:
 9549 0268 52455345 		.ascii	"RESERVED6\000"
 9549      52564544 
 9549      3600
 9550              	.LASF132:
 9551 0272 52455345 		.ascii	"RESERVED7\000"
 9551      52564544 
 9551      3700
 9552              	.LASF134:
 9553 027c 52455345 		.ascii	"RESERVED8\000"
 9553      52564544 
 9553      3800
 9554              	.LASF135:
 9555 0286 52455345 		.ascii	"RESERVED9\000"
 9555      52564544 
 9555      3900
 9556              	.LASF166:
 9557 0290 4750494F 		.ascii	"GPIO_Mode_AF_PP\000"
 9557      5F4D6F64 
 9557      655F4146 
 9557      5F505000 
 9558              	.LASF80:
 9559 02a0 49414252 		.ascii	"IABR\000"
 9559      00
 9560              	.LASF173:
 9561 02a5 55534152 		.ascii	"USART_WordLength\000"
 9561      545F576F 
 9561      72644C65 
 9561      6E677468 
 9561      00
 9562              	.LASF60:
 9563 02b6 49324331 		.ascii	"I2C1_ER_IRQn\000"
 9563      5F45525F 
 9563      4952516E 
 9563      00
 9564              	.LASF229:
 9565 02c3 78517565 		.ascii	"xQueueGenericCreate\000"
 9565      75654765 
 9565      6E657269 
 9565      63437265 
 9565      61746500 
 9566              	.LASF39:
 9567 02d7 444D4131 		.ascii	"DMA1_Channel1_IRQn\000"
 9567      5F436861 
 9567      6E6E656C 
 9567      315F4952 
 9567      516E00
 9568              	.LASF52:
 9569 02ea 54494D31 		.ascii	"TIM1_BRK_IRQn\000"
 9569      5F42524B 
 9569      5F495251 
 9569      6E00
 9570              	.LASF77:
 9571 02f8 52455345 		.ascii	"RESERVED2\000"
 9571      52564544 
 9571      3200
 9572              	.LASF175:
ARM GAS  /tmp/cc4r6sqw.s 			page 193


 9573 0302 55534152 		.ascii	"USART_Parity\000"
 9573      545F5061 
 9573      72697479 
 9573      00
 9574              	.LASF23:
 9575 030f 55736167 		.ascii	"UsageFault_IRQn\000"
 9575      65466175 
 9575      6C745F49 
 9575      52516E00 
 9576              	.LASF129:
 9577 031f 43434D52 		.ascii	"CCMR1\000"
 9577      3100
 9578              	.LASF47:
 9579 0325 5553425F 		.ascii	"USB_HP_CAN1_TX_IRQn\000"
 9579      48505F43 
 9579      414E315F 
 9579      54585F49 
 9579      52516E00 
 9580              	.LASF18:
 9581 0339 63686172 		.ascii	"char\000"
 9581      00
 9582              	.LASF210:
 9583 033e 53746570 		.ascii	"Stepp_end\000"
 9583      705F656E 
 9583      6400
 9584              	.LASF247:
 9585 0348 5243435F 		.ascii	"RCC_APB2PeriphClockCmd\000"
 9585      41504232 
 9585      50657269 
 9585      7068436C 
 9585      6F636B43 
 9586              	.LASF163:
 9587 035f 4750494F 		.ascii	"GPIO_Mode_Out_OD\000"
 9587      5F4D6F64 
 9587      655F4F75 
 9587      745F4F44 
 9587      00
 9588              	.LASF7:
 9589 0370 5F5F7569 		.ascii	"__uint16_t\000"
 9589      6E743136 
 9589      5F7400
 9590              	.LASF220:
 9591 037b 64697361 		.ascii	"disable_interrupt\000"
 9591      626C655F 
 9591      696E7465 
 9591      72727570 
 9591      7400
 9592              	.LASF254:
 9593 038d 5F5F6165 		.ascii	"__aeabi_f2iz\000"
 9593      6162695F 
 9593      6632697A 
 9593      00
 9594              	.LASF157:
 9595 039a 4750494F 		.ascii	"GPIO_Speed_50MHz\000"
 9595      5F537065 
 9595      65645F35 
 9595      304D487A 
ARM GAS  /tmp/cc4r6sqw.s 			page 194


 9595      00
 9596              	.LASF114:
 9597 03ab 4D415052 		.ascii	"MAPR2\000"
 9597      3200
 9598              	.LASF154:
 9599 03b1 55534152 		.ascii	"USART_TypeDef\000"
 9599      545F5479 
 9599      70654465 
 9599      6600
 9600              	.LASF181:
 9601 03bf 4C43445F 		.ascii	"LCD_Show_queue\000"
 9601      53686F77 
 9601      5F717565 
 9601      756500
 9602              	.LASF70:
 9603 03ce 55534257 		.ascii	"USBWakeUp_IRQn\000"
 9603      616B6555 
 9603      705F4952 
 9603      516E00
 9604              	.LASF58:
 9605 03dd 54494D34 		.ascii	"TIM4_IRQn\000"
 9605      5F495251 
 9605      6E00
 9606              	.LASF66:
 9607 03e7 55534152 		.ascii	"USART2_IRQn\000"
 9607      54325F49 
 9607      52516E00 
 9608              	.LASF251:
 9609 03f3 55534152 		.ascii	"USART_Init\000"
 9609      545F496E 
 9609      697400
 9610              	.LASF233:
 9611 03fe 69746F61 		.ascii	"itoa\000"
 9611      00
 9612              	.LASF213:
 9613 0403 74656D70 		.ascii	"temp\000"
 9613      00
 9614              	.LASF122:
 9615 0408 42444352 		.ascii	"BDCR\000"
 9615      00
 9616              	.LASF83:
 9617 040d 53544952 		.ascii	"STIR\000"
 9617      00
 9618              	.LASF59:
 9619 0412 49324331 		.ascii	"I2C1_EV_IRQn\000"
 9619      5F45565F 
 9619      4952516E 
 9619      00
 9620              	.LASF102:
 9621 041f 4144435F 		.ascii	"ADC_TypeDef\000"
 9621      54797065 
 9621      44656600 
 9622              	.LASF105:
 9623 042b 52455345 		.ascii	"RESERVED\000"
 9623      52564544 
 9623      00
 9624              	.LASF238:
ARM GAS  /tmp/cc4r6sqw.s 			page 195


 9625 0434 78517565 		.ascii	"xQueuePeek\000"
 9625      75655065 
 9625      656B00
 9626              	.LASF241:
 9627 043f 5F5F6165 		.ascii	"__aeabi_f2d\000"
 9627      6162695F 
 9627      66326400 
 9628              	.LASF172:
 9629 044b 55534152 		.ascii	"USART_BaudRate\000"
 9629      545F4261 
 9629      75645261 
 9629      746500
 9630              	.LASF116:
 9631 045a 43464752 		.ascii	"CFGR\000"
 9631      00
 9632              	.LASF176:
 9633 045f 55534152 		.ascii	"USART_Mode\000"
 9633      545F4D6F 
 9633      646500
 9634              	.LASF55:
 9635 046a 54494D31 		.ascii	"TIM1_CC_IRQn\000"
 9635      5F43435F 
 9635      4952516E 
 9635      00
 9636              	.LASF35:
 9637 0477 45585449 		.ascii	"EXTI1_IRQn\000"
 9637      315F4952 
 9637      516E00
 9638              	.LASF164:
 9639 0482 4750494F 		.ascii	"GPIO_Mode_Out_PP\000"
 9639      5F4D6F64 
 9639      655F4F75 
 9639      745F5050 
 9639      00
 9640              	.LASF235:
 9641 0493 78517565 		.ascii	"xQueueGenericSend\000"
 9641      75654765 
 9641      6E657269 
 9641      6353656E 
 9641      6400
 9642              	.LASF104:
 9643 04a5 4F50544B 		.ascii	"OPTKEYR\000"
 9643      45595200 
 9644              	.LASF246:
 9645 04ad 4750494F 		.ascii	"GPIO_ReadInputDataBit\000"
 9645      5F526561 
 9645      64496E70 
 9645      75744461 
 9645      74614269 
 9646              	.LASF20:
 9647 04c3 4E6F6E4D 		.ascii	"NonMaskableInt_IRQn\000"
 9647      61736B61 
 9647      626C6549 
 9647      6E745F49 
 9647      52516E00 
 9648              	.LASF28:
 9649 04d7 57574447 		.ascii	"WWDG_IRQn\000"
ARM GAS  /tmp/cc4r6sqw.s 			page 196


 9649      5F495251 
 9649      6E00
 9650              	.LASF11:
 9651 04e1 6C6F6E67 		.ascii	"long unsigned int\000"
 9651      20756E73 
 9651      69676E65 
 9651      6420696E 
 9651      7400
 9652              	.LASF121:
 9653 04f3 41504231 		.ascii	"APB1ENR\000"
 9653      454E5200 
 9654              	.LASF21:
 9655 04fb 4D656D6F 		.ascii	"MemoryManagement_IRQn\000"
 9655      72794D61 
 9655      6E616765 
 9655      6D656E74 
 9655      5F495251 
 9656              	.LASF42:
 9657 0511 444D4131 		.ascii	"DMA1_Channel4_IRQn\000"
 9657      5F436861 
 9657      6E6E656C 
 9657      345F4952 
 9657      516E00
 9658              	.LASF128:
 9659 0524 44494552 		.ascii	"DIER\000"
 9659      00
 9660              	.LASF203:
 9661 0529 49525F49 		.ascii	"IR_Init\000"
 9661      6E697400 
 9662              	.LASF50:
 9663 0531 43414E31 		.ascii	"CAN1_SCE_IRQn\000"
 9663      5F534345 
 9663      5F495251 
 9663      6E00
 9664              	.LASF71:
 9665 053f 4952516E 		.ascii	"IRQn_Type\000"
 9665      5F547970 
 9665      6500
 9666              	.LASF88:
 9667 0549 534D5052 		.ascii	"SMPR1\000"
 9667      3100
 9668              	.LASF89:
 9669 054f 534D5052 		.ascii	"SMPR2\000"
 9669      3200
 9670              	.LASF232:
 9671 0555 78517565 		.ascii	"xQueueReceive\000"
 9671      75655265 
 9671      63656976 
 9671      6500
 9672              	.LASF261:
 9673 0563 4C434431 		.ascii	"LCD16x2_init\000"
 9673      3678325F 
 9673      696E6974 
 9673      00
 9674              	.LASF174:
 9675 0570 55534152 		.ascii	"USART_StopBits\000"
 9675      545F5374 
ARM GAS  /tmp/cc4r6sqw.s 			page 197


 9675      6F704269 
 9675      747300
 9676              	.LASF109:
 9677 057f 4C434B52 		.ascii	"LCKR\000"
 9677      00
 9678              	.LASF62:
 9679 0584 49324332 		.ascii	"I2C2_ER_IRQn\000"
 9679      5F45525F 
 9679      4952516E 
 9679      00
 9680              	.LASF187:
 9681 0591 61726773 		.ascii	"args\000"
 9681      00
 9682              	.LASF123:
 9683 0596 41484252 		.ascii	"AHBRSTR\000"
 9683      53545200 
 9684              	.LASF22:
 9685 059e 42757346 		.ascii	"BusFault_IRQn\000"
 9685      61756C74 
 9685      5F495251 
 9685      6E00
 9686              	.LASF111:
 9687 05ac 45564352 		.ascii	"EVCR\000"
 9687      00
 9688              	.LASF184:
 9689 05b1 636F6465 		.ascii	"code_ir\000"
 9689      5F697200 
 9690              	.LASF10:
 9691 05b9 5F5F7569 		.ascii	"__uint32_t\000"
 9691      6E743332 
 9691      5F7400
 9692              	.LASF1:
 9693 05c4 6C6F6E67 		.ascii	"long long int\000"
 9693      206C6F6E 
 9693      6720696E 
 9693      7400
 9694              	.LASF207:
 9695 05d2 55534152 		.ascii	"USART_init\000"
 9695      545F696E 
 9695      697400
 9696              	.LASF228:
 9697 05dd 636F6E66 		.ascii	"configure_PWM_TIM2\000"
 9697      69677572 
 9697      655F5057 
 9697      4D5F5449 
 9697      4D3200
 9698              	.LASF222:
 9699 05f0 656E6162 		.ascii	"enable_interrupt\000"
 9699      6C655F69 
 9699      6E746572 
 9699      72757074 
 9699      00
 9700              	.LASF63:
 9701 0601 53504931 		.ascii	"SPI1_IRQn\000"
 9701      5F495251 
 9701      6E00
 9702              	.LASF180:
ARM GAS  /tmp/cc4r6sqw.s 			page 198


 9703 060b 646F7562 		.ascii	"double\000"
 9703      6C6500
 9704              	.LASF24:
 9705 0612 53564361 		.ascii	"SVCall_IRQn\000"
 9705      6C6C5F49 
 9705      52516E00 
 9706              	.LASF117:
 9707 061e 41504232 		.ascii	"APB2RSTR\000"
 9707      52535452 
 9707      00
 9708              	.LASF69:
 9709 0627 52544341 		.ascii	"RTCAlarm_IRQn\000"
 9709      6C61726D 
 9709      5F495251 
 9709      6E00
 9710              	.LASF250:
 9711 0635 55534152 		.ascii	"USART_GetFlagStatus\000"
 9711      545F4765 
 9711      74466C61 
 9711      67537461 
 9711      74757300 
 9712              	.LASF179:
 9713 0649 666C6F61 		.ascii	"float\000"
 9713      7400
 9714              	.LASF205:
 9715 064f 55534152 		.ascii	"USARTSend\000"
 9715      5453656E 
 9715      6400
 9716              	.LASF0:
 9717 0659 756E7369 		.ascii	"unsigned int\000"
 9717      676E6564 
 9717      20696E74 
 9717      00
 9718              	.LASF242:
 9719 0666 5F5F6165 		.ascii	"__aeabi_dmul\000"
 9719      6162695F 
 9719      646D756C 
 9719      00
 9720              	.LASF124:
 9721 0673 43464752 		.ascii	"CFGR2\000"
 9721      3200
 9722              	.LASF61:
 9723 0679 49324332 		.ascii	"I2C2_EV_IRQn\000"
 9723      5F45565F 
 9723      4952516E 
 9723      00
 9724              	.LASF253:
 9725 0686 5F5F6165 		.ascii	"__aeabi_fmul\000"
 9725      6162695F 
 9725      666D756C 
 9725      00
 9726              	.LASF131:
 9727 0693 43434D52 		.ascii	"CCMR2\000"
 9727      3200
 9728              	.LASF45:
 9729 0699 444D4131 		.ascii	"DMA1_Channel7_IRQn\000"
 9729      5F436861 
ARM GAS  /tmp/cc4r6sqw.s 			page 199


 9729      6E6E656C 
 9729      375F4952 
 9729      516E00
 9730              	.LASF218:
 9731 06ac 696E7454 		.ascii	"intToStr\000"
 9731      6F537472 
 9731      00
 9732              	.LASF191:
 9733 06b5 56616C6F 		.ascii	"Valor_ADC_normalizado\000"
 9733      725F4144 
 9733      435F6E6F 
 9733      726D616C 
 9733      697A6164 
 9734              	.LASF230:
 9735 06cb 78546173 		.ascii	"xTaskCreate\000"
 9735      6B437265 
 9735      61746500 
 9736              	.LASF193:
 9737 06d7 7461736B 		.ascii	"task1\000"
 9737      3100
 9738              	.LASF192:
 9739 06dd 7461736B 		.ascii	"task2\000"
 9739      3200
 9740              	.LASF202:
 9741 06e3 7461736B 		.ascii	"task3\000"
 9741      3300
 9742              	.LASF189:
 9743 06e9 7461736B 		.ascii	"task4\000"
 9743      3400
 9744              	.LASF186:
 9745 06ef 7461736B 		.ascii	"task5\000"
 9745      3500
 9746              	.LASF185:
 9747 06f5 7461736B 		.ascii	"task6\000"
 9747      3600
 9748              	.LASF86:
 9749 06fb 44495341 		.ascii	"DISABLE\000"
 9749      424C4500 
 9750              	.LASF2:
 9751 0703 6C6F6E67 		.ascii	"long double\000"
 9751      20646F75 
 9751      626C6500 
 9752              	.LASF54:
 9753 070f 54494D31 		.ascii	"TIM1_TRG_COM_IRQn\000"
 9753      5F545247 
 9753      5F434F4D 
 9753      5F495251 
 9753      6E00
 9754              	.LASF118:
 9755 0721 41504231 		.ascii	"APB1RSTR\000"
 9755      52535452 
 9755      00
 9756              	.LASF236:
 9757 072a 76546173 		.ascii	"vTaskDelay\000"
 9757      6B44656C 
 9757      617900
 9758              	.LASF248:
ARM GAS  /tmp/cc4r6sqw.s 			page 200


 9759 0735 4750494F 		.ascii	"GPIO_Init\000"
 9759      5F496E69 
 9759      7400
 9760              	.LASF84:
 9761 073f 4E564943 		.ascii	"NVIC_Type\000"
 9761      5F547970 
 9761      6500
 9762              	.LASF68:
 9763 0749 45585449 		.ascii	"EXTI15_10_IRQn\000"
 9763      31355F31 
 9763      305F4952 
 9763      516E00
 9764              	.LASF12:
 9765 0758 6C6F6E67 		.ascii	"long long unsigned int\000"
 9765      206C6F6E 
 9765      6720756E 
 9765      7369676E 
 9765      65642069 
 9766              	.LASF14:
 9767 076f 75696E74 		.ascii	"uint16_t\000"
 9767      31365F74 
 9767      00
 9768              	.LASF57:
 9769 0778 54494D33 		.ascii	"TIM3_IRQn\000"
 9769      5F495251 
 9769      6E00
 9770              	.LASF133:
 9771 0782 43434552 		.ascii	"CCER\000"
 9771      00
 9772              	.LASF138:
 9773 0787 52455345 		.ascii	"RESERVED12\000"
 9773      52564544 
 9773      313200
 9774              	.LASF65:
 9775 0792 55534152 		.ascii	"USART1_IRQn\000"
 9775      54315F49 
 9775      52516E00 
 9776              	.LASF142:
 9777 079e 52455345 		.ascii	"RESERVED14\000"
 9777      52564544 
 9777      313400
 9778              	.LASF144:
 9779 07a9 52455345 		.ascii	"RESERVED15\000"
 9779      52564544 
 9779      313500
 9780              	.LASF146:
 9781 07b4 52455345 		.ascii	"RESERVED16\000"
 9781      52564544 
 9781      313600
 9782              	.LASF148:
 9783 07bf 52455345 		.ascii	"RESERVED17\000"
 9783      52564544 
 9783      313700
 9784              	.LASF149:
 9785 07ca 52455345 		.ascii	"RESERVED18\000"
 9785      52564544 
 9785      313800
ARM GAS  /tmp/cc4r6sqw.s 			page 201


 9786              	.LASF151:
 9787 07d5 52455345 		.ascii	"RESERVED19\000"
 9787      52564544 
 9787      313900
 9788              	.LASF112:
 9789 07e0 4D415052 		.ascii	"MAPR\000"
 9789      00
 9790              	.LASF190:
 9791 07e5 6369636C 		.ascii	"cicle_duty\000"
 9791      655F6475 
 9791      747900
 9792              	.LASF206:
 9793 07f0 70756342 		.ascii	"pucBuffer\000"
 9793      75666665 
 9793      7200
 9794              	.LASF204:
 9795 07fa 4750494F 		.ascii	"GPIO_InitStructure\000"
 9795      5F496E69 
 9795      74537472 
 9795      75637475 
 9795      726500
 9796              	.LASF170:
 9797 080d 4750494F 		.ascii	"GPIO_Mode\000"
 9797      5F4D6F64 
 9797      6500
 9798              	.LASF252:
 9799 0817 55534152 		.ascii	"USART_Cmd\000"
 9799      545F436D 
 9799      6400
 9800              	.LASF17:
 9801 0821 5469636B 		.ascii	"TickType_t\000"
 9801      54797065 
 9801      5F7400
 9802              	.LASF234:
 9803 082c 75785175 		.ascii	"uxQueueMessagesWaiting\000"
 9803      6575654D 
 9803      65737361 
 9803      67657357 
 9803      61697469 
 9804              	.LASF74:
 9805 0843 49434552 		.ascii	"ICER\000"
 9805      00
 9806              	.LASF127:
 9807 0848 534D4352 		.ascii	"SMCR\000"
 9807      00
 9808              	.LASF167:
 9809 084d 4750494F 		.ascii	"GPIOMode_TypeDef\000"
 9809      4D6F6465 
 9809      5F547970 
 9809      65446566 
 9809      00
 9810              	.LASF85:
 9811 085e 52455345 		.ascii	"RESET\000"
 9811      5400
 9812              	.LASF244:
 9813 0864 64697370 		.ascii	"disp_init\000"
 9813      5F696E69 
ARM GAS  /tmp/cc4r6sqw.s 			page 202


 9813      7400
 9814              	.LASF178:
 9815 086e 55534152 		.ascii	"USART_InitTypeDef\000"
 9815      545F496E 
 9815      69745479 
 9815      70654465 
 9815      6600
 9816              	.LASF29:
 9817 0880 5056445F 		.ascii	"PVD_IRQn\000"
 9817      4952516E 
 9817      00
 9818              	.LASF200:
 9819 0889 636F6465 		.ascii	"code\000"
 9819      00
 9820              	.LASF34:
 9821 088e 45585449 		.ascii	"EXTI0_IRQn\000"
 9821      305F4952 
 9821      516E00
 9822              	.LASF255:
 9823 0899 5F5F6165 		.ascii	"__aeabi_fsub\000"
 9823      6162695F 
 9823      66737562 
 9823      00
 9824              	.LASF156:
 9825 08a6 4750494F 		.ascii	"GPIO_Speed_2MHz\000"
 9825      5F537065 
 9825      65645F32 
 9825      4D487A00 
 9826              	.LASF158:
 9827 08b6 4750494F 		.ascii	"GPIOSpeed_TypeDef\000"
 9827      53706565 
 9827      645F5479 
 9827      70654465 
 9827      6600
 9828              	.LASF25:
 9829 08c8 44656275 		.ascii	"DebugMonitor_IRQn\000"
 9829      674D6F6E 
 9829      69746F72 
 9829      5F495251 
 9829      6E00
 9830              	.LASF168:
 9831 08da 4750494F 		.ascii	"GPIO_Pin\000"
 9831      5F50696E 
 9831      00
 9832              	.LASF239:
 9833 08e3 64697370 		.ascii	"disp_clear\000"
 9833      5F636C65 
 9833      617200
 9834              	.LASF48:
 9835 08ee 5553425F 		.ascii	"USB_LP_CAN1_RX0_IRQn\000"
 9835      4C505F43 
 9835      414E315F 
 9835      5258305F 
 9835      4952516E 
 9836              	.LASF41:
 9837 0903 444D4131 		.ascii	"DMA1_Channel3_IRQn\000"
 9837      5F436861 
ARM GAS  /tmp/cc4r6sqw.s 			page 203


 9837      6E6E656C 
 9837      335F4952 
 9837      516E00
 9838              	.LASF103:
 9839 0916 4B455952 		.ascii	"KEYR\000"
 9839      00
 9840              	.LASF125:
 9841 091b 5243435F 		.ascii	"RCC_TypeDef\000"
 9841      54797065 
 9841      44656600 
 9842              	.LASF5:
 9843 0927 73686F72 		.ascii	"short int\000"
 9843      7420696E 
 9843      7400
 9844              	.LASF33:
 9845 0931 5243435F 		.ascii	"RCC_IRQn\000"
 9845      4952516E 
 9845      00
 9846              	.LASF160:
 9847 093a 4750494F 		.ascii	"GPIO_Mode_IN_FLOATING\000"
 9847      5F4D6F64 
 9847      655F494E 
 9847      5F464C4F 
 9847      4154494E 
 9848              	.LASF216:
 9849 0950 70726563 		.ascii	"precision\000"
 9849      6973696F 
 9849      6E00
 9850              	.LASF115:
 9851 095a 4146494F 		.ascii	"AFIO_TypeDef\000"
 9851      5F547970 
 9851      65446566 
 9851      00
 9852              	.LASF90:
 9853 0967 4A4F4652 		.ascii	"JOFR1\000"
 9853      3100
 9854              	.LASF91:
 9855 096d 4A4F4652 		.ascii	"JOFR2\000"
 9855      3200
 9856              	.LASF92:
 9857 0973 4A4F4652 		.ascii	"JOFR3\000"
 9857      3300
 9858              	.LASF93:
 9859 0979 4A4F4652 		.ascii	"JOFR4\000"
 9859      3400
 9860              	.LASF197:
 9861 097f 656E745F 		.ascii	"ent_atual\000"
 9861      61747561 
 9861      6C00
 9862              	.LASF46:
 9863 0989 41444331 		.ascii	"ADC1_2_IRQn\000"
 9863      5F325F49 
 9863      52516E00 
 9864              	.LASF87:
 9865 0995 454E4142 		.ascii	"ENABLE\000"
 9865      4C4500
 9866              	.LASF223:
ARM GAS  /tmp/cc4r6sqw.s 			page 204


 9867 099c 41444339 		.ascii	"ADC9_GetValue\000"
 9867      5F476574 
 9867      56616C75 
 9867      6500
 9868              	.LASF119:
 9869 09aa 41484245 		.ascii	"AHBENR\000"
 9869      4E5200
 9870              	.LASF257:
 9871 09b1 474E5520 		.ascii	"GNU C17 10.3.1 20210824 (release) -mcpu=cortex-m3 -"
 9871      43313720 
 9871      31302E33 
 9871      2E312032 
 9871      30323130 
 9872 09e4 6D746875 		.ascii	"mthumb -mfloat-abi=soft -march=armv7-m -g -gdwarf-2"
 9872      6D62202D 
 9872      6D666C6F 
 9872      61742D61 
 9872      62693D73 
 9873 0a17 202D4F73 		.ascii	" -Os -fomit-frame-pointer\000"
 9873      202D666F 
 9873      6D69742D 
 9873      6672616D 
 9873      652D706F 
 9874              	.LASF108:
 9875 0a31 42535252 		.ascii	"BSRR\000"
 9875      00
 9876              	.LASF98:
 9877 0a36 4A445231 		.ascii	"JDR1\000"
 9877      00
 9878              	.LASF99:
 9879 0a3b 4A445232 		.ascii	"JDR2\000"
 9879      00
 9880              	.LASF100:
 9881 0a40 4A445233 		.ascii	"JDR3\000"
 9881      00
 9882              	.LASF101:
 9883 0a45 4A445234 		.ascii	"JDR4\000"
 9883      00
 9884              	.LASF196:
 9885 0a4a 466C6F61 		.ascii	"Float_point\000"
 9885      745F706F 
 9885      696E7400 
 9886              	.LASF226:
 9887 0a56 7365745F 		.ascii	"set_system_clock_to_72Mhz\000"
 9887      73797374 
 9887      656D5F63 
 9887      6C6F636B 
 9887      5F746F5F 
 9888              	.LASF97:
 9889 0a70 4A535152 		.ascii	"JSQR\000"
 9889      00
 9890              	.LASF110:
 9891 0a75 4750494F 		.ascii	"GPIO_TypeDef\000"
 9891      5F547970 
 9891      65446566 
 9891      00
 9892              	.LASF40:
ARM GAS  /tmp/cc4r6sqw.s 			page 205


 9893 0a82 444D4131 		.ascii	"DMA1_Channel2_IRQn\000"
 9893      5F436861 
 9893      6E6E656C 
 9893      325F4952 
 9893      516E00
 9894              	.LASF107:
 9895 0a95 464C4153 		.ascii	"FLASH_TypeDef\000"
 9895      485F5479 
 9895      70654465 
 9895      6600
 9896              	.LASF199:
 9897 0aa3 49525F52 		.ascii	"IR_Read\000"
 9897      65616400 
 9898              	.LASF147:
 9899 0aab 42445452 		.ascii	"BDTR\000"
 9899      00
 9900              	.LASF194:
 9901 0ab0 6D73675F 		.ascii	"msg_buf_rev\000"
 9901      6275665F 
 9901      72657600 
 9902              	.LASF15:
 9903 0abc 75696E74 		.ascii	"uint32_t\000"
 9903      33325F74 
 9903      00
 9904              	.LASF53:
 9905 0ac5 54494D31 		.ascii	"TIM1_UP_IRQn\000"
 9905      5F55505F 
 9905      4952516E 
 9905      00
 9906              	.LASF49:
 9907 0ad2 43414E31 		.ascii	"CAN1_RX1_IRQn\000"
 9907      5F525831 
 9907      5F495251 
 9907      6E00
 9908              	.LASF177:
 9909 0ae0 55534152 		.ascii	"USART_HardwareFlowControl\000"
 9909      545F4861 
 9909      72647761 
 9909      7265466C 
 9909      6F77436F 
 9910              	.LASF256:
 9911 0afa 5F5F6165 		.ascii	"__aeabi_fcmplt\000"
 9911      6162695F 
 9911      66636D70 
 9911      6C7400
 9912              	.LASF51:
 9913 0b09 45585449 		.ascii	"EXTI9_5_IRQn\000"
 9913      395F355F 
 9913      4952516E 
 9913      00
 9914              	.LASF155:
 9915 0b16 4750494F 		.ascii	"GPIO_Speed_10MHz\000"
 9915      5F537065 
 9915      65645F31 
 9915      304D487A 
 9915      00
 9916              	.LASF38:
ARM GAS  /tmp/cc4r6sqw.s 			page 206


 9917 0b27 45585449 		.ascii	"EXTI4_IRQn\000"
 9917      345F4952 
 9917      516E00
 9918              	.LASF8:
 9919 0b32 73686F72 		.ascii	"short unsigned int\000"
 9919      7420756E 
 9919      7369676E 
 9919      65642069 
 9919      6E7400
 9920              	.LASF136:
 9921 0b45 52455345 		.ascii	"RESERVED10\000"
 9921      52564544 
 9921      313000
 9922              	.LASF137:
 9923 0b50 52455345 		.ascii	"RESERVED11\000"
 9923      52564544 
 9923      313100
 9924              	.LASF76:
 9925 0b5b 49535052 		.ascii	"ISPR\000"
 9925      00
 9926              	.LASF37:
 9927 0b60 45585449 		.ascii	"EXTI3_IRQn\000"
 9927      335F4952 
 9927      516E00
 9928              	.LASF26:
 9929 0b6b 50656E64 		.ascii	"PendSV_IRQn\000"
 9929      53565F49 
 9929      52516E00 
 9930              	.LASF215:
 9931 0b77 666C6F61 		.ascii	"floatToString\000"
 9931      74546F53 
 9931      7472696E 
 9931      6700
 9932              	.LASF72:
 9933 0b85 49534552 		.ascii	"ISER\000"
 9933      00
 9934              	.LASF258:
 9935 0b8a 2E2E2F38 		.ascii	"../8-LCD-TEMP-STP_Motor_IR/main.c\000"
 9935      2D4C4344 
 9935      2D54454D 
 9935      502D5354 
 9935      505F4D6F 
 9936              	.LASF243:
 9937 0bac 5F5F6165 		.ascii	"__aeabi_d2f\000"
 9937      6162695F 
 9937      64326600 
 9938              	.LASF44:
 9939 0bb8 444D4131 		.ascii	"DMA1_Channel6_IRQn\000"
 9939      5F436861 
 9939      6E6E656C 
 9939      365F4952 
 9939      516E00
 9940              	.LASF201:
 9941 0bcb 64617461 		.ascii	"data\000"
 9941      00
 9942              	.LASF240:
 9943 0bd0 5F5F6165 		.ascii	"__aeabi_i2f\000"
ARM GAS  /tmp/cc4r6sqw.s 			page 207


 9943      6162695F 
 9943      69326600 
 9944              	.LASF259:
 9945 0bdc 2F686F6D 		.ascii	"/home/junior/Codigos/6-Stm32_GCC_FreeRTOS10.2.1/8-L"
 9945      652F6A75 
 9945      6E696F72 
 9945      2F436F64 
 9945      69676F73 
 9946 0c0f 43442D54 		.ascii	"CD-TEMP-STP_Motor_IR\000"
 9946      454D502D 
 9946      5354505F 
 9946      4D6F746F 
 9946      725F4952 
 9947              	.LASF182:
 9948 0c24 53544D6F 		.ascii	"STMotor_queue\000"
 9948      746F725F 
 9948      71756575 
 9948      6500
 9949              	.LASF237:
 9950 0c32 64697370 		.ascii	"disp_text\000"
 9950      5F746578 
 9950      7400
 9951              	.LASF31:
 9952 0c3c 5254435F 		.ascii	"RTC_IRQn\000"
 9952      4952516E 
 9952      00
 9953              	.LASF217:
 9954 0c45 696E7465 		.ascii	"inteira\000"
 9954      69726100 
 9955              	.LASF195:
 9956 0c4d 42554646 		.ascii	"BUFF\000"
 9956      00
 9957              	.LASF161:
 9958 0c52 4750494F 		.ascii	"GPIO_Mode_IPD\000"
 9958      5F4D6F64 
 9958      655F4950 
 9958      4400
 9959              		.ident	"GCC: (GNU Arm Embedded Toolchain 10.3-2021.10) 10.3.1 20210824 (release)"
ARM GAS  /tmp/cc4r6sqw.s 			page 208


DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.c
     /tmp/cc4r6sqw.s:78     .text:0000000000000000 $t
     /tmp/cc4r6sqw.s:83     .text:0000000000000000 task2
     /tmp/cc4r6sqw.s:141    .text:0000000000000028 $d
     /tmp/cc4r6sqw.s:146    .text:0000000000000030 $t
     /tmp/cc4r6sqw.s:151    .text:0000000000000030 task6
     /tmp/cc4r6sqw.s:266    .text:000000000000007c $d
     /tmp/cc4r6sqw.s:273    .text:000000000000008c $t
     /tmp/cc4r6sqw.s:279    .text:000000000000008c configure_PWM_TIM2
     /tmp/cc4r6sqw.s:407    .text:0000000000000130 $d
     /tmp/cc4r6sqw.s:413    .text:000000000000013c $t
     /tmp/cc4r6sqw.s:419    .text:000000000000013c ADC1_configure
     /tmp/cc4r6sqw.s:546    .text:00000000000001bc $d
     /tmp/cc4r6sqw.s:552    .text:00000000000001c8 $t
     /tmp/cc4r6sqw.s:558    .text:00000000000001c8 set_system_clock_to_72Mhz
     /tmp/cc4r6sqw.s:666    .text:0000000000000238 $d
     /tmp/cc4r6sqw.s:670    .text:000000000000023c $t
     /tmp/cc4r6sqw.s:676    .text:000000000000023c Delay
     /tmp/cc4r6sqw.s:747    .text:0000000000000268 $d
     /tmp/cc4r6sqw.s:751    .text:000000000000026c $t
     /tmp/cc4r6sqw.s:757    .text:000000000000026c enable_TIM3_delay
     /tmp/cc4r6sqw.s:795    .text:0000000000000290 $d
     /tmp/cc4r6sqw.s:799    .text:0000000000000294 $t
     /tmp/cc4r6sqw.s:805    .text:0000000000000294 enable_interrupt
     /tmp/cc4r6sqw.s:837    .text:00000000000002a8 $d
     /tmp/cc4r6sqw.s:841    .text:00000000000002ac $t
     /tmp/cc4r6sqw.s:847    .text:00000000000002ac disable_interrupt
     /tmp/cc4r6sqw.s:880    .text:00000000000002c4 $d
     /tmp/cc4r6sqw.s:884    .text:00000000000002c8 $t
     /tmp/cc4r6sqw.s:890    .text:00000000000002c8 intToStr
     /tmp/cc4r6sqw.s:1023   .text:0000000000000304 floatToString
     /tmp/cc4r6sqw.s:1210   .text:0000000000000384 $d
     /tmp/cc4r6sqw.s:1215   .text:0000000000000388 $t
     /tmp/cc4r6sqw.s:1221   .text:0000000000000388 controlarMotorPasso
     /tmp/cc4r6sqw.s:1251   .text:00000000000003a4 $d
     /tmp/cc4r6sqw.s:1319   .text:00000000000003e8 $d
     /tmp/cc4r6sqw.s:1323   .text:00000000000003ec $t
     /tmp/cc4r6sqw.s:1328   .text:00000000000003ec task4
     /tmp/cc4r6sqw.s:1465   .text:000000000000045c $d
     /tmp/cc4r6sqw.s:1473   .text:000000000000046c $t
     /tmp/cc4r6sqw.s:1479   .text:000000000000046c Stepp_end
     /tmp/cc4r6sqw.s:1499   .text:0000000000000478 $d
     /tmp/cc4r6sqw.s:1503   .text:000000000000047c $t
     /tmp/cc4r6sqw.s:1509   .text:000000000000047c USART_init
     /tmp/cc4r6sqw.s:1622   .text:00000000000004e8 $d
     /tmp/cc4r6sqw.s:1626   .text:00000000000004ec $t
     /tmp/cc4r6sqw.s:1632   .text:00000000000004ec USARTSend
     /tmp/cc4r6sqw.s:1691   .text:0000000000000510 $d
     /tmp/cc4r6sqw.s:1695   .text:0000000000000514 $t
     /tmp/cc4r6sqw.s:1701   .text:0000000000000514 ADC9_Configuration
     /tmp/cc4r6sqw.s:1790   .text:0000000000000574 $d
     /tmp/cc4r6sqw.s:1797   .text:0000000000000584 $t
     /tmp/cc4r6sqw.s:1803   .text:0000000000000584 task3
     /tmp/cc4r6sqw.s:1870   .text:00000000000005b4 $d
     /tmp/cc4r6sqw.s:1875   .text:00000000000005bc $t
     /tmp/cc4r6sqw.s:1881   .text:00000000000005bc ADC9_GetValue
ARM GAS  /tmp/cc4r6sqw.s 			page 209


     /tmp/cc4r6sqw.s:1917   .text:00000000000005d4 $d
     /tmp/cc4r6sqw.s:1921   .text:00000000000005d8 $t
     /tmp/cc4r6sqw.s:1927   .text:00000000000005d8 IR_Init
     /tmp/cc4r6sqw.s:1977   .text:0000000000000600 $d
     /tmp/cc4r6sqw.s:1981   .text:0000000000000604 $t
     /tmp/cc4r6sqw.s:1987   .text:0000000000000604 IR_Read
     /tmp/cc4r6sqw.s:2155   .text:0000000000000688 $d
     /tmp/cc4r6sqw.s:2163   .text:000000000000068c $t
     /tmp/cc4r6sqw.s:2168   .text:000000000000068c task5
     /tmp/cc4r6sqw.s:2313   .text:0000000000000718 $d
     /tmp/cc4r6sqw.s:2332   .text:0000000000000730 $t
     /tmp/cc4r6sqw.s:2338   .text:0000000000000730 LCD16x2_init
     /tmp/cc4r6sqw.s:2496   .text:00000000000007d8 $d
     /tmp/cc4r6sqw.s:2515   .text:00000000000007f4 $t
     /tmp/cc4r6sqw.s:2520   .text:00000000000007f4 task1
     /tmp/cc4r6sqw.s:2848   .text:0000000000000938 $d
     /tmp/cc4r6sqw.s:2877   .text.startup:0000000000000000 $t
     /tmp/cc4r6sqw.s:2883   .text.startup:0000000000000000 main
     /tmp/cc4r6sqw.s:3006   .text.startup:0000000000000098 $d
     /tmp/cc4r6sqw.s:3023   .bss:0000000000000000 $d
     /tmp/cc4r6sqw.s:3027   .bss:0000000000000000 PWM_data_queue
     /tmp/cc4r6sqw.s:3031   .bss:0000000000000004 STMotor_queue
     /tmp/cc4r6sqw.s:3035   .bss:0000000000000008 LCD_Show_queue
     /tmp/cc4r6sqw.s:1258   .text:00000000000003ab $d
     /tmp/cc4r6sqw.s:1258   .text:00000000000003ac $t

UNDEFINED SYMBOLS
vTaskDelay
xQueueReceive
__aeabi_fcmplt
__aeabi_f2iz
__aeabi_i2f
__aeabi_fsub
__aeabi_fmul
RCC_APB2PeriphClockCmd
GPIO_Init
USART_Init
USART_Cmd
USART_SendData
USART_GetFlagStatus
uxQueueMessagesWaiting
xQueueGenericSend
GPIO_ReadInputDataBit
itoa
disp_init
disp_cmd
disp_text
disp_clear
__aeabi_f2d
__aeabi_dmul
__aeabi_d2f
xQueuePeek
xQueueGenericCreate
xTaskCreate
vTaskStartScheduler
