ARM GAS  /tmp/ccRi8Uxx.s 			page 1


   1              		.cpu cortex-m3
   2              		.arch armv7-m
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1	@ Tag_ABI_FP_denormal
   5              		.eabi_attribute 21, 1	@ Tag_ABI_FP_exceptions
   6              		.eabi_attribute 23, 3	@ Tag_ABI_FP_number_model
   7              		.eabi_attribute 24, 1	@ Tag_ABI_align8_needed
   8              		.eabi_attribute 25, 1	@ Tag_ABI_align8_preserved
   9              		.eabi_attribute 26, 1	@ Tag_ABI_enum_size
  10              		.eabi_attribute 30, 4	@ Tag_ABI_optimization_goals
  11              		.eabi_attribute 34, 1	@ Tag_CPU_unaligned_access
  12              		.eabi_attribute 18, 4	@ Tag_ABI_PCS_wchar_t
  13              		.file	"main.c"
  14              	@ GNU C17 (GNU Arm Embedded Toolchain 10.3-2021.10) version 10.3.1 20210824 (release) (arm-none-eab
  15              	@	compiled by GNU C version 4.8.4, GMP version 6.1.0, MPFR version 3.1.4, MPC version 1.0.3, isl ve
  16              	
  17              	@ GGC heuristics: --param ggc-min-expand=100 --param ggc-min-heapsize=131072
  18              	@ options passed:  -I . -I ../user
  19              	@ -I ../stm32f10x_lib/CMSIS/CM3/CoreSupport
  20              	@ -I ../stm32f10x_lib/CMSIS/CM3/DeviceSupport/ST/STM32F10x
  21              	@ -I ../stm32f10x_lib/STM32F10x_StdPeriph_Driver/inc
  22              	@ -I ../stm32f10x_lib/STM32F10x_StdPeriph_Driver -I ../freertos/include
  23              	@ -I ../freertos/portable/GCC/ARM_CM3 -imultilib thumb/v7-m/nofp
  24              	@ -iprefix /usr/bin/../lib/gcc/arm-none-eabi/10.3.1/
  25              	@ -isysroot /usr/bin/../arm-none-eabi -D__USES_INITFINI__ -D STM32F10X_MD
  26              	@ -D USE_STDPERIPH_DRIVER -D HSE_VALUE=8000000 -D RUN_FROM_FLASH=1
  27              	@ ../user/main.c -mcpu=cortex-m3 -mthumb -mfloat-abi=soft -mlibarch=armv7-m
  28              	@ -march=armv7-m -auxbase-strip ../user/main.o -g -gdwarf-2 -Os -Wall
  29              	@ -fomit-frame-pointer -fverbose-asm
  30              	@ options enabled:  -faggressive-loop-optimizations -fallocation-dce
  31              	@ -fauto-inc-dec -fbranch-count-reg -fcaller-saves -fcode-hoisting
  32              	@ -fcombine-stack-adjustments -fcompare-elim -fcprop-registers
  33              	@ -fcrossjumping -fcse-follow-jumps -fdefer-pop
  34              	@ -fdelete-null-pointer-checks -fdevirtualize -fdevirtualize-speculatively
  35              	@ -fdwarf2-cfi-asm -fearly-inlining -feliminate-unused-debug-symbols
  36              	@ -feliminate-unused-debug-types -fexpensive-optimizations
  37              	@ -fforward-propagate -ffp-int-builtin-inexact -ffunction-cse -fgcse
  38              	@ -fgcse-lm -fgnu-unique -fguess-branch-probability -fhoist-adjacent-loads
  39              	@ -fident -fif-conversion -fif-conversion2 -findirect-inlining -finline
  40              	@ -finline-atomics -finline-functions -finline-functions-called-once
  41              	@ -finline-small-functions -fipa-bit-cp -fipa-cp -fipa-icf
  42              	@ -fipa-icf-functions -fipa-icf-variables -fipa-profile -fipa-pure-const
  43              	@ -fipa-ra -fipa-reference -fipa-reference-addressable -fipa-sra
  44              	@ -fipa-stack-alignment -fipa-vrp -fira-hoist-pressure
  45              	@ -fira-share-save-slots -fira-share-spill-slots
  46              	@ -fisolate-erroneous-paths-dereference -fivopts -fkeep-static-consts
  47              	@ -fleading-underscore -flifetime-dse -flra-remat -fmath-errno
  48              	@ -fmerge-constants -fmerge-debug-strings -fmove-loop-invariants
  49              	@ -fomit-frame-pointer -foptimize-sibling-calls -fpartial-inlining
  50              	@ -fpeephole -fpeephole2 -fplt -fprefetch-loop-arrays -freg-struct-return
  51              	@ -freorder-blocks -freorder-functions -frerun-cse-after-loop
  52              	@ -fsched-critical-path-heuristic -fsched-dep-count-heuristic
  53              	@ -fsched-group-heuristic -fsched-interblock -fsched-last-insn-heuristic
  54              	@ -fsched-pressure -fsched-rank-heuristic -fsched-spec
  55              	@ -fsched-spec-insn-heuristic -fsched-stalled-insns-dep -fschedule-insns2
  56              	@ -fsection-anchors -fsemantic-interposition -fshow-column
  57              	@ -fshrink-wrap-separate -fsigned-zeros -fsplit-ivs-in-unroller
ARM GAS  /tmp/ccRi8Uxx.s 			page 2


  58              	@ -fsplit-wide-types -fssa-backprop -fssa-phiopt -fstdarg-opt
  59              	@ -fstore-merging -fstrict-aliasing -fstrict-volatile-bitfields
  60              	@ -fsync-libcalls -fthread-jumps -ftoplevel-reorder -ftrapping-math
  61              	@ -ftree-bit-ccp -ftree-builtin-call-dce -ftree-ccp -ftree-ch
  62              	@ -ftree-coalesce-vars -ftree-copy-prop -ftree-cselim -ftree-dce
  63              	@ -ftree-dominator-opts -ftree-dse -ftree-forwprop -ftree-fre
  64              	@ -ftree-loop-distribute-patterns -ftree-loop-if-convert -ftree-loop-im
  65              	@ -ftree-loop-ivcanon -ftree-loop-optimize -ftree-parallelize-loops=
  66              	@ -ftree-phiprop -ftree-pre -ftree-pta -ftree-reassoc -ftree-scev-cprop
  67              	@ -ftree-sink -ftree-slsr -ftree-sra -ftree-switch-conversion
  68              	@ -ftree-tail-merge -ftree-ter -ftree-vrp -funit-at-a-time -fvar-tracking
  69              	@ -fvar-tracking-assignments -fverbose-asm -fzero-initialized-in-bss
  70              	@ -masm-syntax-unified -mbe32 -mfix-cortex-m3-ldrd -mlittle-endian
  71              	@ -mpic-data-is-text-relative -msched-prolog -mthumb -munaligned-access
  72              	@ -mvectorize-with-neon-quad
  73              	
  74              		.text
  75              	.Ltext0:
  76              		.cfi_sections	.debug_frame
  77              		.align	1
  78              		.syntax unified
  79              		.thumb
  80              		.thumb_func
  81              		.type	task1, %function
  82              	task1:
  83              	.LVL0:
  84              	.LFB11:
  85              		.file 1 "../user/main.c"
   1:../user/main.c **** #include "FreeRTOS.h"
   2:../user/main.c **** #include "task.h"
   3:../user/main.c **** #include "Me.h"
   4:../user/main.c **** 
   5:../user/main.c **** extern void vApplicationStackOverflowHook( // Protótipo da
   6:../user/main.c **** 														  // função abaixo
   7:../user/main.c **** 	xTaskHandle *pxTask,
   8:../user/main.c **** 	signed portCHAR *pcTaskName);
   9:../user/main.c **** 
  10:../user/main.c **** 
  11:../user/main.c **** void vApplicationStackOverflowHook(   xTaskHandle *pxTask __attribute((unused)), 
  12:../user/main.c **** 	 	signed portCHAR *pcTaskName __attribute((unused)))  {
  13:../user/main.c **** 	for(;;);	// Função não muito útil, usado quando há um
  14:../user/main.c **** 				// estouro de pilha, servindo como alerta.
  15:../user/main.c **** }
  16:../user/main.c **** 
  17:../user/main.c **** static void task1(void *args __attribute((unused))) {
  86              		.loc 1 17 53 view -0
  87              		.cfi_startproc
  88              		@ Volatile: function does not return.
  89              		@ args = 0, pretend = 0, frame = 0
  90              		@ frame_needed = 0, uses_anonymous_args = 0
  91              		.loc 1 17 53 is_stmt 0 view .LVU1
  92 0000 08B5     		push	{r3, lr}	@
  93              	.LCFI0:
  94              		.cfi_def_cfa_offset 8
  95              		.cfi_offset 3, -8
  96              		.cfi_offset 14, -4
  97              	@ ../user/main.c:19: 		GPIOC->ODR ^= (1<<13);
ARM GAS  /tmp/ccRi8Uxx.s 			page 3


  18:../user/main.c **** 	for (;;) {
  19:../user/main.c **** 		GPIOC->ODR ^= (1<<13);
  98              		.loc 1 19 14 view .LVU2
  99 0002 054C     		ldr	r4, .L3	@ tmp116,
 100              	.LVL1:
 101              	.L2:
  18:../user/main.c **** 	for (;;) {
 102              		.loc 1 18 2 is_stmt 1 discriminator 1 view .LVU3
 103              		.loc 1 19 3 discriminator 1 view .LVU4
 104              	@ ../user/main.c:19: 		GPIOC->ODR ^= (1<<13);
 105              		.loc 1 19 14 is_stmt 0 discriminator 1 view .LVU5
 106 0004 E368     		ldr	r3, [r4, #12]	@ _1, MEM[(struct GPIO_TypeDef *)1073811456B].ODR
 107              	@ ../user/main.c:20: 		vTaskDelay(pdMS_TO_TICKS(500)); /* A macro pdMS_TO_TICKS() 
  20:../user/main.c **** 		vTaskDelay(pdMS_TO_TICKS(500)); /* A macro pdMS_TO_TICKS() 
 108              		.loc 1 20 3 discriminator 1 view .LVU6
 109 0006 4FF4FA70 		mov	r0, #500	@,
 110              	@ ../user/main.c:19: 		GPIOC->ODR ^= (1<<13);
  19:../user/main.c **** 		vTaskDelay(pdMS_TO_TICKS(500)); /* A macro pdMS_TO_TICKS() 
 111              		.loc 1 19 14 discriminator 1 view .LVU7
 112 000a 83F40053 		eor	r3, r3, #8192	@ _2, _1,
 113 000e E360     		str	r3, [r4, #12]	@ _2, MEM[(struct GPIO_TypeDef *)1073811456B].ODR
 114              		.loc 1 20 3 is_stmt 1 discriminator 1 view .LVU8
 115 0010 FFF7FEFF 		bl	vTaskDelay		@
 116              	.LVL2:
  18:../user/main.c **** 	for (;;) {
 117              		.loc 1 18 8 discriminator 1 view .LVU9
 118 0014 F6E7     		b	.L2		@
 119              	.L4:
 120 0016 00BF     		.align	2
 121              	.L3:
 122 0018 00100140 		.word	1073811456
 123              		.cfi_endproc
 124              	.LFE11:
 125              		.size	task1, .-task1
 126              		.align	1
 127              		.global	set_system_clock_to_72Mhz
 128              		.syntax unified
 129              		.thumb
 130              		.thumb_func
 131              		.type	set_system_clock_to_72Mhz, %function
 132              	set_system_clock_to_72Mhz:
 133              	.LFB5:
 134              		.file 2 "../user/Me.h"
   1:../user/Me.h  **** #define __IO volatile  //Habilita RW
   2:../user/Me.h  **** #define uint32_t unsigned int
   3:../user/Me.h  **** #define u32 unsigned int
   4:../user/Me.h  **** 
   5:../user/Me.h  **** #define uint8_t unsigned char
   6:../user/Me.h  **** #define u8 unsigned char
   7:../user/Me.h  **** 
   8:../user/Me.h  **** #define int32_t int
   9:../user/Me.h  **** 
  10:../user/Me.h  **** #define uint16_t unsigned short
  11:../user/Me.h  **** #define u16 unsigned short
  12:../user/Me.h  **** 
  13:../user/Me.h  **** #define STACKINT  0x20000000
  14:../user/Me.h  **** 
ARM GAS  /tmp/ccRi8Uxx.s 			page 4


  15:../user/Me.h  **** //--------------------  GPIOx Def --------------------
  16:../user/Me.h  **** #define GPIOA ((GPIO_TypeDef * ) 0x40010800) /* GPIOx Addr Base */
  17:../user/Me.h  **** #define GPIOB ((GPIO_TypeDef * ) 0x40010c00) 
  18:../user/Me.h  **** #define GPIOC ((GPIO_TypeDef * ) 0x40011000) 
  19:../user/Me.h  **** #define GPIOD ((GPIO_TypeDef * ) 0x40011400) 
  20:../user/Me.h  **** #define GPIOE ((GPIO_TypeDef * ) 0x40011800) 
  21:../user/Me.h  **** #define GPIOF ((GPIO_TypeDef * ) 0x40011c00) 
  22:../user/Me.h  **** #define GPIOG ((GPIO_TypeDef * ) 0x40012000) 
  23:../user/Me.h  **** 
  24:../user/Me.h  **** //-------------------- TIMx Def -------------------- 
  25:../user/Me.h  **** #define TIM1 ((TIM_TypeDef * ) 0x40012c00) /* TIMx Addr Base */
  26:../user/Me.h  **** #define TIM2 ((TIM_TypeDef * ) 0x40000000) 
  27:../user/Me.h  **** #define TIM3 ((TIM_TypeDef * ) 0x40000400) 
  28:../user/Me.h  **** #define TIM4 ((TIM_TypeDef * ) 0x40000800) 
  29:../user/Me.h  **** #define TIM5 ((TIM_TypeDef * ) 0x40000c00) 
  30:../user/Me.h  **** #define TIM6 ((TIM_TypeDef * ) 0x40001000) 
  31:../user/Me.h  **** #define TIM7 ((TIM_TypeDef * ) 0x40001400) 
  32:../user/Me.h  **** #define TIM8 ((TIM_TypeDef * ) 0x40013400) 
  33:../user/Me.h  **** #define TIM9 ((TIM_TypeDef * ) 0x40014C00) 
  34:../user/Me.h  **** #define TIM10 ((TIM_TypeDef * ) 0x40015000) 
  35:../user/Me.h  **** #define TIM11 ((TIM_TypeDef * ) 0x40015400) 
  36:../user/Me.h  **** #define TIM12 ((TIM_TypeDef * ) 0x40001800) 
  37:../user/Me.h  **** #define TIM13 ((TIM_TypeDef * ) 0x40001c00) 
  38:../user/Me.h  **** #define TIM14 ((TIM_TypeDef * ) 0x40002000) 
  39:../user/Me.h  **** #define FLASH (( FLASH_TypeDef * ) 0x40022000)
  40:../user/Me.h  **** 
  41:../user/Me.h  **** //-------------------- AFIO 
  42:../user/Me.h  **** #define AFIO (( AFIO_TypeDef *) 0x40010000 )
  43:../user/Me.h  **** 
  44:../user/Me.h  **** //-------------------- EXTI 
  45:../user/Me.h  **** #define EXTI (( EXTI_TypeDef *) 0x40010400 )
  46:../user/Me.h  **** 
  47:../user/Me.h  **** //-------------------- RCC Def -------------------- 
  48:../user/Me.h  **** #define RCC (( RCC_TypeDef *) 0x40021000) /* RCC Addr Base */
  49:../user/Me.h  **** 
  50:../user/Me.h  **** /*-------------------- NVIC --------------------*/
  51:../user/Me.h  **** #define NVIC_BASE (( __IO u32 *) 0xE000E100) 
  52:../user/Me.h  **** #define NVIC            ((NVIC_type  *)  NVIC_BASE)
  53:../user/Me.h  **** 
  54:../user/Me.h  **** 
  55:../user/Me.h  **** //-------------------- Area de funções ---------------  
  56:../user/Me.h  **** typedef struct {
  57:../user/Me.h  ****    uint32_t   ISER[8];     /* Address offset: 0x000 - 0x01C */
  58:../user/Me.h  ****    uint32_t  RES0[24];     /* Address offset: 0x020 - 0x07C */
  59:../user/Me.h  ****    uint32_t   ICER[8];     /* Address offset: 0x080 - 0x09C */
  60:../user/Me.h  ****    uint32_t  RES1[24];     /* Address offset: 0x0A0 - 0x0FC */
  61:../user/Me.h  ****    uint32_t   ISPR[8];     /* Address offset: 0x100 - 0x11C */
  62:../user/Me.h  ****    uint32_t  RES2[24];     /* Address offset: 0x120 - 0x17C */
  63:../user/Me.h  ****    uint32_t   ICPR[8];     /* Address offset: 0x180 - 0x19C */
  64:../user/Me.h  ****    uint32_t  RES3[24];     /* Address offset: 0x1A0 - 0x1FC */
  65:../user/Me.h  ****    uint32_t   IABR[8];     /* Address offset: 0x200 - 0x21C */
  66:../user/Me.h  ****    uint32_t  RES4[56];     /* Address offset: 0x220 - 0x2FC */
  67:../user/Me.h  ****    uint8_t   IPR[240];     /* Address offset: 0x300 - 0x3EC */
  68:../user/Me.h  ****    uint32_t RES5[644];     /* Address offset: 0x3F0 - 0xEFC */
  69:../user/Me.h  ****    uint32_t       STIR;    /* Address offset:         0xF00 */
  70:../user/Me.h  **** } NVIC_type;
  71:../user/Me.h  **** 
ARM GAS  /tmp/ccRi8Uxx.s 			page 5


  72:../user/Me.h  **** 
  73:../user/Me.h  **** typedef struct{
  74:../user/Me.h  ****    __IO u32 CRL ;       // 0x00 MODO de operação Port configuration register low
  75:../user/Me.h  ****    __IO u32 CRH ;       // 0x04 Port configuration register high
  76:../user/Me.h  ****    __IO u32 IDR ;    // 0x08 Port input data register
  77:../user/Me.h  ****    __IO u32 ODR ;    // 0x0c Port output data register
  78:../user/Me.h  ****    __IO u32 BSRR ;      // 0x10 Port bit set/reset register
  79:../user/Me.h  ****    __IO u32 BRR ;    // 0x14 Port bit reset register
  80:../user/Me.h  ****    __IO u32 LCKR ;      // 0x18 Port configuration lock register
  81:../user/Me.h  **** 
  82:../user/Me.h  **** } GPIO_TypeDef ;
  83:../user/Me.h  **** 
  84:../user/Me.h  **** typedef struct{
  85:../user/Me.h  **** 
  86:../user/Me.h  ****    __IO u32 EVCR;    // 0x00
  87:../user/Me.h  ****    __IO u32 MAPR;    // 0x04
  88:../user/Me.h  ****    __IO u16 EXTICR1;    // 0X08
  89:../user/Me.h  ****    __IO u16 RES1 ;   // 
  90:../user/Me.h  ****    __IO u16 EXTICR2;    // 0x0c
  91:../user/Me.h  ****    __IO u16 RES2 ;   // 
  92:../user/Me.h  ****    __IO u16 EXTICR3;    // 0x10
  93:../user/Me.h  ****    __IO u16 RES3 ;   //
  94:../user/Me.h  ****    __IO u16 EXTICR4;    // 0x14
  95:../user/Me.h  ****    __IO u16 RES4 ;   // 
  96:../user/Me.h  ****    __IO u32 reservado;  // 0x18
  97:../user/Me.h  ****    __IO u32 MAPR2;      // 0x1c
  98:../user/Me.h  **** 
  99:../user/Me.h  **** } AFIO_TypeDef ;
 100:../user/Me.h  **** 
 101:../user/Me.h  **** typedef struct{
 102:../user/Me.h  **** 
 103:../user/Me.h  ****    __IO u32 CR1;     // 0x00
 104:../user/Me.h  ****    __IO u32 CR2;     // 0x04
 105:../user/Me.h  ****    __IO u32 SMCR;    // 0x08
 106:../user/Me.h  ****    __IO u32 DIER;    // 0x0c
 107:../user/Me.h  ****    __IO u32 SR;      // 0x10
 108:../user/Me.h  ****    __IO u32 EGR;     // 0x14
 109:../user/Me.h  ****    __IO u32 CCMR1;      // 0x18 ->  input/output capture mode
 110:../user/Me.h  ****    __IO u32 CCMR2;      // 0x1c ->  input/output capture mode
 111:../user/Me.h  ****    __IO u32 CCER;       // 0x20 <--- 
 112:../user/Me.h  ****    __IO u32 CNT;     // 0x24
 113:../user/Me.h  ****    __IO u32 PSC;     // 0x28
 114:../user/Me.h  ****    __IO u32 ARR;     // 0x2c
 115:../user/Me.h  ****    __IO u32 RCR;     // 0x30
 116:../user/Me.h  ****    __IO u32 CCR1;       // 0x34
 117:../user/Me.h  ****    __IO u32 CCR2;    // 0x38 
 118:../user/Me.h  ****    __IO u32 CCR3;    // 0x3c
 119:../user/Me.h  ****    __IO u32 CCR4;    // 0x40
 120:../user/Me.h  ****    __IO u32 BDTR;    // 0x44 -> Descritivo na pagina 344 do RM0008
 121:../user/Me.h  ****    __IO u32 DCR;     // 0x48
 122:../user/Me.h  ****    __IO u32 DMAR;    // 0x4c
 123:../user/Me.h  **** 
 124:../user/Me.h  **** } TIM_TypeDef ;
 125:../user/Me.h  **** 
 126:../user/Me.h  **** typedef struct{
 127:../user/Me.h  **** //                  Offset
 128:../user/Me.h  ****    __IO u32 CR;      // 0x00
ARM GAS  /tmp/ccRi8Uxx.s 			page 6


 129:../user/Me.h  ****    __IO u32 CFGR;    // 0x04 
 130:../user/Me.h  ****    __IO u32 CIR;     // 0x08
 131:../user/Me.h  ****    __IO u32 APB2RSTR;   // 0x0c
 132:../user/Me.h  ****    __IO u32 APB1RSTR;   // 0x10
 133:../user/Me.h  ****    __IO u32 AHBENR;  // 0x14
 134:../user/Me.h  ****    __IO u32 APB2ENR; // 0x18
 135:../user/Me.h  ****    __IO u32 APB1ENR; // 0x1c
 136:../user/Me.h  ****    __IO u32 BDCR;    // 0x20
 137:../user/Me.h  ****    __IO u32 CSR;     // 0x24
 138:../user/Me.h  ****    __IO u32 AHBRSTR; // 0x28
 139:../user/Me.h  ****    __IO u32 CFGR2;      // 0x2c
 140:../user/Me.h  **** 
 141:../user/Me.h  **** } RCC_TypeDef;
 142:../user/Me.h  **** 
 143:../user/Me.h  **** typedef struct{
 144:../user/Me.h  **** 
 145:../user/Me.h  ****    __IO u32 GOTGCTL;       // 0x00
 146:../user/Me.h  ****    __IO u32 GOTGINT;    // 0x04
 147:../user/Me.h  ****    __IO u32 GAHBCFG;    /* 0x08 <<- Responsavel por habilitar 
 148:../user/Me.h  ****                  interrupções AHB ou USB */
 149:../user/Me.h  ****    __IO u32 GUSBCFG;    // 0x0c
 150:../user/Me.h  ****    __IO u32 GRSTCTL;    // 0x10
 151:../user/Me.h  ****    __IO u32 GINTSTS;    // 0x14
 152:../user/Me.h  ****    __IO u32 GINTMSK;    // 0x18
 153:../user/Me.h  ****    __IO uint16_t GRXSTSR_1_H; // 0x1c Host/Device Mode
 154:../user/Me.h  ****    __IO uint16_t GRXSTSR_1_D; // 0x1c Host/Device Mode
 155:../user/Me.h  ****    __IO uint16_t GRXSTSR_2_H; // 0x20 Host/Device Mode
 156:../user/Me.h  ****    __IO uint16_t GRXSTSRPR_2_D;  // 0x20 Host/Device Mode
 157:../user/Me.h  ****    __IO u32 GRXFSIZ;    // 0x24
 158:../user/Me.h  ****    __IO uint16_t  HNPTXFSIZ;  // 0x28 
 159:../user/Me.h  ****    __IO uint16_t  DIEPTXF0;   // 0x28
 160:../user/Me.h  ****    __IO u32 HNPTXSTS;      // 0x2c
 161:../user/Me.h  **** 
 162:../user/Me.h  **** } OTG_FS_TypeDef;
 163:../user/Me.h  **** 
 164:../user/Me.h  **** typedef struct {
 165:../user/Me.h  **** 
 166:../user/Me.h  ****    __IO u32 IMR ;    // 0x00
 167:../user/Me.h  ****    __IO u32 EMR ;    // 0x04  
 168:../user/Me.h  ****    __IO u32 RTSR ;      // 0x08  
 169:../user/Me.h  ****    __IO u32 FTSR ;      // 0x0c  
 170:../user/Me.h  ****    __IO u32 SWIER ;  // 0x10  
 171:../user/Me.h  ****    __IO u32 PR ;     // 0x14  
 172:../user/Me.h  **** 
 173:../user/Me.h  **** } EXTI_TypeDef;
 174:../user/Me.h  **** 
 175:../user/Me.h  **** typedef struct {
 176:../user/Me.h  **** 
 177:../user/Me.h  ****    __IO u32 ACR;
 178:../user/Me.h  ****    __IO u32 KEYR;
 179:../user/Me.h  ****    __IO u32 OPTKEYR;
 180:../user/Me.h  ****    __IO u32 SR;
 181:../user/Me.h  ****    __IO u32 CR;
 182:../user/Me.h  ****    __IO u32 AR;
 183:../user/Me.h  ****    __IO u32 RESERVED;
 184:../user/Me.h  ****    __IO u32 OBR;
 185:../user/Me.h  ****    __IO u32 WRPR;
ARM GAS  /tmp/ccRi8Uxx.s 			page 7


 186:../user/Me.h  **** 
 187:../user/Me.h  **** } FLASH_TypeDef;
 188:../user/Me.h  **** typedef enum IRQn
 189:../user/Me.h  **** {
 190:../user/Me.h  ****    NonMaskableInt_IRQn         = -14,    /* 2 Non Maskable Interrupt                             */
 191:../user/Me.h  ****    MemoryManagement_IRQn       = -12,    /* 4 Cortex-M3 Memory Management Interrupt              */
 192:../user/Me.h  ****    BusFault_IRQn               = -11,    /* 5 Cortex-M3 Bus Fault Interrupt                      */
 193:../user/Me.h  ****    UsageFault_IRQn             = -10,    /* 6 Cortex-M3 Usage Fault Interrupt                    */
 194:../user/Me.h  ****    SVCall_IRQn                 = -5,     /* 11 Cortex-M3 SV Call Interrupt                       */
 195:../user/Me.h  ****    DebugMonitor_IRQn           = -4,     /* 12 Cortex-M3 Debug Monitor Interrupt                 */
 196:../user/Me.h  ****    PendSV_IRQn                 = -2,     /* 14 Cortex-M3 Pend SV Interrupt                       */
 197:../user/Me.h  ****    SysTick_IRQn                = -1,     /* 15 Cortex-M3 System Tick Interrupt                   */
 198:../user/Me.h  ****    WWDG_IRQn                   = 0,      /* Window WatchDog Interrupt                            */
 199:../user/Me.h  ****    PVD_IRQn                    = 1,      /* PVD through EXTI Line detection Interrupt            */
 200:../user/Me.h  ****    TAMPER_IRQn                 = 2,      /* Tamper Interrupt                                     */
 201:../user/Me.h  ****    RTC_IRQn                    = 3,      /* RTC global Interrupt                                 */
 202:../user/Me.h  ****    FLASH_IRQn                  = 4,      /* FLASH global Interrupt                               */
 203:../user/Me.h  ****    RCC_IRQn                    = 5,      /* RCC global Interrupt                                 */
 204:../user/Me.h  ****    EXTI0_IRQn                  = 6,      /* EXTI Line0 Interrupt                                 */
 205:../user/Me.h  ****    EXTI1_IRQn                  = 7,      /* EXTI Line1 Interrupt                                 */
 206:../user/Me.h  ****    EXTI2_IRQn                  = 8,      /* EXTI Line2 Interrupt                                 */
 207:../user/Me.h  ****    EXTI3_IRQn                  = 9,      /* EXTI Line3 Interrupt                                 */
 208:../user/Me.h  ****    EXTI4_IRQn                  = 10,     /* EXTI Line4 Interrupt                                 */
 209:../user/Me.h  ****    DMA1_Channel1_IRQn          = 11,     /* DMA1 Channel 1 global Interrupt                      */
 210:../user/Me.h  ****    DMA1_Channel2_IRQn          = 12,     /* DMA1 Channel 2 global Interrupt                      */
 211:../user/Me.h  ****    DMA1_Channel3_IRQn          = 13,     /* DMA1 Channel 3 global Interrupt                      */
 212:../user/Me.h  ****    DMA1_Channel4_IRQn          = 14,     /* DMA1 Channel 4 global Interrupt                      */
 213:../user/Me.h  ****    DMA1_Channel5_IRQn          = 15,     /* DMA1 Channel 5 global Interrupt                      */
 214:../user/Me.h  ****    DMA1_Channel6_IRQn          = 16,     /* DMA1 Channel 6 global Interrupt                      */
 215:../user/Me.h  ****    DMA1_Channel7_IRQn          = 17,     /* DMA1 Channel 7 global Interrupt                      */
 216:../user/Me.h  ****    ADC1_2_IRQn                 = 18,     /* ADC1 and ADC2 global Interrupt                       */
 217:../user/Me.h  ****    CAN1_TX_IRQn                = 19,     /* USB Device High Priority or CAN1 TX Interrupts       */
 218:../user/Me.h  ****    CAN1_RX0_IRQn               = 20,     /* USB Device Low Priority or CAN1 RX0 Interrupts       */
 219:../user/Me.h  ****    CAN1_RX1_IRQn               = 21,     /* CAN1 RX1 Interrupt                                   */
 220:../user/Me.h  ****    CAN1_SCE_IRQn               = 22,     /* CAN1 SCE Interrupt                                   */
 221:../user/Me.h  ****    EXTI9_5_IRQn                = 23,     /* External Line[9:5] Interrupts                        */
 222:../user/Me.h  ****    TIM1_BRK_IRQn               = 24,     /* TIM1 Break Interrupt                                 */
 223:../user/Me.h  ****    TIM1_UP_IRQn                = 25,     /* TIM1 Update Interrupt                                */
 224:../user/Me.h  ****    TIM1_TRG_COM_IRQn           = 26,     /* TIM1 Trigger and Commutation Interrupt               */
 225:../user/Me.h  ****    TIM1_CC_IRQn                = 27,     /* TIM1 Capture Compare Interrupt                       */
 226:../user/Me.h  ****    TIM2_IRQn                   = 28,     /* TIM2 global Interrupt                                */
 227:../user/Me.h  ****    TIM3_IRQn                   = 29,     /* TIM3 global Interrupt                                */
 228:../user/Me.h  ****    TIM4_IRQn                   = 30,     /* TIM4 global Interrupt                                */
 229:../user/Me.h  ****    I2C1_EV_IRQn                = 31,     /* I2C1 Event Interrupt                                 */
 230:../user/Me.h  ****    I2C1_ER_IRQn                = 32,     /* I2C1 Error Interrupt                                 */
 231:../user/Me.h  ****    I2C2_EV_IRQn                = 33,     /* I2C2 Event Interrupt                                 */
 232:../user/Me.h  ****    I2C2_ER_IRQn                = 34,     /* I2C2 Error Interrupt                                 */
 233:../user/Me.h  ****    SPI1_IRQn                   = 35,     /* SPI1 global Interrupt                                */
 234:../user/Me.h  ****    SPI2_IRQn                   = 36,     /* SPI2 global Interrupt                                */
 235:../user/Me.h  ****    USART1_IRQn                 = 37,     /* USART1 global Interrupt                              */
 236:../user/Me.h  ****    USART2_IRQn                 = 38,     /* USART2 global Interrupt                              */
 237:../user/Me.h  ****    USART3_IRQn                 = 39,     /* USART3 global Interrupt                              */
 238:../user/Me.h  ****    EXTI15_10_IRQn              = 40,     /* External Line[15:10] Interrupts                      */
 239:../user/Me.h  ****    RTCAlarm_IRQn               = 41,     /* RTC Alarm through EXTI Line Interrupt                */
 240:../user/Me.h  ****    OTG_FS_WKUP_IRQn            = 42,     /* USB OTG FS WakeUp from suspend through EXTI Line Int */
 241:../user/Me.h  ****    TIM5_IRQn                   = 50,     /* TIM5 global Interrupt                                */
 242:../user/Me.h  ****    SPI3_IRQn                   = 51,     /* SPI3 global Interrupt                                */
ARM GAS  /tmp/ccRi8Uxx.s 			page 8


 243:../user/Me.h  ****    UART4_IRQn                  = 52,     /* UART4 global Interrupt                               */
 244:../user/Me.h  ****    UART5_IRQn                  = 53,     /* UART5 global Interrupt                               */
 245:../user/Me.h  ****    TIM6_IRQn                   = 54,     /* TIM6 global Interrupt                                */
 246:../user/Me.h  ****    TIM7_IRQn                   = 55,     /* TIM7 global Interrupt                                */
 247:../user/Me.h  ****    DMA2_Channel1_IRQn          = 56,     /* DMA2 Channel 1 global Interrupt                      */
 248:../user/Me.h  ****    DMA2_Channel2_IRQn          = 57,     /* DMA2 Channel 2 global Interrupt                      */
 249:../user/Me.h  ****    DMA2_Channel3_IRQn          = 58,     /* DMA2 Channel 3 global Interrupt                      */
 250:../user/Me.h  ****    DMA2_Channel4_IRQn          = 59,     /* DMA2 Channel 4 global Interrupt                      */
 251:../user/Me.h  ****    DMA2_Channel5_IRQn          = 60,     /* DMA2 Channel 5 global Interrupt                      */
 252:../user/Me.h  ****    ETH_IRQn                    = 61,     /* Ethernet global Interrupt                            */
 253:../user/Me.h  ****    ETH_WKUP_IRQn               = 62,     /* Ethernet Wakeup through EXTI line Interrupt          */
 254:../user/Me.h  ****    CAN2_TX_IRQn                = 63,     /* CAN2 TX Interrupt                                    */
 255:../user/Me.h  ****    CAN2_R_IRQn                 = 67      /* USB OTG FS global Interrupt                          */
 256:../user/Me.h  **** } IRQn_type;
 257:../user/Me.h  **** 
 258:../user/Me.h  **** 
 259:../user/Me.h  **** void SystemInit (void);
 260:../user/Me.h  **** void nvic_IntDisble(u8 IRQn);
 261:../user/Me.h  **** void nvic_intEnable(u8 IRQn);
 262:../user/Me.h  **** void set_system_clock_to_25Mhz (void);
 263:../user/Me.h  **** void set_system_clock_to_72Mhz(void);
 264:../user/Me.h  **** void Delay ( __IO u32 T );
 265:../user/Me.h  **** void enable_TIM3_delay (void);
 266:../user/Me.h  **** 
 267:../user/Me.h  **** 
 268:../user/Me.h  **** void set_system_clock_to_72Mhz(void)
 269:../user/Me.h  **** {
 135              		.loc 2 269 1 view -0
 136              		.cfi_startproc
 137              		@ args = 0, pretend = 0, frame = 0
 138              		@ frame_needed = 0, uses_anonymous_args = 0
 139              		@ link register save eliminated.
 270:../user/Me.h  ****    // Necessary wait states for Flash for high speeds
 271:../user/Me.h  ****    FLASH->ACR = 0x12;
 140              		.loc 2 271 4 view .LVU11
 141              	@ ../user/Me.h:271:    FLASH->ACR = 0x12;
 142              		.loc 2 271 15 is_stmt 0 view .LVU12
 143 001c 1222     		movs	r2, #18	@ tmp140,
 144 001e 1B4B     		ldr	r3, .L12	@ tmp139,
 145 0020 1A60     		str	r2, [r3]	@ tmp140, MEM[(struct FLASH_TypeDef *)1073881088B].ACR
 272:../user/Me.h  ****    // Enable HSE
 273:../user/Me.h  ****    RCC->CR |= (1 << 16);
 146              		.loc 2 273 4 is_stmt 1 view .LVU13
 147              	@ ../user/Me.h:273:    RCC->CR |= (1 << 16);
 148              		.loc 2 273 12 is_stmt 0 view .LVU14
 149 0022 A3F58053 		sub	r3, r3, #4096	@ tmp141, tmp141,
 150 0026 1A68     		ldr	r2, [r3]	@ _1, MEM[(struct RCC_TypeDef *)1073876992B].CR
 151 0028 42F48032 		orr	r2, r2, #65536	@ _2, _1,
 152 002c 1A60     		str	r2, [r3]	@ _2, MEM[(struct RCC_TypeDef *)1073876992B].CR
 274:../user/Me.h  ****    // Wait untill HSE settles down
 275:../user/Me.h  ****    while (!(RCC->CR & (1 << 17)));
 153              		.loc 2 275 4 is_stmt 1 view .LVU15
 154              	.L6:
 155              		.loc 2 275 34 discriminator 1 view .LVU16
 156              		.loc 2 275 10 discriminator 1 view .LVU17
 157              	@ ../user/Me.h:275:    while (!(RCC->CR & (1 << 17)));
 158              		.loc 2 275 16 is_stmt 0 discriminator 1 view .LVU18
ARM GAS  /tmp/ccRi8Uxx.s 			page 9


 159 002e 1A68     		ldr	r2, [r3]	@ _3, MEM[(struct RCC_TypeDef *)1073876992B].CR
 160              	@ ../user/Me.h:275:    while (!(RCC->CR & (1 << 17)));
 161              		.loc 2 275 10 discriminator 1 view .LVU19
 162 0030 9103     		lsls	r1, r2, #14	@, _3,
 163 0032 FCD5     		bpl	.L6		@,
 276:../user/Me.h  ****    // Set PREDIV2 division factor to 5
 277:../user/Me.h  ****    RCC->CFGR2 |= (0b0100 << 4);
 164              		.loc 2 277 4 is_stmt 1 view .LVU20
 165              	@ ../user/Me.h:277:    RCC->CFGR2 |= (0b0100 << 4);
 166              		.loc 2 277 15 is_stmt 0 view .LVU21
 167 0034 DA6A     		ldr	r2, [r3, #44]	@ _5, MEM[(struct RCC_TypeDef *)1073876992B].CFGR2
 168 0036 42F04002 		orr	r2, r2, #64	@ _6, _5,
 169 003a DA62     		str	r2, [r3, #44]	@ _6, MEM[(struct RCC_TypeDef *)1073876992B].CFGR2
 278:../user/Me.h  ****    // Set PLL2 multiplication factor to 8
 279:../user/Me.h  ****    RCC->CFGR2 |= (0b0110 << 8);
 170              		.loc 2 279 4 is_stmt 1 view .LVU22
 171              	@ ../user/Me.h:279:    RCC->CFGR2 |= (0b0110 << 8);
 172              		.loc 2 279 15 is_stmt 0 view .LVU23
 173 003c DA6A     		ldr	r2, [r3, #44]	@ _7, MEM[(struct RCC_TypeDef *)1073876992B].CFGR2
 174 003e 42F4C062 		orr	r2, r2, #1536	@ _8, _7,
 175 0042 DA62     		str	r2, [r3, #44]	@ _8, MEM[(struct RCC_TypeDef *)1073876992B].CFGR2
 280:../user/Me.h  ****    // Enable PLL2
 281:../user/Me.h  ****    RCC->CR |= (1 << 26);
 176              		.loc 2 281 4 is_stmt 1 view .LVU24
 177              	@ ../user/Me.h:281:    RCC->CR |= (1 << 26);
 178              		.loc 2 281 12 is_stmt 0 view .LVU25
 179 0044 1A68     		ldr	r2, [r3]	@ _9, MEM[(struct RCC_TypeDef *)1073876992B].CR
 180 0046 42F08062 		orr	r2, r2, #67108864	@ _10, _9,
 181 004a 1A60     		str	r2, [r3]	@ _10, MEM[(struct RCC_TypeDef *)1073876992B].CR
 282:../user/Me.h  ****    // Wait untill PLL2 settles down
 283:../user/Me.h  **** 	// while (!(RCC->CR & (1 << 27)));
 284:../user/Me.h  ****    // Set PLL2 as PREDIV1 clock source
 285:../user/Me.h  ****    RCC->CFGR2 |= (1 << 16);
 182              		.loc 2 285 4 is_stmt 1 view .LVU26
 183              	@ ../user/Me.h:285:    RCC->CFGR2 |= (1 << 16);
 184              		.loc 2 285 15 is_stmt 0 view .LVU27
 185 004c DA6A     		ldr	r2, [r3, #44]	@ _11, MEM[(struct RCC_TypeDef *)1073876992B].CFGR2
 186 004e 42F48032 		orr	r2, r2, #65536	@ _12, _11,
 187 0052 DA62     		str	r2, [r3, #44]	@ _12, MEM[(struct RCC_TypeDef *)1073876992B].CFGR2
 286:../user/Me.h  ****    // Set PREDIV1 division factor to 5
 287:../user/Me.h  ****    RCC->CFGR2 |= (0b0100 << 0);
 188              		.loc 2 287 4 is_stmt 1 view .LVU28
 189              	@ ../user/Me.h:287:    RCC->CFGR2 |= (0b0100 << 0);
 190              		.loc 2 287 15 is_stmt 0 view .LVU29
 191 0054 DA6A     		ldr	r2, [r3, #44]	@ _13, MEM[(struct RCC_TypeDef *)1073876992B].CFGR2
 192 0056 42F00402 		orr	r2, r2, #4	@ _14, _13,
 193 005a DA62     		str	r2, [r3, #44]	@ _14, MEM[(struct RCC_TypeDef *)1073876992B].CFGR2
 288:../user/Me.h  ****    // Select Prediv1 as PLL source
 289:../user/Me.h  ****    RCC->CFGR |= (1 << 16);
 194              		.loc 2 289 4 is_stmt 1 view .LVU30
 195              	@ ../user/Me.h:289:    RCC->CFGR |= (1 << 16);
 196              		.loc 2 289 14 is_stmt 0 view .LVU31
 197 005c 5A68     		ldr	r2, [r3, #4]	@ _15, MEM[(struct RCC_TypeDef *)1073876992B].CFGR
 198 005e 42F48032 		orr	r2, r2, #65536	@ _16, _15,
 199 0062 5A60     		str	r2, [r3, #4]	@ _16, MEM[(struct RCC_TypeDef *)1073876992B].CFGR
 290:../user/Me.h  ****    // Set PLL1 multiplication factor to 9
 291:../user/Me.h  ****    RCC->CFGR |= (0b0111 << 18);
ARM GAS  /tmp/ccRi8Uxx.s 			page 10


 200              		.loc 2 291 4 is_stmt 1 view .LVU32
 201              	@ ../user/Me.h:291:    RCC->CFGR |= (0b0111 << 18);
 202              		.loc 2 291 14 is_stmt 0 view .LVU33
 203 0064 5A68     		ldr	r2, [r3, #4]	@ _17, MEM[(struct RCC_TypeDef *)1073876992B].CFGR
 204 0066 42F4E012 		orr	r2, r2, #1835008	@ _18, _17,
 205 006a 5A60     		str	r2, [r3, #4]	@ _18, MEM[(struct RCC_TypeDef *)1073876992B].CFGR
 292:../user/Me.h  ****    // Set APB1 to 36MHz
 293:../user/Me.h  ****    RCC->CFGR |= 1 << 10;
 206              		.loc 2 293 4 is_stmt 1 view .LVU34
 207              	@ ../user/Me.h:293:    RCC->CFGR |= 1 << 10;
 208              		.loc 2 293 14 is_stmt 0 view .LVU35
 209 006c 5A68     		ldr	r2, [r3, #4]	@ _19, MEM[(struct RCC_TypeDef *)1073876992B].CFGR
 210 006e 42F48062 		orr	r2, r2, #1024	@ _20, _19,
 211 0072 5A60     		str	r2, [r3, #4]	@ _20, MEM[(struct RCC_TypeDef *)1073876992B].CFGR
 294:../user/Me.h  ****    // Enable PLL
 295:../user/Me.h  ****    RCC->CR |= (1 << 24);
 212              		.loc 2 295 4 is_stmt 1 view .LVU36
 213              	@ ../user/Me.h:295:    RCC->CR |= (1 << 24);
 214              		.loc 2 295 12 is_stmt 0 view .LVU37
 215 0074 1A68     		ldr	r2, [r3]	@ _21, MEM[(struct RCC_TypeDef *)1073876992B].CR
 216 0076 42F08072 		orr	r2, r2, #16777216	@ _22, _21,
 217 007a 1A60     		str	r2, [r3]	@ _22, MEM[(struct RCC_TypeDef *)1073876992B].CR
 296:../user/Me.h  ****    // Wait untill PLL settles down
 297:../user/Me.h  ****    while (!(RCC->CR & (1 << 25)));
 218              		.loc 2 297 4 is_stmt 1 view .LVU38
 219              	.L7:
 220              		.loc 2 297 34 discriminator 1 view .LVU39
 221              		.loc 2 297 10 discriminator 1 view .LVU40
 222              	@ ../user/Me.h:297:    while (!(RCC->CR & (1 << 25)));
 223              		.loc 2 297 16 is_stmt 0 discriminator 1 view .LVU41
 224 007c 1A68     		ldr	r2, [r3]	@ _23, MEM[(struct RCC_TypeDef *)1073876992B].CR
 225              	@ ../user/Me.h:297:    while (!(RCC->CR & (1 << 25)));
 226              		.loc 2 297 10 discriminator 1 view .LVU42
 227 007e 9201     		lsls	r2, r2, #6	@, _23,
 228 0080 FCD5     		bpl	.L7		@,
 298:../user/Me.h  ****    // Finally, choose PLL as the system clock
 299:../user/Me.h  ****    RCC->CFGR |= (0b10 << 0);
 229              		.loc 2 299 4 is_stmt 1 view .LVU43
 230              	@ ../user/Me.h:299:    RCC->CFGR |= (0b10 << 0);
 231              		.loc 2 299 14 is_stmt 0 view .LVU44
 232 0082 5A68     		ldr	r2, [r3, #4]	@ _25, MEM[(struct RCC_TypeDef *)1073876992B].CFGR
 233 0084 42F00202 		orr	r2, r2, #2	@ _26, _25,
 234 0088 5A60     		str	r2, [r3, #4]	@ _26, MEM[(struct RCC_TypeDef *)1073876992B].CFGR
 235              	@ ../user/Me.h:300: } 
 300:../user/Me.h  **** } 
 236              		.loc 2 300 1 view .LVU45
 237 008a 7047     		bx	lr	@
 238              	.L13:
 239              		.align	2
 240              	.L12:
 241 008c 00200240 		.word	1073881088
 242              		.cfi_endproc
 243              	.LFE5:
 244              		.size	set_system_clock_to_72Mhz, .-set_system_clock_to_72Mhz
 245              		.align	1
 246              		.global	Delay
 247              		.syntax unified
ARM GAS  /tmp/ccRi8Uxx.s 			page 11


 248              		.thumb
 249              		.thumb_func
 250              		.type	Delay, %function
 251              	Delay:
 252              	.LVL3:
 253              	.LFB6:
 301:../user/Me.h  **** 
 302:../user/Me.h  **** void Delay ( __IO u32 T ) { // T=1 ;  868µs -> T=1 ~ 526µs
 254              		.loc 2 302 27 is_stmt 1 view -0
 255              		.cfi_startproc
 256              		@ args = 0, pretend = 0, frame = 8
 257              		@ frame_needed = 0, uses_anonymous_args = 0
 258              		@ link register save eliminated.
 303:../user/Me.h  ****   for ( T ; T > 0 ; T-- ){
 259              		.loc 2 303 3 view .LVU47
 260              	@ ../user/Me.h:302: void Delay ( __IO u32 T ) { // T=1 ;  868µs -> T=1 ~ 526µs
 302:../user/Me.h  ****   for ( T ; T > 0 ; T-- ){
 261              		.loc 2 302 27 is_stmt 0 view .LVU48
 262 0090 82B0     		sub	sp, sp, #8	@,,
 263              	.LCFI1:
 264              		.cfi_def_cfa_offset 8
 265              	@ ../user/Me.h:302: void Delay ( __IO u32 T ) { // T=1 ;  868µs -> T=1 ~ 526µs
 302:../user/Me.h  ****   for ( T ; T > 0 ; T-- ){
 266              		.loc 2 302 27 view .LVU49
 267 0092 0190     		str	r0, [sp, #4]	@ T, T
 268              	@ ../user/Me.h:303:   for ( T ; T > 0 ; T-- ){
 269              		.loc 2 303 3 view .LVU50
 270 0094 019B     		ldr	r3, [sp, #4]	@ vol.0_9, T
 271              	@ ../user/Me.h:304:    TIM3->EGR |= ( 1 << 0 );
 304:../user/Me.h  ****    TIM3->EGR |= ( 1 << 0 );
 272              		.loc 2 304 14 view .LVU51
 273 0096 084B     		ldr	r3, .L19	@ tmp124,
 274              	.L15:
 303:../user/Me.h  ****   for ( T ; T > 0 ; T-- ){
 275              		.loc 2 303 13 is_stmt 1 discriminator 1 view .LVU52
 276              	@ ../user/Me.h:303:   for ( T ; T > 0 ; T-- ){
 303:../user/Me.h  ****   for ( T ; T > 0 ; T-- ){
 277              		.loc 2 303 15 is_stmt 0 discriminator 1 view .LVU53
 278 0098 019A     		ldr	r2, [sp, #4]	@ T.2_6, T
 279              	@ ../user/Me.h:303:   for ( T ; T > 0 ; T-- ){
 303:../user/Me.h  ****   for ( T ; T > 0 ; T-- ){
 280              		.loc 2 303 3 discriminator 1 view .LVU54
 281 009a 0AB9     		cbnz	r2, .L17	@ T.2_6,
 282              	@ ../user/Me.h:307: }
 305:../user/Me.h  ****    while ( TIM3->CNT < 5 ) ; /* 5 * 10-- Configurar para IR */
 306:../user/Me.h  ****   }
 307:../user/Me.h  **** }
 283              		.loc 2 307 1 view .LVU55
 284 009c 02B0     		add	sp, sp, #8	@,,
 285              	.LCFI2:
 286              		.cfi_remember_state
 287              		.cfi_def_cfa_offset 0
 288              		@ sp needed	@
 289 009e 7047     		bx	lr	@
 290              	.L17:
 291              	.LCFI3:
 292              		.cfi_restore_state
ARM GAS  /tmp/ccRi8Uxx.s 			page 12


 304:../user/Me.h  ****    TIM3->EGR |= ( 1 << 0 );
 293              		.loc 2 304 4 is_stmt 1 view .LVU56
 294              	@ ../user/Me.h:304:    TIM3->EGR |= ( 1 << 0 );
 304:../user/Me.h  ****    TIM3->EGR |= ( 1 << 0 );
 295              		.loc 2 304 14 is_stmt 0 view .LVU57
 296 00a0 5A69     		ldr	r2, [r3, #20]	@ _1, MEM[(struct TIM_TypeDef *)1073742848B].EGR
 297 00a2 42F00102 		orr	r2, r2, #1	@ _2, _1,
 298 00a6 5A61     		str	r2, [r3, #20]	@ _2, MEM[(struct TIM_TypeDef *)1073742848B].EGR
 305:../user/Me.h  ****    while ( TIM3->CNT < 5 ) ; /* 5 * 10-- Configurar para IR */
 299              		.loc 2 305 4 is_stmt 1 view .LVU58
 300              	.L16:
 305:../user/Me.h  ****    while ( TIM3->CNT < 5 ) ; /* 5 * 10-- Configurar para IR */
 301              		.loc 2 305 28 discriminator 1 view .LVU59
 305:../user/Me.h  ****    while ( TIM3->CNT < 5 ) ; /* 5 * 10-- Configurar para IR */
 302              		.loc 2 305 10 discriminator 1 view .LVU60
 303              	@ ../user/Me.h:305:    while ( TIM3->CNT < 5 ) ; /* 5 * 10-- Configurar para IR */
 305:../user/Me.h  ****    while ( TIM3->CNT < 5 ) ; /* 5 * 10-- Configurar para IR */
 304              		.loc 2 305 16 is_stmt 0 discriminator 1 view .LVU61
 305 00a8 5A6A     		ldr	r2, [r3, #36]	@ _3, MEM[(struct TIM_TypeDef *)1073742848B].CNT
 306              	@ ../user/Me.h:305:    while ( TIM3->CNT < 5 ) ; /* 5 * 10-- Configurar para IR */
 305:../user/Me.h  ****    while ( TIM3->CNT < 5 ) ; /* 5 * 10-- Configurar para IR */
 307              		.loc 2 305 10 discriminator 1 view .LVU62
 308 00aa 042A     		cmp	r2, #4	@ _3,
 309 00ac FCD9     		bls	.L16		@,
 303:../user/Me.h  ****    TIM3->EGR |= ( 1 << 0 );
 310              		.loc 2 303 21 is_stmt 1 discriminator 2 view .LVU63
 311              	@ ../user/Me.h:303:   for ( T ; T > 0 ; T-- ){
 303:../user/Me.h  ****    TIM3->EGR |= ( 1 << 0 );
 312              		.loc 2 303 22 is_stmt 0 discriminator 2 view .LVU64
 313 00ae 019A     		ldr	r2, [sp, #4]	@ T.1_4, T
 314 00b0 013A     		subs	r2, r2, #1	@ _5, T.1_4,
 315 00b2 0192     		str	r2, [sp, #4]	@ _5, T
 316 00b4 F0E7     		b	.L15		@
 317              	.L20:
 318 00b6 00BF     		.align	2
 319              	.L19:
 320 00b8 00040040 		.word	1073742848
 321              		.cfi_endproc
 322              	.LFE6:
 323              		.size	Delay, .-Delay
 324              		.align	1
 325              		.global	enable_TIM3_delay
 326              		.syntax unified
 327              		.thumb
 328              		.thumb_func
 329              		.type	enable_TIM3_delay, %function
 330              	enable_TIM3_delay:
 331              	.LFB7:
 308:../user/Me.h  **** 
 309:../user/Me.h  **** void enable_TIM3_delay (void) {
 332              		.loc 2 309 31 is_stmt 1 view -0
 333              		.cfi_startproc
 334              		@ args = 0, pretend = 0, frame = 0
 335              		@ frame_needed = 0, uses_anonymous_args = 0
 336              		@ link register save eliminated.
 310:../user/Me.h  ****    RCC->APB1ENR |= 1<<1 ;
 337              		.loc 2 310 4 view .LVU66
ARM GAS  /tmp/ccRi8Uxx.s 			page 13


 338              	@ ../user/Me.h:310:    RCC->APB1ENR |= 1<<1 ;
 339              		.loc 2 310 17 is_stmt 0 view .LVU67
 340 00bc 074A     		ldr	r2, .L22	@ tmp117,
 341 00be D369     		ldr	r3, [r2, #28]	@ _1, MEM[(struct RCC_TypeDef *)1073876992B].APB1ENR
 342 00c0 43F00203 		orr	r3, r3, #2	@ _2, _1,
 343 00c4 D361     		str	r3, [r2, #28]	@ _2, MEM[(struct RCC_TypeDef *)1073876992B].APB1ENR
 311:../user/Me.h  ****    TIM3->CR1 = 0x0000;
 344              		.loc 2 311 4 is_stmt 1 view .LVU68
 345              	@ ../user/Me.h:311:    TIM3->CR1 = 0x0000;
 346              		.loc 2 311 14 is_stmt 0 view .LVU69
 347 00c6 0022     		movs	r2, #0	@ tmp120,
 348 00c8 054B     		ldr	r3, .L22+4	@ tmp119,
 349 00ca 1A60     		str	r2, [r3]	@ tmp120, MEM[(struct TIM_TypeDef *)1073742848B].CR1
 312:../user/Me.h  ****    //TIM3->ARR = 21699;
 313:../user/Me.h  ****    TIM3->ARR = 250-1; // 10µs
 350              		.loc 2 313 4 is_stmt 1 view .LVU70
 351              	@ ../user/Me.h:313:    TIM3->ARR = 250-1; // 10µs
 352              		.loc 2 313 14 is_stmt 0 view .LVU71
 353 00cc F922     		movs	r2, #249	@ tmp122,
 354 00ce DA62     		str	r2, [r3, #44]	@ tmp122, MEM[(struct TIM_TypeDef *)1073742848B].ARR
 314:../user/Me.h  ****    // para obter o período de 868µs
 315:../user/Me.h  **** /*https://www.vishay.com/docs/80071/dataform.pdf PAG 2
 316:../user/Me.h  ****  * https://controllerstech.com/ir-remote-with-stm32/
 317:../user/Me.h  ****  * Per=(1+ARR)/Clock_system */
 318:../user/Me.h  ****    TIM3->CR1 |= 1<<0;
 355              		.loc 2 318 4 is_stmt 1 view .LVU72
 356              	@ ../user/Me.h:318:    TIM3->CR1 |= 1<<0;
 357              		.loc 2 318 14 is_stmt 0 view .LVU73
 358 00d0 1A68     		ldr	r2, [r3]	@ _3, MEM[(struct TIM_TypeDef *)1073742848B].CR1
 359 00d2 42F00102 		orr	r2, r2, #1	@ _4, _3,
 360 00d6 1A60     		str	r2, [r3]	@ _4, MEM[(struct TIM_TypeDef *)1073742848B].CR1
 361              	@ ../user/Me.h:319: }
 319:../user/Me.h  **** }
 362              		.loc 2 319 1 view .LVU74
 363 00d8 7047     		bx	lr	@
 364              	.L23:
 365 00da 00BF     		.align	2
 366              	.L22:
 367 00dc 00100240 		.word	1073876992
 368 00e0 00040040 		.word	1073742848
 369              		.cfi_endproc
 370              	.LFE7:
 371              		.size	enable_TIM3_delay, .-enable_TIM3_delay
 372              		.align	1
 373              		.global	enable_interrupt
 374              		.syntax unified
 375              		.thumb
 376              		.thumb_func
 377              		.type	enable_interrupt, %function
 378              	enable_interrupt:
 379              	.LVL4:
 380              	.LFB8:
 320:../user/Me.h  **** 
 321:../user/Me.h  **** void enable_interrupt(IRQn_type IRQn)
 322:../user/Me.h  **** {
 381              		.loc 2 322 1 is_stmt 1 view -0
 382              		.cfi_startproc
ARM GAS  /tmp/ccRi8Uxx.s 			page 14


 383              		@ args = 0, pretend = 0, frame = 0
 384              		@ frame_needed = 0, uses_anonymous_args = 0
 385              		@ link register save eliminated.
 323:../user/Me.h  ****    NVIC->ISER[((uint32_t)(IRQn) >> 5)] = (1 << ((uint32_t)(IRQn) & 0x1F));
 386              		.loc 2 323 4 view .LVU76
 387              	@ ../user/Me.h:323:    NVIC->ISER[((uint32_t)(IRQn) >> 5)] = (1 << ((uint32_t)(IRQn) & 0x1F));
 388              		.loc 2 323 45 is_stmt 0 view .LVU77
 389 00e4 0123     		movs	r3, #1	@ tmp127,
 390              	@ ../user/Me.h:323:    NVIC->ISER[((uint32_t)(IRQn) >> 5)] = (1 << ((uint32_t)(IRQn) & 0x1F));
 391              		.loc 2 323 33 view .LVU78
 392 00e6 4209     		lsrs	r2, r0, #5	@ tmp122, IRQn,
 393              	@ ../user/Me.h:323:    NVIC->ISER[((uint32_t)(IRQn) >> 5)] = (1 << ((uint32_t)(IRQn) & 0x1F));
 394              		.loc 2 323 66 view .LVU79
 395 00e8 00F01F00 		and	r0, r0, #31	@ tmp125, IRQn,
 396              	.LVL5:
 397              	@ ../user/Me.h:323:    NVIC->ISER[((uint32_t)(IRQn) >> 5)] = (1 << ((uint32_t)(IRQn) & 0x1F));
 398              		.loc 2 323 45 view .LVU80
 399 00ec 03FA00F0 		lsl	r0, r3, r0	@ tmp126, tmp127, tmp125
 400              	@ ../user/Me.h:323:    NVIC->ISER[((uint32_t)(IRQn) >> 5)] = (1 << ((uint32_t)(IRQn) & 0x1F));
 401              		.loc 2 323 40 view .LVU81
 402 00f0 014B     		ldr	r3, .L25	@ tmp121,
 403 00f2 43F82200 		str	r0, [r3, r2, lsl #2]	@ tmp126, MEM[(struct NVIC_type *)3758153984B].ISER[_6]
 404              	@ ../user/Me.h:324: }  
 324:../user/Me.h  **** }  
 405              		.loc 2 324 1 view .LVU82
 406 00f6 7047     		bx	lr	@
 407              	.L26:
 408              		.align	2
 409              	.L25:
 410 00f8 00E100E0 		.word	-536813312
 411              		.cfi_endproc
 412              	.LFE8:
 413              		.size	enable_interrupt, .-enable_interrupt
 414              		.align	1
 415              		.global	disable_interrupt
 416              		.syntax unified
 417              		.thumb
 418              		.thumb_func
 419              		.type	disable_interrupt, %function
 420              	disable_interrupt:
 421              	.LVL6:
 422              	.LFB9:
 325:../user/Me.h  ****    
 326:../user/Me.h  **** /* 
 327:../user/Me.h  ****  * Disable given interrupt
 328:../user/Me.h  ****  */
 329:../user/Me.h  **** void disable_interrupt(IRQn_type IRQn)
 330:../user/Me.h  **** {
 423              		.loc 2 330 1 is_stmt 1 view -0
 424              		.cfi_startproc
 425              		@ args = 0, pretend = 0, frame = 0
 426              		@ frame_needed = 0, uses_anonymous_args = 0
 427              		@ link register save eliminated.
 331:../user/Me.h  ****    NVIC->ICER[((uint32_t)(IRQn) >> 5)] = (1 << ((uint32_t)(IRQn) & 0x1F));
 428              		.loc 2 331 4 view .LVU84
 429              	@ ../user/Me.h:331:    NVIC->ICER[((uint32_t)(IRQn) >> 5)] = (1 << ((uint32_t)(IRQn) & 0x1F));
 430              		.loc 2 331 45 is_stmt 0 view .LVU85
ARM GAS  /tmp/ccRi8Uxx.s 			page 15


 431 00fc 0122     		movs	r2, #1	@ tmp128,
 432              	@ ../user/Me.h:331:    NVIC->ICER[((uint32_t)(IRQn) >> 5)] = (1 << ((uint32_t)(IRQn) & 0x1F));
 433              		.loc 2 331 33 view .LVU86
 434 00fe 4309     		lsrs	r3, r0, #5	@ tmp122, IRQn,
 435              	@ ../user/Me.h:331:    NVIC->ICER[((uint32_t)(IRQn) >> 5)] = (1 << ((uint32_t)(IRQn) & 0x1F));
 436              		.loc 2 331 66 view .LVU87
 437 0100 00F01F00 		and	r0, r0, #31	@ tmp126, IRQn,
 438              	.LVL7:
 439              	@ ../user/Me.h:331:    NVIC->ICER[((uint32_t)(IRQn) >> 5)] = (1 << ((uint32_t)(IRQn) & 0x1F));
 440              		.loc 2 331 45 view .LVU88
 441 0104 02FA00F0 		lsl	r0, r2, r0	@ tmp127, tmp128, tmp126
 442              	@ ../user/Me.h:331:    NVIC->ICER[((uint32_t)(IRQn) >> 5)] = (1 << ((uint32_t)(IRQn) & 0x1F));
 443              		.loc 2 331 40 view .LVU89
 444 0108 024A     		ldr	r2, .L28	@ tmp121,
 445 010a 2033     		adds	r3, r3, #32	@ tmp123, tmp122,
 446 010c 42F82300 		str	r0, [r2, r3, lsl #2]	@ tmp127, MEM[(struct NVIC_type *)3758153984B].ICER[_6]
 447              	@ ../user/Me.h:332: }
 332:../user/Me.h  **** }
 448              		.loc 2 332 1 view .LVU90
 449 0110 7047     		bx	lr	@
 450              	.L29:
 451 0112 00BF     		.align	2
 452              	.L28:
 453 0114 00E100E0 		.word	-536813312
 454              		.cfi_endproc
 455              	.LFE9:
 456              		.size	disable_interrupt, .-disable_interrupt
 457              		.align	1
 458              		.global	vApplicationStackOverflowHook
 459              		.syntax unified
 460              		.thumb
 461              		.thumb_func
 462              		.type	vApplicationStackOverflowHook, %function
 463              	vApplicationStackOverflowHook:
 464              	.LFB10:
  12:../user/main.c **** 	for(;;);	// Função não muito útil, usado quando há um
 465              		.loc 1 12 56 is_stmt 1 view -0
 466              		.cfi_startproc
 467              		@ Volatile: function does not return.
 468              		@ args = 0, pretend = 0, frame = 0
 469              		@ frame_needed = 0, uses_anonymous_args = 0
 470              		@ link register save eliminated.
 471              	.LVL8:
 472              	.L31:
  13:../user/main.c **** 				// estouro de pilha, servindo como alerta.
 473              		.loc 1 13 2 discriminator 1 view .LVU92
  13:../user/main.c **** 				// estouro de pilha, servindo como alerta.
 474              		.loc 1 13 9 discriminator 1 view .LVU93
  13:../user/main.c **** 				// estouro de pilha, servindo como alerta.
 475              		.loc 1 13 7 discriminator 1 view .LVU94
 476 0118 FEE7     		b	.L31		@
 477              		.cfi_endproc
 478              	.LFE10:
 479              		.size	vApplicationStackOverflowHook, .-vApplicationStackOverflowHook
 480              		.section	.rodata.str1.1,"aMS",%progbits,1
 481              	.LC0:
 482 0000 4C454400 		.ascii	"LED\000"
ARM GAS  /tmp/ccRi8Uxx.s 			page 16


 483              		.section	.text.startup,"ax",%progbits
 484              		.align	1
 485              		.global	main
 486              		.syntax unified
 487              		.thumb
 488              		.thumb_func
 489              		.type	main, %function
 490              	main:
 491              	.LFB12:
  21:../user/main.c **** 														converte milissegundos em ticks */
  22:../user/main.c **** 	}
  23:../user/main.c **** }
  24:../user/main.c **** 
  25:../user/main.c **** int main(void) {
 492              		.loc 1 25 16 view -0
 493              		.cfi_startproc
 494              		@ Volatile: function does not return.
 495              		@ args = 0, pretend = 0, frame = 0
 496              		@ frame_needed = 0, uses_anonymous_args = 0
  26:../user/main.c **** 
  27:../user/main.c **** 	// rcc_clock_setup_in_hse_8mhz_out_72mhz(); // For "blue pill"
  28:../user/main.c **** 	enable_TIM3_delay();
 497              		.loc 1 28 2 view .LVU96
 498              	@ ../user/main.c:30: 	RCC->APB2ENR |= 0b1<<4 ;
  29:../user/main.c **** 
  30:../user/main.c **** 	RCC->APB2ENR |= 0b1<<4 ;
 499              		.loc 1 30 15 is_stmt 0 view .LVU97
 500 0000 164D     		ldr	r5, .L34	@ tmp124,
 501              	@ ../user/main.c:25: int main(void) {
  25:../user/main.c **** 
 502              		.loc 1 25 16 view .LVU98
 503 0002 07B5     		push	{r0, r1, r2, lr}	@
 504              	.LCFI4:
 505              		.cfi_def_cfa_offset 16
 506              		.cfi_offset 14, -4
 507              	@ ../user/main.c:28: 	enable_TIM3_delay();
  28:../user/main.c **** 
 508              		.loc 1 28 2 view .LVU99
 509 0004 FFF7FEFF 		bl	enable_TIM3_delay		@
 510              	.LVL9:
 511              		.loc 1 30 2 is_stmt 1 view .LVU100
 512              	@ ../user/main.c:30: 	RCC->APB2ENR |= 0b1<<4 ;
 513              		.loc 1 30 15 is_stmt 0 view .LVU101
 514 0008 AB69     		ldr	r3, [r5, #24]	@ _1, MEM[(struct RCC_TypeDef *)1073876992B].APB2ENR
 515              	@ ../user/main.c:31: 	GPIOC->CRH |= 0b11 << 20;
  31:../user/main.c **** 	GPIOC->CRH |= 0b11 << 20;
 516              		.loc 1 31 13 view .LVU102
 517 000a 154C     		ldr	r4, .L34+4	@ tmp126,
 518              	@ ../user/main.c:30: 	RCC->APB2ENR |= 0b1<<4 ;
  30:../user/main.c **** 	GPIOC->CRH |= 0b11 << 20;
 519              		.loc 1 30 15 view .LVU103
 520 000c 43F01003 		orr	r3, r3, #16	@ _2, _1,
 521 0010 AB61     		str	r3, [r5, #24]	@ _2, MEM[(struct RCC_TypeDef *)1073876992B].APB2ENR
 522              		.loc 1 31 2 is_stmt 1 view .LVU104
 523              	@ ../user/main.c:31: 	GPIOC->CRH |= 0b11 << 20;
 524              		.loc 1 31 13 is_stmt 0 view .LVU105
 525 0012 6368     		ldr	r3, [r4, #4]	@ _3, MEM[(struct GPIO_TypeDef *)1073811456B].CRH
ARM GAS  /tmp/ccRi8Uxx.s 			page 17


 526              	@ ../user/main.c:32: 	Delay(2000);
  32:../user/main.c **** 	Delay(2000);
 527              		.loc 1 32 2 view .LVU106
 528 0014 4FF4FA60 		mov	r0, #2000	@,
 529              	@ ../user/main.c:31: 	GPIOC->CRH |= 0b11 << 20;
  31:../user/main.c **** 	GPIOC->CRH |= 0b11 << 20;
 530              		.loc 1 31 13 view .LVU107
 531 0018 43F44013 		orr	r3, r3, #3145728	@ _4, _3,
 532 001c 6360     		str	r3, [r4, #4]	@ _4, MEM[(struct GPIO_TypeDef *)1073811456B].CRH
 533              		.loc 1 32 2 is_stmt 1 view .LVU108
 534 001e FFF7FEFF 		bl	Delay		@
 535              	.LVL10:
  33:../user/main.c **** 	GPIOC->ODR ^= (1<<13);
 536              		.loc 1 33 2 view .LVU109
 537              	@ ../user/main.c:33: 	GPIOC->ODR ^= (1<<13);
 538              		.loc 1 33 13 is_stmt 0 view .LVU110
 539 0022 E368     		ldr	r3, [r4, #12]	@ _5, MEM[(struct GPIO_TypeDef *)1073811456B].ODR
 540 0024 83F40053 		eor	r3, r3, #8192	@ _6, _5,
 541 0028 E360     		str	r3, [r4, #12]	@ _6, MEM[(struct GPIO_TypeDef *)1073811456B].ODR
  34:../user/main.c **** 	Delay(2000);
 542              		.loc 1 34 2 is_stmt 1 view .LVU111
 543 002a FFF7FEFF 		bl	Delay		@
 544              	.LVL11:
  35:../user/main.c **** 
  36:../user/main.c **** 	set_system_clock_to_72Mhz();
 545              		.loc 1 36 2 view .LVU112
 546 002e FFF7FEFF 		bl	set_system_clock_to_72Mhz		@
 547              	.LVL12:
  37:../user/main.c **** 	RCC->APB2ENR |= 0b1<<4 ;
 548              		.loc 1 37 2 view .LVU113
 549              	@ ../user/main.c:37: 	RCC->APB2ENR |= 0b1<<4 ;
 550              		.loc 1 37 15 is_stmt 0 view .LVU114
 551 0032 AB69     		ldr	r3, [r5, #24]	@ _7, MEM[(struct RCC_TypeDef *)1073876992B].APB2ENR
 552              	@ ../user/main.c:40: 	xTaskCreate(task1,"LED",100,NULL,configMAX_PRIORITIES-1,NULL);
  38:../user/main.c **** 	GPIOC->CRH |= 0b11 << 20;
  39:../user/main.c **** 
  40:../user/main.c **** 	xTaskCreate(task1,"LED",100,NULL,configMAX_PRIORITIES-1,NULL);
 553              		.loc 1 40 2 view .LVU115
 554 0034 0422     		movs	r2, #4	@ tmp137,
 555              	@ ../user/main.c:37: 	RCC->APB2ENR |= 0b1<<4 ;
  37:../user/main.c **** 	RCC->APB2ENR |= 0b1<<4 ;
 556              		.loc 1 37 15 view .LVU116
 557 0036 43F01003 		orr	r3, r3, #16	@ _8, _7,
 558 003a AB61     		str	r3, [r5, #24]	@ _8, MEM[(struct RCC_TypeDef *)1073876992B].APB2ENR
  38:../user/main.c **** 	GPIOC->CRH |= 0b11 << 20;
 559              		.loc 1 38 2 is_stmt 1 view .LVU117
 560              	@ ../user/main.c:38: 	GPIOC->CRH |= 0b11 << 20;
  38:../user/main.c **** 	GPIOC->CRH |= 0b11 << 20;
 561              		.loc 1 38 13 is_stmt 0 view .LVU118
 562 003c 6368     		ldr	r3, [r4, #4]	@ _9, MEM[(struct GPIO_TypeDef *)1073811456B].CRH
 563              	@ ../user/main.c:40: 	xTaskCreate(task1,"LED",100,NULL,configMAX_PRIORITIES-1,NULL);
 564              		.loc 1 40 2 view .LVU119
 565 003e 0949     		ldr	r1, .L34+8	@,
 566              	@ ../user/main.c:38: 	GPIOC->CRH |= 0b11 << 20;
  38:../user/main.c **** 	GPIOC->CRH |= 0b11 << 20;
 567              		.loc 1 38 13 view .LVU120
 568 0040 43F44013 		orr	r3, r3, #3145728	@ _10, _9,
ARM GAS  /tmp/ccRi8Uxx.s 			page 18


 569 0044 6360     		str	r3, [r4, #4]	@ _10, MEM[(struct GPIO_TypeDef *)1073811456B].CRH
 570              		.loc 1 40 2 is_stmt 1 view .LVU121
 571 0046 0023     		movs	r3, #0	@ tmp136,
 572 0048 0748     		ldr	r0, .L34+12	@,
 573 004a CDE90023 		strd	r2, r3, [sp]	@ tmp137, tmp136,
 574 004e 6422     		movs	r2, #100	@,
 575 0050 FFF7FEFF 		bl	xTaskCreate		@
 576              	.LVL13:
  41:../user/main.c **** 	vTaskStartScheduler();
 577              		.loc 1 41 2 view .LVU122
 578 0054 FFF7FEFF 		bl	vTaskStartScheduler		@
 579              	.LVL14:
 580              	.L33:
  42:../user/main.c **** 
  43:../user/main.c **** 	while(1);
 581              		.loc 1 43 2 discriminator 1 view .LVU123
 582              		.loc 1 43 10 discriminator 1 view .LVU124
 583              		.loc 1 43 7 discriminator 1 view .LVU125
 584 0058 FEE7     		b	.L33		@
 585              	.L35:
 586 005a 00BF     		.align	2
 587              	.L34:
 588 005c 00100240 		.word	1073876992
 589 0060 00100140 		.word	1073811456
 590 0064 00000000 		.word	.LC0
 591 0068 00000000 		.word	task1
 592              		.cfi_endproc
 593              	.LFE12:
 594              		.size	main, .-main
 595              		.text
 596              	.Letext0:
 597              		.file 3 "/usr/arm-none-eabi/include/machine/_default_types.h"
 598              		.file 4 "/usr/arm-none-eabi/include/sys/_stdint.h"
 599              		.file 5 "../freertos/portable/GCC/ARM_CM3/portmacro.h"
 600              		.file 6 "../freertos/include/task.h"
 601 011a 00BF     		.section	.debug_info,"",%progbits
 602              	.Ldebug_info0:
 603 0000 D2080000 		.4byte	0x8d2
 604 0004 0200     		.2byte	0x2
 605 0006 00000000 		.4byte	.Ldebug_abbrev0
 606 000a 04       		.byte	0x4
 607 000b 01       		.uleb128 0x1
 608 000c F2020000 		.4byte	.LASF138
 609 0010 0C       		.byte	0xc
 610 0011 18000000 		.4byte	.LASF139
 611 0015 BE010000 		.4byte	.LASF140
 612 0019 00000000 		.4byte	.Ldebug_ranges0+0
 613 001d 00000000 		.4byte	0
 614 0021 00000000 		.4byte	0
 615 0025 00000000 		.4byte	.Ldebug_line0
 616 0029 02       		.uleb128 0x2
 617 002a 04       		.byte	0x4
 618 002b 05       		.byte	0x5
 619 002c 696E7400 		.ascii	"int\000"
 620 0030 03       		.uleb128 0x3
 621 0031 04       		.byte	0x4
 622 0032 07       		.byte	0x7
ARM GAS  /tmp/ccRi8Uxx.s 			page 19


 623 0033 38020000 		.4byte	.LASF0
 624 0037 04       		.uleb128 0x4
 625 0038 30000000 		.4byte	0x30
 626 003c 03       		.uleb128 0x3
 627 003d 08       		.byte	0x8
 628 003e 05       		.byte	0x5
 629 003f C4000000 		.4byte	.LASF1
 630 0043 03       		.uleb128 0x3
 631 0044 08       		.byte	0x8
 632 0045 04       		.byte	0x4
 633 0046 D3030000 		.4byte	.LASF2
 634 004a 03       		.uleb128 0x3
 635 004b 01       		.byte	0x1
 636 004c 06       		.byte	0x6
 637 004d D2000000 		.4byte	.LASF3
 638 0051 03       		.uleb128 0x3
 639 0052 01       		.byte	0x1
 640 0053 08       		.byte	0x8
 641 0054 BD040000 		.4byte	.LASF4
 642 0058 03       		.uleb128 0x3
 643 0059 02       		.byte	0x2
 644 005a 05       		.byte	0x5
 645 005b EC040000 		.4byte	.LASF5
 646 005f 03       		.uleb128 0x3
 647 0060 02       		.byte	0x2
 648 0061 07       		.byte	0x7
 649 0062 BC020000 		.4byte	.LASF6
 650 0066 03       		.uleb128 0x3
 651 0067 04       		.byte	0x4
 652 0068 05       		.byte	0x5
 653 0069 1F010000 		.4byte	.LASF7
 654 006d 05       		.uleb128 0x5
 655 006e B3010000 		.4byte	.LASF10
 656 0072 03       		.byte	0x3
 657 0073 4F       		.byte	0x4f
 658 0074 19       		.byte	0x19
 659 0075 79000000 		.4byte	0x79
 660 0079 03       		.uleb128 0x3
 661 007a 04       		.byte	0x4
 662 007b 07       		.byte	0x7
 663 007c 5B020000 		.4byte	.LASF8
 664 0080 03       		.uleb128 0x3
 665 0081 08       		.byte	0x8
 666 0082 07       		.byte	0x7
 667 0083 6D000000 		.4byte	.LASF9
 668 0087 05       		.uleb128 0x5
 669 0088 40050000 		.4byte	.LASF11
 670 008c 04       		.byte	0x4
 671 008d 30       		.byte	0x30
 672 008e 14       		.byte	0x14
 673 008f 6D000000 		.4byte	0x6d
 674 0093 06       		.uleb128 0x6
 675 0094 04       		.byte	0x4
 676 0095 05       		.uleb128 0x5
 677 0096 04040000 		.4byte	.LASF12
 678 009a 05       		.byte	0x5
 679 009b 3F       		.byte	0x3f
ARM GAS  /tmp/ccRi8Uxx.s 			page 20


 680 009c 13       		.byte	0x13
 681 009d 87000000 		.4byte	0x87
 682 00a1 05       		.uleb128 0x5
 683 00a2 5C010000 		.4byte	.LASF13
 684 00a6 06       		.byte	0x6
 685 00a7 46       		.byte	0x46
 686 00a8 25       		.byte	0x25
 687 00a9 AD000000 		.4byte	0xad
 688 00ad 07       		.uleb128 0x7
 689 00ae 04       		.byte	0x4
 690 00af B3000000 		.4byte	0xb3
 691 00b3 08       		.uleb128 0x8
 692 00b4 28010000 		.4byte	.LASF141
 693 00b8 01       		.byte	0x1
 694 00b9 03       		.uleb128 0x3
 695 00ba 01       		.byte	0x1
 696 00bb 08       		.byte	0x8
 697 00bc 8A050000 		.4byte	.LASF14
 698 00c0 09       		.uleb128 0x9
 699 00c1 040E     		.2byte	0xe04
 700 00c3 02       		.byte	0x2
 701 00c4 38       		.byte	0x38
 702 00c5 09       		.byte	0x9
 703 00c6 99010000 		.4byte	0x199
 704 00ca 0A       		.uleb128 0xa
 705 00cb F6040000 		.4byte	.LASF15
 706 00cf 02       		.byte	0x2
 707 00d0 39       		.byte	0x39
 708 00d1 0F       		.byte	0xf
 709 00d2 99010000 		.4byte	0x199
 710 00d6 02       		.byte	0x2
 711 00d7 23       		.byte	0x23
 712 00d8 00       		.uleb128 0
 713 00d9 0A       		.uleb128 0xa
 714 00da E8060000 		.4byte	.LASF16
 715 00de 02       		.byte	0x2
 716 00df 3A       		.byte	0x3a
 717 00e0 0E       		.byte	0xe
 718 00e1 A9010000 		.4byte	0x1a9
 719 00e5 02       		.byte	0x2
 720 00e6 23       		.byte	0x23
 721 00e7 20       		.uleb128 0x20
 722 00e8 0A       		.uleb128 0xa
 723 00e9 56040000 		.4byte	.LASF17
 724 00ed 02       		.byte	0x2
 725 00ee 3B       		.byte	0x3b
 726 00ef 0F       		.byte	0xf
 727 00f0 99010000 		.4byte	0x199
 728 00f4 03       		.byte	0x3
 729 00f5 23       		.byte	0x23
 730 00f6 8001     		.uleb128 0x80
 731 00f8 0A       		.uleb128 0xa
 732 00f9 ED060000 		.4byte	.LASF18
 733 00fd 02       		.byte	0x2
 734 00fe 3C       		.byte	0x3c
 735 00ff 0E       		.byte	0xe
 736 0100 A9010000 		.4byte	0x1a9
ARM GAS  /tmp/ccRi8Uxx.s 			page 21


 737 0104 03       		.byte	0x3
 738 0105 23       		.byte	0x23
 739 0106 A001     		.uleb128 0xa0
 740 0108 0A       		.uleb128 0xa
 741 0109 AE000000 		.4byte	.LASF19
 742 010d 02       		.byte	0x2
 743 010e 3D       		.byte	0x3d
 744 010f 0F       		.byte	0xf
 745 0110 99010000 		.4byte	0x199
 746 0114 03       		.byte	0x3
 747 0115 23       		.byte	0x23
 748 0116 8002     		.uleb128 0x100
 749 0118 0A       		.uleb128 0xa
 750 0119 F2060000 		.4byte	.LASF20
 751 011d 02       		.byte	0x2
 752 011e 3E       		.byte	0x3e
 753 011f 0E       		.byte	0xe
 754 0120 A9010000 		.4byte	0x1a9
 755 0124 03       		.byte	0x3
 756 0125 23       		.byte	0x23
 757 0126 A002     		.uleb128 0x120
 758 0128 0A       		.uleb128 0xa
 759 0129 00000000 		.4byte	.LASF21
 760 012d 02       		.byte	0x2
 761 012e 3F       		.byte	0x3f
 762 012f 0F       		.byte	0xf
 763 0130 99010000 		.4byte	0x199
 764 0134 03       		.byte	0x3
 765 0135 23       		.byte	0x23
 766 0136 8003     		.uleb128 0x180
 767 0138 0A       		.uleb128 0xa
 768 0139 F7060000 		.4byte	.LASF22
 769 013d 02       		.byte	0x2
 770 013e 40       		.byte	0x40
 771 013f 0E       		.byte	0xe
 772 0140 A9010000 		.4byte	0x1a9
 773 0144 03       		.byte	0x3
 774 0145 23       		.byte	0x23
 775 0146 A003     		.uleb128 0x1a0
 776 0148 0A       		.uleb128 0xa
 777 0149 FF030000 		.4byte	.LASF23
 778 014d 02       		.byte	0x2
 779 014e 41       		.byte	0x41
 780 014f 0F       		.byte	0xf
 781 0150 99010000 		.4byte	0x199
 782 0154 03       		.byte	0x3
 783 0155 23       		.byte	0x23
 784 0156 8004     		.uleb128 0x200
 785 0158 0A       		.uleb128 0xa
 786 0159 FC060000 		.4byte	.LASF24
 787 015d 02       		.byte	0x2
 788 015e 42       		.byte	0x42
 789 015f 0E       		.byte	0xe
 790 0160 B9010000 		.4byte	0x1b9
 791 0164 03       		.byte	0x3
 792 0165 23       		.byte	0x23
 793 0166 A004     		.uleb128 0x220
ARM GAS  /tmp/ccRi8Uxx.s 			page 22


 794 0168 0B       		.uleb128 0xb
 795 0169 49505200 		.ascii	"IPR\000"
 796 016d 02       		.byte	0x2
 797 016e 43       		.byte	0x43
 798 016f 0E       		.byte	0xe
 799 0170 C9010000 		.4byte	0x1c9
 800 0174 03       		.byte	0x3
 801 0175 23       		.byte	0x23
 802 0176 8006     		.uleb128 0x300
 803 0178 0A       		.uleb128 0xa
 804 0179 01070000 		.4byte	.LASF25
 805 017d 02       		.byte	0x2
 806 017e 44       		.byte	0x44
 807 017f 0D       		.byte	0xd
 808 0180 D9010000 		.4byte	0x1d9
 809 0184 03       		.byte	0x3
 810 0185 23       		.byte	0x23
 811 0186 F007     		.uleb128 0x3f0
 812 0188 0A       		.uleb128 0xa
 813 0189 75060000 		.4byte	.LASF26
 814 018d 02       		.byte	0x2
 815 018e 45       		.byte	0x45
 816 018f 13       		.byte	0x13
 817 0190 30000000 		.4byte	0x30
 818 0194 03       		.byte	0x3
 819 0195 23       		.byte	0x23
 820 0196 801C     		.uleb128 0xe00
 821 0198 00       		.byte	0
 822 0199 0C       		.uleb128 0xc
 823 019a 30000000 		.4byte	0x30
 824 019e A9010000 		.4byte	0x1a9
 825 01a2 0D       		.uleb128 0xd
 826 01a3 30000000 		.4byte	0x30
 827 01a7 07       		.byte	0x7
 828 01a8 00       		.byte	0
 829 01a9 0C       		.uleb128 0xc
 830 01aa 30000000 		.4byte	0x30
 831 01ae B9010000 		.4byte	0x1b9
 832 01b2 0D       		.uleb128 0xd
 833 01b3 30000000 		.4byte	0x30
 834 01b7 17       		.byte	0x17
 835 01b8 00       		.byte	0
 836 01b9 0C       		.uleb128 0xc
 837 01ba 30000000 		.4byte	0x30
 838 01be C9010000 		.4byte	0x1c9
 839 01c2 0D       		.uleb128 0xd
 840 01c3 30000000 		.4byte	0x30
 841 01c7 37       		.byte	0x37
 842 01c8 00       		.byte	0
 843 01c9 0C       		.uleb128 0xc
 844 01ca 51000000 		.4byte	0x51
 845 01ce D9010000 		.4byte	0x1d9
 846 01d2 0D       		.uleb128 0xd
 847 01d3 30000000 		.4byte	0x30
 848 01d7 EF       		.byte	0xef
 849 01d8 00       		.byte	0
 850 01d9 0C       		.uleb128 0xc
ARM GAS  /tmp/ccRi8Uxx.s 			page 23


 851 01da 30000000 		.4byte	0x30
 852 01de EA010000 		.4byte	0x1ea
 853 01e2 0E       		.uleb128 0xe
 854 01e3 30000000 		.4byte	0x30
 855 01e7 8302     		.2byte	0x283
 856 01e9 00       		.byte	0
 857 01ea 05       		.uleb128 0x5
 858 01eb DE000000 		.4byte	.LASF27
 859 01ef 02       		.byte	0x2
 860 01f0 46       		.byte	0x46
 861 01f1 03       		.byte	0x3
 862 01f2 C0000000 		.4byte	0xc0
 863 01f6 0F       		.uleb128 0xf
 864 01f7 1C       		.byte	0x1c
 865 01f8 02       		.byte	0x2
 866 01f9 49       		.byte	0x49
 867 01fa 09       		.byte	0x9
 868 01fb 69020000 		.4byte	0x269
 869 01ff 0B       		.uleb128 0xb
 870 0200 43524C00 		.ascii	"CRL\000"
 871 0204 02       		.byte	0x2
 872 0205 4A       		.byte	0x4a
 873 0206 0D       		.byte	0xd
 874 0207 37000000 		.4byte	0x37
 875 020b 02       		.byte	0x2
 876 020c 23       		.byte	0x23
 877 020d 00       		.uleb128 0
 878 020e 0B       		.uleb128 0xb
 879 020f 43524800 		.ascii	"CRH\000"
 880 0213 02       		.byte	0x2
 881 0214 4B       		.byte	0x4b
 882 0215 0D       		.byte	0xd
 883 0216 37000000 		.4byte	0x37
 884 021a 02       		.byte	0x2
 885 021b 23       		.byte	0x23
 886 021c 04       		.uleb128 0x4
 887 021d 0B       		.uleb128 0xb
 888 021e 49445200 		.ascii	"IDR\000"
 889 0222 02       		.byte	0x2
 890 0223 4C       		.byte	0x4c
 891 0224 0D       		.byte	0xd
 892 0225 37000000 		.4byte	0x37
 893 0229 02       		.byte	0x2
 894 022a 23       		.byte	0x23
 895 022b 08       		.uleb128 0x8
 896 022c 0B       		.uleb128 0xb
 897 022d 4F445200 		.ascii	"ODR\000"
 898 0231 02       		.byte	0x2
 899 0232 4D       		.byte	0x4d
 900 0233 0D       		.byte	0xd
 901 0234 37000000 		.4byte	0x37
 902 0238 02       		.byte	0x2
 903 0239 23       		.byte	0x23
 904 023a 0C       		.uleb128 0xc
 905 023b 0A       		.uleb128 0xa
 906 023c 51060000 		.4byte	.LASF28
 907 0240 02       		.byte	0x2
ARM GAS  /tmp/ccRi8Uxx.s 			page 24


 908 0241 4E       		.byte	0x4e
 909 0242 0D       		.byte	0xd
 910 0243 37000000 		.4byte	0x37
 911 0247 02       		.byte	0x2
 912 0248 23       		.byte	0x23
 913 0249 10       		.uleb128 0x10
 914 024a 0B       		.uleb128 0xb
 915 024b 42525200 		.ascii	"BRR\000"
 916 024f 02       		.byte	0x2
 917 0250 4F       		.byte	0x4f
 918 0251 0D       		.byte	0xd
 919 0252 37000000 		.4byte	0x37
 920 0256 02       		.byte	0x2
 921 0257 23       		.byte	0x23
 922 0258 14       		.uleb128 0x14
 923 0259 0A       		.uleb128 0xa
 924 025a 05000000 		.4byte	.LASF29
 925 025e 02       		.byte	0x2
 926 025f 50       		.byte	0x50
 927 0260 0D       		.byte	0xd
 928 0261 37000000 		.4byte	0x37
 929 0265 02       		.byte	0x2
 930 0266 23       		.byte	0x23
 931 0267 18       		.uleb128 0x18
 932 0268 00       		.byte	0
 933 0269 05       		.uleb128 0x5
 934 026a 6D020000 		.4byte	.LASF30
 935 026e 02       		.byte	0x2
 936 026f 52       		.byte	0x52
 937 0270 03       		.byte	0x3
 938 0271 F6010000 		.4byte	0x1f6
 939 0275 0F       		.uleb128 0xf
 940 0276 50       		.byte	0x50
 941 0277 02       		.byte	0x2
 942 0278 65       		.byte	0x65
 943 0279 09       		.byte	0x9
 944 027a AA030000 		.4byte	0x3aa
 945 027e 0B       		.uleb128 0xb
 946 027f 43523100 		.ascii	"CR1\000"
 947 0283 02       		.byte	0x2
 948 0284 67       		.byte	0x67
 949 0285 0D       		.byte	0xd
 950 0286 37000000 		.4byte	0x37
 951 028a 02       		.byte	0x2
 952 028b 23       		.byte	0x23
 953 028c 00       		.uleb128 0
 954 028d 0B       		.uleb128 0xb
 955 028e 43523200 		.ascii	"CR2\000"
 956 0292 02       		.byte	0x2
 957 0293 68       		.byte	0x68
 958 0294 0D       		.byte	0xd
 959 0295 37000000 		.4byte	0x37
 960 0299 02       		.byte	0x2
 961 029a 23       		.byte	0x23
 962 029b 04       		.uleb128 0x4
 963 029c 0A       		.uleb128 0xa
 964 029d A2050000 		.4byte	.LASF31
ARM GAS  /tmp/ccRi8Uxx.s 			page 25


 965 02a1 02       		.byte	0x2
 966 02a2 69       		.byte	0x69
 967 02a3 0D       		.byte	0xd
 968 02a4 37000000 		.4byte	0x37
 969 02a8 02       		.byte	0x2
 970 02a9 23       		.byte	0x23
 971 02aa 08       		.uleb128 0x8
 972 02ab 0A       		.uleb128 0xa
 973 02ac 27000000 		.4byte	.LASF32
 974 02b0 02       		.byte	0x2
 975 02b1 6A       		.byte	0x6a
 976 02b2 0D       		.byte	0xd
 977 02b3 37000000 		.4byte	0x37
 978 02b7 02       		.byte	0x2
 979 02b8 23       		.byte	0x23
 980 02b9 0C       		.uleb128 0xc
 981 02ba 0B       		.uleb128 0xb
 982 02bb 535200   		.ascii	"SR\000"
 983 02be 02       		.byte	0x2
 984 02bf 6B       		.byte	0x6b
 985 02c0 0D       		.byte	0xd
 986 02c1 37000000 		.4byte	0x37
 987 02c5 02       		.byte	0x2
 988 02c6 23       		.byte	0x23
 989 02c7 10       		.uleb128 0x10
 990 02c8 0B       		.uleb128 0xb
 991 02c9 45475200 		.ascii	"EGR\000"
 992 02cd 02       		.byte	0x2
 993 02ce 6C       		.byte	0x6c
 994 02cf 0D       		.byte	0xd
 995 02d0 37000000 		.4byte	0x37
 996 02d4 02       		.byte	0x2
 997 02d5 23       		.byte	0x23
 998 02d6 14       		.uleb128 0x14
 999 02d7 0A       		.uleb128 0xa
 1000 02d8 B8000000 		.4byte	.LASF33
 1001 02dc 02       		.byte	0x2
 1002 02dd 6D       		.byte	0x6d
 1003 02de 0D       		.byte	0xd
 1004 02df 37000000 		.4byte	0x37
 1005 02e3 02       		.byte	0x2
 1006 02e4 23       		.byte	0x23
 1007 02e5 18       		.uleb128 0x18
 1008 02e6 0A       		.uleb128 0xa
 1009 02e7 BE000000 		.4byte	.LASF34
 1010 02eb 02       		.byte	0x2
 1011 02ec 6E       		.byte	0x6e
 1012 02ed 0D       		.byte	0xd
 1013 02ee 37000000 		.4byte	0x37
 1014 02f2 02       		.byte	0x2
 1015 02f3 23       		.byte	0x23
 1016 02f4 1C       		.uleb128 0x1c
 1017 02f5 0A       		.uleb128 0xa
 1018 02f6 69010000 		.4byte	.LASF35
 1019 02fa 02       		.byte	0x2
 1020 02fb 6F       		.byte	0x6f
 1021 02fc 0D       		.byte	0xd
ARM GAS  /tmp/ccRi8Uxx.s 			page 26


 1022 02fd 37000000 		.4byte	0x37
 1023 0301 02       		.byte	0x2
 1024 0302 23       		.byte	0x23
 1025 0303 20       		.uleb128 0x20
 1026 0304 0B       		.uleb128 0xb
 1027 0305 434E5400 		.ascii	"CNT\000"
 1028 0309 02       		.byte	0x2
 1029 030a 70       		.byte	0x70
 1030 030b 0D       		.byte	0xd
 1031 030c 37000000 		.4byte	0x37
 1032 0310 02       		.byte	0x2
 1033 0311 23       		.byte	0x23
 1034 0312 24       		.uleb128 0x24
 1035 0313 0B       		.uleb128 0xb
 1036 0314 50534300 		.ascii	"PSC\000"
 1037 0318 02       		.byte	0x2
 1038 0319 71       		.byte	0x71
 1039 031a 0D       		.byte	0xd
 1040 031b 37000000 		.4byte	0x37
 1041 031f 02       		.byte	0x2
 1042 0320 23       		.byte	0x23
 1043 0321 28       		.uleb128 0x28
 1044 0322 0B       		.uleb128 0xb
 1045 0323 41525200 		.ascii	"ARR\000"
 1046 0327 02       		.byte	0x2
 1047 0328 72       		.byte	0x72
 1048 0329 0D       		.byte	0xd
 1049 032a 37000000 		.4byte	0x37
 1050 032e 02       		.byte	0x2
 1051 032f 23       		.byte	0x23
 1052 0330 2C       		.uleb128 0x2c
 1053 0331 0B       		.uleb128 0xb
 1054 0332 52435200 		.ascii	"RCR\000"
 1055 0336 02       		.byte	0x2
 1056 0337 73       		.byte	0x73
 1057 0338 0D       		.byte	0xd
 1058 0339 37000000 		.4byte	0x37
 1059 033d 02       		.byte	0x2
 1060 033e 23       		.byte	0x23
 1061 033f 30       		.uleb128 0x30
 1062 0340 0A       		.uleb128 0xa
 1063 0341 3D060000 		.4byte	.LASF36
 1064 0345 02       		.byte	0x2
 1065 0346 74       		.byte	0x74
 1066 0347 0D       		.byte	0xd
 1067 0348 37000000 		.4byte	0x37
 1068 034c 02       		.byte	0x2
 1069 034d 23       		.byte	0x23
 1070 034e 34       		.uleb128 0x34
 1071 034f 0A       		.uleb128 0xa
 1072 0350 42060000 		.4byte	.LASF37
 1073 0354 02       		.byte	0x2
 1074 0355 75       		.byte	0x75
 1075 0356 0D       		.byte	0xd
 1076 0357 37000000 		.4byte	0x37
 1077 035b 02       		.byte	0x2
 1078 035c 23       		.byte	0x23
ARM GAS  /tmp/ccRi8Uxx.s 			page 27


 1079 035d 38       		.uleb128 0x38
 1080 035e 0A       		.uleb128 0xa
 1081 035f 47060000 		.4byte	.LASF38
 1082 0363 02       		.byte	0x2
 1083 0364 76       		.byte	0x76
 1084 0365 0D       		.byte	0xd
 1085 0366 37000000 		.4byte	0x37
 1086 036a 02       		.byte	0x2
 1087 036b 23       		.byte	0x23
 1088 036c 3C       		.uleb128 0x3c
 1089 036d 0A       		.uleb128 0xa
 1090 036e 4C060000 		.4byte	.LASF39
 1091 0372 02       		.byte	0x2
 1092 0373 77       		.byte	0x77
 1093 0374 0D       		.byte	0xd
 1094 0375 37000000 		.4byte	0x37
 1095 0379 02       		.byte	0x2
 1096 037a 23       		.byte	0x23
 1097 037b 40       		.uleb128 0x40
 1098 037c 0A       		.uleb128 0xa
 1099 037d B3000000 		.4byte	.LASF40
 1100 0381 02       		.byte	0x2
 1101 0382 78       		.byte	0x78
 1102 0383 0D       		.byte	0xd
 1103 0384 37000000 		.4byte	0x37
 1104 0388 02       		.byte	0x2
 1105 0389 23       		.byte	0x23
 1106 038a 44       		.uleb128 0x44
 1107 038b 0B       		.uleb128 0xb
 1108 038c 44435200 		.ascii	"DCR\000"
 1109 0390 02       		.byte	0x2
 1110 0391 79       		.byte	0x79
 1111 0392 0D       		.byte	0xd
 1112 0393 37000000 		.4byte	0x37
 1113 0397 02       		.byte	0x2
 1114 0398 23       		.byte	0x23
 1115 0399 48       		.uleb128 0x48
 1116 039a 0A       		.uleb128 0xa
 1117 039b B5050000 		.4byte	.LASF41
 1118 039f 02       		.byte	0x2
 1119 03a0 7A       		.byte	0x7a
 1120 03a1 0D       		.byte	0xd
 1121 03a2 37000000 		.4byte	0x37
 1122 03a6 02       		.byte	0x2
 1123 03a7 23       		.byte	0x23
 1124 03a8 4C       		.uleb128 0x4c
 1125 03a9 00       		.byte	0
 1126 03aa 05       		.uleb128 0x5
 1127 03ab 53000000 		.4byte	.LASF42
 1128 03af 02       		.byte	0x2
 1129 03b0 7C       		.byte	0x7c
 1130 03b1 03       		.byte	0x3
 1131 03b2 75020000 		.4byte	0x275
 1132 03b6 0F       		.uleb128 0xf
 1133 03b7 30       		.byte	0x30
 1134 03b8 02       		.byte	0x2
 1135 03b9 7E       		.byte	0x7e
ARM GAS  /tmp/ccRi8Uxx.s 			page 28


 1136 03ba 09       		.byte	0x9
 1137 03bb 73040000 		.4byte	0x473
 1138 03bf 0B       		.uleb128 0xb
 1139 03c0 435200   		.ascii	"CR\000"
 1140 03c3 02       		.byte	0x2
 1141 03c4 80       		.byte	0x80
 1142 03c5 0D       		.byte	0xd
 1143 03c6 37000000 		.4byte	0x37
 1144 03ca 02       		.byte	0x2
 1145 03cb 23       		.byte	0x23
 1146 03cc 00       		.uleb128 0
 1147 03cd 0A       		.uleb128 0xa
 1148 03ce A6060000 		.4byte	.LASF43
 1149 03d2 02       		.byte	0x2
 1150 03d3 81       		.byte	0x81
 1151 03d4 0D       		.byte	0xd
 1152 03d5 37000000 		.4byte	0x37
 1153 03d9 02       		.byte	0x2
 1154 03da 23       		.byte	0x23
 1155 03db 04       		.uleb128 0x4
 1156 03dc 0B       		.uleb128 0xb
 1157 03dd 43495200 		.ascii	"CIR\000"
 1158 03e1 02       		.byte	0x2
 1159 03e2 82       		.byte	0x82
 1160 03e3 0D       		.byte	0xd
 1161 03e4 37000000 		.4byte	0x37
 1162 03e8 02       		.byte	0x2
 1163 03e9 23       		.byte	0x23
 1164 03ea 08       		.uleb128 0x8
 1165 03eb 0A       		.uleb128 0xa
 1166 03ec 3C010000 		.4byte	.LASF44
 1167 03f0 02       		.byte	0x2
 1168 03f1 83       		.byte	0x83
 1169 03f2 0D       		.byte	0xd
 1170 03f3 37000000 		.4byte	0x37
 1171 03f7 02       		.byte	0x2
 1172 03f8 23       		.byte	0x23
 1173 03f9 0C       		.uleb128 0xc
 1174 03fa 0A       		.uleb128 0xa
 1175 03fb 63040000 		.4byte	.LASF45
 1176 03ff 02       		.byte	0x2
 1177 0400 84       		.byte	0x84
 1178 0401 0D       		.byte	0xd
 1179 0402 37000000 		.4byte	0x37
 1180 0406 02       		.byte	0x2
 1181 0407 23       		.byte	0x23
 1182 0408 10       		.uleb128 0x10
 1183 0409 0A       		.uleb128 0xa
 1184 040a DC020000 		.4byte	.LASF46
 1185 040e 02       		.byte	0x2
 1186 040f 85       		.byte	0x85
 1187 0410 0D       		.byte	0xd
 1188 0411 37000000 		.4byte	0x37
 1189 0415 02       		.byte	0x2
 1190 0416 23       		.byte	0x23
 1191 0417 14       		.uleb128 0x14
 1192 0418 0A       		.uleb128 0xa
ARM GAS  /tmp/ccRi8Uxx.s 			page 29


 1193 0419 1B050000 		.4byte	.LASF47
 1194 041d 02       		.byte	0x2
 1195 041e 86       		.byte	0x86
 1196 041f 0D       		.byte	0xd
 1197 0420 37000000 		.4byte	0x37
 1198 0424 02       		.byte	0x2
 1199 0425 23       		.byte	0x23
 1200 0426 18       		.uleb128 0x18
 1201 0427 0A       		.uleb128 0xa
 1202 0428 F9050000 		.4byte	.LASF48
 1203 042c 02       		.byte	0x2
 1204 042d 87       		.byte	0x87
 1205 042e 0D       		.byte	0xd
 1206 042f 37000000 		.4byte	0x37
 1207 0433 02       		.byte	0x2
 1208 0434 23       		.byte	0x23
 1209 0435 1C       		.uleb128 0x1c
 1210 0436 0A       		.uleb128 0xa
 1211 0437 56060000 		.4byte	.LASF49
 1212 043b 02       		.byte	0x2
 1213 043c 88       		.byte	0x88
 1214 043d 0D       		.byte	0xd
 1215 043e 37000000 		.4byte	0x37
 1216 0442 02       		.byte	0x2
 1217 0443 23       		.byte	0x23
 1218 0444 20       		.uleb128 0x20
 1219 0445 0B       		.uleb128 0xb
 1220 0446 43535200 		.ascii	"CSR\000"
 1221 044a 02       		.byte	0x2
 1222 044b 89       		.byte	0x89
 1223 044c 0D       		.byte	0xd
 1224 044d 37000000 		.4byte	0x37
 1225 0451 02       		.byte	0x2
 1226 0452 23       		.byte	0x23
 1227 0453 24       		.uleb128 0x24
 1228 0454 0A       		.uleb128 0xa
 1229 0455 5B040000 		.4byte	.LASF50
 1230 0459 02       		.byte	0x2
 1231 045a 8A       		.byte	0x8a
 1232 045b 0D       		.byte	0xd
 1233 045c 37000000 		.4byte	0x37
 1234 0460 02       		.byte	0x2
 1235 0461 23       		.byte	0x23
 1236 0462 28       		.uleb128 0x28
 1237 0463 0A       		.uleb128 0xa
 1238 0464 5B060000 		.4byte	.LASF51
 1239 0468 02       		.byte	0x2
 1240 0469 8B       		.byte	0x8b
 1241 046a 0D       		.byte	0xd
 1242 046b 37000000 		.4byte	0x37
 1243 046f 02       		.byte	0x2
 1244 0470 23       		.byte	0x23
 1245 0471 2C       		.uleb128 0x2c
 1246 0472 00       		.byte	0
 1247 0473 05       		.uleb128 0x5
 1248 0474 7A020000 		.4byte	.LASF52
 1249 0478 02       		.byte	0x2
ARM GAS  /tmp/ccRi8Uxx.s 			page 30


 1250 0479 8D       		.byte	0x8d
 1251 047a 03       		.byte	0x3
 1252 047b B6030000 		.4byte	0x3b6
 1253 047f 0F       		.uleb128 0xf
 1254 0480 24       		.byte	0x24
 1255 0481 02       		.byte	0x2
 1256 0482 AF       		.byte	0xaf
 1257 0483 09       		.byte	0x9
 1258 0484 0D050000 		.4byte	0x50d
 1259 0488 0B       		.uleb128 0xb
 1260 0489 41435200 		.ascii	"ACR\000"
 1261 048d 02       		.byte	0x2
 1262 048e B1       		.byte	0xb1
 1263 048f 0D       		.byte	0xd
 1264 0490 37000000 		.4byte	0x37
 1265 0494 02       		.byte	0x2
 1266 0495 23       		.byte	0x23
 1267 0496 00       		.uleb128 0
 1268 0497 0A       		.uleb128 0xa
 1269 0498 7F040000 		.4byte	.LASF53
 1270 049c 02       		.byte	0x2
 1271 049d B2       		.byte	0xb2
 1272 049e 0D       		.byte	0xd
 1273 049f 37000000 		.4byte	0x37
 1274 04a3 02       		.byte	0x2
 1275 04a4 23       		.byte	0x23
 1276 04a5 04       		.uleb128 0x4
 1277 04a6 0A       		.uleb128 0xa
 1278 04a7 6E010000 		.4byte	.LASF54
 1279 04ab 02       		.byte	0x2
 1280 04ac B3       		.byte	0xb3
 1281 04ad 0D       		.byte	0xd
 1282 04ae 37000000 		.4byte	0x37
 1283 04b2 02       		.byte	0x2
 1284 04b3 23       		.byte	0x23
 1285 04b4 08       		.uleb128 0x8
 1286 04b5 0B       		.uleb128 0xb
 1287 04b6 535200   		.ascii	"SR\000"
 1288 04b9 02       		.byte	0x2
 1289 04ba B4       		.byte	0xb4
 1290 04bb 0D       		.byte	0xd
 1291 04bc 37000000 		.4byte	0x37
 1292 04c0 02       		.byte	0x2
 1293 04c1 23       		.byte	0x23
 1294 04c2 0C       		.uleb128 0xc
 1295 04c3 0B       		.uleb128 0xb
 1296 04c4 435200   		.ascii	"CR\000"
 1297 04c7 02       		.byte	0x2
 1298 04c8 B5       		.byte	0xb5
 1299 04c9 0D       		.byte	0xd
 1300 04ca 37000000 		.4byte	0x37
 1301 04ce 02       		.byte	0x2
 1302 04cf 23       		.byte	0x23
 1303 04d0 10       		.uleb128 0x10
 1304 04d1 0B       		.uleb128 0xb
 1305 04d2 415200   		.ascii	"AR\000"
 1306 04d5 02       		.byte	0x2
ARM GAS  /tmp/ccRi8Uxx.s 			page 31


 1307 04d6 B6       		.byte	0xb6
 1308 04d7 0D       		.byte	0xd
 1309 04d8 37000000 		.4byte	0x37
 1310 04dc 02       		.byte	0x2
 1311 04dd 23       		.byte	0x23
 1312 04de 14       		.uleb128 0x14
 1313 04df 0A       		.uleb128 0xa
 1314 04e0 06050000 		.4byte	.LASF55
 1315 04e4 02       		.byte	0x2
 1316 04e5 B7       		.byte	0xb7
 1317 04e6 0D       		.byte	0xd
 1318 04e7 37000000 		.4byte	0x37
 1319 04eb 02       		.byte	0x2
 1320 04ec 23       		.byte	0x23
 1321 04ed 18       		.uleb128 0x18
 1322 04ee 0B       		.uleb128 0xb
 1323 04ef 4F425200 		.ascii	"OBR\000"
 1324 04f3 02       		.byte	0x2
 1325 04f4 B8       		.byte	0xb8
 1326 04f5 0D       		.byte	0xd
 1327 04f6 37000000 		.4byte	0x37
 1328 04fa 02       		.byte	0x2
 1329 04fb 23       		.byte	0x23
 1330 04fc 1C       		.uleb128 0x1c
 1331 04fd 0A       		.uleb128 0xa
 1332 04fe 72050000 		.4byte	.LASF56
 1333 0502 02       		.byte	0x2
 1334 0503 B9       		.byte	0xb9
 1335 0504 0D       		.byte	0xd
 1336 0505 37000000 		.4byte	0x37
 1337 0509 02       		.byte	0x2
 1338 050a 23       		.byte	0x23
 1339 050b 20       		.uleb128 0x20
 1340 050c 00       		.byte	0
 1341 050d 05       		.uleb128 0x5
 1342 050e F3000000 		.4byte	.LASF57
 1343 0512 02       		.byte	0x2
 1344 0513 BB       		.byte	0xbb
 1345 0514 03       		.byte	0x3
 1346 0515 7F040000 		.4byte	0x47f
 1347 0519 10       		.uleb128 0x10
 1348 051a A8030000 		.4byte	.LASF130
 1349 051e 05       		.byte	0x5
 1350 051f 01       		.byte	0x1
 1351 0520 4A000000 		.4byte	0x4a
 1352 0524 02       		.byte	0x2
 1353 0525 BC       		.byte	0xbc
 1354 0526 0E       		.byte	0xe
 1355 0527 B8060000 		.4byte	0x6b8
 1356 052b 11       		.uleb128 0x11
 1357 052c D2050000 		.4byte	.LASF58
 1358 0530 72       		.sleb128 -14
 1359 0531 11       		.uleb128 0x11
 1360 0532 45020000 		.4byte	.LASF59
 1361 0536 74       		.sleb128 -12
 1362 0537 11       		.uleb128 0x11
 1363 0538 F3010000 		.4byte	.LASF60
ARM GAS  /tmp/ccRi8Uxx.s 			page 32


 1364 053c 75       		.sleb128 -11
 1365 053d 11       		.uleb128 0x11
 1366 053e 55050000 		.4byte	.LASF61
 1367 0542 76       		.sleb128 -10
 1368 0543 11       		.uleb128 0x11
 1369 0544 B0020000 		.4byte	.LASF62
 1370 0548 7B       		.sleb128 -5
 1371 0549 11       		.uleb128 0x11
 1372 054a 1A060000 		.4byte	.LASF63
 1373 054e 7C       		.sleb128 -4
 1374 054f 11       		.uleb128 0x11
 1375 0550 49050000 		.4byte	.LASF64
 1376 0554 7E       		.sleb128 -2
 1377 0555 11       		.uleb128 0x11
 1378 0556 8E030000 		.4byte	.LASF65
 1379 055a 7F       		.sleb128 -1
 1380 055b 12       		.uleb128 0x12
 1381 055c AD030000 		.4byte	.LASF66
 1382 0560 00       		.byte	0
 1383 0561 12       		.uleb128 0x12
 1384 0562 4A000000 		.4byte	.LASF67
 1385 0566 01       		.byte	0x1
 1386 0567 12       		.uleb128 0x12
 1387 0568 01060000 		.4byte	.LASF68
 1388 056c 02       		.byte	0x2
 1389 056d 12       		.uleb128 0x12
 1390 056e B8060000 		.4byte	.LASF69
 1391 0572 03       		.byte	0x3
 1392 0573 12       		.uleb128 0x12
 1393 0574 23050000 		.4byte	.LASF70
 1394 0578 04       		.byte	0x4
 1395 0579 12       		.uleb128 0x12
 1396 057a 6C060000 		.4byte	.LASF71
 1397 057e 05       		.byte	0x5
 1398 057f 12       		.uleb128 0x12
 1399 0580 E8000000 		.4byte	.LASF72
 1400 0584 06       		.byte	0x6
 1401 0585 12       		.uleb128 0x12
 1402 0586 88060000 		.4byte	.LASF73
 1403 058a 07       		.byte	0x7
 1404 058b 12       		.uleb128 0x12
 1405 058c 15020000 		.4byte	.LASF74
 1406 0590 08       		.byte	0x8
 1407 0591 12       		.uleb128 0x12
 1408 0592 23040000 		.4byte	.LASF75
 1409 0596 09       		.byte	0x9
 1410 0597 12       		.uleb128 0x12
 1411 0598 E1040000 		.4byte	.LASF76
 1412 059c 0A       		.byte	0xa
 1413 059d 12       		.uleb128 0x12
 1414 059e 6C040000 		.4byte	.LASF77
 1415 05a2 0B       		.byte	0xb
 1416 05a3 12       		.uleb128 0x12
 1417 05a4 B7030000 		.4byte	.LASF78
 1418 05a8 0C       		.byte	0xc
 1419 05a9 12       		.uleb128 0x12
 1420 05aa 77050000 		.4byte	.LASF79
ARM GAS  /tmp/ccRi8Uxx.s 			page 33


 1421 05ae 0D       		.byte	0xd
 1422 05af 12       		.uleb128 0x12
 1423 05b0 A0010000 		.4byte	.LASF80
 1424 05b4 0E       		.byte	0xe
 1425 05b5 12       		.uleb128 0x12
 1426 05b6 76010000 		.4byte	.LASF81
 1427 05ba 0F       		.byte	0xf
 1428 05bb 12       		.uleb128 0x12
 1429 05bc E6050000 		.4byte	.LASF82
 1430 05c0 10       		.byte	0x10
 1431 05c1 12       		.uleb128 0x12
 1432 05c2 93060000 		.4byte	.LASF83
 1433 05c6 11       		.byte	0x11
 1434 05c7 12       		.uleb128 0x12
 1435 05c8 89010000 		.4byte	.LASF84
 1436 05cc 12       		.byte	0x12
 1437 05cd 12       		.uleb128 0x12
 1438 05ce CF020000 		.4byte	.LASF85
 1439 05d2 13       		.byte	0x13
 1440 05d3 12       		.uleb128 0x12
 1441 05d4 0A000000 		.4byte	.LASF86
 1442 05d8 14       		.byte	0x14
 1443 05d9 12       		.uleb128 0x12
 1444 05da 5F000000 		.4byte	.LASF87
 1445 05de 15       		.byte	0x15
 1446 05df 12       		.uleb128 0x12
 1447 05e0 DA060000 		.4byte	.LASF88
 1448 05e4 16       		.byte	0x16
 1449 05e5 12       		.uleb128 0x12
 1450 05e6 4F010000 		.4byte	.LASF89
 1451 05ea 17       		.byte	0x17
 1452 05eb 12       		.uleb128 0x12
 1453 05ec A7050000 		.4byte	.LASF90
 1454 05f0 18       		.byte	0x18
 1455 05f1 12       		.uleb128 0x12
 1456 05f2 0D060000 		.4byte	.LASF91
 1457 05f6 19       		.byte	0x19
 1458 05f7 12       		.uleb128 0x12
 1459 05f8 2C000000 		.4byte	.LASF92
 1460 05fc 1A       		.byte	0x1a
 1461 05fd 12       		.uleb128 0x12
 1462 05fe 9B030000 		.4byte	.LASF93
 1463 0602 1B       		.byte	0x1b
 1464 0603 12       		.uleb128 0x12
 1465 0604 0F040000 		.4byte	.LASF94
 1466 0608 1C       		.byte	0x1c
 1467 0609 12       		.uleb128 0x12
 1468 060a D0060000 		.4byte	.LASF95
 1469 060e 1D       		.byte	0x1d
 1470 060f 12       		.uleb128 0x12
 1471 0610 A4000000 		.4byte	.LASF96
 1472 0614 1E       		.byte	0x1e
 1473 0615 12       		.uleb128 0x12
 1474 0616 65050000 		.4byte	.LASF97
 1475 061a 1F       		.byte	0x1f
 1476 061b 12       		.uleb128 0x12
 1477 061c AB060000 		.4byte	.LASF98
ARM GAS  /tmp/ccRi8Uxx.s 			page 34


 1478 0620 20       		.byte	0x20
 1479 0621 12       		.uleb128 0x12
 1480 0622 DF030000 		.4byte	.LASF99
 1481 0626 21       		.byte	0x21
 1482 0627 12       		.uleb128 0x12
 1483 0628 97000000 		.4byte	.LASF100
 1484 062c 22       		.byte	0x22
 1485 062d 12       		.uleb128 0x12
 1486 062e 72030000 		.4byte	.LASF101
 1487 0632 23       		.byte	0x23
 1488 0633 12       		.uleb128 0x12
 1489 0634 2E040000 		.4byte	.LASF102
 1490 0638 24       		.byte	0x24
 1491 0639 12       		.uleb128 0x12
 1492 063a 84040000 		.4byte	.LASF103
 1493 063e 25       		.byte	0x25
 1494 063f 12       		.uleb128 0x12
 1495 0640 CB040000 		.4byte	.LASF104
 1496 0644 26       		.byte	0x26
 1497 0645 12       		.uleb128 0x12
 1498 0646 31060000 		.4byte	.LASF105
 1499 064a 27       		.byte	0x27
 1500 064b 12       		.uleb128 0x12
 1501 064c E3020000 		.4byte	.LASF106
 1502 0650 28       		.byte	0x28
 1503 0651 12       		.uleb128 0x12
 1504 0652 BA050000 		.4byte	.LASF107
 1505 0656 29       		.byte	0x29
 1506 0657 12       		.uleb128 0x12
 1507 0658 20020000 		.4byte	.LASF108
 1508 065c 2A       		.byte	0x2a
 1509 065d 12       		.uleb128 0x12
 1510 065e 19040000 		.4byte	.LASF109
 1511 0662 32       		.byte	0x32
 1512 0663 12       		.uleb128 0x12
 1513 0664 C1060000 		.4byte	.LASF110
 1514 0668 33       		.byte	0x33
 1515 0669 12       		.uleb128 0x12
 1516 066a 95010000 		.4byte	.LASF111
 1517 066e 34       		.byte	0x34
 1518 066f 12       		.uleb128 0x12
 1519 0670 FB040000 		.4byte	.LASF112
 1520 0674 35       		.byte	0x35
 1521 0675 12       		.uleb128 0x12
 1522 0676 D7040000 		.4byte	.LASF113
 1523 067a 36       		.byte	0x36
 1524 067b 12       		.uleb128 0x12
 1525 067c C8050000 		.4byte	.LASF114
 1526 0680 37       		.byte	0x37
 1527 0681 12       		.uleb128 0x12
 1528 0682 84000000 		.4byte	.LASF115
 1529 0686 38       		.byte	0x38
 1530 0687 12       		.uleb128 0x12
 1531 0688 EC030000 		.4byte	.LASF116
 1532 068c 39       		.byte	0x39
 1533 068d 12       		.uleb128 0x12
 1534 068e AA040000 		.4byte	.LASF117
ARM GAS  /tmp/ccRi8Uxx.s 			page 35


 1535 0692 3A       		.byte	0x3a
 1536 0693 12       		.uleb128 0x12
 1537 0694 8F050000 		.4byte	.LASF118
 1538 0698 3B       		.byte	0x3b
 1539 0699 12       		.uleb128 0x12
 1540 069a 0C010000 		.4byte	.LASF119
 1541 069e 3C       		.byte	0x3c
 1542 069f 12       		.uleb128 0x12
 1543 06a0 CA030000 		.4byte	.LASF120
 1544 06a4 3D       		.byte	0x3d
 1545 06a5 12       		.uleb128 0x12
 1546 06a6 7A060000 		.4byte	.LASF121
 1547 06aa 3E       		.byte	0x3e
 1548 06ab 12       		.uleb128 0x12
 1549 06ac 49040000 		.4byte	.LASF122
 1550 06b0 3F       		.byte	0x3f
 1551 06b1 12       		.uleb128 0x12
 1552 06b2 0F050000 		.4byte	.LASF123
 1553 06b6 43       		.byte	0x43
 1554 06b7 00       		.byte	0
 1555 06b8 13       		.uleb128 0x13
 1556 06b9 45010000 		.4byte	.LASF124
 1557 06bd 02       		.byte	0x2
 1558 06be 0001     		.2byte	0x100
 1559 06c0 03       		.byte	0x3
 1560 06c1 19050000 		.4byte	0x519
 1561 06c5 14       		.uleb128 0x14
 1562 06c6 01       		.byte	0x1
 1563 06c7 CB060000 		.4byte	.LASF142
 1564 06cb 01       		.byte	0x1
 1565 06cc 19       		.byte	0x19
 1566 06cd 05       		.byte	0x5
 1567 06ce 01       		.byte	0x1
 1568 06cf 29000000 		.4byte	0x29
 1569 06d3 00000000 		.4byte	.LFB12
 1570 06d7 6C000000 		.4byte	.LFE12
 1571 06db 00000000 		.4byte	.LLST7
 1572 06df 01       		.byte	0x1
 1573 06e0 5F070000 		.4byte	0x75f
 1574 06e4 15       		.uleb128 0x15
 1575 06e5 08000000 		.4byte	.LVL9
 1576 06e9 50080000 		.4byte	0x850
 1577 06ed 16       		.uleb128 0x16
 1578 06ee 22000000 		.4byte	.LVL10
 1579 06f2 67080000 		.4byte	0x867
 1580 06f6 01070000 		.4byte	0x701
 1581 06fa 17       		.uleb128 0x17
 1582 06fb 01       		.byte	0x1
 1583 06fc 50       		.byte	0x50
 1584 06fd 02       		.byte	0x2
 1585 06fe 70       		.byte	0x70
 1586 06ff 00       		.sleb128 0
 1587 0700 00       		.byte	0
 1588 0701 16       		.uleb128 0x16
 1589 0702 2E000000 		.4byte	.LVL11
 1590 0706 67080000 		.4byte	0x867
 1591 070a 15070000 		.4byte	0x715
ARM GAS  /tmp/ccRi8Uxx.s 			page 36


 1592 070e 17       		.uleb128 0x17
 1593 070f 01       		.byte	0x1
 1594 0710 50       		.byte	0x50
 1595 0711 02       		.byte	0x2
 1596 0712 70       		.byte	0x70
 1597 0713 00       		.sleb128 0
 1598 0714 00       		.byte	0
 1599 0715 15       		.uleb128 0x15
 1600 0716 32000000 		.4byte	.LVL12
 1601 071a 91080000 		.4byte	0x891
 1602 071e 16       		.uleb128 0x16
 1603 071f 54000000 		.4byte	.LVL13
 1604 0723 A8080000 		.4byte	0x8a8
 1605 0727 55070000 		.4byte	0x755
 1606 072b 17       		.uleb128 0x17
 1607 072c 01       		.byte	0x1
 1608 072d 50       		.byte	0x50
 1609 072e 05       		.byte	0x5
 1610 072f 03       		.byte	0x3
 1611 0730 00000000 		.4byte	task1
 1612 0734 17       		.uleb128 0x17
 1613 0735 01       		.byte	0x1
 1614 0736 51       		.byte	0x51
 1615 0737 05       		.byte	0x5
 1616 0738 03       		.byte	0x3
 1617 0739 00000000 		.4byte	.LC0
 1618 073d 17       		.uleb128 0x17
 1619 073e 01       		.byte	0x1
 1620 073f 52       		.byte	0x52
 1621 0740 02       		.byte	0x2
 1622 0741 08       		.byte	0x8
 1623 0742 64       		.byte	0x64
 1624 0743 17       		.uleb128 0x17
 1625 0744 01       		.byte	0x1
 1626 0745 53       		.byte	0x53
 1627 0746 01       		.byte	0x1
 1628 0747 30       		.byte	0x30
 1629 0748 17       		.uleb128 0x17
 1630 0749 02       		.byte	0x2
 1631 074a 7D       		.byte	0x7d
 1632 074b 00       		.sleb128 0
 1633 074c 01       		.byte	0x1
 1634 074d 34       		.byte	0x34
 1635 074e 17       		.uleb128 0x17
 1636 074f 02       		.byte	0x2
 1637 0750 7D       		.byte	0x7d
 1638 0751 04       		.sleb128 4
 1639 0752 01       		.byte	0x1
 1640 0753 30       		.byte	0x30
 1641 0754 00       		.byte	0
 1642 0755 15       		.uleb128 0x15
 1643 0756 58000000 		.4byte	.LVL14
 1644 075a B7080000 		.4byte	0x8b7
 1645 075e 00       		.byte	0
 1646 075f 18       		.uleb128 0x18
 1647 0760 86020000 		.4byte	.LASF143
 1648 0764 01       		.byte	0x1
ARM GAS  /tmp/ccRi8Uxx.s 			page 37


 1649 0765 11       		.byte	0x11
 1650 0766 0D       		.byte	0xd
 1651 0767 01       		.byte	0x1
 1652 0768 00000000 		.4byte	.LFB11
 1653 076c 1C000000 		.4byte	.LFE11
 1654 0770 20000000 		.4byte	.LLST0
 1655 0774 01       		.byte	0x1
 1656 0775 9F070000 		.4byte	0x79f
 1657 0779 19       		.uleb128 0x19
 1658 077a 2C060000 		.4byte	.LASF125
 1659 077e 01       		.byte	0x1
 1660 077f 11       		.byte	0x11
 1661 0780 19       		.byte	0x19
 1662 0781 93000000 		.4byte	0x93
 1663 0785 44000000 		.4byte	.LLST1
 1664 0789 40000000 		.4byte	.LVUS1
 1665 078d 1A       		.uleb128 0x1a
 1666 078e 14000000 		.4byte	.LVL2
 1667 0792 C6080000 		.4byte	0x8c6
 1668 0796 17       		.uleb128 0x17
 1669 0797 01       		.byte	0x1
 1670 0798 50       		.byte	0x50
 1671 0799 03       		.byte	0x3
 1672 079a 0A       		.byte	0xa
 1673 079b F401     		.2byte	0x1f4
 1674 079d 00       		.byte	0
 1675 079e 00       		.byte	0
 1676 079f 1B       		.uleb128 0x1b
 1677 07a0 01       		.byte	0x1
 1678 07a1 92020000 		.4byte	.LASF128
 1679 07a5 01       		.byte	0x1
 1680 07a6 0B       		.byte	0xb
 1681 07a7 06       		.byte	0x6
 1682 07a8 01       		.byte	0x1
 1683 07a9 18010000 		.4byte	.LFB10
 1684 07ad 1A010000 		.4byte	.LFE10
 1685 07b1 02       		.byte	0x2
 1686 07b2 7D       		.byte	0x7d
 1687 07b3 00       		.sleb128 0
 1688 07b4 01       		.byte	0x1
 1689 07b5 E2070000 		.4byte	0x7e2
 1690 07b9 19       		.uleb128 0x19
 1691 07ba 31020000 		.4byte	.LASF126
 1692 07be 01       		.byte	0x1
 1693 07bf 0B       		.byte	0xb
 1694 07c0 34       		.byte	0x34
 1695 07c1 E2070000 		.4byte	0x7e2
 1696 07c5 67000000 		.4byte	.LLST5
 1697 07c9 65000000 		.4byte	.LVUS5
 1698 07cd 19       		.uleb128 0x19
 1699 07ce 61060000 		.4byte	.LASF127
 1700 07d2 01       		.byte	0x1
 1701 07d3 0C       		.byte	0xc
 1702 07d4 15       		.byte	0x15
 1703 07d5 E8070000 		.4byte	0x7e8
 1704 07d9 7C000000 		.4byte	.LLST6
 1705 07dd 7A000000 		.4byte	.LVUS6
ARM GAS  /tmp/ccRi8Uxx.s 			page 38


 1706 07e1 00       		.byte	0
 1707 07e2 07       		.uleb128 0x7
 1708 07e3 04       		.byte	0x4
 1709 07e4 A1000000 		.4byte	0xa1
 1710 07e8 07       		.uleb128 0x7
 1711 07e9 04       		.byte	0x4
 1712 07ea 4A000000 		.4byte	0x4a
 1713 07ee 1C       		.uleb128 0x1c
 1714 07ef 01       		.byte	0x1
 1715 07f0 2E050000 		.4byte	.LASF129
 1716 07f4 02       		.byte	0x2
 1717 07f5 4901     		.2byte	0x149
 1718 07f7 06       		.byte	0x6
 1719 07f8 01       		.byte	0x1
 1720 07f9 FC000000 		.4byte	.LFB9
 1721 07fd 18010000 		.4byte	.LFE9
 1722 0801 02       		.byte	0x2
 1723 0802 7D       		.byte	0x7d
 1724 0803 00       		.sleb128 0
 1725 0804 01       		.byte	0x1
 1726 0805 1F080000 		.4byte	0x81f
 1727 0809 1D       		.uleb128 0x1d
 1728 080a A8030000 		.4byte	.LASF130
 1729 080e 02       		.byte	0x2
 1730 080f 4901     		.2byte	0x149
 1731 0811 22       		.byte	0x22
 1732 0812 B8060000 		.4byte	0x6b8
 1733 0816 93000000 		.4byte	.LLST4
 1734 081a 8F000000 		.4byte	.LVUS4
 1735 081e 00       		.byte	0
 1736 081f 1C       		.uleb128 0x1c
 1737 0820 01       		.byte	0x1
 1738 0821 38040000 		.4byte	.LASF131
 1739 0825 02       		.byte	0x2
 1740 0826 4101     		.2byte	0x141
 1741 0828 06       		.byte	0x6
 1742 0829 01       		.byte	0x1
 1743 082a E4000000 		.4byte	.LFB8
 1744 082e FC000000 		.4byte	.LFE8
 1745 0832 02       		.byte	0x2
 1746 0833 7D       		.byte	0x7d
 1747 0834 00       		.sleb128 0
 1748 0835 01       		.byte	0x1
 1749 0836 50080000 		.4byte	0x850
 1750 083a 1D       		.uleb128 0x1d
 1751 083b A8030000 		.4byte	.LASF130
 1752 083f 02       		.byte	0x2
 1753 0840 4101     		.2byte	0x141
 1754 0842 21       		.byte	0x21
 1755 0843 B8060000 		.4byte	0x6b8
 1756 0847 B8000000 		.4byte	.LLST3
 1757 084b B4000000 		.4byte	.LVUS3
 1758 084f 00       		.byte	0
 1759 0850 1E       		.uleb128 0x1e
 1760 0851 01       		.byte	0x1
 1761 0852 7C030000 		.4byte	.LASF133
 1762 0856 02       		.byte	0x2
ARM GAS  /tmp/ccRi8Uxx.s 			page 39


 1763 0857 3501     		.2byte	0x135
 1764 0859 06       		.byte	0x6
 1765 085a 01       		.byte	0x1
 1766 085b BC000000 		.4byte	.LFB7
 1767 085f E4000000 		.4byte	.LFE7
 1768 0863 02       		.byte	0x2
 1769 0864 7D       		.byte	0x7d
 1770 0865 00       		.sleb128 0
 1771 0866 01       		.byte	0x1
 1772 0867 1F       		.uleb128 0x1f
 1773 0868 01       		.byte	0x1
 1774 0869 8C020000 		.4byte	.LASF132
 1775 086d 02       		.byte	0x2
 1776 086e 2E01     		.2byte	0x12e
 1777 0870 06       		.byte	0x6
 1778 0871 01       		.byte	0x1
 1779 0872 90000000 		.4byte	.LFB6
 1780 0876 BC000000 		.4byte	.LFE6
 1781 087a D9000000 		.4byte	.LLST2
 1782 087e 01       		.byte	0x1
 1783 087f 91080000 		.4byte	0x891
 1784 0883 20       		.uleb128 0x20
 1785 0884 5400     		.ascii	"T\000"
 1786 0886 02       		.byte	0x2
 1787 0887 2E01     		.2byte	0x12e
 1788 0889 17       		.byte	0x17
 1789 088a 37000000 		.4byte	0x37
 1790 088e 01       		.byte	0x1
 1791 088f 50       		.byte	0x50
 1792 0890 00       		.byte	0
 1793 0891 1E       		.uleb128 0x1e
 1794 0892 01       		.byte	0x1
 1795 0893 90040000 		.4byte	.LASF134
 1796 0897 02       		.byte	0x2
 1797 0898 0C01     		.2byte	0x10c
 1798 089a 06       		.byte	0x6
 1799 089b 01       		.byte	0x1
 1800 089c 1C000000 		.4byte	.LFB5
 1801 08a0 90000000 		.4byte	.LFE5
 1802 08a4 02       		.byte	0x2
 1803 08a5 7D       		.byte	0x7d
 1804 08a6 00       		.sleb128 0
 1805 08a7 01       		.byte	0x1
 1806 08a8 21       		.uleb128 0x21
 1807 08a9 01       		.byte	0x1
 1808 08aa 01       		.byte	0x1
 1809 08ab 3E000000 		.4byte	.LASF135
 1810 08af 3E000000 		.4byte	.LASF135
 1811 08b3 06       		.byte	0x6
 1812 08b4 4A01     		.2byte	0x14a
 1813 08b6 0D       		.byte	0xd
 1814 08b7 21       		.uleb128 0x21
 1815 08b8 01       		.byte	0x1
 1816 08b9 01       		.byte	0x1
 1817 08ba 01020000 		.4byte	.LASF136
 1818 08be 01020000 		.4byte	.LASF136
 1819 08c2 06       		.byte	0x6
ARM GAS  /tmp/ccRi8Uxx.s 			page 40


 1820 08c3 9704     		.2byte	0x497
 1821 08c5 06       		.byte	0x6
 1822 08c6 21       		.uleb128 0x21
 1823 08c7 01       		.byte	0x1
 1824 08c8 01       		.byte	0x1
 1825 08c9 01010000 		.4byte	.LASF137
 1826 08cd 01010000 		.4byte	.LASF137
 1827 08d1 06       		.byte	0x6
 1828 08d2 F602     		.2byte	0x2f6
 1829 08d4 06       		.byte	0x6
 1830 08d5 00       		.byte	0
 1831              		.section	.debug_abbrev,"",%progbits
 1832              	.Ldebug_abbrev0:
 1833 0000 01       		.uleb128 0x1
 1834 0001 11       		.uleb128 0x11
 1835 0002 01       		.byte	0x1
 1836 0003 25       		.uleb128 0x25
 1837 0004 0E       		.uleb128 0xe
 1838 0005 13       		.uleb128 0x13
 1839 0006 0B       		.uleb128 0xb
 1840 0007 03       		.uleb128 0x3
 1841 0008 0E       		.uleb128 0xe
 1842 0009 1B       		.uleb128 0x1b
 1843 000a 0E       		.uleb128 0xe
 1844 000b 55       		.uleb128 0x55
 1845 000c 06       		.uleb128 0x6
 1846 000d 11       		.uleb128 0x11
 1847 000e 01       		.uleb128 0x1
 1848 000f 52       		.uleb128 0x52
 1849 0010 01       		.uleb128 0x1
 1850 0011 10       		.uleb128 0x10
 1851 0012 06       		.uleb128 0x6
 1852 0013 00       		.byte	0
 1853 0014 00       		.byte	0
 1854 0015 02       		.uleb128 0x2
 1855 0016 24       		.uleb128 0x24
 1856 0017 00       		.byte	0
 1857 0018 0B       		.uleb128 0xb
 1858 0019 0B       		.uleb128 0xb
 1859 001a 3E       		.uleb128 0x3e
 1860 001b 0B       		.uleb128 0xb
 1861 001c 03       		.uleb128 0x3
 1862 001d 08       		.uleb128 0x8
 1863 001e 00       		.byte	0
 1864 001f 00       		.byte	0
 1865 0020 03       		.uleb128 0x3
 1866 0021 24       		.uleb128 0x24
 1867 0022 00       		.byte	0
 1868 0023 0B       		.uleb128 0xb
 1869 0024 0B       		.uleb128 0xb
 1870 0025 3E       		.uleb128 0x3e
 1871 0026 0B       		.uleb128 0xb
 1872 0027 03       		.uleb128 0x3
 1873 0028 0E       		.uleb128 0xe
 1874 0029 00       		.byte	0
 1875 002a 00       		.byte	0
 1876 002b 04       		.uleb128 0x4
ARM GAS  /tmp/ccRi8Uxx.s 			page 41


 1877 002c 35       		.uleb128 0x35
 1878 002d 00       		.byte	0
 1879 002e 49       		.uleb128 0x49
 1880 002f 13       		.uleb128 0x13
 1881 0030 00       		.byte	0
 1882 0031 00       		.byte	0
 1883 0032 05       		.uleb128 0x5
 1884 0033 16       		.uleb128 0x16
 1885 0034 00       		.byte	0
 1886 0035 03       		.uleb128 0x3
 1887 0036 0E       		.uleb128 0xe
 1888 0037 3A       		.uleb128 0x3a
 1889 0038 0B       		.uleb128 0xb
 1890 0039 3B       		.uleb128 0x3b
 1891 003a 0B       		.uleb128 0xb
 1892 003b 39       		.uleb128 0x39
 1893 003c 0B       		.uleb128 0xb
 1894 003d 49       		.uleb128 0x49
 1895 003e 13       		.uleb128 0x13
 1896 003f 00       		.byte	0
 1897 0040 00       		.byte	0
 1898 0041 06       		.uleb128 0x6
 1899 0042 0F       		.uleb128 0xf
 1900 0043 00       		.byte	0
 1901 0044 0B       		.uleb128 0xb
 1902 0045 0B       		.uleb128 0xb
 1903 0046 00       		.byte	0
 1904 0047 00       		.byte	0
 1905 0048 07       		.uleb128 0x7
 1906 0049 0F       		.uleb128 0xf
 1907 004a 00       		.byte	0
 1908 004b 0B       		.uleb128 0xb
 1909 004c 0B       		.uleb128 0xb
 1910 004d 49       		.uleb128 0x49
 1911 004e 13       		.uleb128 0x13
 1912 004f 00       		.byte	0
 1913 0050 00       		.byte	0
 1914 0051 08       		.uleb128 0x8
 1915 0052 13       		.uleb128 0x13
 1916 0053 00       		.byte	0
 1917 0054 03       		.uleb128 0x3
 1918 0055 0E       		.uleb128 0xe
 1919 0056 3C       		.uleb128 0x3c
 1920 0057 0C       		.uleb128 0xc
 1921 0058 00       		.byte	0
 1922 0059 00       		.byte	0
 1923 005a 09       		.uleb128 0x9
 1924 005b 13       		.uleb128 0x13
 1925 005c 01       		.byte	0x1
 1926 005d 0B       		.uleb128 0xb
 1927 005e 05       		.uleb128 0x5
 1928 005f 3A       		.uleb128 0x3a
 1929 0060 0B       		.uleb128 0xb
 1930 0061 3B       		.uleb128 0x3b
 1931 0062 0B       		.uleb128 0xb
 1932 0063 39       		.uleb128 0x39
 1933 0064 0B       		.uleb128 0xb
ARM GAS  /tmp/ccRi8Uxx.s 			page 42


 1934 0065 01       		.uleb128 0x1
 1935 0066 13       		.uleb128 0x13
 1936 0067 00       		.byte	0
 1937 0068 00       		.byte	0
 1938 0069 0A       		.uleb128 0xa
 1939 006a 0D       		.uleb128 0xd
 1940 006b 00       		.byte	0
 1941 006c 03       		.uleb128 0x3
 1942 006d 0E       		.uleb128 0xe
 1943 006e 3A       		.uleb128 0x3a
 1944 006f 0B       		.uleb128 0xb
 1945 0070 3B       		.uleb128 0x3b
 1946 0071 0B       		.uleb128 0xb
 1947 0072 39       		.uleb128 0x39
 1948 0073 0B       		.uleb128 0xb
 1949 0074 49       		.uleb128 0x49
 1950 0075 13       		.uleb128 0x13
 1951 0076 38       		.uleb128 0x38
 1952 0077 0A       		.uleb128 0xa
 1953 0078 00       		.byte	0
 1954 0079 00       		.byte	0
 1955 007a 0B       		.uleb128 0xb
 1956 007b 0D       		.uleb128 0xd
 1957 007c 00       		.byte	0
 1958 007d 03       		.uleb128 0x3
 1959 007e 08       		.uleb128 0x8
 1960 007f 3A       		.uleb128 0x3a
 1961 0080 0B       		.uleb128 0xb
 1962 0081 3B       		.uleb128 0x3b
 1963 0082 0B       		.uleb128 0xb
 1964 0083 39       		.uleb128 0x39
 1965 0084 0B       		.uleb128 0xb
 1966 0085 49       		.uleb128 0x49
 1967 0086 13       		.uleb128 0x13
 1968 0087 38       		.uleb128 0x38
 1969 0088 0A       		.uleb128 0xa
 1970 0089 00       		.byte	0
 1971 008a 00       		.byte	0
 1972 008b 0C       		.uleb128 0xc
 1973 008c 01       		.uleb128 0x1
 1974 008d 01       		.byte	0x1
 1975 008e 49       		.uleb128 0x49
 1976 008f 13       		.uleb128 0x13
 1977 0090 01       		.uleb128 0x1
 1978 0091 13       		.uleb128 0x13
 1979 0092 00       		.byte	0
 1980 0093 00       		.byte	0
 1981 0094 0D       		.uleb128 0xd
 1982 0095 21       		.uleb128 0x21
 1983 0096 00       		.byte	0
 1984 0097 49       		.uleb128 0x49
 1985 0098 13       		.uleb128 0x13
 1986 0099 2F       		.uleb128 0x2f
 1987 009a 0B       		.uleb128 0xb
 1988 009b 00       		.byte	0
 1989 009c 00       		.byte	0
 1990 009d 0E       		.uleb128 0xe
ARM GAS  /tmp/ccRi8Uxx.s 			page 43


 1991 009e 21       		.uleb128 0x21
 1992 009f 00       		.byte	0
 1993 00a0 49       		.uleb128 0x49
 1994 00a1 13       		.uleb128 0x13
 1995 00a2 2F       		.uleb128 0x2f
 1996 00a3 05       		.uleb128 0x5
 1997 00a4 00       		.byte	0
 1998 00a5 00       		.byte	0
 1999 00a6 0F       		.uleb128 0xf
 2000 00a7 13       		.uleb128 0x13
 2001 00a8 01       		.byte	0x1
 2002 00a9 0B       		.uleb128 0xb
 2003 00aa 0B       		.uleb128 0xb
 2004 00ab 3A       		.uleb128 0x3a
 2005 00ac 0B       		.uleb128 0xb
 2006 00ad 3B       		.uleb128 0x3b
 2007 00ae 0B       		.uleb128 0xb
 2008 00af 39       		.uleb128 0x39
 2009 00b0 0B       		.uleb128 0xb
 2010 00b1 01       		.uleb128 0x1
 2011 00b2 13       		.uleb128 0x13
 2012 00b3 00       		.byte	0
 2013 00b4 00       		.byte	0
 2014 00b5 10       		.uleb128 0x10
 2015 00b6 04       		.uleb128 0x4
 2016 00b7 01       		.byte	0x1
 2017 00b8 03       		.uleb128 0x3
 2018 00b9 0E       		.uleb128 0xe
 2019 00ba 3E       		.uleb128 0x3e
 2020 00bb 0B       		.uleb128 0xb
 2021 00bc 0B       		.uleb128 0xb
 2022 00bd 0B       		.uleb128 0xb
 2023 00be 49       		.uleb128 0x49
 2024 00bf 13       		.uleb128 0x13
 2025 00c0 3A       		.uleb128 0x3a
 2026 00c1 0B       		.uleb128 0xb
 2027 00c2 3B       		.uleb128 0x3b
 2028 00c3 0B       		.uleb128 0xb
 2029 00c4 39       		.uleb128 0x39
 2030 00c5 0B       		.uleb128 0xb
 2031 00c6 01       		.uleb128 0x1
 2032 00c7 13       		.uleb128 0x13
 2033 00c8 00       		.byte	0
 2034 00c9 00       		.byte	0
 2035 00ca 11       		.uleb128 0x11
 2036 00cb 28       		.uleb128 0x28
 2037 00cc 00       		.byte	0
 2038 00cd 03       		.uleb128 0x3
 2039 00ce 0E       		.uleb128 0xe
 2040 00cf 1C       		.uleb128 0x1c
 2041 00d0 0D       		.uleb128 0xd
 2042 00d1 00       		.byte	0
 2043 00d2 00       		.byte	0
 2044 00d3 12       		.uleb128 0x12
 2045 00d4 28       		.uleb128 0x28
 2046 00d5 00       		.byte	0
 2047 00d6 03       		.uleb128 0x3
ARM GAS  /tmp/ccRi8Uxx.s 			page 44


 2048 00d7 0E       		.uleb128 0xe
 2049 00d8 1C       		.uleb128 0x1c
 2050 00d9 0B       		.uleb128 0xb
 2051 00da 00       		.byte	0
 2052 00db 00       		.byte	0
 2053 00dc 13       		.uleb128 0x13
 2054 00dd 16       		.uleb128 0x16
 2055 00de 00       		.byte	0
 2056 00df 03       		.uleb128 0x3
 2057 00e0 0E       		.uleb128 0xe
 2058 00e1 3A       		.uleb128 0x3a
 2059 00e2 0B       		.uleb128 0xb
 2060 00e3 3B       		.uleb128 0x3b
 2061 00e4 05       		.uleb128 0x5
 2062 00e5 39       		.uleb128 0x39
 2063 00e6 0B       		.uleb128 0xb
 2064 00e7 49       		.uleb128 0x49
 2065 00e8 13       		.uleb128 0x13
 2066 00e9 00       		.byte	0
 2067 00ea 00       		.byte	0
 2068 00eb 14       		.uleb128 0x14
 2069 00ec 2E       		.uleb128 0x2e
 2070 00ed 01       		.byte	0x1
 2071 00ee 3F       		.uleb128 0x3f
 2072 00ef 0C       		.uleb128 0xc
 2073 00f0 03       		.uleb128 0x3
 2074 00f1 0E       		.uleb128 0xe
 2075 00f2 3A       		.uleb128 0x3a
 2076 00f3 0B       		.uleb128 0xb
 2077 00f4 3B       		.uleb128 0x3b
 2078 00f5 0B       		.uleb128 0xb
 2079 00f6 39       		.uleb128 0x39
 2080 00f7 0B       		.uleb128 0xb
 2081 00f8 27       		.uleb128 0x27
 2082 00f9 0C       		.uleb128 0xc
 2083 00fa 49       		.uleb128 0x49
 2084 00fb 13       		.uleb128 0x13
 2085 00fc 11       		.uleb128 0x11
 2086 00fd 01       		.uleb128 0x1
 2087 00fe 12       		.uleb128 0x12
 2088 00ff 01       		.uleb128 0x1
 2089 0100 40       		.uleb128 0x40
 2090 0101 06       		.uleb128 0x6
 2091 0102 9742     		.uleb128 0x2117
 2092 0104 0C       		.uleb128 0xc
 2093 0105 01       		.uleb128 0x1
 2094 0106 13       		.uleb128 0x13
 2095 0107 00       		.byte	0
 2096 0108 00       		.byte	0
 2097 0109 15       		.uleb128 0x15
 2098 010a 898201   		.uleb128 0x4109
 2099 010d 00       		.byte	0
 2100 010e 11       		.uleb128 0x11
 2101 010f 01       		.uleb128 0x1
 2102 0110 31       		.uleb128 0x31
 2103 0111 13       		.uleb128 0x13
 2104 0112 00       		.byte	0
ARM GAS  /tmp/ccRi8Uxx.s 			page 45


 2105 0113 00       		.byte	0
 2106 0114 16       		.uleb128 0x16
 2107 0115 898201   		.uleb128 0x4109
 2108 0118 01       		.byte	0x1
 2109 0119 11       		.uleb128 0x11
 2110 011a 01       		.uleb128 0x1
 2111 011b 31       		.uleb128 0x31
 2112 011c 13       		.uleb128 0x13
 2113 011d 01       		.uleb128 0x1
 2114 011e 13       		.uleb128 0x13
 2115 011f 00       		.byte	0
 2116 0120 00       		.byte	0
 2117 0121 17       		.uleb128 0x17
 2118 0122 8A8201   		.uleb128 0x410a
 2119 0125 00       		.byte	0
 2120 0126 02       		.uleb128 0x2
 2121 0127 0A       		.uleb128 0xa
 2122 0128 9142     		.uleb128 0x2111
 2123 012a 0A       		.uleb128 0xa
 2124 012b 00       		.byte	0
 2125 012c 00       		.byte	0
 2126 012d 18       		.uleb128 0x18
 2127 012e 2E       		.uleb128 0x2e
 2128 012f 01       		.byte	0x1
 2129 0130 03       		.uleb128 0x3
 2130 0131 0E       		.uleb128 0xe
 2131 0132 3A       		.uleb128 0x3a
 2132 0133 0B       		.uleb128 0xb
 2133 0134 3B       		.uleb128 0x3b
 2134 0135 0B       		.uleb128 0xb
 2135 0136 39       		.uleb128 0x39
 2136 0137 0B       		.uleb128 0xb
 2137 0138 27       		.uleb128 0x27
 2138 0139 0C       		.uleb128 0xc
 2139 013a 11       		.uleb128 0x11
 2140 013b 01       		.uleb128 0x1
 2141 013c 12       		.uleb128 0x12
 2142 013d 01       		.uleb128 0x1
 2143 013e 40       		.uleb128 0x40
 2144 013f 06       		.uleb128 0x6
 2145 0140 9742     		.uleb128 0x2117
 2146 0142 0C       		.uleb128 0xc
 2147 0143 01       		.uleb128 0x1
 2148 0144 13       		.uleb128 0x13
 2149 0145 00       		.byte	0
 2150 0146 00       		.byte	0
 2151 0147 19       		.uleb128 0x19
 2152 0148 05       		.uleb128 0x5
 2153 0149 00       		.byte	0
 2154 014a 03       		.uleb128 0x3
 2155 014b 0E       		.uleb128 0xe
 2156 014c 3A       		.uleb128 0x3a
 2157 014d 0B       		.uleb128 0xb
 2158 014e 3B       		.uleb128 0x3b
 2159 014f 0B       		.uleb128 0xb
 2160 0150 39       		.uleb128 0x39
 2161 0151 0B       		.uleb128 0xb
ARM GAS  /tmp/ccRi8Uxx.s 			page 46


 2162 0152 49       		.uleb128 0x49
 2163 0153 13       		.uleb128 0x13
 2164 0154 02       		.uleb128 0x2
 2165 0155 06       		.uleb128 0x6
 2166 0156 B742     		.uleb128 0x2137
 2167 0158 06       		.uleb128 0x6
 2168 0159 00       		.byte	0
 2169 015a 00       		.byte	0
 2170 015b 1A       		.uleb128 0x1a
 2171 015c 898201   		.uleb128 0x4109
 2172 015f 01       		.byte	0x1
 2173 0160 11       		.uleb128 0x11
 2174 0161 01       		.uleb128 0x1
 2175 0162 31       		.uleb128 0x31
 2176 0163 13       		.uleb128 0x13
 2177 0164 00       		.byte	0
 2178 0165 00       		.byte	0
 2179 0166 1B       		.uleb128 0x1b
 2180 0167 2E       		.uleb128 0x2e
 2181 0168 01       		.byte	0x1
 2182 0169 3F       		.uleb128 0x3f
 2183 016a 0C       		.uleb128 0xc
 2184 016b 03       		.uleb128 0x3
 2185 016c 0E       		.uleb128 0xe
 2186 016d 3A       		.uleb128 0x3a
 2187 016e 0B       		.uleb128 0xb
 2188 016f 3B       		.uleb128 0x3b
 2189 0170 0B       		.uleb128 0xb
 2190 0171 39       		.uleb128 0x39
 2191 0172 0B       		.uleb128 0xb
 2192 0173 27       		.uleb128 0x27
 2193 0174 0C       		.uleb128 0xc
 2194 0175 11       		.uleb128 0x11
 2195 0176 01       		.uleb128 0x1
 2196 0177 12       		.uleb128 0x12
 2197 0178 01       		.uleb128 0x1
 2198 0179 40       		.uleb128 0x40
 2199 017a 0A       		.uleb128 0xa
 2200 017b 9742     		.uleb128 0x2117
 2201 017d 0C       		.uleb128 0xc
 2202 017e 01       		.uleb128 0x1
 2203 017f 13       		.uleb128 0x13
 2204 0180 00       		.byte	0
 2205 0181 00       		.byte	0
 2206 0182 1C       		.uleb128 0x1c
 2207 0183 2E       		.uleb128 0x2e
 2208 0184 01       		.byte	0x1
 2209 0185 3F       		.uleb128 0x3f
 2210 0186 0C       		.uleb128 0xc
 2211 0187 03       		.uleb128 0x3
 2212 0188 0E       		.uleb128 0xe
 2213 0189 3A       		.uleb128 0x3a
 2214 018a 0B       		.uleb128 0xb
 2215 018b 3B       		.uleb128 0x3b
 2216 018c 05       		.uleb128 0x5
 2217 018d 39       		.uleb128 0x39
 2218 018e 0B       		.uleb128 0xb
ARM GAS  /tmp/ccRi8Uxx.s 			page 47


 2219 018f 27       		.uleb128 0x27
 2220 0190 0C       		.uleb128 0xc
 2221 0191 11       		.uleb128 0x11
 2222 0192 01       		.uleb128 0x1
 2223 0193 12       		.uleb128 0x12
 2224 0194 01       		.uleb128 0x1
 2225 0195 40       		.uleb128 0x40
 2226 0196 0A       		.uleb128 0xa
 2227 0197 9742     		.uleb128 0x2117
 2228 0199 0C       		.uleb128 0xc
 2229 019a 01       		.uleb128 0x1
 2230 019b 13       		.uleb128 0x13
 2231 019c 00       		.byte	0
 2232 019d 00       		.byte	0
 2233 019e 1D       		.uleb128 0x1d
 2234 019f 05       		.uleb128 0x5
 2235 01a0 00       		.byte	0
 2236 01a1 03       		.uleb128 0x3
 2237 01a2 0E       		.uleb128 0xe
 2238 01a3 3A       		.uleb128 0x3a
 2239 01a4 0B       		.uleb128 0xb
 2240 01a5 3B       		.uleb128 0x3b
 2241 01a6 05       		.uleb128 0x5
 2242 01a7 39       		.uleb128 0x39
 2243 01a8 0B       		.uleb128 0xb
 2244 01a9 49       		.uleb128 0x49
 2245 01aa 13       		.uleb128 0x13
 2246 01ab 02       		.uleb128 0x2
 2247 01ac 06       		.uleb128 0x6
 2248 01ad B742     		.uleb128 0x2137
 2249 01af 06       		.uleb128 0x6
 2250 01b0 00       		.byte	0
 2251 01b1 00       		.byte	0
 2252 01b2 1E       		.uleb128 0x1e
 2253 01b3 2E       		.uleb128 0x2e
 2254 01b4 00       		.byte	0
 2255 01b5 3F       		.uleb128 0x3f
 2256 01b6 0C       		.uleb128 0xc
 2257 01b7 03       		.uleb128 0x3
 2258 01b8 0E       		.uleb128 0xe
 2259 01b9 3A       		.uleb128 0x3a
 2260 01ba 0B       		.uleb128 0xb
 2261 01bb 3B       		.uleb128 0x3b
 2262 01bc 05       		.uleb128 0x5
 2263 01bd 39       		.uleb128 0x39
 2264 01be 0B       		.uleb128 0xb
 2265 01bf 27       		.uleb128 0x27
 2266 01c0 0C       		.uleb128 0xc
 2267 01c1 11       		.uleb128 0x11
 2268 01c2 01       		.uleb128 0x1
 2269 01c3 12       		.uleb128 0x12
 2270 01c4 01       		.uleb128 0x1
 2271 01c5 40       		.uleb128 0x40
 2272 01c6 0A       		.uleb128 0xa
 2273 01c7 9742     		.uleb128 0x2117
 2274 01c9 0C       		.uleb128 0xc
 2275 01ca 00       		.byte	0
ARM GAS  /tmp/ccRi8Uxx.s 			page 48


 2276 01cb 00       		.byte	0
 2277 01cc 1F       		.uleb128 0x1f
 2278 01cd 2E       		.uleb128 0x2e
 2279 01ce 01       		.byte	0x1
 2280 01cf 3F       		.uleb128 0x3f
 2281 01d0 0C       		.uleb128 0xc
 2282 01d1 03       		.uleb128 0x3
 2283 01d2 0E       		.uleb128 0xe
 2284 01d3 3A       		.uleb128 0x3a
 2285 01d4 0B       		.uleb128 0xb
 2286 01d5 3B       		.uleb128 0x3b
 2287 01d6 05       		.uleb128 0x5
 2288 01d7 39       		.uleb128 0x39
 2289 01d8 0B       		.uleb128 0xb
 2290 01d9 27       		.uleb128 0x27
 2291 01da 0C       		.uleb128 0xc
 2292 01db 11       		.uleb128 0x11
 2293 01dc 01       		.uleb128 0x1
 2294 01dd 12       		.uleb128 0x12
 2295 01de 01       		.uleb128 0x1
 2296 01df 40       		.uleb128 0x40
 2297 01e0 06       		.uleb128 0x6
 2298 01e1 9742     		.uleb128 0x2117
 2299 01e3 0C       		.uleb128 0xc
 2300 01e4 01       		.uleb128 0x1
 2301 01e5 13       		.uleb128 0x13
 2302 01e6 00       		.byte	0
 2303 01e7 00       		.byte	0
 2304 01e8 20       		.uleb128 0x20
 2305 01e9 05       		.uleb128 0x5
 2306 01ea 00       		.byte	0
 2307 01eb 03       		.uleb128 0x3
 2308 01ec 08       		.uleb128 0x8
 2309 01ed 3A       		.uleb128 0x3a
 2310 01ee 0B       		.uleb128 0xb
 2311 01ef 3B       		.uleb128 0x3b
 2312 01f0 05       		.uleb128 0x5
 2313 01f1 39       		.uleb128 0x39
 2314 01f2 0B       		.uleb128 0xb
 2315 01f3 49       		.uleb128 0x49
 2316 01f4 13       		.uleb128 0x13
 2317 01f5 02       		.uleb128 0x2
 2318 01f6 0A       		.uleb128 0xa
 2319 01f7 00       		.byte	0
 2320 01f8 00       		.byte	0
 2321 01f9 21       		.uleb128 0x21
 2322 01fa 2E       		.uleb128 0x2e
 2323 01fb 00       		.byte	0
 2324 01fc 3F       		.uleb128 0x3f
 2325 01fd 0C       		.uleb128 0xc
 2326 01fe 3C       		.uleb128 0x3c
 2327 01ff 0C       		.uleb128 0xc
 2328 0200 8740     		.uleb128 0x2007
 2329 0202 0E       		.uleb128 0xe
 2330 0203 03       		.uleb128 0x3
 2331 0204 0E       		.uleb128 0xe
 2332 0205 3A       		.uleb128 0x3a
ARM GAS  /tmp/ccRi8Uxx.s 			page 49


 2333 0206 0B       		.uleb128 0xb
 2334 0207 3B       		.uleb128 0x3b
 2335 0208 05       		.uleb128 0x5
 2336 0209 39       		.uleb128 0x39
 2337 020a 0B       		.uleb128 0xb
 2338 020b 00       		.byte	0
 2339 020c 00       		.byte	0
 2340 020d 00       		.byte	0
 2341              		.section	.debug_loc,"",%progbits
 2342              	.Ldebug_loc0:
 2343              	.LLST7:
 2344 0000 00000000 		.4byte	.LFB12
 2345 0004 04000000 		.4byte	.LCFI4
 2346 0008 0200     		.2byte	0x2
 2347 000a 7D       		.byte	0x7d
 2348 000b 00       		.sleb128 0
 2349 000c 04000000 		.4byte	.LCFI4
 2350 0010 6C000000 		.4byte	.LFE12
 2351 0014 0200     		.2byte	0x2
 2352 0016 7D       		.byte	0x7d
 2353 0017 10       		.sleb128 16
 2354 0018 00000000 		.4byte	0
 2355 001c 00000000 		.4byte	0
 2356              	.LLST0:
 2357 0020 00000000 		.4byte	.LFB11
 2358 0024 02000000 		.4byte	.LCFI0
 2359 0028 0200     		.2byte	0x2
 2360 002a 7D       		.byte	0x7d
 2361 002b 00       		.sleb128 0
 2362 002c 02000000 		.4byte	.LCFI0
 2363 0030 1C000000 		.4byte	.LFE11
 2364 0034 0200     		.2byte	0x2
 2365 0036 7D       		.byte	0x7d
 2366 0037 08       		.sleb128 8
 2367 0038 00000000 		.4byte	0
 2368 003c 00000000 		.4byte	0
 2369              	.LVUS1:
 2370 0040 00       		.uleb128 0
 2371 0041 00       		.uleb128 .LVU3
 2372 0042 00       		.uleb128 .LVU3
 2373 0043 00       		.uleb128 0
 2374              	.LLST1:
 2375 0044 00000000 		.4byte	.LVL0
 2376 0048 04000000 		.4byte	.LVL1
 2377 004c 0100     		.2byte	0x1
 2378 004e 50       		.byte	0x50
 2379 004f 04000000 		.4byte	.LVL1
 2380 0053 1C000000 		.4byte	.LFE11
 2381 0057 0400     		.2byte	0x4
 2382 0059 F3       		.byte	0xf3
 2383 005a 01       		.uleb128 0x1
 2384 005b 50       		.byte	0x50
 2385 005c 9F       		.byte	0x9f
 2386 005d 00000000 		.4byte	0
 2387 0061 00000000 		.4byte	0
 2388              	.LVUS5:
 2389 0065 01       		.uleb128 .LVU92
ARM GAS  /tmp/ccRi8Uxx.s 			page 50


 2390 0066 00       		.uleb128 0
 2391              	.LLST5:
 2392 0067 18010000 		.4byte	.LVL8
 2393 006b 1A010000 		.4byte	.LFE10
 2394 006f 0100     		.2byte	0x1
 2395 0071 50       		.byte	0x50
 2396 0072 00000000 		.4byte	0
 2397 0076 00000000 		.4byte	0
 2398              	.LVUS6:
 2399 007a 01       		.uleb128 .LVU92
 2400 007b 00       		.uleb128 0
 2401              	.LLST6:
 2402 007c 18010000 		.4byte	.LVL8
 2403 0080 1A010000 		.4byte	.LFE10
 2404 0084 0100     		.2byte	0x1
 2405 0086 51       		.byte	0x51
 2406 0087 00000000 		.4byte	0
 2407 008b 00000000 		.4byte	0
 2408              	.LVUS4:
 2409 008f 00       		.uleb128 0
 2410 0090 00       		.uleb128 .LVU88
 2411 0091 00       		.uleb128 .LVU88
 2412 0092 00       		.uleb128 0
 2413              	.LLST4:
 2414 0093 FC000000 		.4byte	.LVL6
 2415 0097 04010000 		.4byte	.LVL7
 2416 009b 0100     		.2byte	0x1
 2417 009d 50       		.byte	0x50
 2418 009e 04010000 		.4byte	.LVL7
 2419 00a2 18010000 		.4byte	.LFE9
 2420 00a6 0400     		.2byte	0x4
 2421 00a8 F3       		.byte	0xf3
 2422 00a9 01       		.uleb128 0x1
 2423 00aa 50       		.byte	0x50
 2424 00ab 9F       		.byte	0x9f
 2425 00ac 00000000 		.4byte	0
 2426 00b0 00000000 		.4byte	0
 2427              	.LVUS3:
 2428 00b4 00       		.uleb128 0
 2429 00b5 00       		.uleb128 .LVU80
 2430 00b6 00       		.uleb128 .LVU80
 2431 00b7 00       		.uleb128 0
 2432              	.LLST3:
 2433 00b8 E4000000 		.4byte	.LVL4
 2434 00bc EC000000 		.4byte	.LVL5
 2435 00c0 0100     		.2byte	0x1
 2436 00c2 50       		.byte	0x50
 2437 00c3 EC000000 		.4byte	.LVL5
 2438 00c7 FC000000 		.4byte	.LFE8
 2439 00cb 0400     		.2byte	0x4
 2440 00cd F3       		.byte	0xf3
 2441 00ce 01       		.uleb128 0x1
 2442 00cf 50       		.byte	0x50
 2443 00d0 9F       		.byte	0x9f
 2444 00d1 00000000 		.4byte	0
 2445 00d5 00000000 		.4byte	0
 2446              	.LLST2:
ARM GAS  /tmp/ccRi8Uxx.s 			page 51


 2447 00d9 90000000 		.4byte	.LFB6
 2448 00dd 92000000 		.4byte	.LCFI1
 2449 00e1 0200     		.2byte	0x2
 2450 00e3 7D       		.byte	0x7d
 2451 00e4 00       		.sleb128 0
 2452 00e5 92000000 		.4byte	.LCFI1
 2453 00e9 9E000000 		.4byte	.LCFI2
 2454 00ed 0200     		.2byte	0x2
 2455 00ef 7D       		.byte	0x7d
 2456 00f0 08       		.sleb128 8
 2457 00f1 9E000000 		.4byte	.LCFI2
 2458 00f5 A0000000 		.4byte	.LCFI3
 2459 00f9 0200     		.2byte	0x2
 2460 00fb 7D       		.byte	0x7d
 2461 00fc 00       		.sleb128 0
 2462 00fd A0000000 		.4byte	.LCFI3
 2463 0101 BC000000 		.4byte	.LFE6
 2464 0105 0200     		.2byte	0x2
 2465 0107 7D       		.byte	0x7d
 2466 0108 08       		.sleb128 8
 2467 0109 00000000 		.4byte	0
 2468 010d 00000000 		.4byte	0
 2469              		.section	.debug_aranges,"",%progbits
 2470 0000 24000000 		.4byte	0x24
 2471 0004 0200     		.2byte	0x2
 2472 0006 00000000 		.4byte	.Ldebug_info0
 2473 000a 04       		.byte	0x4
 2474 000b 00       		.byte	0
 2475 000c 0000     		.2byte	0
 2476 000e 0000     		.2byte	0
 2477 0010 00000000 		.4byte	.Ltext0
 2478 0014 1A010000 		.4byte	.Letext0-.Ltext0
 2479 0018 00000000 		.4byte	.LFB12
 2480 001c 6C000000 		.4byte	.LFE12-.LFB12
 2481 0020 00000000 		.4byte	0
 2482 0024 00000000 		.4byte	0
 2483              		.section	.debug_ranges,"",%progbits
 2484              	.Ldebug_ranges0:
 2485 0000 00000000 		.4byte	.Ltext0
 2486 0004 1A010000 		.4byte	.Letext0
 2487 0008 00000000 		.4byte	.LFB12
 2488 000c 6C000000 		.4byte	.LFE12
 2489 0010 00000000 		.4byte	0
 2490 0014 00000000 		.4byte	0
 2491              		.section	.debug_line,"",%progbits
 2492              	.Ldebug_line0:
 2493 0000 54030000 		.section	.debug_str,"MS",%progbits,1
 2493      0300DE00 
 2493      00000201 
 2493      FB0E0D00 
 2493      01010101 
 2494              	.LASF21:
 2495 0000 49435052 		.ascii	"ICPR\000"
 2495      00
 2496              	.LASF29:
 2497 0005 4C434B52 		.ascii	"LCKR\000"
 2497      00
ARM GAS  /tmp/ccRi8Uxx.s 			page 52


 2498              	.LASF86:
 2499 000a 43414E31 		.ascii	"CAN1_RX0_IRQn\000"
 2499      5F525830 
 2499      5F495251 
 2499      6E00
 2500              	.LASF139:
 2501 0018 2E2E2F75 		.ascii	"../user/main.c\000"
 2501      7365722F 
 2501      6D61696E 
 2501      2E6300
 2502              	.LASF32:
 2503 0027 44494552 		.ascii	"DIER\000"
 2503      00
 2504              	.LASF92:
 2505 002c 54494D31 		.ascii	"TIM1_TRG_COM_IRQn\000"
 2505      5F545247 
 2505      5F434F4D 
 2505      5F495251 
 2505      6E00
 2506              	.LASF135:
 2507 003e 78546173 		.ascii	"xTaskCreate\000"
 2507      6B437265 
 2507      61746500 
 2508              	.LASF67:
 2509 004a 5056445F 		.ascii	"PVD_IRQn\000"
 2509      4952516E 
 2509      00
 2510              	.LASF42:
 2511 0053 54494D5F 		.ascii	"TIM_TypeDef\000"
 2511      54797065 
 2511      44656600 
 2512              	.LASF87:
 2513 005f 43414E31 		.ascii	"CAN1_RX1_IRQn\000"
 2513      5F525831 
 2513      5F495251 
 2513      6E00
 2514              	.LASF9:
 2515 006d 6C6F6E67 		.ascii	"long long unsigned int\000"
 2515      206C6F6E 
 2515      6720756E 
 2515      7369676E 
 2515      65642069 
 2516              	.LASF115:
 2517 0084 444D4132 		.ascii	"DMA2_Channel1_IRQn\000"
 2517      5F436861 
 2517      6E6E656C 
 2517      315F4952 
 2517      516E00
 2518              	.LASF100:
 2519 0097 49324332 		.ascii	"I2C2_ER_IRQn\000"
 2519      5F45525F 
 2519      4952516E 
 2519      00
 2520              	.LASF96:
 2521 00a4 54494D34 		.ascii	"TIM4_IRQn\000"
 2521      5F495251 
 2521      6E00
ARM GAS  /tmp/ccRi8Uxx.s 			page 53


 2522              	.LASF19:
 2523 00ae 49535052 		.ascii	"ISPR\000"
 2523      00
 2524              	.LASF40:
 2525 00b3 42445452 		.ascii	"BDTR\000"
 2525      00
 2526              	.LASF33:
 2527 00b8 43434D52 		.ascii	"CCMR1\000"
 2527      3100
 2528              	.LASF34:
 2529 00be 43434D52 		.ascii	"CCMR2\000"
 2529      3200
 2530              	.LASF1:
 2531 00c4 6C6F6E67 		.ascii	"long long int\000"
 2531      206C6F6E 
 2531      6720696E 
 2531      7400
 2532              	.LASF3:
 2533 00d2 7369676E 		.ascii	"signed char\000"
 2533      65642063 
 2533      68617200 
 2534              	.LASF27:
 2535 00de 4E564943 		.ascii	"NVIC_type\000"
 2535      5F747970 
 2535      6500
 2536              	.LASF72:
 2537 00e8 45585449 		.ascii	"EXTI0_IRQn\000"
 2537      305F4952 
 2537      516E00
 2538              	.LASF57:
 2539 00f3 464C4153 		.ascii	"FLASH_TypeDef\000"
 2539      485F5479 
 2539      70654465 
 2539      6600
 2540              	.LASF137:
 2541 0101 76546173 		.ascii	"vTaskDelay\000"
 2541      6B44656C 
 2541      617900
 2542              	.LASF119:
 2543 010c 444D4132 		.ascii	"DMA2_Channel5_IRQn\000"
 2543      5F436861 
 2543      6E6E656C 
 2543      355F4952 
 2543      516E00
 2544              	.LASF7:
 2545 011f 6C6F6E67 		.ascii	"long int\000"
 2545      20696E74 
 2545      00
 2546              	.LASF141:
 2547 0128 74736B54 		.ascii	"tskTaskControlBlock\000"
 2547      61736B43 
 2547      6F6E7472 
 2547      6F6C426C 
 2547      6F636B00 
 2548              	.LASF44:
 2549 013c 41504232 		.ascii	"APB2RSTR\000"
 2549      52535452 
ARM GAS  /tmp/ccRi8Uxx.s 			page 54


 2549      00
 2550              	.LASF124:
 2551 0145 4952516E 		.ascii	"IRQn_type\000"
 2551      5F747970 
 2551      6500
 2552              	.LASF89:
 2553 014f 45585449 		.ascii	"EXTI9_5_IRQn\000"
 2553      395F355F 
 2553      4952516E 
 2553      00
 2554              	.LASF13:
 2555 015c 5461736B 		.ascii	"TaskHandle_t\000"
 2555      48616E64 
 2555      6C655F74 
 2555      00
 2556              	.LASF35:
 2557 0169 43434552 		.ascii	"CCER\000"
 2557      00
 2558              	.LASF54:
 2559 016e 4F50544B 		.ascii	"OPTKEYR\000"
 2559      45595200 
 2560              	.LASF81:
 2561 0176 444D4131 		.ascii	"DMA1_Channel5_IRQn\000"
 2561      5F436861 
 2561      6E6E656C 
 2561      355F4952 
 2561      516E00
 2562              	.LASF84:
 2563 0189 41444331 		.ascii	"ADC1_2_IRQn\000"
 2563      5F325F49 
 2563      52516E00 
 2564              	.LASF111:
 2565 0195 55415254 		.ascii	"UART4_IRQn\000"
 2565      345F4952 
 2565      516E00
 2566              	.LASF80:
 2567 01a0 444D4131 		.ascii	"DMA1_Channel4_IRQn\000"
 2567      5F436861 
 2567      6E6E656C 
 2567      345F4952 
 2567      516E00
 2568              	.LASF10:
 2569 01b3 5F5F7569 		.ascii	"__uint32_t\000"
 2569      6E743332 
 2569      5F7400
 2570              	.LASF140:
 2571 01be 2F686F6D 		.ascii	"/home/junior/Codigos/6-Stm32_GCC_FreeRTOS10.2.1/use"
 2571      652F6A75 
 2571      6E696F72 
 2571      2F436F64 
 2571      69676F73 
 2572 01f1 7200     		.ascii	"r\000"
 2573              	.LASF60:
 2574 01f3 42757346 		.ascii	"BusFault_IRQn\000"
 2574      61756C74 
 2574      5F495251 
 2574      6E00
ARM GAS  /tmp/ccRi8Uxx.s 			page 55


 2575              	.LASF136:
 2576 0201 76546173 		.ascii	"vTaskStartScheduler\000"
 2576      6B537461 
 2576      72745363 
 2576      68656475 
 2576      6C657200 
 2577              	.LASF74:
 2578 0215 45585449 		.ascii	"EXTI2_IRQn\000"
 2578      325F4952 
 2578      516E00
 2579              	.LASF108:
 2580 0220 4F54475F 		.ascii	"OTG_FS_WKUP_IRQn\000"
 2580      46535F57 
 2580      4B55505F 
 2580      4952516E 
 2580      00
 2581              	.LASF126:
 2582 0231 70785461 		.ascii	"pxTask\000"
 2582      736B00
 2583              	.LASF0:
 2584 0238 756E7369 		.ascii	"unsigned int\000"
 2584      676E6564 
 2584      20696E74 
 2584      00
 2585              	.LASF59:
 2586 0245 4D656D6F 		.ascii	"MemoryManagement_IRQn\000"
 2586      72794D61 
 2586      6E616765 
 2586      6D656E74 
 2586      5F495251 
 2587              	.LASF8:
 2588 025b 6C6F6E67 		.ascii	"long unsigned int\000"
 2588      20756E73 
 2588      69676E65 
 2588      6420696E 
 2588      7400
 2589              	.LASF30:
 2590 026d 4750494F 		.ascii	"GPIO_TypeDef\000"
 2590      5F547970 
 2590      65446566 
 2590      00
 2591              	.LASF52:
 2592 027a 5243435F 		.ascii	"RCC_TypeDef\000"
 2592      54797065 
 2592      44656600 
 2593              	.LASF143:
 2594 0286 7461736B 		.ascii	"task1\000"
 2594      3100
 2595              	.LASF132:
 2596 028c 44656C61 		.ascii	"Delay\000"
 2596      7900
 2597              	.LASF128:
 2598 0292 76417070 		.ascii	"vApplicationStackOverflowHook\000"
 2598      6C696361 
 2598      74696F6E 
 2598      53746163 
 2598      6B4F7665 
ARM GAS  /tmp/ccRi8Uxx.s 			page 56


 2599              	.LASF62:
 2600 02b0 53564361 		.ascii	"SVCall_IRQn\000"
 2600      6C6C5F49 
 2600      52516E00 
 2601              	.LASF6:
 2602 02bc 73686F72 		.ascii	"short unsigned int\000"
 2602      7420756E 
 2602      7369676E 
 2602      65642069 
 2602      6E7400
 2603              	.LASF85:
 2604 02cf 43414E31 		.ascii	"CAN1_TX_IRQn\000"
 2604      5F54585F 
 2604      4952516E 
 2604      00
 2605              	.LASF46:
 2606 02dc 41484245 		.ascii	"AHBENR\000"
 2606      4E5200
 2607              	.LASF106:
 2608 02e3 45585449 		.ascii	"EXTI15_10_IRQn\000"
 2608      31355F31 
 2608      305F4952 
 2608      516E00
 2609              	.LASF138:
 2610 02f2 474E5520 		.ascii	"GNU C17 10.3.1 20210824 (release) -mcpu=cortex-m3 -"
 2610      43313720 
 2610      31302E33 
 2610      2E312032 
 2610      30323130 
 2611 0325 6D746875 		.ascii	"mthumb -mfloat-abi=soft -march=armv7-m -g -gdwarf-2"
 2611      6D62202D 
 2611      6D666C6F 
 2611      61742D61 
 2611      62693D73 
 2612 0358 202D4F73 		.ascii	" -Os -fomit-frame-pointer\000"
 2612      202D666F 
 2612      6D69742D 
 2612      6672616D 
 2612      652D706F 
 2613              	.LASF101:
 2614 0372 53504931 		.ascii	"SPI1_IRQn\000"
 2614      5F495251 
 2614      6E00
 2615              	.LASF133:
 2616 037c 656E6162 		.ascii	"enable_TIM3_delay\000"
 2616      6C655F54 
 2616      494D335F 
 2616      64656C61 
 2616      7900
 2617              	.LASF65:
 2618 038e 53797354 		.ascii	"SysTick_IRQn\000"
 2618      69636B5F 
 2618      4952516E 
 2618      00
 2619              	.LASF93:
 2620 039b 54494D31 		.ascii	"TIM1_CC_IRQn\000"
 2620      5F43435F 
ARM GAS  /tmp/ccRi8Uxx.s 			page 57


 2620      4952516E 
 2620      00
 2621              	.LASF130:
 2622 03a8 4952516E 		.ascii	"IRQn\000"
 2622      00
 2623              	.LASF66:
 2624 03ad 57574447 		.ascii	"WWDG_IRQn\000"
 2624      5F495251 
 2624      6E00
 2625              	.LASF78:
 2626 03b7 444D4131 		.ascii	"DMA1_Channel2_IRQn\000"
 2626      5F436861 
 2626      6E6E656C 
 2626      325F4952 
 2626      516E00
 2627              	.LASF120:
 2628 03ca 4554485F 		.ascii	"ETH_IRQn\000"
 2628      4952516E 
 2628      00
 2629              	.LASF2:
 2630 03d3 6C6F6E67 		.ascii	"long double\000"
 2630      20646F75 
 2630      626C6500 
 2631              	.LASF99:
 2632 03df 49324332 		.ascii	"I2C2_EV_IRQn\000"
 2632      5F45565F 
 2632      4952516E 
 2632      00
 2633              	.LASF116:
 2634 03ec 444D4132 		.ascii	"DMA2_Channel2_IRQn\000"
 2634      5F436861 
 2634      6E6E656C 
 2634      325F4952 
 2634      516E00
 2635              	.LASF23:
 2636 03ff 49414252 		.ascii	"IABR\000"
 2636      00
 2637              	.LASF12:
 2638 0404 5469636B 		.ascii	"TickType_t\000"
 2638      54797065 
 2638      5F7400
 2639              	.LASF94:
 2640 040f 54494D32 		.ascii	"TIM2_IRQn\000"
 2640      5F495251 
 2640      6E00
 2641              	.LASF109:
 2642 0419 54494D35 		.ascii	"TIM5_IRQn\000"
 2642      5F495251 
 2642      6E00
 2643              	.LASF75:
 2644 0423 45585449 		.ascii	"EXTI3_IRQn\000"
 2644      335F4952 
 2644      516E00
 2645              	.LASF102:
 2646 042e 53504932 		.ascii	"SPI2_IRQn\000"
 2646      5F495251 
 2646      6E00
ARM GAS  /tmp/ccRi8Uxx.s 			page 58


 2647              	.LASF131:
 2648 0438 656E6162 		.ascii	"enable_interrupt\000"
 2648      6C655F69 
 2648      6E746572 
 2648      72757074 
 2648      00
 2649              	.LASF122:
 2650 0449 43414E32 		.ascii	"CAN2_TX_IRQn\000"
 2650      5F54585F 
 2650      4952516E 
 2650      00
 2651              	.LASF17:
 2652 0456 49434552 		.ascii	"ICER\000"
 2652      00
 2653              	.LASF50:
 2654 045b 41484252 		.ascii	"AHBRSTR\000"
 2654      53545200 
 2655              	.LASF45:
 2656 0463 41504231 		.ascii	"APB1RSTR\000"
 2656      52535452 
 2656      00
 2657              	.LASF77:
 2658 046c 444D4131 		.ascii	"DMA1_Channel1_IRQn\000"
 2658      5F436861 
 2658      6E6E656C 
 2658      315F4952 
 2658      516E00
 2659              	.LASF53:
 2660 047f 4B455952 		.ascii	"KEYR\000"
 2660      00
 2661              	.LASF103:
 2662 0484 55534152 		.ascii	"USART1_IRQn\000"
 2662      54315F49 
 2662      52516E00 
 2663              	.LASF134:
 2664 0490 7365745F 		.ascii	"set_system_clock_to_72Mhz\000"
 2664      73797374 
 2664      656D5F63 
 2664      6C6F636B 
 2664      5F746F5F 
 2665              	.LASF117:
 2666 04aa 444D4132 		.ascii	"DMA2_Channel3_IRQn\000"
 2666      5F436861 
 2666      6E6E656C 
 2666      335F4952 
 2666      516E00
 2667              	.LASF4:
 2668 04bd 756E7369 		.ascii	"unsigned char\000"
 2668      676E6564 
 2668      20636861 
 2668      7200
 2669              	.LASF104:
 2670 04cb 55534152 		.ascii	"USART2_IRQn\000"
 2670      54325F49 
 2670      52516E00 
 2671              	.LASF113:
 2672 04d7 54494D36 		.ascii	"TIM6_IRQn\000"
ARM GAS  /tmp/ccRi8Uxx.s 			page 59


 2672      5F495251 
 2672      6E00
 2673              	.LASF76:
 2674 04e1 45585449 		.ascii	"EXTI4_IRQn\000"
 2674      345F4952 
 2674      516E00
 2675              	.LASF5:
 2676 04ec 73686F72 		.ascii	"short int\000"
 2676      7420696E 
 2676      7400
 2677              	.LASF15:
 2678 04f6 49534552 		.ascii	"ISER\000"
 2678      00
 2679              	.LASF112:
 2680 04fb 55415254 		.ascii	"UART5_IRQn\000"
 2680      355F4952 
 2680      516E00
 2681              	.LASF55:
 2682 0506 52455345 		.ascii	"RESERVED\000"
 2682      52564544 
 2682      00
 2683              	.LASF123:
 2684 050f 43414E32 		.ascii	"CAN2_R_IRQn\000"
 2684      5F525F49 
 2684      52516E00 
 2685              	.LASF47:
 2686 051b 41504232 		.ascii	"APB2ENR\000"
 2686      454E5200 
 2687              	.LASF70:
 2688 0523 464C4153 		.ascii	"FLASH_IRQn\000"
 2688      485F4952 
 2688      516E00
 2689              	.LASF129:
 2690 052e 64697361 		.ascii	"disable_interrupt\000"
 2690      626C655F 
 2690      696E7465 
 2690      72727570 
 2690      7400
 2691              	.LASF11:
 2692 0540 75696E74 		.ascii	"uint32_t\000"
 2692      33325F74 
 2692      00
 2693              	.LASF64:
 2694 0549 50656E64 		.ascii	"PendSV_IRQn\000"
 2694      53565F49 
 2694      52516E00 
 2695              	.LASF61:
 2696 0555 55736167 		.ascii	"UsageFault_IRQn\000"
 2696      65466175 
 2696      6C745F49 
 2696      52516E00 
 2697              	.LASF97:
 2698 0565 49324331 		.ascii	"I2C1_EV_IRQn\000"
 2698      5F45565F 
 2698      4952516E 
 2698      00
 2699              	.LASF56:
ARM GAS  /tmp/ccRi8Uxx.s 			page 60


 2700 0572 57525052 		.ascii	"WRPR\000"
 2700      00
 2701              	.LASF79:
 2702 0577 444D4131 		.ascii	"DMA1_Channel3_IRQn\000"
 2702      5F436861 
 2702      6E6E656C 
 2702      335F4952 
 2702      516E00
 2703              	.LASF14:
 2704 058a 63686172 		.ascii	"char\000"
 2704      00
 2705              	.LASF118:
 2706 058f 444D4132 		.ascii	"DMA2_Channel4_IRQn\000"
 2706      5F436861 
 2706      6E6E656C 
 2706      345F4952 
 2706      516E00
 2707              	.LASF31:
 2708 05a2 534D4352 		.ascii	"SMCR\000"
 2708      00
 2709              	.LASF90:
 2710 05a7 54494D31 		.ascii	"TIM1_BRK_IRQn\000"
 2710      5F42524B 
 2710      5F495251 
 2710      6E00
 2711              	.LASF41:
 2712 05b5 444D4152 		.ascii	"DMAR\000"
 2712      00
 2713              	.LASF107:
 2714 05ba 52544341 		.ascii	"RTCAlarm_IRQn\000"
 2714      6C61726D 
 2714      5F495251 
 2714      6E00
 2715              	.LASF114:
 2716 05c8 54494D37 		.ascii	"TIM7_IRQn\000"
 2716      5F495251 
 2716      6E00
 2717              	.LASF58:
 2718 05d2 4E6F6E4D 		.ascii	"NonMaskableInt_IRQn\000"
 2718      61736B61 
 2718      626C6549 
 2718      6E745F49 
 2718      52516E00 
 2719              	.LASF82:
 2720 05e6 444D4131 		.ascii	"DMA1_Channel6_IRQn\000"
 2720      5F436861 
 2720      6E6E656C 
 2720      365F4952 
 2720      516E00
 2721              	.LASF48:
 2722 05f9 41504231 		.ascii	"APB1ENR\000"
 2722      454E5200 
 2723              	.LASF68:
 2724 0601 54414D50 		.ascii	"TAMPER_IRQn\000"
 2724      45525F49 
 2724      52516E00 
 2725              	.LASF91:
ARM GAS  /tmp/ccRi8Uxx.s 			page 61


 2726 060d 54494D31 		.ascii	"TIM1_UP_IRQn\000"
 2726      5F55505F 
 2726      4952516E 
 2726      00
 2727              	.LASF63:
 2728 061a 44656275 		.ascii	"DebugMonitor_IRQn\000"
 2728      674D6F6E 
 2728      69746F72 
 2728      5F495251 
 2728      6E00
 2729              	.LASF125:
 2730 062c 61726773 		.ascii	"args\000"
 2730      00
 2731              	.LASF105:
 2732 0631 55534152 		.ascii	"USART3_IRQn\000"
 2732      54335F49 
 2732      52516E00 
 2733              	.LASF36:
 2734 063d 43435231 		.ascii	"CCR1\000"
 2734      00
 2735              	.LASF37:
 2736 0642 43435232 		.ascii	"CCR2\000"
 2736      00
 2737              	.LASF38:
 2738 0647 43435233 		.ascii	"CCR3\000"
 2738      00
 2739              	.LASF39:
 2740 064c 43435234 		.ascii	"CCR4\000"
 2740      00
 2741              	.LASF28:
 2742 0651 42535252 		.ascii	"BSRR\000"
 2742      00
 2743              	.LASF49:
 2744 0656 42444352 		.ascii	"BDCR\000"
 2744      00
 2745              	.LASF51:
 2746 065b 43464752 		.ascii	"CFGR2\000"
 2746      3200
 2747              	.LASF127:
 2748 0661 70635461 		.ascii	"pcTaskName\000"
 2748      736B4E61 
 2748      6D6500
 2749              	.LASF71:
 2750 066c 5243435F 		.ascii	"RCC_IRQn\000"
 2750      4952516E 
 2750      00
 2751              	.LASF26:
 2752 0675 53544952 		.ascii	"STIR\000"
 2752      00
 2753              	.LASF121:
 2754 067a 4554485F 		.ascii	"ETH_WKUP_IRQn\000"
 2754      574B5550 
 2754      5F495251 
 2754      6E00
 2755              	.LASF73:
 2756 0688 45585449 		.ascii	"EXTI1_IRQn\000"
 2756      315F4952 
ARM GAS  /tmp/ccRi8Uxx.s 			page 62


 2756      516E00
 2757              	.LASF83:
 2758 0693 444D4131 		.ascii	"DMA1_Channel7_IRQn\000"
 2758      5F436861 
 2758      6E6E656C 
 2758      375F4952 
 2758      516E00
 2759              	.LASF43:
 2760 06a6 43464752 		.ascii	"CFGR\000"
 2760      00
 2761              	.LASF98:
 2762 06ab 49324331 		.ascii	"I2C1_ER_IRQn\000"
 2762      5F45525F 
 2762      4952516E 
 2762      00
 2763              	.LASF69:
 2764 06b8 5254435F 		.ascii	"RTC_IRQn\000"
 2764      4952516E 
 2764      00
 2765              	.LASF110:
 2766 06c1 53504933 		.ascii	"SPI3_IRQn\000"
 2766      5F495251 
 2766      6E00
 2767              	.LASF142:
 2768 06cb 6D61696E 		.ascii	"main\000"
 2768      00
 2769              	.LASF95:
 2770 06d0 54494D33 		.ascii	"TIM3_IRQn\000"
 2770      5F495251 
 2770      6E00
 2771              	.LASF88:
 2772 06da 43414E31 		.ascii	"CAN1_SCE_IRQn\000"
 2772      5F534345 
 2772      5F495251 
 2772      6E00
 2773              	.LASF16:
 2774 06e8 52455330 		.ascii	"RES0\000"
 2774      00
 2775              	.LASF18:
 2776 06ed 52455331 		.ascii	"RES1\000"
 2776      00
 2777              	.LASF20:
 2778 06f2 52455332 		.ascii	"RES2\000"
 2778      00
 2779              	.LASF22:
 2780 06f7 52455333 		.ascii	"RES3\000"
 2780      00
 2781              	.LASF24:
 2782 06fc 52455334 		.ascii	"RES4\000"
 2782      00
 2783              	.LASF25:
 2784 0701 52455335 		.ascii	"RES5\000"
 2784      00
 2785              		.ident	"GCC: (GNU Arm Embedded Toolchain 10.3-2021.10) 10.3.1 20210824 (release)"
ARM GAS  /tmp/ccRi8Uxx.s 			page 63


DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.c
     /tmp/ccRi8Uxx.s:77     .text:0000000000000000 $t
     /tmp/ccRi8Uxx.s:82     .text:0000000000000000 task1
     /tmp/ccRi8Uxx.s:122    .text:0000000000000018 $d
     /tmp/ccRi8Uxx.s:126    .text:000000000000001c $t
     /tmp/ccRi8Uxx.s:132    .text:000000000000001c set_system_clock_to_72Mhz
     /tmp/ccRi8Uxx.s:241    .text:000000000000008c $d
     /tmp/ccRi8Uxx.s:245    .text:0000000000000090 $t
     /tmp/ccRi8Uxx.s:251    .text:0000000000000090 Delay
     /tmp/ccRi8Uxx.s:320    .text:00000000000000b8 $d
     /tmp/ccRi8Uxx.s:324    .text:00000000000000bc $t
     /tmp/ccRi8Uxx.s:330    .text:00000000000000bc enable_TIM3_delay
     /tmp/ccRi8Uxx.s:367    .text:00000000000000dc $d
     /tmp/ccRi8Uxx.s:372    .text:00000000000000e4 $t
     /tmp/ccRi8Uxx.s:378    .text:00000000000000e4 enable_interrupt
     /tmp/ccRi8Uxx.s:410    .text:00000000000000f8 $d
     /tmp/ccRi8Uxx.s:414    .text:00000000000000fc $t
     /tmp/ccRi8Uxx.s:420    .text:00000000000000fc disable_interrupt
     /tmp/ccRi8Uxx.s:453    .text:0000000000000114 $d
     /tmp/ccRi8Uxx.s:457    .text:0000000000000118 $t
     /tmp/ccRi8Uxx.s:463    .text:0000000000000118 vApplicationStackOverflowHook
     /tmp/ccRi8Uxx.s:484    .text.startup:0000000000000000 $t
     /tmp/ccRi8Uxx.s:490    .text.startup:0000000000000000 main
     /tmp/ccRi8Uxx.s:588    .text.startup:000000000000005c $d

UNDEFINED SYMBOLS
vTaskDelay
xTaskCreate
vTaskStartScheduler
