ARM GAS  /tmp/cc4130RP.s 			page 1


   1              		.cpu cortex-m3
   2              		.arch armv7-m
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1	@ Tag_ABI_FP_denormal
   5              		.eabi_attribute 21, 1	@ Tag_ABI_FP_exceptions
   6              		.eabi_attribute 23, 3	@ Tag_ABI_FP_number_model
   7              		.eabi_attribute 24, 1	@ Tag_ABI_align8_needed
   8              		.eabi_attribute 25, 1	@ Tag_ABI_align8_preserved
   9              		.eabi_attribute 26, 1	@ Tag_ABI_enum_size
  10              		.eabi_attribute 30, 4	@ Tag_ABI_optimization_goals
  11              		.eabi_attribute 34, 1	@ Tag_CPU_unaligned_access
  12              		.eabi_attribute 18, 4	@ Tag_ABI_PCS_wchar_t
  13              		.file	"timers.c"
  14              	@ GNU C17 (GNU Arm Embedded Toolchain 10.3-2021.10) version 10.3.1 20210824 (release) (arm-none-eab
  15              	@	compiled by GNU C version 4.8.4, GMP version 6.1.0, MPFR version 3.1.4, MPC version 1.0.3, isl ve
  16              	
  17              	@ GGC heuristics: --param ggc-min-expand=100 --param ggc-min-heapsize=131072
  18              	@ options passed:  -I . -I ../user
  19              	@ -I ../stm32f10x_lib/CMSIS/CM3/CoreSupport
  20              	@ -I ../stm32f10x_lib/CMSIS/CM3/DeviceSupport/ST/STM32F10x
  21              	@ -I ../stm32f10x_lib/STM32F10x_StdPeriph_Driver/inc
  22              	@ -I ../stm32f10x_lib/STM32F10x_StdPeriph_Driver -I ../freertos/include
  23              	@ -I ../freertos/portable/GCC/ARM_CM3 -imultilib thumb/v7-m/nofp
  24              	@ -iprefix /usr/bin/../lib/gcc/arm-none-eabi/10.3.1/
  25              	@ -isysroot /usr/bin/../arm-none-eabi -D__USES_INITFINI__ -D STM32F10X_MD
  26              	@ -D USE_STDPERIPH_DRIVER -D HSE_VALUE=8000000 -D RUN_FROM_FLASH=1
  27              	@ ../freertos/timers.c -mcpu=cortex-m3 -mthumb -mfloat-abi=soft
  28              	@ -mlibarch=armv7-m -march=armv7-m -auxbase-strip ../freertos/timers.o -g
  29              	@ -gdwarf-2 -Os -Wall -fomit-frame-pointer -fverbose-asm
  30              	@ options enabled:  -faggressive-loop-optimizations -fallocation-dce
  31              	@ -fauto-inc-dec -fbranch-count-reg -fcaller-saves -fcode-hoisting
  32              	@ -fcombine-stack-adjustments -fcompare-elim -fcprop-registers
  33              	@ -fcrossjumping -fcse-follow-jumps -fdefer-pop
  34              	@ -fdelete-null-pointer-checks -fdevirtualize -fdevirtualize-speculatively
  35              	@ -fdwarf2-cfi-asm -fearly-inlining -feliminate-unused-debug-symbols
  36              	@ -feliminate-unused-debug-types -fexpensive-optimizations
  37              	@ -fforward-propagate -ffp-int-builtin-inexact -ffunction-cse -fgcse
  38              	@ -fgcse-lm -fgnu-unique -fguess-branch-probability -fhoist-adjacent-loads
  39              	@ -fident -fif-conversion -fif-conversion2 -findirect-inlining -finline
  40              	@ -finline-atomics -finline-functions -finline-functions-called-once
  41              	@ -finline-small-functions -fipa-bit-cp -fipa-cp -fipa-icf
  42              	@ -fipa-icf-functions -fipa-icf-variables -fipa-profile -fipa-pure-const
  43              	@ -fipa-ra -fipa-reference -fipa-reference-addressable -fipa-sra
  44              	@ -fipa-stack-alignment -fipa-vrp -fira-hoist-pressure
  45              	@ -fira-share-save-slots -fira-share-spill-slots
  46              	@ -fisolate-erroneous-paths-dereference -fivopts -fkeep-static-consts
  47              	@ -fleading-underscore -flifetime-dse -flra-remat -fmath-errno
  48              	@ -fmerge-constants -fmerge-debug-strings -fmove-loop-invariants
  49              	@ -fomit-frame-pointer -foptimize-sibling-calls -fpartial-inlining
  50              	@ -fpeephole -fpeephole2 -fplt -fprefetch-loop-arrays -freg-struct-return
  51              	@ -freorder-blocks -freorder-functions -frerun-cse-after-loop
  52              	@ -fsched-critical-path-heuristic -fsched-dep-count-heuristic
  53              	@ -fsched-group-heuristic -fsched-interblock -fsched-last-insn-heuristic
  54              	@ -fsched-pressure -fsched-rank-heuristic -fsched-spec
  55              	@ -fsched-spec-insn-heuristic -fsched-stalled-insns-dep -fschedule-insns2
  56              	@ -fsection-anchors -fsemantic-interposition -fshow-column
  57              	@ -fshrink-wrap-separate -fsigned-zeros -fsplit-ivs-in-unroller
ARM GAS  /tmp/cc4130RP.s 			page 2


  58              	@ -fsplit-wide-types -fssa-backprop -fssa-phiopt -fstdarg-opt
  59              	@ -fstore-merging -fstrict-aliasing -fstrict-volatile-bitfields
  60              	@ -fsync-libcalls -fthread-jumps -ftoplevel-reorder -ftrapping-math
  61              	@ -ftree-bit-ccp -ftree-builtin-call-dce -ftree-ccp -ftree-ch
  62              	@ -ftree-coalesce-vars -ftree-copy-prop -ftree-cselim -ftree-dce
  63              	@ -ftree-dominator-opts -ftree-dse -ftree-forwprop -ftree-fre
  64              	@ -ftree-loop-distribute-patterns -ftree-loop-if-convert -ftree-loop-im
  65              	@ -ftree-loop-ivcanon -ftree-loop-optimize -ftree-parallelize-loops=
  66              	@ -ftree-phiprop -ftree-pre -ftree-pta -ftree-reassoc -ftree-scev-cprop
  67              	@ -ftree-sink -ftree-slsr -ftree-sra -ftree-switch-conversion
  68              	@ -ftree-tail-merge -ftree-ter -ftree-vrp -funit-at-a-time -fvar-tracking
  69              	@ -fvar-tracking-assignments -fverbose-asm -fzero-initialized-in-bss
  70              	@ -masm-syntax-unified -mbe32 -mfix-cortex-m3-ldrd -mlittle-endian
  71              	@ -mpic-data-is-text-relative -msched-prolog -mthumb -munaligned-access
  72              	@ -mvectorize-with-neon-quad
  73              	
  74              		.text
  75              	.Ltext0:
  76              		.cfi_sections	.debug_frame
  77              		.align	1
  78              		.syntax unified
  79              		.thumb
  80              		.thumb_func
  81              		.type	prvCheckForValidListAndQueue, %function
  82              	prvCheckForValidListAndQueue:
  83              	.LFB22:
  84              		.file 1 "../freertos/timers.c"
   1:../freertos/timers.c **** /*
   2:../freertos/timers.c ****  * FreeRTOS Kernel V10.2.1
   3:../freertos/timers.c ****  * Copyright (C) 2019 Amazon.com, Inc. or its affiliates.  All Rights Reserved.
   4:../freertos/timers.c ****  *
   5:../freertos/timers.c ****  * Permission is hereby granted, free of charge, to any person obtaining a copy of
   6:../freertos/timers.c ****  * this software and associated documentation files (the "Software"), to deal in
   7:../freertos/timers.c ****  * the Software without restriction, including without limitation the rights to
   8:../freertos/timers.c ****  * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of
   9:../freertos/timers.c ****  * the Software, and to permit persons to whom the Software is furnished to do so,
  10:../freertos/timers.c ****  * subject to the following conditions:
  11:../freertos/timers.c ****  *
  12:../freertos/timers.c ****  * The above copyright notice and this permission notice shall be included in all
  13:../freertos/timers.c ****  * copies or substantial portions of the Software.
  14:../freertos/timers.c ****  *
  15:../freertos/timers.c ****  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  16:../freertos/timers.c ****  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
  17:../freertos/timers.c ****  * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
  18:../freertos/timers.c ****  * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
  19:../freertos/timers.c ****  * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
  20:../freertos/timers.c ****  * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
  21:../freertos/timers.c ****  *
  22:../freertos/timers.c ****  * http://www.FreeRTOS.org
  23:../freertos/timers.c ****  * http://aws.amazon.com/freertos
  24:../freertos/timers.c ****  *
  25:../freertos/timers.c ****  * 1 tab == 4 spaces!
  26:../freertos/timers.c ****  */
  27:../freertos/timers.c **** 
  28:../freertos/timers.c **** /* Standard includes. */
  29:../freertos/timers.c **** #include <stdlib.h>
  30:../freertos/timers.c **** 
ARM GAS  /tmp/cc4130RP.s 			page 3


  31:../freertos/timers.c **** /* Defining MPU_WRAPPERS_INCLUDED_FROM_API_FILE prevents task.h from redefining
  32:../freertos/timers.c **** all the API functions to use the MPU wrappers.  That should only be done when
  33:../freertos/timers.c **** task.h is included from an application file. */
  34:../freertos/timers.c **** #define MPU_WRAPPERS_INCLUDED_FROM_API_FILE
  35:../freertos/timers.c **** 
  36:../freertos/timers.c **** #include "FreeRTOS.h"
  37:../freertos/timers.c **** #include "task.h"
  38:../freertos/timers.c **** #include "queue.h"
  39:../freertos/timers.c **** #include "timers.h"
  40:../freertos/timers.c **** 
  41:../freertos/timers.c **** #if ( INCLUDE_xTimerPendFunctionCall == 1 ) && ( configUSE_TIMERS == 0 )
  42:../freertos/timers.c **** 	#error configUSE_TIMERS must be set to 1 to make the xTimerPendFunctionCall() function available.
  43:../freertos/timers.c **** #endif
  44:../freertos/timers.c **** 
  45:../freertos/timers.c **** /* Lint e9021, e961 and e750 are suppressed as a MISRA exception justified
  46:../freertos/timers.c **** because the MPU ports require MPU_WRAPPERS_INCLUDED_FROM_API_FILE to be defined
  47:../freertos/timers.c **** for the header files above, but not in this file, in order to generate the
  48:../freertos/timers.c **** correct privileged Vs unprivileged linkage and placement. */
  49:../freertos/timers.c **** #undef MPU_WRAPPERS_INCLUDED_FROM_API_FILE /*lint !e9021 !e961 !e750. */
  50:../freertos/timers.c **** 
  51:../freertos/timers.c **** 
  52:../freertos/timers.c **** /* This entire source file will be skipped if the application is not configured
  53:../freertos/timers.c **** to include software timer functionality.  This #if is closed at the very bottom
  54:../freertos/timers.c **** of this file.  If you want to include software timer functionality then ensure
  55:../freertos/timers.c **** configUSE_TIMERS is set to 1 in FreeRTOSConfig.h. */
  56:../freertos/timers.c **** #if ( configUSE_TIMERS == 1 )
  57:../freertos/timers.c **** 
  58:../freertos/timers.c **** /* Misc definitions. */
  59:../freertos/timers.c **** #define tmrNO_DELAY		( TickType_t ) 0U
  60:../freertos/timers.c **** 
  61:../freertos/timers.c **** /* The name assigned to the timer service task.  This can be overridden by
  62:../freertos/timers.c **** defining trmTIMER_SERVICE_TASK_NAME in FreeRTOSConfig.h. */
  63:../freertos/timers.c **** #ifndef configTIMER_SERVICE_TASK_NAME
  64:../freertos/timers.c **** 	#define configTIMER_SERVICE_TASK_NAME "Tmr Svc"
  65:../freertos/timers.c **** #endif
  66:../freertos/timers.c **** 
  67:../freertos/timers.c **** /* Bit definitions used in the ucStatus member of a timer structure. */
  68:../freertos/timers.c **** #define tmrSTATUS_IS_ACTIVE					( ( uint8_t ) 0x01 )
  69:../freertos/timers.c **** #define tmrSTATUS_IS_STATICALLY_ALLOCATED	( ( uint8_t ) 0x02 )
  70:../freertos/timers.c **** #define tmrSTATUS_IS_AUTORELOAD				( ( uint8_t ) 0x04 )
  71:../freertos/timers.c **** 
  72:../freertos/timers.c **** /* The definition of the timers themselves. */
  73:../freertos/timers.c **** typedef struct tmrTimerControl /* The old naming convention is used to prevent breaking kernel awar
  74:../freertos/timers.c **** {
  75:../freertos/timers.c **** 	const char				*pcTimerName;		/*<< Text name.  This is not used by the kernel, it is included simpl
  76:../freertos/timers.c **** 	ListItem_t				xTimerListItem;		/*<< Standard linked list item as used by all kernel features for e
  77:../freertos/timers.c **** 	TickType_t				xTimerPeriodInTicks;/*<< How quickly and often the timer expires. */
  78:../freertos/timers.c **** 	void 					*pvTimerID;			/*<< An ID to identify the timer.  This allows the timer to be identified 
  79:../freertos/timers.c **** 	TimerCallbackFunction_t	pxCallbackFunction;	/*<< The function that will be called when the timer e
  80:../freertos/timers.c **** 	#if( configUSE_TRACE_FACILITY == 1 )
  81:../freertos/timers.c **** 		UBaseType_t			uxTimerNumber;		/*<< An ID assigned by trace tools such as FreeRTOS+Trace */
  82:../freertos/timers.c **** 	#endif
  83:../freertos/timers.c **** 	uint8_t 				ucStatus;			/*<< Holds bits to say if the timer was statically allocated or not, and i
  84:../freertos/timers.c **** } xTIMER;
  85:../freertos/timers.c **** 
  86:../freertos/timers.c **** /* The old xTIMER name is maintained above then typedefed to the new Timer_t
  87:../freertos/timers.c **** name below to enable the use of older kernel aware debuggers. */
ARM GAS  /tmp/cc4130RP.s 			page 4


  88:../freertos/timers.c **** typedef xTIMER Timer_t;
  89:../freertos/timers.c **** 
  90:../freertos/timers.c **** /* The definition of messages that can be sent and received on the timer queue.
  91:../freertos/timers.c **** Two types of message can be queued - messages that manipulate a software timer,
  92:../freertos/timers.c **** and messages that request the execution of a non-timer related callback.  The
  93:../freertos/timers.c **** two message types are defined in two separate structures, xTimerParametersType
  94:../freertos/timers.c **** and xCallbackParametersType respectively. */
  95:../freertos/timers.c **** typedef struct tmrTimerParameters
  96:../freertos/timers.c **** {
  97:../freertos/timers.c **** 	TickType_t			xMessageValue;		/*<< An optional value used by a subset of commands, for example, whe
  98:../freertos/timers.c **** 	Timer_t *			pxTimer;			/*<< The timer to which the command will be applied. */
  99:../freertos/timers.c **** } TimerParameter_t;
 100:../freertos/timers.c **** 
 101:../freertos/timers.c **** 
 102:../freertos/timers.c **** typedef struct tmrCallbackParameters
 103:../freertos/timers.c **** {
 104:../freertos/timers.c **** 	PendedFunction_t	pxCallbackFunction;	/* << The callback function to execute. */
 105:../freertos/timers.c **** 	void *pvParameter1;						/* << The value that will be used as the callback functions first paramet
 106:../freertos/timers.c **** 	uint32_t ulParameter2;					/* << The value that will be used as the callback functions second para
 107:../freertos/timers.c **** } CallbackParameters_t;
 108:../freertos/timers.c **** 
 109:../freertos/timers.c **** /* The structure that contains the two message types, along with an identifier
 110:../freertos/timers.c **** that is used to determine which message type is valid. */
 111:../freertos/timers.c **** typedef struct tmrTimerQueueMessage
 112:../freertos/timers.c **** {
 113:../freertos/timers.c **** 	BaseType_t			xMessageID;			/*<< The command being sent to the timer service task. */
 114:../freertos/timers.c **** 	union
 115:../freertos/timers.c **** 	{
 116:../freertos/timers.c **** 		TimerParameter_t xTimerParameters;
 117:../freertos/timers.c **** 
 118:../freertos/timers.c **** 		/* Don't include xCallbackParameters if it is not going to be used as
 119:../freertos/timers.c **** 		it makes the structure (and therefore the timer queue) larger. */
 120:../freertos/timers.c **** 		#if ( INCLUDE_xTimerPendFunctionCall == 1 )
 121:../freertos/timers.c **** 			CallbackParameters_t xCallbackParameters;
 122:../freertos/timers.c **** 		#endif /* INCLUDE_xTimerPendFunctionCall */
 123:../freertos/timers.c **** 	} u;
 124:../freertos/timers.c **** } DaemonTaskMessage_t;
 125:../freertos/timers.c **** 
 126:../freertos/timers.c **** /*lint -save -e956 A manual analysis and inspection has been used to determine
 127:../freertos/timers.c **** which static variables must be declared volatile. */
 128:../freertos/timers.c **** 
 129:../freertos/timers.c **** /* The list in which active timers are stored.  Timers are referenced in expire
 130:../freertos/timers.c **** time order, with the nearest expiry time at the front of the list.  Only the
 131:../freertos/timers.c **** timer service task is allowed to access these lists.
 132:../freertos/timers.c **** xActiveTimerList1 and xActiveTimerList2 could be at function scope but that
 133:../freertos/timers.c **** breaks some kernel aware debuggers, and debuggers that reply on removing the
 134:../freertos/timers.c **** static qualifier. */
 135:../freertos/timers.c **** PRIVILEGED_DATA static List_t xActiveTimerList1;
 136:../freertos/timers.c **** PRIVILEGED_DATA static List_t xActiveTimerList2;
 137:../freertos/timers.c **** PRIVILEGED_DATA static List_t *pxCurrentTimerList;
 138:../freertos/timers.c **** PRIVILEGED_DATA static List_t *pxOverflowTimerList;
 139:../freertos/timers.c **** 
 140:../freertos/timers.c **** /* A queue that is used to send commands to the timer service task. */
 141:../freertos/timers.c **** PRIVILEGED_DATA static QueueHandle_t xTimerQueue = NULL;
 142:../freertos/timers.c **** PRIVILEGED_DATA static TaskHandle_t xTimerTaskHandle = NULL;
 143:../freertos/timers.c **** 
 144:../freertos/timers.c **** /*lint -restore */
ARM GAS  /tmp/cc4130RP.s 			page 5


 145:../freertos/timers.c **** 
 146:../freertos/timers.c **** /*-----------------------------------------------------------*/
 147:../freertos/timers.c **** 
 148:../freertos/timers.c **** #if( configSUPPORT_STATIC_ALLOCATION == 1 )
 149:../freertos/timers.c **** 
 150:../freertos/timers.c **** 	/* If static allocation is supported then the application must provide the
 151:../freertos/timers.c **** 	following callback function - which enables the application to optionally
 152:../freertos/timers.c **** 	provide the memory that will be used by the timer task as the task's stack
 153:../freertos/timers.c **** 	and TCB. */
 154:../freertos/timers.c **** 	extern void vApplicationGetTimerTaskMemory( StaticTask_t **ppxTimerTaskTCBBuffer, StackType_t **pp
 155:../freertos/timers.c **** 
 156:../freertos/timers.c **** #endif
 157:../freertos/timers.c **** 
 158:../freertos/timers.c **** /*
 159:../freertos/timers.c ****  * Initialise the infrastructure used by the timer service task if it has not
 160:../freertos/timers.c ****  * been initialised already.
 161:../freertos/timers.c ****  */
 162:../freertos/timers.c **** static void prvCheckForValidListAndQueue( void ) PRIVILEGED_FUNCTION;
 163:../freertos/timers.c **** 
 164:../freertos/timers.c **** /*
 165:../freertos/timers.c ****  * The timer service task (daemon).  Timer functionality is controlled by this
 166:../freertos/timers.c ****  * task.  Other tasks communicate with the timer service task using the
 167:../freertos/timers.c ****  * xTimerQueue queue.
 168:../freertos/timers.c ****  */
 169:../freertos/timers.c **** static portTASK_FUNCTION_PROTO( prvTimerTask, pvParameters ) PRIVILEGED_FUNCTION;
 170:../freertos/timers.c **** 
 171:../freertos/timers.c **** /*
 172:../freertos/timers.c ****  * Called by the timer service task to interpret and process a command it
 173:../freertos/timers.c ****  * received on the timer queue.
 174:../freertos/timers.c ****  */
 175:../freertos/timers.c **** static void prvProcessReceivedCommands( void ) PRIVILEGED_FUNCTION;
 176:../freertos/timers.c **** 
 177:../freertos/timers.c **** /*
 178:../freertos/timers.c ****  * Insert the timer into either xActiveTimerList1, or xActiveTimerList2,
 179:../freertos/timers.c ****  * depending on if the expire time causes a timer counter overflow.
 180:../freertos/timers.c ****  */
 181:../freertos/timers.c **** static BaseType_t prvInsertTimerInActiveList( Timer_t * const pxTimer, const TickType_t xNextExpiry
 182:../freertos/timers.c **** 
 183:../freertos/timers.c **** /*
 184:../freertos/timers.c ****  * An active timer has reached its expire time.  Reload the timer if it is an
 185:../freertos/timers.c ****  * auto reload timer, then call its callback.
 186:../freertos/timers.c ****  */
 187:../freertos/timers.c **** static void prvProcessExpiredTimer( const TickType_t xNextExpireTime, const TickType_t xTimeNow ) P
 188:../freertos/timers.c **** 
 189:../freertos/timers.c **** /*
 190:../freertos/timers.c ****  * The tick count has overflowed.  Switch the timer lists after ensuring the
 191:../freertos/timers.c ****  * current timer list does not still reference some timers.
 192:../freertos/timers.c ****  */
 193:../freertos/timers.c **** static void prvSwitchTimerLists( void ) PRIVILEGED_FUNCTION;
 194:../freertos/timers.c **** 
 195:../freertos/timers.c **** /*
 196:../freertos/timers.c ****  * Obtain the current tick count, setting *pxTimerListsWereSwitched to pdTRUE
 197:../freertos/timers.c ****  * if a tick count overflow occurred since prvSampleTimeNow() was last called.
 198:../freertos/timers.c ****  */
 199:../freertos/timers.c **** static TickType_t prvSampleTimeNow( BaseType_t * const pxTimerListsWereSwitched ) PRIVILEGED_FUNCTI
 200:../freertos/timers.c **** 
 201:../freertos/timers.c **** /*
ARM GAS  /tmp/cc4130RP.s 			page 6


 202:../freertos/timers.c ****  * If the timer list contains any active timers then return the expire time of
 203:../freertos/timers.c ****  * the timer that will expire first and set *pxListWasEmpty to false.  If the
 204:../freertos/timers.c ****  * timer list does not contain any timers then return 0 and set *pxListWasEmpty
 205:../freertos/timers.c ****  * to pdTRUE.
 206:../freertos/timers.c ****  */
 207:../freertos/timers.c **** static TickType_t prvGetNextExpireTime( BaseType_t * const pxListWasEmpty ) PRIVILEGED_FUNCTION;
 208:../freertos/timers.c **** 
 209:../freertos/timers.c **** /*
 210:../freertos/timers.c ****  * If a timer has expired, process it.  Otherwise, block the timer service task
 211:../freertos/timers.c ****  * until either a timer does expire or a command is received.
 212:../freertos/timers.c ****  */
 213:../freertos/timers.c **** static void prvProcessTimerOrBlockTask( const TickType_t xNextExpireTime, BaseType_t xListWasEmpty 
 214:../freertos/timers.c **** 
 215:../freertos/timers.c **** /*
 216:../freertos/timers.c ****  * Called after a Timer_t structure has been allocated either statically or
 217:../freertos/timers.c ****  * dynamically to fill in the structure's members.
 218:../freertos/timers.c ****  */
 219:../freertos/timers.c **** static void prvInitialiseNewTimer(	const char * const pcTimerName,			/*lint !e971 Unqualified char 
 220:../freertos/timers.c **** 									const TickType_t xTimerPeriodInTicks,
 221:../freertos/timers.c **** 									const UBaseType_t uxAutoReload,
 222:../freertos/timers.c **** 									void * const pvTimerID,
 223:../freertos/timers.c **** 									TimerCallbackFunction_t pxCallbackFunction,
 224:../freertos/timers.c **** 									Timer_t *pxNewTimer ) PRIVILEGED_FUNCTION;
 225:../freertos/timers.c **** /*-----------------------------------------------------------*/
 226:../freertos/timers.c **** 
 227:../freertos/timers.c **** BaseType_t xTimerCreateTimerTask( void )
 228:../freertos/timers.c **** {
 229:../freertos/timers.c **** BaseType_t xReturn = pdFAIL;
 230:../freertos/timers.c **** 
 231:../freertos/timers.c **** 	/* This function is called when the scheduler is started if
 232:../freertos/timers.c **** 	configUSE_TIMERS is set to 1.  Check that the infrastructure used by the
 233:../freertos/timers.c **** 	timer service task has been created/initialised.  If timers have already
 234:../freertos/timers.c **** 	been created then the initialisation will already have been performed. */
 235:../freertos/timers.c **** 	prvCheckForValidListAndQueue();
 236:../freertos/timers.c **** 
 237:../freertos/timers.c **** 	if( xTimerQueue != NULL )
 238:../freertos/timers.c **** 	{
 239:../freertos/timers.c **** 		#if( configSUPPORT_STATIC_ALLOCATION == 1 )
 240:../freertos/timers.c **** 		{
 241:../freertos/timers.c **** 			StaticTask_t *pxTimerTaskTCBBuffer = NULL;
 242:../freertos/timers.c **** 			StackType_t *pxTimerTaskStackBuffer = NULL;
 243:../freertos/timers.c **** 			uint32_t ulTimerTaskStackSize;
 244:../freertos/timers.c **** 
 245:../freertos/timers.c **** 			vApplicationGetTimerTaskMemory( &pxTimerTaskTCBBuffer, &pxTimerTaskStackBuffer, &ulTimerTaskStac
 246:../freertos/timers.c **** 			xTimerTaskHandle = xTaskCreateStatic(	prvTimerTask,
 247:../freertos/timers.c **** 													configTIMER_SERVICE_TASK_NAME,
 248:../freertos/timers.c **** 													ulTimerTaskStackSize,
 249:../freertos/timers.c **** 													NULL,
 250:../freertos/timers.c **** 													( ( UBaseType_t ) configTIMER_TASK_PRIORITY ) | portPRIVILEGE_BIT,
 251:../freertos/timers.c **** 													pxTimerTaskStackBuffer,
 252:../freertos/timers.c **** 													pxTimerTaskTCBBuffer );
 253:../freertos/timers.c **** 
 254:../freertos/timers.c **** 			if( xTimerTaskHandle != NULL )
 255:../freertos/timers.c **** 			{
 256:../freertos/timers.c **** 				xReturn = pdPASS;
 257:../freertos/timers.c **** 			}
 258:../freertos/timers.c **** 		}
ARM GAS  /tmp/cc4130RP.s 			page 7


 259:../freertos/timers.c **** 		#else
 260:../freertos/timers.c **** 		{
 261:../freertos/timers.c **** 			xReturn = xTaskCreate(	prvTimerTask,
 262:../freertos/timers.c **** 									configTIMER_SERVICE_TASK_NAME,
 263:../freertos/timers.c **** 									configTIMER_TASK_STACK_DEPTH,
 264:../freertos/timers.c **** 									NULL,
 265:../freertos/timers.c **** 									( ( UBaseType_t ) configTIMER_TASK_PRIORITY ) | portPRIVILEGE_BIT,
 266:../freertos/timers.c **** 									&xTimerTaskHandle );
 267:../freertos/timers.c **** 		}
 268:../freertos/timers.c **** 		#endif /* configSUPPORT_STATIC_ALLOCATION */
 269:../freertos/timers.c **** 	}
 270:../freertos/timers.c **** 	else
 271:../freertos/timers.c **** 	{
 272:../freertos/timers.c **** 		mtCOVERAGE_TEST_MARKER();
 273:../freertos/timers.c **** 	}
 274:../freertos/timers.c **** 
 275:../freertos/timers.c **** 	configASSERT( xReturn );
 276:../freertos/timers.c **** 	return xReturn;
 277:../freertos/timers.c **** }
 278:../freertos/timers.c **** /*-----------------------------------------------------------*/
 279:../freertos/timers.c **** 
 280:../freertos/timers.c **** #if( configSUPPORT_DYNAMIC_ALLOCATION == 1 )
 281:../freertos/timers.c **** 
 282:../freertos/timers.c **** 	TimerHandle_t xTimerCreate(	const char * const pcTimerName,			/*lint !e971 Unqualified char types 
 283:../freertos/timers.c **** 								const TickType_t xTimerPeriodInTicks,
 284:../freertos/timers.c **** 								const UBaseType_t uxAutoReload,
 285:../freertos/timers.c **** 								void * const pvTimerID,
 286:../freertos/timers.c **** 								TimerCallbackFunction_t pxCallbackFunction )
 287:../freertos/timers.c **** 	{
 288:../freertos/timers.c **** 	Timer_t *pxNewTimer;
 289:../freertos/timers.c **** 
 290:../freertos/timers.c **** 		pxNewTimer = ( Timer_t * ) pvPortMalloc( sizeof( Timer_t ) ); /*lint !e9087 !e9079 All values ret
 291:../freertos/timers.c **** 
 292:../freertos/timers.c **** 		if( pxNewTimer != NULL )
 293:../freertos/timers.c **** 		{
 294:../freertos/timers.c **** 			/* Status is thus far zero as the timer is not created statically
 295:../freertos/timers.c **** 			and has not been started.  The autoreload bit may get set in
 296:../freertos/timers.c **** 			prvInitialiseNewTimer. */
 297:../freertos/timers.c **** 			pxNewTimer->ucStatus = 0x00;
 298:../freertos/timers.c **** 			prvInitialiseNewTimer( pcTimerName, xTimerPeriodInTicks, uxAutoReload, pvTimerID, pxCallbackFunc
 299:../freertos/timers.c **** 		}
 300:../freertos/timers.c **** 
 301:../freertos/timers.c **** 		return pxNewTimer;
 302:../freertos/timers.c **** 	}
 303:../freertos/timers.c **** 
 304:../freertos/timers.c **** #endif /* configSUPPORT_DYNAMIC_ALLOCATION */
 305:../freertos/timers.c **** /*-----------------------------------------------------------*/
 306:../freertos/timers.c **** 
 307:../freertos/timers.c **** #if( configSUPPORT_STATIC_ALLOCATION == 1 )
 308:../freertos/timers.c **** 
 309:../freertos/timers.c **** 	TimerHandle_t xTimerCreateStatic(	const char * const pcTimerName,		/*lint !e971 Unqualified char t
 310:../freertos/timers.c **** 										const TickType_t xTimerPeriodInTicks,
 311:../freertos/timers.c **** 										const UBaseType_t uxAutoReload,
 312:../freertos/timers.c **** 										void * const pvTimerID,
 313:../freertos/timers.c **** 										TimerCallbackFunction_t pxCallbackFunction,
 314:../freertos/timers.c **** 										StaticTimer_t *pxTimerBuffer )
 315:../freertos/timers.c **** 	{
ARM GAS  /tmp/cc4130RP.s 			page 8


 316:../freertos/timers.c **** 	Timer_t *pxNewTimer;
 317:../freertos/timers.c **** 
 318:../freertos/timers.c **** 		#if( configASSERT_DEFINED == 1 )
 319:../freertos/timers.c **** 		{
 320:../freertos/timers.c **** 			/* Sanity check that the size of the structure used to declare a
 321:../freertos/timers.c **** 			variable of type StaticTimer_t equals the size of the real timer
 322:../freertos/timers.c **** 			structure. */
 323:../freertos/timers.c **** 			volatile size_t xSize = sizeof( StaticTimer_t );
 324:../freertos/timers.c **** 			configASSERT( xSize == sizeof( Timer_t ) );
 325:../freertos/timers.c **** 			( void ) xSize; /* Keeps lint quiet when configASSERT() is not defined. */
 326:../freertos/timers.c **** 		}
 327:../freertos/timers.c **** 		#endif /* configASSERT_DEFINED */
 328:../freertos/timers.c **** 
 329:../freertos/timers.c **** 		/* A pointer to a StaticTimer_t structure MUST be provided, use it. */
 330:../freertos/timers.c **** 		configASSERT( pxTimerBuffer );
 331:../freertos/timers.c **** 		pxNewTimer = ( Timer_t * ) pxTimerBuffer; /*lint !e740 !e9087 StaticTimer_t is a pointer to a Tim
 332:../freertos/timers.c **** 
 333:../freertos/timers.c **** 		if( pxNewTimer != NULL )
 334:../freertos/timers.c **** 		{
 335:../freertos/timers.c **** 			/* Timers can be created statically or dynamically so note this
 336:../freertos/timers.c **** 			timer was created statically in case it is later deleted.  The
 337:../freertos/timers.c **** 			autoreload bit may get set in prvInitialiseNewTimer(). */
 338:../freertos/timers.c **** 			pxNewTimer->ucStatus = tmrSTATUS_IS_STATICALLY_ALLOCATED;
 339:../freertos/timers.c **** 
 340:../freertos/timers.c **** 			prvInitialiseNewTimer( pcTimerName, xTimerPeriodInTicks, uxAutoReload, pvTimerID, pxCallbackFunc
 341:../freertos/timers.c **** 		}
 342:../freertos/timers.c **** 
 343:../freertos/timers.c **** 		return pxNewTimer;
 344:../freertos/timers.c **** 	}
 345:../freertos/timers.c **** 
 346:../freertos/timers.c **** #endif /* configSUPPORT_STATIC_ALLOCATION */
 347:../freertos/timers.c **** /*-----------------------------------------------------------*/
 348:../freertos/timers.c **** 
 349:../freertos/timers.c **** static void prvInitialiseNewTimer(	const char * const pcTimerName,			/*lint !e971 Unqualified char 
 350:../freertos/timers.c **** 									const TickType_t xTimerPeriodInTicks,
 351:../freertos/timers.c **** 									const UBaseType_t uxAutoReload,
 352:../freertos/timers.c **** 									void * const pvTimerID,
 353:../freertos/timers.c **** 									TimerCallbackFunction_t pxCallbackFunction,
 354:../freertos/timers.c **** 									Timer_t *pxNewTimer )
 355:../freertos/timers.c **** {
 356:../freertos/timers.c **** 	/* 0 is not a valid value for xTimerPeriodInTicks. */
 357:../freertos/timers.c **** 	configASSERT( ( xTimerPeriodInTicks > 0 ) );
 358:../freertos/timers.c **** 
 359:../freertos/timers.c **** 	if( pxNewTimer != NULL )
 360:../freertos/timers.c **** 	{
 361:../freertos/timers.c **** 		/* Ensure the infrastructure used by the timer service task has been
 362:../freertos/timers.c **** 		created/initialised. */
 363:../freertos/timers.c **** 		prvCheckForValidListAndQueue();
 364:../freertos/timers.c **** 
 365:../freertos/timers.c **** 		/* Initialise the timer structure members using the function
 366:../freertos/timers.c **** 		parameters. */
 367:../freertos/timers.c **** 		pxNewTimer->pcTimerName = pcTimerName;
 368:../freertos/timers.c **** 		pxNewTimer->xTimerPeriodInTicks = xTimerPeriodInTicks;
 369:../freertos/timers.c **** 		pxNewTimer->pvTimerID = pvTimerID;
 370:../freertos/timers.c **** 		pxNewTimer->pxCallbackFunction = pxCallbackFunction;
 371:../freertos/timers.c **** 		vListInitialiseItem( &( pxNewTimer->xTimerListItem ) );
 372:../freertos/timers.c **** 		if( uxAutoReload != pdFALSE )
ARM GAS  /tmp/cc4130RP.s 			page 9


 373:../freertos/timers.c **** 		{
 374:../freertos/timers.c **** 			pxNewTimer->ucStatus |= tmrSTATUS_IS_AUTORELOAD;
 375:../freertos/timers.c **** 		}
 376:../freertos/timers.c **** 		traceTIMER_CREATE( pxNewTimer );
 377:../freertos/timers.c **** 	}
 378:../freertos/timers.c **** }
 379:../freertos/timers.c **** /*-----------------------------------------------------------*/
 380:../freertos/timers.c **** 
 381:../freertos/timers.c **** BaseType_t xTimerGenericCommand( TimerHandle_t xTimer, const BaseType_t xCommandID, const TickType_
 382:../freertos/timers.c **** {
 383:../freertos/timers.c **** BaseType_t xReturn = pdFAIL;
 384:../freertos/timers.c **** DaemonTaskMessage_t xMessage;
 385:../freertos/timers.c **** 
 386:../freertos/timers.c **** 	configASSERT( xTimer );
 387:../freertos/timers.c **** 
 388:../freertos/timers.c **** 	/* Send a message to the timer service task to perform a particular action
 389:../freertos/timers.c **** 	on a particular timer definition. */
 390:../freertos/timers.c **** 	if( xTimerQueue != NULL )
 391:../freertos/timers.c **** 	{
 392:../freertos/timers.c **** 		/* Send a command to the timer service task to start the xTimer timer. */
 393:../freertos/timers.c **** 		xMessage.xMessageID = xCommandID;
 394:../freertos/timers.c **** 		xMessage.u.xTimerParameters.xMessageValue = xOptionalValue;
 395:../freertos/timers.c **** 		xMessage.u.xTimerParameters.pxTimer = xTimer;
 396:../freertos/timers.c **** 
 397:../freertos/timers.c **** 		if( xCommandID < tmrFIRST_FROM_ISR_COMMAND )
 398:../freertos/timers.c **** 		{
 399:../freertos/timers.c **** 			if( xTaskGetSchedulerState() == taskSCHEDULER_RUNNING )
 400:../freertos/timers.c **** 			{
 401:../freertos/timers.c **** 				xReturn = xQueueSendToBack( xTimerQueue, &xMessage, xTicksToWait );
 402:../freertos/timers.c **** 			}
 403:../freertos/timers.c **** 			else
 404:../freertos/timers.c **** 			{
 405:../freertos/timers.c **** 				xReturn = xQueueSendToBack( xTimerQueue, &xMessage, tmrNO_DELAY );
 406:../freertos/timers.c **** 			}
 407:../freertos/timers.c **** 		}
 408:../freertos/timers.c **** 		else
 409:../freertos/timers.c **** 		{
 410:../freertos/timers.c **** 			xReturn = xQueueSendToBackFromISR( xTimerQueue, &xMessage, pxHigherPriorityTaskWoken );
 411:../freertos/timers.c **** 		}
 412:../freertos/timers.c **** 
 413:../freertos/timers.c **** 		traceTIMER_COMMAND_SEND( xTimer, xCommandID, xOptionalValue, xReturn );
 414:../freertos/timers.c **** 	}
 415:../freertos/timers.c **** 	else
 416:../freertos/timers.c **** 	{
 417:../freertos/timers.c **** 		mtCOVERAGE_TEST_MARKER();
 418:../freertos/timers.c **** 	}
 419:../freertos/timers.c **** 
 420:../freertos/timers.c **** 	return xReturn;
 421:../freertos/timers.c **** }
 422:../freertos/timers.c **** /*-----------------------------------------------------------*/
 423:../freertos/timers.c **** 
 424:../freertos/timers.c **** TaskHandle_t xTimerGetTimerDaemonTaskHandle( void )
 425:../freertos/timers.c **** {
 426:../freertos/timers.c **** 	/* If xTimerGetTimerDaemonTaskHandle() is called before the scheduler has been
 427:../freertos/timers.c **** 	started, then xTimerTaskHandle will be NULL. */
 428:../freertos/timers.c **** 	configASSERT( ( xTimerTaskHandle != NULL ) );
 429:../freertos/timers.c **** 	return xTimerTaskHandle;
ARM GAS  /tmp/cc4130RP.s 			page 10


 430:../freertos/timers.c **** }
 431:../freertos/timers.c **** /*-----------------------------------------------------------*/
 432:../freertos/timers.c **** 
 433:../freertos/timers.c **** TickType_t xTimerGetPeriod( TimerHandle_t xTimer )
 434:../freertos/timers.c **** {
 435:../freertos/timers.c **** Timer_t *pxTimer = xTimer;
 436:../freertos/timers.c **** 
 437:../freertos/timers.c **** 	configASSERT( xTimer );
 438:../freertos/timers.c **** 	return pxTimer->xTimerPeriodInTicks;
 439:../freertos/timers.c **** }
 440:../freertos/timers.c **** /*-----------------------------------------------------------*/
 441:../freertos/timers.c **** 
 442:../freertos/timers.c **** void vTimerSetReloadMode( TimerHandle_t xTimer, const UBaseType_t uxAutoReload )
 443:../freertos/timers.c **** {
 444:../freertos/timers.c **** Timer_t * pxTimer =  xTimer;
 445:../freertos/timers.c **** 
 446:../freertos/timers.c **** 	configASSERT( xTimer );
 447:../freertos/timers.c **** 	taskENTER_CRITICAL();
 448:../freertos/timers.c **** 	{
 449:../freertos/timers.c **** 		if( uxAutoReload != pdFALSE )
 450:../freertos/timers.c **** 		{
 451:../freertos/timers.c **** 			pxTimer->ucStatus |= tmrSTATUS_IS_AUTORELOAD;
 452:../freertos/timers.c **** 		}
 453:../freertos/timers.c **** 		else
 454:../freertos/timers.c **** 		{
 455:../freertos/timers.c **** 			pxTimer->ucStatus &= ~tmrSTATUS_IS_AUTORELOAD;
 456:../freertos/timers.c **** 		}
 457:../freertos/timers.c **** 	}
 458:../freertos/timers.c **** 	taskEXIT_CRITICAL();
 459:../freertos/timers.c **** }
 460:../freertos/timers.c **** /*-----------------------------------------------------------*/
 461:../freertos/timers.c **** 
 462:../freertos/timers.c **** TickType_t xTimerGetExpiryTime( TimerHandle_t xTimer )
 463:../freertos/timers.c **** {
 464:../freertos/timers.c **** Timer_t * pxTimer =  xTimer;
 465:../freertos/timers.c **** TickType_t xReturn;
 466:../freertos/timers.c **** 
 467:../freertos/timers.c **** 	configASSERT( xTimer );
 468:../freertos/timers.c **** 	xReturn = listGET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ) );
 469:../freertos/timers.c **** 	return xReturn;
 470:../freertos/timers.c **** }
 471:../freertos/timers.c **** /*-----------------------------------------------------------*/
 472:../freertos/timers.c **** 
 473:../freertos/timers.c **** const char * pcTimerGetName( TimerHandle_t xTimer ) /*lint !e971 Unqualified char types are allowed
 474:../freertos/timers.c **** {
 475:../freertos/timers.c **** Timer_t *pxTimer = xTimer;
 476:../freertos/timers.c **** 
 477:../freertos/timers.c **** 	configASSERT( xTimer );
 478:../freertos/timers.c **** 	return pxTimer->pcTimerName;
 479:../freertos/timers.c **** }
 480:../freertos/timers.c **** /*-----------------------------------------------------------*/
 481:../freertos/timers.c **** 
 482:../freertos/timers.c **** static void prvProcessExpiredTimer( const TickType_t xNextExpireTime, const TickType_t xTimeNow )
 483:../freertos/timers.c **** {
 484:../freertos/timers.c **** BaseType_t xResult;
 485:../freertos/timers.c **** Timer_t * const pxTimer = ( Timer_t * ) listGET_OWNER_OF_HEAD_ENTRY( pxCurrentTimerList ); /*lint !
 486:../freertos/timers.c **** 
ARM GAS  /tmp/cc4130RP.s 			page 11


 487:../freertos/timers.c **** 	/* Remove the timer from the list of active timers.  A check has already
 488:../freertos/timers.c **** 	been performed to ensure the list is not empty. */
 489:../freertos/timers.c **** 	( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
 490:../freertos/timers.c **** 	traceTIMER_EXPIRED( pxTimer );
 491:../freertos/timers.c **** 
 492:../freertos/timers.c **** 	/* If the timer is an auto reload timer then calculate the next
 493:../freertos/timers.c **** 	expiry time and re-insert the timer in the list of active timers. */
 494:../freertos/timers.c **** 	if( ( pxTimer->ucStatus & tmrSTATUS_IS_AUTORELOAD ) != 0 )
 495:../freertos/timers.c **** 	{
 496:../freertos/timers.c **** 		/* The timer is inserted into a list using a time relative to anything
 497:../freertos/timers.c **** 		other than the current time.  It will therefore be inserted into the
 498:../freertos/timers.c **** 		correct list relative to the time this task thinks it is now. */
 499:../freertos/timers.c **** 		if( prvInsertTimerInActiveList( pxTimer, ( xNextExpireTime + pxTimer->xTimerPeriodInTicks ), xTim
 500:../freertos/timers.c **** 		{
 501:../freertos/timers.c **** 			/* The timer expired before it was added to the active timer
 502:../freertos/timers.c **** 			list.  Reload it now.  */
 503:../freertos/timers.c **** 			xResult = xTimerGenericCommand( pxTimer, tmrCOMMAND_START_DONT_TRACE, xNextExpireTime, NULL, tmr
 504:../freertos/timers.c **** 			configASSERT( xResult );
 505:../freertos/timers.c **** 			( void ) xResult;
 506:../freertos/timers.c **** 		}
 507:../freertos/timers.c **** 		else
 508:../freertos/timers.c **** 		{
 509:../freertos/timers.c **** 			mtCOVERAGE_TEST_MARKER();
 510:../freertos/timers.c **** 		}
 511:../freertos/timers.c **** 	}
 512:../freertos/timers.c **** 	else
 513:../freertos/timers.c **** 	{
 514:../freertos/timers.c **** 		pxTimer->ucStatus &= ~tmrSTATUS_IS_ACTIVE;
 515:../freertos/timers.c **** 		mtCOVERAGE_TEST_MARKER();
 516:../freertos/timers.c **** 	}
 517:../freertos/timers.c **** 
 518:../freertos/timers.c **** 	/* Call the timer callback. */
 519:../freertos/timers.c **** 	pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
 520:../freertos/timers.c **** }
 521:../freertos/timers.c **** /*-----------------------------------------------------------*/
 522:../freertos/timers.c **** 
 523:../freertos/timers.c **** static portTASK_FUNCTION( prvTimerTask, pvParameters )
 524:../freertos/timers.c **** {
 525:../freertos/timers.c **** TickType_t xNextExpireTime;
 526:../freertos/timers.c **** BaseType_t xListWasEmpty;
 527:../freertos/timers.c **** 
 528:../freertos/timers.c **** 	/* Just to avoid compiler warnings. */
 529:../freertos/timers.c **** 	( void ) pvParameters;
 530:../freertos/timers.c **** 
 531:../freertos/timers.c **** 	#if( configUSE_DAEMON_TASK_STARTUP_HOOK == 1 )
 532:../freertos/timers.c **** 	{
 533:../freertos/timers.c **** 		extern void vApplicationDaemonTaskStartupHook( void );
 534:../freertos/timers.c **** 
 535:../freertos/timers.c **** 		/* Allow the application writer to execute some code in the context of
 536:../freertos/timers.c **** 		this task at the point the task starts executing.  This is useful if the
 537:../freertos/timers.c **** 		application includes initialisation code that would benefit from
 538:../freertos/timers.c **** 		executing after the scheduler has been started. */
 539:../freertos/timers.c **** 		vApplicationDaemonTaskStartupHook();
 540:../freertos/timers.c **** 	}
 541:../freertos/timers.c **** 	#endif /* configUSE_DAEMON_TASK_STARTUP_HOOK */
 542:../freertos/timers.c **** 
 543:../freertos/timers.c **** 	for( ;; )
ARM GAS  /tmp/cc4130RP.s 			page 12


 544:../freertos/timers.c **** 	{
 545:../freertos/timers.c **** 		/* Query the timers list to see if it contains any timers, and if so,
 546:../freertos/timers.c **** 		obtain the time at which the next timer will expire. */
 547:../freertos/timers.c **** 		xNextExpireTime = prvGetNextExpireTime( &xListWasEmpty );
 548:../freertos/timers.c **** 
 549:../freertos/timers.c **** 		/* If a timer has expired, process it.  Otherwise, block this task
 550:../freertos/timers.c **** 		until either a timer does expire, or a command is received. */
 551:../freertos/timers.c **** 		prvProcessTimerOrBlockTask( xNextExpireTime, xListWasEmpty );
 552:../freertos/timers.c **** 
 553:../freertos/timers.c **** 		/* Empty the command queue. */
 554:../freertos/timers.c **** 		prvProcessReceivedCommands();
 555:../freertos/timers.c **** 	}
 556:../freertos/timers.c **** }
 557:../freertos/timers.c **** /*-----------------------------------------------------------*/
 558:../freertos/timers.c **** 
 559:../freertos/timers.c **** static void prvProcessTimerOrBlockTask( const TickType_t xNextExpireTime, BaseType_t xListWasEmpty 
 560:../freertos/timers.c **** {
 561:../freertos/timers.c **** TickType_t xTimeNow;
 562:../freertos/timers.c **** BaseType_t xTimerListsWereSwitched;
 563:../freertos/timers.c **** 
 564:../freertos/timers.c **** 	vTaskSuspendAll();
 565:../freertos/timers.c **** 	{
 566:../freertos/timers.c **** 		/* Obtain the time now to make an assessment as to whether the timer
 567:../freertos/timers.c **** 		has expired or not.  If obtaining the time causes the lists to switch
 568:../freertos/timers.c **** 		then don't process this timer as any timers that remained in the list
 569:../freertos/timers.c **** 		when the lists were switched will have been processed within the
 570:../freertos/timers.c **** 		prvSampleTimeNow() function. */
 571:../freertos/timers.c **** 		xTimeNow = prvSampleTimeNow( &xTimerListsWereSwitched );
 572:../freertos/timers.c **** 		if( xTimerListsWereSwitched == pdFALSE )
 573:../freertos/timers.c **** 		{
 574:../freertos/timers.c **** 			/* The tick count has not overflowed, has the timer expired? */
 575:../freertos/timers.c **** 			if( ( xListWasEmpty == pdFALSE ) && ( xNextExpireTime <= xTimeNow ) )
 576:../freertos/timers.c **** 			{
 577:../freertos/timers.c **** 				( void ) xTaskResumeAll();
 578:../freertos/timers.c **** 				prvProcessExpiredTimer( xNextExpireTime, xTimeNow );
 579:../freertos/timers.c **** 			}
 580:../freertos/timers.c **** 			else
 581:../freertos/timers.c **** 			{
 582:../freertos/timers.c **** 				/* The tick count has not overflowed, and the next expire
 583:../freertos/timers.c **** 				time has not been reached yet.  This task should therefore
 584:../freertos/timers.c **** 				block to wait for the next expire time or a command to be
 585:../freertos/timers.c **** 				received - whichever comes first.  The following line cannot
 586:../freertos/timers.c **** 				be reached unless xNextExpireTime > xTimeNow, except in the
 587:../freertos/timers.c **** 				case when the current timer list is empty. */
 588:../freertos/timers.c **** 				if( xListWasEmpty != pdFALSE )
 589:../freertos/timers.c **** 				{
 590:../freertos/timers.c **** 					/* The current timer list is empty - is the overflow list
 591:../freertos/timers.c **** 					also empty? */
 592:../freertos/timers.c **** 					xListWasEmpty = listLIST_IS_EMPTY( pxOverflowTimerList );
 593:../freertos/timers.c **** 				}
 594:../freertos/timers.c **** 
 595:../freertos/timers.c **** 				vQueueWaitForMessageRestricted( xTimerQueue, ( xNextExpireTime - xTimeNow ), xListWasEmpty );
 596:../freertos/timers.c **** 
 597:../freertos/timers.c **** 				if( xTaskResumeAll() == pdFALSE )
 598:../freertos/timers.c **** 				{
 599:../freertos/timers.c **** 					/* Yield to wait for either a command to arrive, or the
 600:../freertos/timers.c **** 					block time to expire.  If a command arrived between the
ARM GAS  /tmp/cc4130RP.s 			page 13


 601:../freertos/timers.c **** 					critical section being exited and this yield then the yield
 602:../freertos/timers.c **** 					will not cause the task to block. */
 603:../freertos/timers.c **** 					portYIELD_WITHIN_API();
 604:../freertos/timers.c **** 				}
 605:../freertos/timers.c **** 				else
 606:../freertos/timers.c **** 				{
 607:../freertos/timers.c **** 					mtCOVERAGE_TEST_MARKER();
 608:../freertos/timers.c **** 				}
 609:../freertos/timers.c **** 			}
 610:../freertos/timers.c **** 		}
 611:../freertos/timers.c **** 		else
 612:../freertos/timers.c **** 		{
 613:../freertos/timers.c **** 			( void ) xTaskResumeAll();
 614:../freertos/timers.c **** 		}
 615:../freertos/timers.c **** 	}
 616:../freertos/timers.c **** }
 617:../freertos/timers.c **** /*-----------------------------------------------------------*/
 618:../freertos/timers.c **** 
 619:../freertos/timers.c **** static TickType_t prvGetNextExpireTime( BaseType_t * const pxListWasEmpty )
 620:../freertos/timers.c **** {
 621:../freertos/timers.c **** TickType_t xNextExpireTime;
 622:../freertos/timers.c **** 
 623:../freertos/timers.c **** 	/* Timers are listed in expiry time order, with the head of the list
 624:../freertos/timers.c **** 	referencing the task that will expire first.  Obtain the time at which
 625:../freertos/timers.c **** 	the timer with the nearest expiry time will expire.  If there are no
 626:../freertos/timers.c **** 	active timers then just set the next expire time to 0.  That will cause
 627:../freertos/timers.c **** 	this task to unblock when the tick count overflows, at which point the
 628:../freertos/timers.c **** 	timer lists will be switched and the next expiry time can be
 629:../freertos/timers.c **** 	re-assessed.  */
 630:../freertos/timers.c **** 	*pxListWasEmpty = listLIST_IS_EMPTY( pxCurrentTimerList );
 631:../freertos/timers.c **** 	if( *pxListWasEmpty == pdFALSE )
 632:../freertos/timers.c **** 	{
 633:../freertos/timers.c **** 		xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
 634:../freertos/timers.c **** 	}
 635:../freertos/timers.c **** 	else
 636:../freertos/timers.c **** 	{
 637:../freertos/timers.c **** 		/* Ensure the task unblocks when the tick count rolls over. */
 638:../freertos/timers.c **** 		xNextExpireTime = ( TickType_t ) 0U;
 639:../freertos/timers.c **** 	}
 640:../freertos/timers.c **** 
 641:../freertos/timers.c **** 	return xNextExpireTime;
 642:../freertos/timers.c **** }
 643:../freertos/timers.c **** /*-----------------------------------------------------------*/
 644:../freertos/timers.c **** 
 645:../freertos/timers.c **** static TickType_t prvSampleTimeNow( BaseType_t * const pxTimerListsWereSwitched )
 646:../freertos/timers.c **** {
 647:../freertos/timers.c **** TickType_t xTimeNow;
 648:../freertos/timers.c **** PRIVILEGED_DATA static TickType_t xLastTime = ( TickType_t ) 0U; /*lint !e956 Variable is only acce
 649:../freertos/timers.c **** 
 650:../freertos/timers.c **** 	xTimeNow = xTaskGetTickCount();
 651:../freertos/timers.c **** 
 652:../freertos/timers.c **** 	if( xTimeNow < xLastTime )
 653:../freertos/timers.c **** 	{
 654:../freertos/timers.c **** 		prvSwitchTimerLists();
 655:../freertos/timers.c **** 		*pxTimerListsWereSwitched = pdTRUE;
 656:../freertos/timers.c **** 	}
 657:../freertos/timers.c **** 	else
ARM GAS  /tmp/cc4130RP.s 			page 14


 658:../freertos/timers.c **** 	{
 659:../freertos/timers.c **** 		*pxTimerListsWereSwitched = pdFALSE;
 660:../freertos/timers.c **** 	}
 661:../freertos/timers.c **** 
 662:../freertos/timers.c **** 	xLastTime = xTimeNow;
 663:../freertos/timers.c **** 
 664:../freertos/timers.c **** 	return xTimeNow;
 665:../freertos/timers.c **** }
 666:../freertos/timers.c **** /*-----------------------------------------------------------*/
 667:../freertos/timers.c **** 
 668:../freertos/timers.c **** static BaseType_t prvInsertTimerInActiveList( Timer_t * const pxTimer, const TickType_t xNextExpiry
 669:../freertos/timers.c **** {
 670:../freertos/timers.c **** BaseType_t xProcessTimerNow = pdFALSE;
 671:../freertos/timers.c **** 
 672:../freertos/timers.c **** 	listSET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ), xNextExpiryTime );
 673:../freertos/timers.c **** 	listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );
 674:../freertos/timers.c **** 
 675:../freertos/timers.c **** 	if( xNextExpiryTime <= xTimeNow )
 676:../freertos/timers.c **** 	{
 677:../freertos/timers.c **** 		/* Has the expiry time elapsed between the command to start/reset a
 678:../freertos/timers.c **** 		timer was issued, and the time the command was processed? */
 679:../freertos/timers.c **** 		if( ( ( TickType_t ) ( xTimeNow - xCommandTime ) ) >= pxTimer->xTimerPeriodInTicks ) /*lint !e961
 680:../freertos/timers.c **** 		{
 681:../freertos/timers.c **** 			/* The time between a command being issued and the command being
 682:../freertos/timers.c **** 			processed actually exceeds the timers period.  */
 683:../freertos/timers.c **** 			xProcessTimerNow = pdTRUE;
 684:../freertos/timers.c **** 		}
 685:../freertos/timers.c **** 		else
 686:../freertos/timers.c **** 		{
 687:../freertos/timers.c **** 			vListInsert( pxOverflowTimerList, &( pxTimer->xTimerListItem ) );
 688:../freertos/timers.c **** 		}
 689:../freertos/timers.c **** 	}
 690:../freertos/timers.c **** 	else
 691:../freertos/timers.c **** 	{
 692:../freertos/timers.c **** 		if( ( xTimeNow < xCommandTime ) && ( xNextExpiryTime >= xCommandTime ) )
 693:../freertos/timers.c **** 		{
 694:../freertos/timers.c **** 			/* If, since the command was issued, the tick count has overflowed
 695:../freertos/timers.c **** 			but the expiry time has not, then the timer must have already passed
 696:../freertos/timers.c **** 			its expiry time and should be processed immediately. */
 697:../freertos/timers.c **** 			xProcessTimerNow = pdTRUE;
 698:../freertos/timers.c **** 		}
 699:../freertos/timers.c **** 		else
 700:../freertos/timers.c **** 		{
 701:../freertos/timers.c **** 			vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 702:../freertos/timers.c **** 		}
 703:../freertos/timers.c **** 	}
 704:../freertos/timers.c **** 
 705:../freertos/timers.c **** 	return xProcessTimerNow;
 706:../freertos/timers.c **** }
 707:../freertos/timers.c **** /*-----------------------------------------------------------*/
 708:../freertos/timers.c **** 
 709:../freertos/timers.c **** static void	prvProcessReceivedCommands( void )
 710:../freertos/timers.c **** {
 711:../freertos/timers.c **** DaemonTaskMessage_t xMessage;
 712:../freertos/timers.c **** Timer_t *pxTimer;
 713:../freertos/timers.c **** BaseType_t xTimerListsWereSwitched, xResult;
 714:../freertos/timers.c **** TickType_t xTimeNow;
ARM GAS  /tmp/cc4130RP.s 			page 15


 715:../freertos/timers.c **** 
 716:../freertos/timers.c **** 	while( xQueueReceive( xTimerQueue, &xMessage, tmrNO_DELAY ) != pdFAIL ) /*lint !e603 xMessage does
 717:../freertos/timers.c **** 	{
 718:../freertos/timers.c **** 		#if ( INCLUDE_xTimerPendFunctionCall == 1 )
 719:../freertos/timers.c **** 		{
 720:../freertos/timers.c **** 			/* Negative commands are pended function calls rather than timer
 721:../freertos/timers.c **** 			commands. */
 722:../freertos/timers.c **** 			if( xMessage.xMessageID < ( BaseType_t ) 0 )
 723:../freertos/timers.c **** 			{
 724:../freertos/timers.c **** 				const CallbackParameters_t * const pxCallback = &( xMessage.u.xCallbackParameters );
 725:../freertos/timers.c **** 
 726:../freertos/timers.c **** 				/* The timer uses the xCallbackParameters member to request a
 727:../freertos/timers.c **** 				callback be executed.  Check the callback is not NULL. */
 728:../freertos/timers.c **** 				configASSERT( pxCallback );
 729:../freertos/timers.c **** 
 730:../freertos/timers.c **** 				/* Call the function. */
 731:../freertos/timers.c **** 				pxCallback->pxCallbackFunction( pxCallback->pvParameter1, pxCallback->ulParameter2 );
 732:../freertos/timers.c **** 			}
 733:../freertos/timers.c **** 			else
 734:../freertos/timers.c **** 			{
 735:../freertos/timers.c **** 				mtCOVERAGE_TEST_MARKER();
 736:../freertos/timers.c **** 			}
 737:../freertos/timers.c **** 		}
 738:../freertos/timers.c **** 		#endif /* INCLUDE_xTimerPendFunctionCall */
 739:../freertos/timers.c **** 
 740:../freertos/timers.c **** 		/* Commands that are positive are timer commands rather than pended
 741:../freertos/timers.c **** 		function calls. */
 742:../freertos/timers.c **** 		if( xMessage.xMessageID >= ( BaseType_t ) 0 )
 743:../freertos/timers.c **** 		{
 744:../freertos/timers.c **** 			/* The messages uses the xTimerParameters member to work on a
 745:../freertos/timers.c **** 			software timer. */
 746:../freertos/timers.c **** 			pxTimer = xMessage.u.xTimerParameters.pxTimer;
 747:../freertos/timers.c **** 
 748:../freertos/timers.c **** 			if( listIS_CONTAINED_WITHIN( NULL, &( pxTimer->xTimerListItem ) ) == pdFALSE ) /*lint !e961. The
 749:../freertos/timers.c **** 			{
 750:../freertos/timers.c **** 				/* The timer is in a list, remove it. */
 751:../freertos/timers.c **** 				( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
 752:../freertos/timers.c **** 			}
 753:../freertos/timers.c **** 			else
 754:../freertos/timers.c **** 			{
 755:../freertos/timers.c **** 				mtCOVERAGE_TEST_MARKER();
 756:../freertos/timers.c **** 			}
 757:../freertos/timers.c **** 
 758:../freertos/timers.c **** 			traceTIMER_COMMAND_RECEIVED( pxTimer, xMessage.xMessageID, xMessage.u.xTimerParameters.xMessageV
 759:../freertos/timers.c **** 
 760:../freertos/timers.c **** 			/* In this case the xTimerListsWereSwitched parameter is not used, but
 761:../freertos/timers.c **** 			it must be present in the function call.  prvSampleTimeNow() must be
 762:../freertos/timers.c **** 			called after the message is received from xTimerQueue so there is no
 763:../freertos/timers.c **** 			possibility of a higher priority task adding a message to the message
 764:../freertos/timers.c **** 			queue with a time that is ahead of the timer daemon task (because it
 765:../freertos/timers.c **** 			pre-empted the timer daemon task after the xTimeNow value was set). */
 766:../freertos/timers.c **** 			xTimeNow = prvSampleTimeNow( &xTimerListsWereSwitched );
 767:../freertos/timers.c **** 
 768:../freertos/timers.c **** 			switch( xMessage.xMessageID )
 769:../freertos/timers.c **** 			{
 770:../freertos/timers.c **** 				case tmrCOMMAND_START :
 771:../freertos/timers.c **** 				case tmrCOMMAND_START_FROM_ISR :
ARM GAS  /tmp/cc4130RP.s 			page 16


 772:../freertos/timers.c **** 				case tmrCOMMAND_RESET :
 773:../freertos/timers.c **** 				case tmrCOMMAND_RESET_FROM_ISR :
 774:../freertos/timers.c **** 				case tmrCOMMAND_START_DONT_TRACE :
 775:../freertos/timers.c **** 					/* Start or restart a timer. */
 776:../freertos/timers.c **** 					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
 777:../freertos/timers.c **** 					if( prvInsertTimerInActiveList( pxTimer,  xMessage.u.xTimerParameters.xMessageValue + pxTimer-
 778:../freertos/timers.c **** 					{
 779:../freertos/timers.c **** 						/* The timer expired before it was added to the active
 780:../freertos/timers.c **** 						timer list.  Process it now. */
 781:../freertos/timers.c **** 						pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
 782:../freertos/timers.c **** 						traceTIMER_EXPIRED( pxTimer );
 783:../freertos/timers.c **** 
 784:../freertos/timers.c **** 						if( ( pxTimer->ucStatus & tmrSTATUS_IS_AUTORELOAD ) != 0 )
 785:../freertos/timers.c **** 						{
 786:../freertos/timers.c **** 							xResult = xTimerGenericCommand( pxTimer, tmrCOMMAND_START_DONT_TRACE, xMessage.u.xTimerParam
 787:../freertos/timers.c **** 							configASSERT( xResult );
 788:../freertos/timers.c **** 							( void ) xResult;
 789:../freertos/timers.c **** 						}
 790:../freertos/timers.c **** 						else
 791:../freertos/timers.c **** 						{
 792:../freertos/timers.c **** 							mtCOVERAGE_TEST_MARKER();
 793:../freertos/timers.c **** 						}
 794:../freertos/timers.c **** 					}
 795:../freertos/timers.c **** 					else
 796:../freertos/timers.c **** 					{
 797:../freertos/timers.c **** 						mtCOVERAGE_TEST_MARKER();
 798:../freertos/timers.c **** 					}
 799:../freertos/timers.c **** 					break;
 800:../freertos/timers.c **** 
 801:../freertos/timers.c **** 				case tmrCOMMAND_STOP :
 802:../freertos/timers.c **** 				case tmrCOMMAND_STOP_FROM_ISR :
 803:../freertos/timers.c **** 					/* The timer has already been removed from the active list. */
 804:../freertos/timers.c **** 					pxTimer->ucStatus &= ~tmrSTATUS_IS_ACTIVE;
 805:../freertos/timers.c **** 					break;
 806:../freertos/timers.c **** 
 807:../freertos/timers.c **** 				case tmrCOMMAND_CHANGE_PERIOD :
 808:../freertos/timers.c **** 				case tmrCOMMAND_CHANGE_PERIOD_FROM_ISR :
 809:../freertos/timers.c **** 					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
 810:../freertos/timers.c **** 					pxTimer->xTimerPeriodInTicks = xMessage.u.xTimerParameters.xMessageValue;
 811:../freertos/timers.c **** 					configASSERT( ( pxTimer->xTimerPeriodInTicks > 0 ) );
 812:../freertos/timers.c **** 
 813:../freertos/timers.c **** 					/* The new period does not really have a reference, and can
 814:../freertos/timers.c **** 					be longer or shorter than the old one.  The command time is
 815:../freertos/timers.c **** 					therefore set to the current time, and as the period cannot
 816:../freertos/timers.c **** 					be zero the next expiry time can only be in the future,
 817:../freertos/timers.c **** 					meaning (unlike for the xTimerStart() case above) there is
 818:../freertos/timers.c **** 					no fail case that needs to be handled here. */
 819:../freertos/timers.c **** 					( void ) prvInsertTimerInActiveList( pxTimer, ( xTimeNow + pxTimer->xTimerPeriodInTicks ), xTi
 820:../freertos/timers.c **** 					break;
 821:../freertos/timers.c **** 
 822:../freertos/timers.c **** 				case tmrCOMMAND_DELETE :
 823:../freertos/timers.c **** 					#if ( configSUPPORT_DYNAMIC_ALLOCATION == 1 )
 824:../freertos/timers.c **** 					{
 825:../freertos/timers.c **** 						/* The timer has already been removed from the active list,
 826:../freertos/timers.c **** 						just free up the memory if the memory was dynamically
 827:../freertos/timers.c **** 						allocated. */
 828:../freertos/timers.c **** 						if( ( pxTimer->ucStatus & tmrSTATUS_IS_STATICALLY_ALLOCATED ) == ( uint8_t ) 0 )
ARM GAS  /tmp/cc4130RP.s 			page 17


 829:../freertos/timers.c **** 						{
 830:../freertos/timers.c **** 							vPortFree( pxTimer );
 831:../freertos/timers.c **** 						}
 832:../freertos/timers.c **** 						else
 833:../freertos/timers.c **** 						{
 834:../freertos/timers.c **** 							pxTimer->ucStatus &= ~tmrSTATUS_IS_ACTIVE;
 835:../freertos/timers.c **** 						}
 836:../freertos/timers.c **** 					}
 837:../freertos/timers.c **** 					#else
 838:../freertos/timers.c **** 					{
 839:../freertos/timers.c **** 						/* If dynamic allocation is not enabled, the memory
 840:../freertos/timers.c **** 						could not have been dynamically allocated. So there is
 841:../freertos/timers.c **** 						no need to free the memory - just mark the timer as
 842:../freertos/timers.c **** 						"not active". */
 843:../freertos/timers.c **** 						pxTimer->ucStatus &= ~tmrSTATUS_IS_ACTIVE;
 844:../freertos/timers.c **** 					}
 845:../freertos/timers.c **** 					#endif /* configSUPPORT_DYNAMIC_ALLOCATION */
 846:../freertos/timers.c **** 					break;
 847:../freertos/timers.c **** 
 848:../freertos/timers.c **** 				default	:
 849:../freertos/timers.c **** 					/* Don't expect to get here. */
 850:../freertos/timers.c **** 					break;
 851:../freertos/timers.c **** 			}
 852:../freertos/timers.c **** 		}
 853:../freertos/timers.c **** 	}
 854:../freertos/timers.c **** }
 855:../freertos/timers.c **** /*-----------------------------------------------------------*/
 856:../freertos/timers.c **** 
 857:../freertos/timers.c **** static void prvSwitchTimerLists( void )
 858:../freertos/timers.c **** {
 859:../freertos/timers.c **** TickType_t xNextExpireTime, xReloadTime;
 860:../freertos/timers.c **** List_t *pxTemp;
 861:../freertos/timers.c **** Timer_t *pxTimer;
 862:../freertos/timers.c **** BaseType_t xResult;
 863:../freertos/timers.c **** 
 864:../freertos/timers.c **** 	/* The tick count has overflowed.  The timer lists must be switched.
 865:../freertos/timers.c **** 	If there are any timers still referenced from the current timer list
 866:../freertos/timers.c **** 	then they must have expired and should be processed before the lists
 867:../freertos/timers.c **** 	are switched. */
 868:../freertos/timers.c **** 	while( listLIST_IS_EMPTY( pxCurrentTimerList ) == pdFALSE )
 869:../freertos/timers.c **** 	{
 870:../freertos/timers.c **** 		xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
 871:../freertos/timers.c **** 
 872:../freertos/timers.c **** 		/* Remove the timer from the list. */
 873:../freertos/timers.c **** 		pxTimer = ( Timer_t * ) listGET_OWNER_OF_HEAD_ENTRY( pxCurrentTimerList ); /*lint !e9087 !e9079 v
 874:../freertos/timers.c **** 		( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
 875:../freertos/timers.c **** 		traceTIMER_EXPIRED( pxTimer );
 876:../freertos/timers.c **** 
 877:../freertos/timers.c **** 		/* Execute its callback, then send a command to restart the timer if
 878:../freertos/timers.c **** 		it is an auto-reload timer.  It cannot be restarted here as the lists
 879:../freertos/timers.c **** 		have not yet been switched. */
 880:../freertos/timers.c **** 		pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
 881:../freertos/timers.c **** 
 882:../freertos/timers.c **** 		if( ( pxTimer->ucStatus & tmrSTATUS_IS_AUTORELOAD ) != 0 )
 883:../freertos/timers.c **** 		{
 884:../freertos/timers.c **** 			/* Calculate the reload value, and if the reload value results in
 885:../freertos/timers.c **** 			the timer going into the same timer list then it has already expired
ARM GAS  /tmp/cc4130RP.s 			page 18


 886:../freertos/timers.c **** 			and the timer should be re-inserted into the current list so it is
 887:../freertos/timers.c **** 			processed again within this loop.  Otherwise a command should be sent
 888:../freertos/timers.c **** 			to restart the timer to ensure it is only inserted into a list after
 889:../freertos/timers.c **** 			the lists have been swapped. */
 890:../freertos/timers.c **** 			xReloadTime = ( xNextExpireTime + pxTimer->xTimerPeriodInTicks );
 891:../freertos/timers.c **** 			if( xReloadTime > xNextExpireTime )
 892:../freertos/timers.c **** 			{
 893:../freertos/timers.c **** 				listSET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ), xReloadTime );
 894:../freertos/timers.c **** 				listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );
 895:../freertos/timers.c **** 				vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 896:../freertos/timers.c **** 			}
 897:../freertos/timers.c **** 			else
 898:../freertos/timers.c **** 			{
 899:../freertos/timers.c **** 				xResult = xTimerGenericCommand( pxTimer, tmrCOMMAND_START_DONT_TRACE, xNextExpireTime, NULL, tm
 900:../freertos/timers.c **** 				configASSERT( xResult );
 901:../freertos/timers.c **** 				( void ) xResult;
 902:../freertos/timers.c **** 			}
 903:../freertos/timers.c **** 		}
 904:../freertos/timers.c **** 		else
 905:../freertos/timers.c **** 		{
 906:../freertos/timers.c **** 			mtCOVERAGE_TEST_MARKER();
 907:../freertos/timers.c **** 		}
 908:../freertos/timers.c **** 	}
 909:../freertos/timers.c **** 
 910:../freertos/timers.c **** 	pxTemp = pxCurrentTimerList;
 911:../freertos/timers.c **** 	pxCurrentTimerList = pxOverflowTimerList;
 912:../freertos/timers.c **** 	pxOverflowTimerList = pxTemp;
 913:../freertos/timers.c **** }
 914:../freertos/timers.c **** /*-----------------------------------------------------------*/
 915:../freertos/timers.c **** 
 916:../freertos/timers.c **** static void prvCheckForValidListAndQueue( void )
 917:../freertos/timers.c **** {
  85              		.loc 1 917 1 view -0
  86              		.cfi_startproc
  87              		@ args = 0, pretend = 0, frame = 0
  88              		@ frame_needed = 0, uses_anonymous_args = 0
 918:../freertos/timers.c **** 	/* Check that the list from which active timers are referenced, and the
 919:../freertos/timers.c **** 	queue used to communicate with the timer service, have been
 920:../freertos/timers.c **** 	initialised. */
 921:../freertos/timers.c **** 	taskENTER_CRITICAL();
  89              		.loc 1 921 2 view .LVU1
  90              	@ ../freertos/timers.c:917: {
 917:../freertos/timers.c **** 	/* Check that the list from which active timers are referenced, and the
  91              		.loc 1 917 1 is_stmt 0 view .LVU2
  92 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}	@
  93              	.LCFI0:
  94              		.cfi_def_cfa_offset 24
  95              		.cfi_offset 3, -24
  96              		.cfi_offset 4, -20
  97              		.cfi_offset 5, -16
  98              		.cfi_offset 6, -12
  99              		.cfi_offset 7, -8
 100              		.cfi_offset 14, -4
 101              	@ ../freertos/timers.c:923: 		if( xTimerQueue == NULL )
 922:../freertos/timers.c **** 	{
 923:../freertos/timers.c **** 		if( xTimerQueue == NULL )
 102              		.loc 1 923 19 view .LVU3
ARM GAS  /tmp/cc4130RP.s 			page 19


 103 0002 0D4C     		ldr	r4, .L3	@ tmp115,
 104              	@ ../freertos/timers.c:921: 	taskENTER_CRITICAL();
 921:../freertos/timers.c **** 	{
 105              		.loc 1 921 2 view .LVU4
 106 0004 FFF7FEFF 		bl	vPortEnterCritical		@
 107              	.LVL0:
 108              		.loc 1 923 3 is_stmt 1 view .LVU5
 109              	@ ../freertos/timers.c:923: 		if( xTimerQueue == NULL )
 110              		.loc 1 923 5 is_stmt 0 view .LVU6
 111 0008 2568     		ldr	r5, [r4]	@ xTimerQueue, xTimerQueue
 112 000a 85B9     		cbnz	r5, .L2	@ xTimerQueue,
 924:../freertos/timers.c **** 		{
 925:../freertos/timers.c **** 			vListInitialise( &xActiveTimerList1 );
 113              		.loc 1 925 4 is_stmt 1 view .LVU7
 114 000c 271D     		adds	r7, r4, #4	@ tmp118, tmp115,
 115 000e 3846     		mov	r0, r7	@, tmp118
 116              	@ ../freertos/timers.c:926: 			vListInitialise( &xActiveTimerList2 );
 926:../freertos/timers.c **** 			vListInitialise( &xActiveTimerList2 );
 117              		.loc 1 926 4 is_stmt 0 view .LVU8
 118 0010 04F11806 		add	r6, r4, #24	@ tmp120, tmp115,
 119              	@ ../freertos/timers.c:925: 			vListInitialise( &xActiveTimerList1 );
 925:../freertos/timers.c **** 			vListInitialise( &xActiveTimerList2 );
 120              		.loc 1 925 4 view .LVU9
 121 0014 FFF7FEFF 		bl	vListInitialise		@
 122              	.LVL1:
 123              		.loc 1 926 4 is_stmt 1 view .LVU10
 124 0018 3046     		mov	r0, r6	@, tmp120
 125 001a FFF7FEFF 		bl	vListInitialise		@
 126              	.LVL2:
 927:../freertos/timers.c **** 			pxCurrentTimerList = &xActiveTimerList1;
 127              		.loc 1 927 4 view .LVU11
 128              	@ ../freertos/timers.c:941: 				xTimerQueue = xQueueCreate( ( UBaseType_t ) configTIMER_QUEUE_LENGT
 928:../freertos/timers.c **** 			pxOverflowTimerList = &xActiveTimerList2;
 929:../freertos/timers.c **** 
 930:../freertos/timers.c **** 			#if( configSUPPORT_STATIC_ALLOCATION == 1 )
 931:../freertos/timers.c **** 			{
 932:../freertos/timers.c **** 				/* The timer queue is allocated statically in case
 933:../freertos/timers.c **** 				configSUPPORT_DYNAMIC_ALLOCATION is 0. */
 934:../freertos/timers.c **** 				static StaticQueue_t xStaticTimerQueue; /*lint !e956 Ok to declare in this manner to prevent ad
 935:../freertos/timers.c **** 				static uint8_t ucStaticTimerQueueStorage[ ( size_t ) configTIMER_QUEUE_LENGTH * sizeof( DaemonT
 936:../freertos/timers.c **** 
 937:../freertos/timers.c **** 				xTimerQueue = xQueueCreateStatic( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, ( UBaseType_t ) siz
 938:../freertos/timers.c **** 			}
 939:../freertos/timers.c **** 			#else
 940:../freertos/timers.c **** 			{
 941:../freertos/timers.c **** 				xTimerQueue = xQueueCreate( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, sizeof( DaemonTaskMessage
 129              		.loc 1 941 19 is_stmt 0 view .LVU12
 130 001e 2A46     		mov	r2, r5	@, xTimerQueue
 131 0020 0C21     		movs	r1, #12	@,
 132 0022 0A20     		movs	r0, #10	@,
 133              	@ ../freertos/timers.c:928: 			pxOverflowTimerList = &xActiveTimerList2;
 928:../freertos/timers.c **** 			pxOverflowTimerList = &xActiveTimerList2;
 134              		.loc 1 928 24 view .LVU13
 135 0024 C4E90B76 		strd	r7, r6, [r4, #44]	@ tmp118, tmp120, tmp115,
 136              		.loc 1 941 5 is_stmt 1 view .LVU14
 137              	@ ../freertos/timers.c:941: 				xTimerQueue = xQueueCreate( ( UBaseType_t ) configTIMER_QUEUE_LENGT
 138              		.loc 1 941 19 is_stmt 0 view .LVU15
ARM GAS  /tmp/cc4130RP.s 			page 20


 139 0028 FFF7FEFF 		bl	xQueueGenericCreate		@
 140              	.LVL3:
 141              	@ ../freertos/timers.c:941: 				xTimerQueue = xQueueCreate( ( UBaseType_t ) configTIMER_QUEUE_LENGT
 142              		.loc 1 941 17 view .LVU16
 143 002c 2060     		str	r0, [r4]	@ tmp128, xTimerQueue
 144              	.L2:
 942:../freertos/timers.c **** 			}
 943:../freertos/timers.c **** 			#endif
 944:../freertos/timers.c **** 
 945:../freertos/timers.c **** 			#if ( configQUEUE_REGISTRY_SIZE > 0 )
 946:../freertos/timers.c **** 			{
 947:../freertos/timers.c **** 				if( xTimerQueue != NULL )
 948:../freertos/timers.c **** 				{
 949:../freertos/timers.c **** 					vQueueAddToRegistry( xTimerQueue, "TmrQ" );
 950:../freertos/timers.c **** 				}
 951:../freertos/timers.c **** 				else
 952:../freertos/timers.c **** 				{
 953:../freertos/timers.c **** 					mtCOVERAGE_TEST_MARKER();
 954:../freertos/timers.c **** 				}
 955:../freertos/timers.c **** 			}
 956:../freertos/timers.c **** 			#endif /* configQUEUE_REGISTRY_SIZE */
 957:../freertos/timers.c **** 		}
 958:../freertos/timers.c **** 		else
 959:../freertos/timers.c **** 		{
 960:../freertos/timers.c **** 			mtCOVERAGE_TEST_MARKER();
 145              		.loc 1 960 28 is_stmt 1 view .LVU17
 961:../freertos/timers.c **** 		}
 962:../freertos/timers.c **** 	}
 963:../freertos/timers.c **** 	taskEXIT_CRITICAL();
 146              		.loc 1 963 2 view .LVU18
 147              	@ ../freertos/timers.c:964: }
 964:../freertos/timers.c **** }
 148              		.loc 1 964 1 is_stmt 0 view .LVU19
 149 002e BDE8F840 		pop	{r3, r4, r5, r6, r7, lr}	@
 150              	.LCFI1:
 151              		.cfi_restore 14
 152              		.cfi_restore 7
 153              		.cfi_restore 6
 154              		.cfi_restore 5
 155              		.cfi_restore 4
 156              		.cfi_restore 3
 157              		.cfi_def_cfa_offset 0
 158              	@ ../freertos/timers.c:963: 	taskEXIT_CRITICAL();
 963:../freertos/timers.c **** }
 159              		.loc 1 963 2 view .LVU20
 160 0032 FFF7FEBF 		b	vPortExitCritical		@
 161              	.LVL4:
 162              	.L4:
 163 0036 00BF     		.align	2
 164              	.L3:
 165 0038 00000000 		.word	.LANCHOR0
 166              		.cfi_endproc
 167              	.LFE22:
 168              		.size	prvCheckForValidListAndQueue, .-prvCheckForValidListAndQueue
 169              		.align	1
 170              		.syntax unified
 171              		.thumb
ARM GAS  /tmp/cc4130RP.s 			page 21


 172              		.thumb_func
 173              		.type	prvInsertTimerInActiveList, %function
 174              	prvInsertTimerInActiveList:
 175              	.LVL5:
 176              	.LFB19:
 669:../freertos/timers.c **** BaseType_t xProcessTimerNow = pdFALSE;
 177              		.loc 1 669 1 is_stmt 1 view -0
 178              		.cfi_startproc
 179              		@ args = 0, pretend = 0, frame = 0
 180              		@ frame_needed = 0, uses_anonymous_args = 0
 670:../freertos/timers.c **** 
 181              		.loc 1 670 1 view .LVU22
 672:../freertos/timers.c **** 	listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );
 182              		.loc 1 672 2 view .LVU23
 183              	@ ../freertos/timers.c:675: 	if( xNextExpiryTime <= xTimeNow )
 675:../freertos/timers.c **** 	{
 184              		.loc 1 675 4 is_stmt 0 view .LVU24
 185 003c 9142     		cmp	r1, r2	@ xNextExpiryTime, xTimeNow
 186              	@ ../freertos/timers.c:669: {
 669:../freertos/timers.c **** BaseType_t xProcessTimerNow = pdFALSE;
 187              		.loc 1 669 1 view .LVU25
 188 003e 08B5     		push	{r3, lr}	@
 189              	.LCFI2:
 190              		.cfi_def_cfa_offset 8
 191              		.cfi_offset 3, -8
 192              		.cfi_offset 14, -4
 193              	@ ../freertos/timers.c:672: 	listSET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ), xNextExpiryTime
 672:../freertos/timers.c **** 	listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );
 194              		.loc 1 672 2 view .LVU26
 195 0040 4160     		str	r1, [r0, #4]	@ xNextExpiryTime, pxTimer_8(D)->xTimerListItem.xItemValue
 673:../freertos/timers.c **** 
 196              		.loc 1 673 2 is_stmt 1 view .LVU27
 197 0042 0061     		str	r0, [r0, #16]	@ pxTimer, pxTimer_8(D)->xTimerListItem.pvOwner
 675:../freertos/timers.c **** 	{
 198              		.loc 1 675 2 view .LVU28
 199              	@ ../freertos/timers.c:675: 	if( xNextExpiryTime <= xTimeNow )
 675:../freertos/timers.c **** 	{
 200              		.loc 1 675 4 is_stmt 0 view .LVU29
 201 0044 0AD8     		bhi	.L6		@,
 679:../freertos/timers.c **** 		{
 202              		.loc 1 679 3 is_stmt 1 view .LVU30
 203              	@ ../freertos/timers.c:679: 		if( ( ( TickType_t ) ( xTimeNow - xCommandTime ) ) >= pxTimer->xTimer
 679:../freertos/timers.c **** 		{
 204              		.loc 1 679 9 is_stmt 0 view .LVU31
 205 0046 D21A     		subs	r2, r2, r3	@ tmp124, xTimeNow, xCommandTime
 206              	.LVL6:
 207              	@ ../freertos/timers.c:679: 		if( ( ( TickType_t ) ( xTimeNow - xCommandTime ) ) >= pxTimer->xTimer
 679:../freertos/timers.c **** 		{
 208              		.loc 1 679 5 view .LVU32
 209 0048 8369     		ldr	r3, [r0, #24]	@ pxTimer_8(D)->xTimerPeriodInTicks, pxTimer_8(D)->xTimerPeriodInTicks
 210              	.LVL7:
 679:../freertos/timers.c **** 		{
 211              		.loc 1 679 5 view .LVU33
 212 004a 9A42     		cmp	r2, r3	@ tmp124, pxTimer_8(D)->xTimerPeriodInTicks
 213 004c 0ED2     		bcs	.L10		@,
 214              	.LVL8:
 215              	.LBB4:
ARM GAS  /tmp/cc4130RP.s 			page 22


 216              	.LBI4:
 668:../freertos/timers.c **** {
 217              		.loc 1 668 19 is_stmt 1 view .LVU34
 218              	.LBB5:
 687:../freertos/timers.c **** 		}
 219              		.loc 1 687 4 view .LVU35
 220 004e 084B     		ldr	r3, .L12	@ tmp127,
 221 0050 011D     		adds	r1, r0, #4	@, pxTimer,
 222              	.LVL9:
 687:../freertos/timers.c **** 		}
 223              		.loc 1 687 4 is_stmt 0 view .LVU36
 224 0052 186B     		ldr	r0, [r3, #48]	@, pxOverflowTimerList
 225              	.LVL10:
 226              	.L11:
 687:../freertos/timers.c **** 		}
 227              		.loc 1 687 4 view .LVU37
 228              	.LBE5:
 229              	.LBE4:
 230              	@ ../freertos/timers.c:701: 			vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 701:../freertos/timers.c **** 		}
 231              		.loc 1 701 4 view .LVU38
 232 0054 FFF7FEFF 		bl	vListInsert		@
 233              	.LVL11:
 234              	@ ../freertos/timers.c:670: BaseType_t xProcessTimerNow = pdFALSE;
 670:../freertos/timers.c **** 
 235              		.loc 1 670 12 view .LVU39
 236 0058 0020     		movs	r0, #0	@ <retval>,
 237              	.LVL12:
 238              	.L5:
 239              	@ ../freertos/timers.c:706: }
 706:../freertos/timers.c **** /*-----------------------------------------------------------*/
 240              		.loc 1 706 1 view .LVU40
 241 005a 08BD     		pop	{r3, pc}	@
 242              	.LVL13:
 243              	.L6:
 692:../freertos/timers.c **** 		{
 244              		.loc 1 692 3 is_stmt 1 view .LVU41
 245              	@ ../freertos/timers.c:692: 		if( ( xTimeNow < xCommandTime ) && ( xNextExpiryTime >= xCommandTime 
 692:../freertos/timers.c **** 		{
 246              		.loc 1 692 5 is_stmt 0 view .LVU42
 247 005c 9A42     		cmp	r2, r3	@ xTimeNow, xCommandTime
 248 005e 01D2     		bcs	.L8		@,
 249              	@ ../freertos/timers.c:692: 		if( ( xTimeNow < xCommandTime ) && ( xNextExpiryTime >= xCommandTime 
 692:../freertos/timers.c **** 		{
 250              		.loc 1 692 35 discriminator 1 view .LVU43
 251 0060 9942     		cmp	r1, r3	@ xNextExpiryTime, xCommandTime
 252 0062 03D2     		bcs	.L10		@,
 253              	.L8:
 701:../freertos/timers.c **** 		}
 254              		.loc 1 701 4 is_stmt 1 view .LVU44
 255 0064 024B     		ldr	r3, .L12	@ tmp129,
 256              	.LVL14:
 701:../freertos/timers.c **** 		}
 257              		.loc 1 701 4 is_stmt 0 view .LVU45
 258 0066 011D     		adds	r1, r0, #4	@, pxTimer,
 259              	.LVL15:
 701:../freertos/timers.c **** 		}
ARM GAS  /tmp/cc4130RP.s 			page 23


 260              		.loc 1 701 4 view .LVU46
 261 0068 D86A     		ldr	r0, [r3, #44]	@, pxCurrentTimerList
 262              	.LVL16:
 701:../freertos/timers.c **** 		}
 263              		.loc 1 701 4 view .LVU47
 264 006a F3E7     		b	.L11		@
 265              	.LVL17:
 266              	.L10:
 267              	@ ../freertos/timers.c:683: 			xProcessTimerNow = pdTRUE;
 683:../freertos/timers.c **** 		}
 268              		.loc 1 683 21 view .LVU48
 269 006c 0120     		movs	r0, #1	@ <retval>,
 270              	.LVL18:
 705:../freertos/timers.c **** }
 271              		.loc 1 705 2 is_stmt 1 view .LVU49
 272              	@ ../freertos/timers.c:705: 	return xProcessTimerNow;
 705:../freertos/timers.c **** }
 273              		.loc 1 705 9 is_stmt 0 view .LVU50
 274 006e F4E7     		b	.L5		@
 275              	.L13:
 276              		.align	2
 277              	.L12:
 278 0070 00000000 		.word	.LANCHOR0
 279              		.cfi_endproc
 280              	.LFE19:
 281              		.size	prvInsertTimerInActiveList, .-prvInsertTimerInActiveList
 282              		.section	.rodata.str1.1,"aMS",%progbits,1
 283              	.LC0:
 284 0000 546D7220 		.ascii	"Tmr Svc\000"
 284      53766300 
 285              		.text
 286              		.align	1
 287              		.global	xTimerCreateTimerTask
 288              		.syntax unified
 289              		.thumb
 290              		.thumb_func
 291              		.type	xTimerCreateTimerTask, %function
 292              	xTimerCreateTimerTask:
 293              	.LFB5:
 228:../freertos/timers.c **** BaseType_t xReturn = pdFAIL;
 294              		.loc 1 228 1 is_stmt 1 view -0
 295              		.cfi_startproc
 296              		@ args = 0, pretend = 0, frame = 0
 297              		@ frame_needed = 0, uses_anonymous_args = 0
 229:../freertos/timers.c **** 
 298              		.loc 1 229 1 view .LVU52
 299              	.LVL19:
 235:../freertos/timers.c **** 
 300              		.loc 1 235 2 view .LVU53
 301              	@ ../freertos/timers.c:228: {
 228:../freertos/timers.c **** BaseType_t xReturn = pdFAIL;
 302              		.loc 1 228 1 is_stmt 0 view .LVU54
 303 0074 07B5     		push	{r0, r1, r2, lr}	@
 304              	.LCFI3:
 305              		.cfi_def_cfa_offset 16
 306              		.cfi_offset 14, -4
 307              	@ ../freertos/timers.c:235: 	prvCheckForValidListAndQueue();
ARM GAS  /tmp/cc4130RP.s 			page 24


 235:../freertos/timers.c **** 
 308              		.loc 1 235 2 view .LVU55
 309 0076 FFF7C3FF 		bl	prvCheckForValidListAndQueue		@
 310              	.LVL20:
 237:../freertos/timers.c **** 	{
 311              		.loc 1 237 2 is_stmt 1 view .LVU56
 312              	@ ../freertos/timers.c:237: 	if( xTimerQueue != NULL )
 237:../freertos/timers.c **** 	{
 313              		.loc 1 237 18 is_stmt 0 view .LVU57
 314 007a 084B     		ldr	r3, .L17	@ tmp115,
 315              	@ ../freertos/timers.c:237: 	if( xTimerQueue != NULL )
 237:../freertos/timers.c **** 	{
 316              		.loc 1 237 4 view .LVU58
 317 007c 1868     		ldr	r0, [r3]	@ xTimerQueue, xTimerQueue
 318 007e 48B1     		cbz	r0, .L14	@ xTimerQueue,
 261:../freertos/timers.c **** 									configTIMER_SERVICE_TASK_NAME,
 319              		.loc 1 261 4 is_stmt 1 view .LVU59
 320              	@ ../freertos/timers.c:261: 			xReturn = xTaskCreate(	prvTimerTask,
 261:../freertos/timers.c **** 									configTIMER_SERVICE_TASK_NAME,
 321              		.loc 1 261 14 is_stmt 0 view .LVU60
 322 0080 3433     		adds	r3, r3, #52	@ tmp120, tmp115,
 323 0082 0193     		str	r3, [sp, #4]	@ tmp120,
 324 0084 0123     		movs	r3, #1	@ tmp121,
 325 0086 F022     		movs	r2, #240	@,
 326 0088 0093     		str	r3, [sp]	@ tmp121,
 327 008a 0549     		ldr	r1, .L17+4	@,
 328 008c 0023     		movs	r3, #0	@,
 329 008e 0548     		ldr	r0, .L17+8	@,
 330 0090 FFF7FEFF 		bl	xTaskCreate		@
 331              	.LVL21:
 332              	.L14:
 333              	@ ../freertos/timers.c:277: }
 277:../freertos/timers.c **** /*-----------------------------------------------------------*/
 334              		.loc 1 277 1 view .LVU61
 335 0094 03B0     		add	sp, sp, #12	@,,
 336              	.LCFI4:
 337              		.cfi_def_cfa_offset 4
 338              		@ sp needed	@
 339 0096 5DF804FB 		ldr	pc, [sp], #4	@
 340              	.L18:
 341 009a 00BF     		.align	2
 342              	.L17:
 343 009c 00000000 		.word	.LANCHOR0
 344 00a0 00000000 		.word	.LC0
 345 00a4 00000000 		.word	prvTimerTask
 346              		.cfi_endproc
 347              	.LFE5:
 348              		.size	xTimerCreateTimerTask, .-xTimerCreateTimerTask
 349              		.align	1
 350              		.global	xTimerCreate
 351              		.syntax unified
 352              		.thumb
 353              		.thumb_func
 354              		.type	xTimerCreate, %function
 355              	xTimerCreate:
 356              	.LVL22:
 357              	.LFB6:
ARM GAS  /tmp/cc4130RP.s 			page 25


 287:../freertos/timers.c **** 	Timer_t *pxNewTimer;
 358              		.loc 1 287 2 is_stmt 1 view -0
 359              		.cfi_startproc
 360              		@ args = 4, pretend = 0, frame = 0
 361              		@ frame_needed = 0, uses_anonymous_args = 0
 288:../freertos/timers.c **** 
 362              		.loc 1 288 2 view .LVU63
 290:../freertos/timers.c **** 
 363              		.loc 1 290 3 view .LVU64
 364              	@ ../freertos/timers.c:287: 	{
 287:../freertos/timers.c **** 	Timer_t *pxNewTimer;
 365              		.loc 1 287 2 is_stmt 0 view .LVU65
 366 00a8 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}	@
 367              	.LCFI5:
 368              		.cfi_def_cfa_offset 24
 369              		.cfi_offset 4, -24
 370              		.cfi_offset 5, -20
 371              		.cfi_offset 6, -16
 372              		.cfi_offset 7, -12
 373              		.cfi_offset 8, -8
 374              		.cfi_offset 14, -4
 375              	@ ../freertos/timers.c:287: 	{
 287:../freertos/timers.c **** 	Timer_t *pxNewTimer;
 376              		.loc 1 287 2 view .LVU66
 377 00ac 8046     		mov	r8, r0	@ pcTimerName, tmp130
 378              	@ ../freertos/timers.c:290: 		pxNewTimer = ( Timer_t * ) pvPortMalloc( sizeof( Timer_t ) ); /*lint 
 290:../freertos/timers.c **** 
 379              		.loc 1 290 30 view .LVU67
 380 00ae 2C20     		movs	r0, #44	@,
 381              	.LVL23:
 382              	@ ../freertos/timers.c:287: 	{
 287:../freertos/timers.c **** 	Timer_t *pxNewTimer;
 383              		.loc 1 287 2 view .LVU68
 384 00b0 0F46     		mov	r7, r1	@ xTimerPeriodInTicks, tmp131
 385 00b2 1546     		mov	r5, r2	@ uxAutoReload, tmp132
 386 00b4 1E46     		mov	r6, r3	@ pvTimerID, tmp133
 387              	@ ../freertos/timers.c:290: 		pxNewTimer = ( Timer_t * ) pvPortMalloc( sizeof( Timer_t ) ); /*lint 
 290:../freertos/timers.c **** 
 388              		.loc 1 290 30 view .LVU69
 389 00b6 FFF7FEFF 		bl	pvPortMalloc		@
 390              	.LVL24:
 292:../freertos/timers.c **** 		{
 391              		.loc 1 292 3 is_stmt 1 view .LVU70
 392              	@ ../freertos/timers.c:292: 		if( pxNewTimer != NULL )
 292:../freertos/timers.c **** 		{
 393              		.loc 1 292 5 is_stmt 0 view .LVU71
 394 00ba 0446     		mov	r4, r0	@ <retval>, tmp134
 395 00bc A0B1     		cbz	r0, .L19	@ <retval>,
 297:../freertos/timers.c **** 			prvInitialiseNewTimer( pcTimerName, xTimerPeriodInTicks, uxAutoReload, pvTimerID, pxCallbackFunc
 396              		.loc 1 297 4 is_stmt 1 view .LVU72
 397              	@ ../freertos/timers.c:297: 			pxNewTimer->ucStatus = 0x00;
 297:../freertos/timers.c **** 			prvInitialiseNewTimer( pcTimerName, xTimerPeriodInTicks, uxAutoReload, pvTimerID, pxCallbackFunc
 398              		.loc 1 297 25 is_stmt 0 view .LVU73
 399 00be 0023     		movs	r3, #0	@ tmp122,
 400 00c0 80F82830 		strb	r3, [r0, #40]	@ tmp122, pxNewTimer_4->ucStatus
 298:../freertos/timers.c **** 		}
 401              		.loc 1 298 4 is_stmt 1 view .LVU74
ARM GAS  /tmp/cc4130RP.s 			page 26


 402              	.LVL25:
 403              	.LBB8:
 404              	.LBI8:
 349:../freertos/timers.c **** 									const TickType_t xTimerPeriodInTicks,
 405              		.loc 1 349 13 view .LVU75
 406              	.LBB9:
 357:../freertos/timers.c **** 
 407              		.loc 1 357 45 view .LVU76
 359:../freertos/timers.c **** 	{
 408              		.loc 1 359 2 view .LVU77
 363:../freertos/timers.c **** 
 409              		.loc 1 363 3 view .LVU78
 410 00c4 FFF79CFF 		bl	prvCheckForValidListAndQueue		@
 411              	.LVL26:
 367:../freertos/timers.c **** 		pxNewTimer->xTimerPeriodInTicks = xTimerPeriodInTicks;
 412              		.loc 1 367 3 view .LVU79
 413              	@ ../freertos/timers.c:370: 		pxNewTimer->pxCallbackFunction = pxCallbackFunction;
 370:../freertos/timers.c **** 		vListInitialiseItem( &( pxNewTimer->xTimerListItem ) );
 414              		.loc 1 370 34 is_stmt 0 view .LVU80
 415 00c8 069B     		ldr	r3, [sp, #24]	@ pxCallbackFunction, pxCallbackFunction
 416              	@ ../freertos/timers.c:369: 		pxNewTimer->pvTimerID = pvTimerID;
 369:../freertos/timers.c **** 		pxNewTimer->pxCallbackFunction = pxCallbackFunction;
 417              		.loc 1 369 25 view .LVU81
 418 00ca C4E90676 		strd	r7, r6, [r4, #24]	@ xTimerPeriodInTicks, pvTimerID, <retval>,
 419              	@ ../freertos/timers.c:367: 		pxNewTimer->pcTimerName = pcTimerName;
 367:../freertos/timers.c **** 		pxNewTimer->xTimerPeriodInTicks = xTimerPeriodInTicks;
 420              		.loc 1 367 27 view .LVU82
 421 00ce C4F80080 		str	r8, [r4]	@ pcTimerName, pxNewTimer_4->pcTimerName
 368:../freertos/timers.c **** 		pxNewTimer->pvTimerID = pvTimerID;
 422              		.loc 1 368 3 is_stmt 1 view .LVU83
 370:../freertos/timers.c **** 		vListInitialiseItem( &( pxNewTimer->xTimerListItem ) );
 423              		.loc 1 370 3 view .LVU84
 424              	@ ../freertos/timers.c:370: 		pxNewTimer->pxCallbackFunction = pxCallbackFunction;
 370:../freertos/timers.c **** 		vListInitialiseItem( &( pxNewTimer->xTimerListItem ) );
 425              		.loc 1 370 34 is_stmt 0 view .LVU85
 426 00d2 2362     		str	r3, [r4, #32]	@ pxCallbackFunction, pxNewTimer_4->pxCallbackFunction
 371:../freertos/timers.c **** 		if( uxAutoReload != pdFALSE )
 427              		.loc 1 371 3 is_stmt 1 view .LVU86
 428 00d4 201D     		adds	r0, r4, #4	@, <retval>,
 429 00d6 FFF7FEFF 		bl	vListInitialiseItem		@
 430              	.LVL27:
 372:../freertos/timers.c **** 		{
 431              		.loc 1 372 3 view .LVU87
 432              	@ ../freertos/timers.c:372: 		if( uxAutoReload != pdFALSE )
 372:../freertos/timers.c **** 		{
 433              		.loc 1 372 5 is_stmt 0 view .LVU88
 434 00da 2DB1     		cbz	r5, .L19	@ uxAutoReload,
 374:../freertos/timers.c **** 		}
 435              		.loc 1 374 4 is_stmt 1 view .LVU89
 436              	@ ../freertos/timers.c:374: 			pxNewTimer->ucStatus |= tmrSTATUS_IS_AUTORELOAD;
 374:../freertos/timers.c **** 		}
 437              		.loc 1 374 25 is_stmt 0 view .LVU90
 438 00dc 94F82830 		ldrb	r3, [r4, #40]	@ zero_extendqisi2	@ pxNewTimer_4->ucStatus, pxNewTimer_4->ucStatus
 439 00e0 43F00403 		orr	r3, r3, #4	@ tmp127, pxNewTimer_4->ucStatus,
 440 00e4 84F82830 		strb	r3, [r4, #40]	@ tmp127, pxNewTimer_4->ucStatus
 441              	.LVL28:
 374:../freertos/timers.c **** 		}
ARM GAS  /tmp/cc4130RP.s 			page 27


 442              		.loc 1 374 25 view .LVU91
 443              	.LBE9:
 444              	.LBE8:
 301:../freertos/timers.c **** 	}
 445              		.loc 1 301 3 is_stmt 1 view .LVU92
 446              	.L19:
 447              	@ ../freertos/timers.c:302: 	}
 302:../freertos/timers.c **** 
 448              		.loc 1 302 2 is_stmt 0 view .LVU93
 449 00e8 2046     		mov	r0, r4	@, <retval>
 450 00ea BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}	@
 302:../freertos/timers.c **** 
 451              		.loc 1 302 2 view .LVU94
 452              		.cfi_endproc
 453              	.LFE6:
 454              		.size	xTimerCreate, .-xTimerCreate
 455              		.align	1
 456              		.global	xTimerGenericCommand
 457              		.syntax unified
 458              		.thumb
 459              		.thumb_func
 460              		.type	xTimerGenericCommand, %function
 461              	xTimerGenericCommand:
 462              	.LVL29:
 463              	.LFB8:
 382:../freertos/timers.c **** BaseType_t xReturn = pdFAIL;
 464              		.loc 1 382 1 is_stmt 1 view -0
 465              		.cfi_startproc
 466              		@ args = 4, pretend = 0, frame = 16
 467              		@ frame_needed = 0, uses_anonymous_args = 0
 383:../freertos/timers.c **** DaemonTaskMessage_t xMessage;
 468              		.loc 1 383 1 view .LVU96
 384:../freertos/timers.c **** 
 469              		.loc 1 384 1 view .LVU97
 386:../freertos/timers.c **** 
 470              		.loc 1 386 24 view .LVU98
 390:../freertos/timers.c **** 	{
 471              		.loc 1 390 2 view .LVU99
 472              	@ ../freertos/timers.c:382: {
 382:../freertos/timers.c **** BaseType_t xReturn = pdFAIL;
 473              		.loc 1 382 1 is_stmt 0 view .LVU100
 474 00ee 7FB5     		push	{r0, r1, r2, r3, r4, r5, r6, lr}	@
 475              	.LCFI6:
 476              		.cfi_def_cfa_offset 32
 477              		.cfi_offset 4, -16
 478              		.cfi_offset 5, -12
 479              		.cfi_offset 6, -8
 480              		.cfi_offset 14, -4
 481              	@ ../freertos/timers.c:390: 	if( xTimerQueue != NULL )
 390:../freertos/timers.c **** 	{
 482              		.loc 1 390 18 view .LVU101
 483 00f0 0E4C     		ldr	r4, .L32	@ tmp123,
 484              	@ ../freertos/timers.c:382: {
 382:../freertos/timers.c **** BaseType_t xReturn = pdFAIL;
 485              		.loc 1 382 1 view .LVU102
 486 00f2 0546     		mov	r5, r0	@ xTimer, tmp131
 487              	@ ../freertos/timers.c:390: 	if( xTimerQueue != NULL )
ARM GAS  /tmp/cc4130RP.s 			page 28


 390:../freertos/timers.c **** 	{
 488              		.loc 1 390 18 view .LVU103
 489 00f4 2068     		ldr	r0, [r4]	@ xTimerQueue.20_1, xTimerQueue
 490              	.LVL30:
 491              	@ ../freertos/timers.c:382: {
 382:../freertos/timers.c **** BaseType_t xReturn = pdFAIL;
 492              		.loc 1 382 1 view .LVU104
 493 00f6 1646     		mov	r6, r2	@ xOptionalValue, tmp133
 494 00f8 1A46     		mov	r2, r3	@ pxHigherPriorityTaskWoken, tmp134
 495              	.LVL31:
 496              	@ ../freertos/timers.c:390: 	if( xTimerQueue != NULL )
 390:../freertos/timers.c **** 	{
 497              		.loc 1 390 4 view .LVU105
 498 00fa 78B1     		cbz	r0, .L26	@ xTimerQueue.20_1,
 393:../freertos/timers.c **** 		xMessage.u.xTimerParameters.xMessageValue = xOptionalValue;
 499              		.loc 1 393 3 is_stmt 1 view .LVU106
 500              	@ ../freertos/timers.c:397: 		if( xCommandID < tmrFIRST_FROM_ISR_COMMAND )
 397:../freertos/timers.c **** 		{
 501              		.loc 1 397 5 is_stmt 0 view .LVU107
 502 00fc 0529     		cmp	r1, #5	@ xCommandID,
 503              	@ ../freertos/timers.c:394: 		xMessage.u.xTimerParameters.xMessageValue = xOptionalValue;
 394:../freertos/timers.c **** 		xMessage.u.xTimerParameters.pxTimer = xTimer;
 504              		.loc 1 394 45 view .LVU108
 505 00fe CDE90116 		strd	r1, r6, [sp, #4]	@ xCommandID, xOptionalValue,,
 395:../freertos/timers.c **** 
 506              		.loc 1 395 3 is_stmt 1 view .LVU109
 507              	@ ../freertos/timers.c:395: 		xMessage.u.xTimerParameters.pxTimer = xTimer;
 395:../freertos/timers.c **** 
 508              		.loc 1 395 39 is_stmt 0 view .LVU110
 509 0102 0395     		str	r5, [sp, #12]	@ xTimer, xMessage.u.xTimerParameters.pxTimer
 397:../freertos/timers.c **** 		{
 510              		.loc 1 397 3 is_stmt 1 view .LVU111
 511              	@ ../freertos/timers.c:397: 		if( xCommandID < tmrFIRST_FROM_ISR_COMMAND )
 397:../freertos/timers.c **** 		{
 512              		.loc 1 397 5 is_stmt 0 view .LVU112
 513 0104 0CDC     		bgt	.L28		@,
 399:../freertos/timers.c **** 			{
 514              		.loc 1 399 4 is_stmt 1 view .LVU113
 515              	@ ../freertos/timers.c:399: 			if( xTaskGetSchedulerState() == taskSCHEDULER_RUNNING )
 399:../freertos/timers.c **** 			{
 516              		.loc 1 399 8 is_stmt 0 view .LVU114
 517 0106 FFF7FEFF 		bl	xTaskGetSchedulerState		@
 518              	.LVL32:
 519              	@ ../freertos/timers.c:401: 				xReturn = xQueueSendToBack( xTimerQueue, &xMessage, xTicksToWait );
 401:../freertos/timers.c **** 			}
 520              		.loc 1 401 15 view .LVU115
 521 010a 0023     		movs	r3, #0	@,
 522              	@ ../freertos/timers.c:399: 			if( xTaskGetSchedulerState() == taskSCHEDULER_RUNNING )
 399:../freertos/timers.c **** 			{
 523              		.loc 1 399 6 view .LVU116
 524 010c 0228     		cmp	r0, #2	@ tmp135,
 401:../freertos/timers.c **** 			}
 525              		.loc 1 401 5 is_stmt 1 view .LVU117
 526              	@ ../freertos/timers.c:405: 				xReturn = xQueueSendToBack( xTimerQueue, &xMessage, tmrNO_DELAY );
 405:../freertos/timers.c **** 			}
 527              		.loc 1 405 15 is_stmt 0 view .LVU118
 528 010e 14BF     		ite	ne
ARM GAS  /tmp/cc4130RP.s 			page 29


 529 0110 1A46     		movne	r2, r3	@,
 530              	@ ../freertos/timers.c:401: 				xReturn = xQueueSendToBack( xTimerQueue, &xMessage, xTicksToWait );
 401:../freertos/timers.c **** 			}
 531              		.loc 1 401 15 view .LVU119
 532 0112 089A     		ldreq	r2, [sp, #32]	@, xTicksToWait
 405:../freertos/timers.c **** 			}
 533              		.loc 1 405 5 is_stmt 1 view .LVU120
 534              	@ ../freertos/timers.c:405: 				xReturn = xQueueSendToBack( xTimerQueue, &xMessage, tmrNO_DELAY );
 405:../freertos/timers.c **** 			}
 535              		.loc 1 405 15 is_stmt 0 view .LVU121
 536 0114 2068     		ldr	r0, [r4]	@, xTimerQueue
 537 0116 01A9     		add	r1, sp, #4	@ tmp141,,
 538 0118 FFF7FEFF 		bl	xQueueGenericSend		@
 539              	.LVL33:
 540              	.L26:
 541              	@ ../freertos/timers.c:421: }
 421:../freertos/timers.c **** /*-----------------------------------------------------------*/
 542              		.loc 1 421 1 view .LVU122
 543 011c 04B0     		add	sp, sp, #16	@,,
 544              	.LCFI7:
 545              		.cfi_remember_state
 546              		.cfi_def_cfa_offset 16
 547              		@ sp needed	@
 548 011e 70BD     		pop	{r4, r5, r6, pc}	@
 549              	.LVL34:
 550              	.L28:
 551              	.LCFI8:
 552              		.cfi_restore_state
 410:../freertos/timers.c **** 		}
 553              		.loc 1 410 4 is_stmt 1 view .LVU123
 554              	@ ../freertos/timers.c:410: 			xReturn = xQueueSendToBackFromISR( xTimerQueue, &xMessage, pxHigherP
 410:../freertos/timers.c **** 		}
 555              		.loc 1 410 14 is_stmt 0 view .LVU124
 556 0120 0023     		movs	r3, #0	@,
 557 0122 01A9     		add	r1, sp, #4	@ tmp142,,
 558              	.LVL35:
 410:../freertos/timers.c **** 		}
 559              		.loc 1 410 14 view .LVU125
 560 0124 FFF7FEFF 		bl	xQueueGenericSendFromISR		@
 561              	.LVL36:
 410:../freertos/timers.c **** 		}
 562              		.loc 1 410 14 view .LVU126
 563 0128 F8E7     		b	.L26		@
 564              	.L33:
 565 012a 00BF     		.align	2
 566              	.L32:
 567 012c 00000000 		.word	.LANCHOR0
 568              		.cfi_endproc
 569              	.LFE8:
 570              		.size	xTimerGenericCommand, .-xTimerGenericCommand
 571              		.align	1
 572              		.syntax unified
 573              		.thumb
 574              		.thumb_func
 575              		.type	prvSampleTimeNow, %function
 576              	prvSampleTimeNow:
 577              	.LVL37:
ARM GAS  /tmp/cc4130RP.s 			page 30


 578              	.LFB18:
 646:../freertos/timers.c **** TickType_t xTimeNow;
 579              		.loc 1 646 1 is_stmt 1 view -0
 580              		.cfi_startproc
 581              		@ args = 0, pretend = 0, frame = 0
 582              		@ frame_needed = 0, uses_anonymous_args = 0
 647:../freertos/timers.c **** PRIVILEGED_DATA static TickType_t xLastTime = ( TickType_t ) 0U; /*lint !e956 Variable is only acce
 583              		.loc 1 647 1 view .LVU128
 648:../freertos/timers.c **** 
 584              		.loc 1 648 17 view .LVU129
 650:../freertos/timers.c **** 
 585              		.loc 1 650 2 view .LVU130
 586              	@ ../freertos/timers.c:646: {
 646:../freertos/timers.c **** TickType_t xTimeNow;
 587              		.loc 1 646 1 is_stmt 0 view .LVU131
 588 0130 2DE9F347 		push	{r0, r1, r4, r5, r6, r7, r8, r9, r10, lr}	@
 589              	.LCFI9:
 590              		.cfi_def_cfa_offset 40
 591              		.cfi_offset 4, -32
 592              		.cfi_offset 5, -28
 593              		.cfi_offset 6, -24
 594              		.cfi_offset 7, -20
 595              		.cfi_offset 8, -16
 596              		.cfi_offset 9, -12
 597              		.cfi_offset 10, -8
 598              		.cfi_offset 14, -4
 599              	@ ../freertos/timers.c:646: {
 646:../freertos/timers.c **** TickType_t xTimeNow;
 600              		.loc 1 646 1 view .LVU132
 601 0134 0746     		mov	r7, r0	@ pxTimerListsWereSwitched, tmp151
 602              	@ ../freertos/timers.c:650: 	xTimeNow = xTaskGetTickCount();
 650:../freertos/timers.c **** 
 603              		.loc 1 650 13 view .LVU133
 604 0136 FFF7FEFF 		bl	xTaskGetTickCount		@
 605              	.LVL38:
 606              	@ ../freertos/timers.c:652: 	if( xTimeNow < xLastTime )
 652:../freertos/timers.c **** 	{
 607              		.loc 1 652 15 view .LVU134
 608 013a 1D4D     		ldr	r5, .L47	@ tmp129,
 609              	@ ../freertos/timers.c:650: 	xTimeNow = xTaskGetTickCount();
 650:../freertos/timers.c **** 
 610              		.loc 1 650 13 view .LVU135
 611 013c 0646     		mov	r6, r0	@ <retval>, tmp152
 612              	.LVL39:
 652:../freertos/timers.c **** 	{
 613              		.loc 1 652 2 is_stmt 1 view .LVU136
 614              	@ ../freertos/timers.c:652: 	if( xTimeNow < xLastTime )
 652:../freertos/timers.c **** 	{
 615              		.loc 1 652 4 is_stmt 0 view .LVU137
 616 013e AB6B     		ldr	r3, [r5, #56]	@ xLastTime, xLastTime
 617 0140 8342     		cmp	r3, r0	@ xLastTime, <retval>
 618 0142 32D9     		bls	.L45		@,
 619              	.LBB12:
 620              	.LBB13:
 621              	@ ../freertos/timers.c:899: 				xResult = xTimerGenericCommand( pxTimer, tmrCOMMAND_START_DONT_TRAC
 899:../freertos/timers.c **** 				configASSERT( xResult );
 622              		.loc 1 899 15 view .LVU138
ARM GAS  /tmp/cc4130RP.s 			page 31


 623 0144 4FF00008 		mov	r8, #0	@ tmp150,
 624              	.LVL40:
 625              	.L37:
 906:../freertos/timers.c **** 		}
 626              		.loc 1 906 28 is_stmt 1 view .LVU139
 868:../freertos/timers.c **** 	{
 627              		.loc 1 868 7 view .LVU140
 628              	@ ../freertos/timers.c:868: 	while( listLIST_IS_EMPTY( pxCurrentTimerList ) == pdFALSE )
 868:../freertos/timers.c **** 	{
 629              		.loc 1 868 9 is_stmt 0 view .LVU141
 630 0148 EB6A     		ldr	r3, [r5, #44]	@ pxCurrentTimerList.13_11, pxCurrentTimerList
 631 014a 1A68     		ldr	r2, [r3]	@ _25, pxCurrentTimerList.13_11->uxNumberOfItems
 632              	@ ../freertos/timers.c:868: 	while( listLIST_IS_EMPTY( pxCurrentTimerList ) == pdFALSE )
 868:../freertos/timers.c **** 	{
 633              		.loc 1 868 7 view .LVU142
 634 014c 4AB9     		cbnz	r2, .L40	@ _25,
 910:../freertos/timers.c **** 	pxCurrentTimerList = pxOverflowTimerList;
 635              		.loc 1 910 2 is_stmt 1 view .LVU143
 636              	.LVL41:
 911:../freertos/timers.c **** 	pxOverflowTimerList = pxTemp;
 637              		.loc 1 911 2 view .LVU144
 638              	@ ../freertos/timers.c:911: 	pxCurrentTimerList = pxOverflowTimerList;
 911:../freertos/timers.c **** 	pxOverflowTimerList = pxTemp;
 639              		.loc 1 911 21 is_stmt 0 view .LVU145
 640 014e 2A6B     		ldr	r2, [r5, #48]	@ pxOverflowTimerList, pxOverflowTimerList
 641              	@ ../freertos/timers.c:912: 	pxOverflowTimerList = pxTemp;
 912:../freertos/timers.c **** }
 642              		.loc 1 912 22 view .LVU146
 643 0150 C5E90B23 		strd	r2, r3, [r5, #44]	@ pxOverflowTimerList, pxCurrentTimerList.13_11, tmp129,
 644              	.LBE13:
 645              	.LBE12:
 655:../freertos/timers.c **** 	}
 646              		.loc 1 655 3 is_stmt 1 view .LVU147
 647              	@ ../freertos/timers.c:655: 		*pxTimerListsWereSwitched = pdTRUE;
 655:../freertos/timers.c **** 	}
 648              		.loc 1 655 29 is_stmt 0 view .LVU148
 649 0154 0123     		movs	r3, #1	@ tmp145,
 650              	.LVL42:
 651              	.L46:
 652              	@ ../freertos/timers.c:665: }
 665:../freertos/timers.c **** /*-----------------------------------------------------------*/
 653              		.loc 1 665 1 view .LVU149
 654 0156 3046     		mov	r0, r6	@, <retval>
 655              	@ ../freertos/timers.c:659: 		*pxTimerListsWereSwitched = pdFALSE;
 659:../freertos/timers.c **** 	}
 656              		.loc 1 659 29 view .LVU150
 657 0158 3B60     		str	r3, [r7]	@ tmp146, *pxTimerListsWereSwitched_6(D)
 662:../freertos/timers.c **** 
 658              		.loc 1 662 2 is_stmt 1 view .LVU151
 659              	@ ../freertos/timers.c:662: 	xLastTime = xTimeNow;
 662:../freertos/timers.c **** 
 660              		.loc 1 662 12 is_stmt 0 view .LVU152
 661 015a AE63     		str	r6, [r5, #56]	@ <retval>, xLastTime
 664:../freertos/timers.c **** }
 662              		.loc 1 664 2 is_stmt 1 view .LVU153
 663              	@ ../freertos/timers.c:665: }
 665:../freertos/timers.c **** /*-----------------------------------------------------------*/
ARM GAS  /tmp/cc4130RP.s 			page 32


 664              		.loc 1 665 1 is_stmt 0 view .LVU154
 665 015c 02B0     		add	sp, sp, #8	@,,
 666              	.LCFI10:
 667              		.cfi_remember_state
 668              		.cfi_def_cfa_offset 32
 669              		@ sp needed	@
 670 015e BDE8F087 		pop	{r4, r5, r6, r7, r8, r9, r10, pc}	@
 671              	.LVL43:
 672              	.L40:
 673              	.LCFI11:
 674              		.cfi_restore_state
 675              	.LBB15:
 676              	.LBB14:
 870:../freertos/timers.c **** 
 677              		.loc 1 870 3 is_stmt 1 view .LVU155
 678              	@ ../freertos/timers.c:870: 		xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerLis
 870:../freertos/timers.c **** 
 679              		.loc 1 870 21 is_stmt 0 view .LVU156
 680 0162 DB68     		ldr	r3, [r3, #12]	@ _12, pxCurrentTimerList.13_11->xListEnd.pxNext
 681              	@ ../freertos/timers.c:873: 		pxTimer = ( Timer_t * ) listGET_OWNER_OF_HEAD_ENTRY( pxCurrentTimerLi
 873:../freertos/timers.c **** 		( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
 682              		.loc 1 873 11 view .LVU157
 683 0164 DC68     		ldr	r4, [r3, #12]	@ pxTimer, _12->pvOwner
 684              	@ ../freertos/timers.c:870: 		xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerLis
 870:../freertos/timers.c **** 
 685              		.loc 1 870 19 view .LVU158
 686 0166 D3F80090 		ldr	r9, [r3]	@ xNextExpireTime, _12->xItemValue
 687              	.LVL44:
 873:../freertos/timers.c **** 		( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
 688              		.loc 1 873 3 is_stmt 1 view .LVU159
 874:../freertos/timers.c **** 		traceTIMER_EXPIRED( pxTimer );
 689              		.loc 1 874 3 view .LVU160
 690              	@ ../freertos/timers.c:874: 		( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
 874:../freertos/timers.c **** 		traceTIMER_EXPIRED( pxTimer );
 691              		.loc 1 874 12 is_stmt 0 view .LVU161
 692 016a 04F1040A 		add	r10, r4, #4	@ _15, pxTimer,
 693 016e 5046     		mov	r0, r10	@, _15
 694 0170 FFF7FEFF 		bl	uxListRemove		@
 695              	.LVL45:
 875:../freertos/timers.c **** 
 696              		.loc 1 875 32 is_stmt 1 view .LVU162
 880:../freertos/timers.c **** 
 697              		.loc 1 880 3 view .LVU163
 698 0174 236A     		ldr	r3, [r4, #32]	@ pxTimer_14->pxCallbackFunction, pxTimer_14->pxCallbackFunction
 699 0176 2046     		mov	r0, r4	@, pxTimer
 700 0178 9847     		blx	r3		@ pxTimer_14->pxCallbackFunction
 701              	.LVL46:
 882:../freertos/timers.c **** 		{
 702              		.loc 1 882 3 view .LVU164
 703              	@ ../freertos/timers.c:882: 		if( ( pxTimer->ucStatus & tmrSTATUS_IS_AUTORELOAD ) != 0 )
 882:../freertos/timers.c **** 		{
 704              		.loc 1 882 5 is_stmt 0 view .LVU165
 705 017a 94F82830 		ldrb	r3, [r4, #40]	@ zero_extendqisi2	@ pxTimer_14->ucStatus, pxTimer_14->ucStatus
 706 017e 5B07     		lsls	r3, r3, #29	@, pxTimer_14->ucStatus,
 707 0180 E2D5     		bpl	.L37		@,
 890:../freertos/timers.c **** 			if( xReloadTime > xNextExpireTime )
 708              		.loc 1 890 4 is_stmt 1 view .LVU166
ARM GAS  /tmp/cc4130RP.s 			page 33


 709              	@ ../freertos/timers.c:890: 			xReloadTime = ( xNextExpireTime + pxTimer->xTimerPeriodInTicks );
 890:../freertos/timers.c **** 			if( xReloadTime > xNextExpireTime )
 710              		.loc 1 890 16 is_stmt 0 view .LVU167
 711 0182 A369     		ldr	r3, [r4, #24]	@ pxTimer_14->xTimerPeriodInTicks, pxTimer_14->xTimerPeriodInTicks
 712 0184 4B44     		add	r3, r3, r9	@ xReloadTime, xNextExpireTime
 713              	.LVL47:
 891:../freertos/timers.c **** 			{
 714              		.loc 1 891 4 is_stmt 1 view .LVU168
 715              	@ ../freertos/timers.c:891: 			if( xReloadTime > xNextExpireTime )
 891:../freertos/timers.c **** 			{
 716              		.loc 1 891 6 is_stmt 0 view .LVU169
 717 0186 9945     		cmp	r9, r3	@ xNextExpireTime, xReloadTime
 718 0188 06D2     		bcs	.L38		@,
 893:../freertos/timers.c **** 				listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );
 719              		.loc 1 893 5 is_stmt 1 view .LVU170
 720              	@ ../freertos/timers.c:895: 				vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 895:../freertos/timers.c **** 			}
 721              		.loc 1 895 5 is_stmt 0 view .LVU171
 722 018a 5146     		mov	r1, r10	@, _15
 723 018c E86A     		ldr	r0, [r5, #44]	@, pxCurrentTimerList
 724              	@ ../freertos/timers.c:893: 				listSET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ), xReloadTime 
 893:../freertos/timers.c **** 				listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );
 725              		.loc 1 893 5 view .LVU172
 726 018e 6360     		str	r3, [r4, #4]	@ xReloadTime, pxTimer_14->xTimerListItem.xItemValue
 894:../freertos/timers.c **** 				vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 727              		.loc 1 894 5 is_stmt 1 view .LVU173
 728 0190 2461     		str	r4, [r4, #16]	@ pxTimer, pxTimer_14->xTimerListItem.pvOwner
 895:../freertos/timers.c **** 			}
 729              		.loc 1 895 5 view .LVU174
 730 0192 FFF7FEFF 		bl	vListInsert		@
 731              	.LVL48:
 895:../freertos/timers.c **** 			}
 732              		.loc 1 895 5 is_stmt 0 view .LVU175
 733 0196 D7E7     		b	.L37		@
 734              	.LVL49:
 735              	.L38:
 899:../freertos/timers.c **** 				configASSERT( xResult );
 736              		.loc 1 899 5 is_stmt 1 view .LVU176
 737              	@ ../freertos/timers.c:899: 				xResult = xTimerGenericCommand( pxTimer, tmrCOMMAND_START_DONT_TRAC
 899:../freertos/timers.c **** 				configASSERT( xResult );
 738              		.loc 1 899 15 is_stmt 0 view .LVU177
 739 0198 0023     		movs	r3, #0	@,
 740              	.LVL50:
 899:../freertos/timers.c **** 				configASSERT( xResult );
 741              		.loc 1 899 15 view .LVU178
 742 019a 4A46     		mov	r2, r9	@, xNextExpireTime
 743 019c 1946     		mov	r1, r3	@,
 744 019e 2046     		mov	r0, r4	@, pxTimer
 745 01a0 CDF80080 		str	r8, [sp]	@ tmp150,
 746              	.LVL51:
 899:../freertos/timers.c **** 				configASSERT( xResult );
 747              		.loc 1 899 15 view .LVU179
 748 01a4 FFF7FEFF 		bl	xTimerGenericCommand		@
 749              	.LVL52:
 750 01a8 CEE7     		b	.L37		@
 751              	.LVL53:
 752              	.L45:
ARM GAS  /tmp/cc4130RP.s 			page 34


 899:../freertos/timers.c **** 				configASSERT( xResult );
 753              		.loc 1 899 15 view .LVU180
 754              	.LBE14:
 755              	.LBE15:
 659:../freertos/timers.c **** 	}
 756              		.loc 1 659 3 is_stmt 1 view .LVU181
 757              	@ ../freertos/timers.c:659: 		*pxTimerListsWereSwitched = pdFALSE;
 659:../freertos/timers.c **** 	}
 758              		.loc 1 659 29 is_stmt 0 view .LVU182
 759 01aa 0023     		movs	r3, #0	@ tmp146,
 760 01ac D3E7     		b	.L46		@
 761              	.L48:
 762 01ae 00BF     		.align	2
 763              	.L47:
 764 01b0 00000000 		.word	.LANCHOR0
 765              		.cfi_endproc
 766              	.LFE18:
 767              		.size	prvSampleTimeNow, .-prvSampleTimeNow
 768              		.align	1
 769              		.syntax unified
 770              		.thumb
 771              		.thumb_func
 772              		.type	prvTimerTask, %function
 773              	prvTimerTask:
 774              	.LVL54:
 775              	.LFB15:
 524:../freertos/timers.c **** TickType_t xNextExpireTime;
 776              		.loc 1 524 1 is_stmt 1 view -0
 777              		.cfi_startproc
 778              		@ args = 0, pretend = 0, frame = 16
 779              		@ frame_needed = 0, uses_anonymous_args = 0
 524:../freertos/timers.c **** TickType_t xNextExpireTime;
 780              		.loc 1 524 1 is_stmt 0 view .LVU184
 781 01b4 2DE9F043 		push	{r4, r5, r6, r7, r8, r9, lr}	@
 782              	.LCFI12:
 783              		.cfi_def_cfa_offset 28
 784              		.cfi_offset 4, -28
 785              		.cfi_offset 5, -24
 786              		.cfi_offset 6, -20
 787              		.cfi_offset 7, -16
 788              		.cfi_offset 8, -12
 789              		.cfi_offset 9, -8
 790              		.cfi_offset 14, -4
 791              	.LBB24:
 792              	.LBB25:
 793              	@ ../freertos/timers.c:630: 	*pxListWasEmpty = listLIST_IS_EMPTY( pxCurrentTimerList );
 630:../freertos/timers.c **** 	if( *pxListWasEmpty == pdFALSE )
 794              		.loc 1 630 20 view .LVU185
 795 01b8 0027     		movs	r7, #0	@ xListWasEmpty,
 796 01ba 5C4D     		ldr	r5, .L84	@ tmp166,
 797              	.LBE25:
 798              	.LBE24:
 799              	@ ../freertos/timers.c:524: {
 524:../freertos/timers.c **** TickType_t xNextExpireTime;
 800              		.loc 1 524 1 view .LVU186
 801 01bc 87B0     		sub	sp, sp, #28	@,,
 802              	.LCFI13:
ARM GAS  /tmp/cc4130RP.s 			page 35


 803              		.cfi_def_cfa_offset 56
 804              	.LVL55:
 805              	.L71:
 525:../freertos/timers.c **** BaseType_t xListWasEmpty;
 806              		.loc 1 525 1 is_stmt 1 discriminator 1 view .LVU187
 526:../freertos/timers.c **** 
 807              		.loc 1 526 1 discriminator 1 view .LVU188
 529:../freertos/timers.c **** 
 808              		.loc 1 529 2 discriminator 1 view .LVU189
 543:../freertos/timers.c **** 	{
 809              		.loc 1 543 2 discriminator 1 view .LVU190
 547:../freertos/timers.c **** 
 810              		.loc 1 547 3 discriminator 1 view .LVU191
 811              	.LBB28:
 812              	.LBI24:
 619:../freertos/timers.c **** {
 813              		.loc 1 619 19 discriminator 1 view .LVU192
 814              	.LBB26:
 621:../freertos/timers.c **** 
 815              		.loc 1 621 1 discriminator 1 view .LVU193
 630:../freertos/timers.c **** 	if( *pxListWasEmpty == pdFALSE )
 816              		.loc 1 630 2 discriminator 1 view .LVU194
 817              	@ ../freertos/timers.c:630: 	*pxListWasEmpty = listLIST_IS_EMPTY( pxCurrentTimerList );
 630:../freertos/timers.c **** 	if( *pxListWasEmpty == pdFALSE )
 818              		.loc 1 630 20 is_stmt 0 discriminator 1 view .LVU195
 819 01be EB6A     		ldr	r3, [r5, #44]	@ pxCurrentTimerList.3_51, pxCurrentTimerList
 820 01c0 D3F80080 		ldr	r8, [r3]	@ xNextExpireTime, pxCurrentTimerList.3_51->uxNumberOfItems
 821 01c4 B8F1000F 		cmp	r8, #0	@ xNextExpireTime
 822 01c8 50D0     		beq	.L72	@
 823              	.LVL56:
 631:../freertos/timers.c **** 	{
 824              		.loc 1 631 2 is_stmt 1 view .LVU196
 633:../freertos/timers.c **** 	}
 825              		.loc 1 633 3 view .LVU197
 826              	@ ../freertos/timers.c:630: 	*pxListWasEmpty = listLIST_IS_EMPTY( pxCurrentTimerList );
 630:../freertos/timers.c **** 	if( *pxListWasEmpty == pdFALSE )
 827              		.loc 1 630 20 is_stmt 0 view .LVU198
 828 01ca 0024     		movs	r4, #0	@ xListWasEmpty,
 829              	@ ../freertos/timers.c:633: 		xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerLis
 633:../freertos/timers.c **** 	}
 830              		.loc 1 633 19 view .LVU199
 831 01cc DB68     		ldr	r3, [r3, #12]	@ pxCurrentTimerList.3_51->xListEnd.pxNext, pxCurrentTimerList.3_51->xListEnd.px
 832 01ce D3F80080 		ldr	r8, [r3]	@ xNextExpireTime, _54->xItemValue
 833              	.LVL57:
 834              	.L50:
 641:../freertos/timers.c **** }
 835              		.loc 1 641 2 is_stmt 1 view .LVU200
 641:../freertos/timers.c **** }
 836              		.loc 1 641 2 is_stmt 0 view .LVU201
 837              	.LBE26:
 838              	.LBE28:
 551:../freertos/timers.c **** 
 839              		.loc 1 551 3 is_stmt 1 view .LVU202
 840              	.LBB29:
 841              	.LBI29:
 559:../freertos/timers.c **** {
 842              		.loc 1 559 13 view .LVU203
ARM GAS  /tmp/cc4130RP.s 			page 36


 843              	.LBB30:
 561:../freertos/timers.c **** BaseType_t xTimerListsWereSwitched;
 844              		.loc 1 561 1 view .LVU204
 562:../freertos/timers.c **** 
 845              		.loc 1 562 1 view .LVU205
 564:../freertos/timers.c **** 	{
 846              		.loc 1 564 2 view .LVU206
 847 01d2 FFF7FEFF 		bl	vTaskSuspendAll		@
 848              	.LVL58:
 571:../freertos/timers.c **** 		if( xTimerListsWereSwitched == pdFALSE )
 849              		.loc 1 571 3 view .LVU207
 850              	@ ../freertos/timers.c:571: 		xTimeNow = prvSampleTimeNow( &xTimerListsWereSwitched );
 571:../freertos/timers.c **** 		if( xTimerListsWereSwitched == pdFALSE )
 851              		.loc 1 571 14 is_stmt 0 view .LVU208
 852 01d6 03A8     		add	r0, sp, #12	@ tmp241,,
 853 01d8 FFF7AAFF 		bl	prvSampleTimeNow		@
 854              	.LVL59:
 855              	@ ../freertos/timers.c:572: 		if( xTimerListsWereSwitched == pdFALSE )
 572:../freertos/timers.c **** 		{
 856              		.loc 1 572 5 view .LVU209
 857 01dc 039B     		ldr	r3, [sp, #12]	@ MEM[(long int *)_75], MEM[(long int *)_75]
 858              	@ ../freertos/timers.c:571: 		xTimeNow = prvSampleTimeNow( &xTimerListsWereSwitched );
 571:../freertos/timers.c **** 		if( xTimerListsWereSwitched == pdFALSE )
 859              		.loc 1 571 14 view .LVU210
 860 01de 0646     		mov	r6, r0	@ xTimeNow, tmp233
 861              	.LVL60:
 572:../freertos/timers.c **** 		{
 862              		.loc 1 572 3 is_stmt 1 view .LVU211
 863              	@ ../freertos/timers.c:572: 		if( xTimerListsWereSwitched == pdFALSE )
 572:../freertos/timers.c **** 		{
 864              		.loc 1 572 5 is_stmt 0 view .LVU212
 865 01e0 002B     		cmp	r3, #0	@ MEM[(long int *)_75]
 866 01e2 64D1     		bne	.L51	@
 575:../freertos/timers.c **** 			{
 867              		.loc 1 575 4 is_stmt 1 view .LVU213
 868              	@ ../freertos/timers.c:575: 			if( ( xListWasEmpty == pdFALSE ) && ( xNextExpireTime <= xTimeNow ) 
 575:../freertos/timers.c **** 			{
 869              		.loc 1 575 6 is_stmt 0 view .LVU214
 870 01e4 002C     		cmp	r4, #0	@ xListWasEmpty
 871 01e6 48D1     		bne	.L52	@
 872              	@ ../freertos/timers.c:575: 			if( ( xListWasEmpty == pdFALSE ) && ( xNextExpireTime <= xTimeNow ) 
 575:../freertos/timers.c **** 			{
 873              		.loc 1 575 37 view .LVU215
 874 01e8 4045     		cmp	r0, r8	@ xTimeNow, xNextExpireTime
 875 01ea 4BD3     		bcc	.L53		@,
 577:../freertos/timers.c **** 				prvProcessExpiredTimer( xNextExpireTime, xTimeNow );
 876              		.loc 1 577 5 is_stmt 1 view .LVU216
 877              	@ ../freertos/timers.c:577: 				( void ) xTaskResumeAll();
 577:../freertos/timers.c **** 				prvProcessExpiredTimer( xNextExpireTime, xTimeNow );
 878              		.loc 1 577 14 is_stmt 0 view .LVU217
 879 01ec FFF7FEFF 		bl	xTaskResumeAll		@
 880              	.LVL61:
 578:../freertos/timers.c **** 			}
 881              		.loc 1 578 5 is_stmt 1 view .LVU218
 882              	.LBB31:
 883              	.LBI31:
 482:../freertos/timers.c **** {
ARM GAS  /tmp/cc4130RP.s 			page 37


 884              		.loc 1 482 13 view .LVU219
 885              	.LBB32:
 484:../freertos/timers.c **** Timer_t * const pxTimer = ( Timer_t * ) listGET_OWNER_OF_HEAD_ENTRY( pxCurrentTimerList ); /*lint !
 886              		.loc 1 484 1 view .LVU220
 485:../freertos/timers.c **** 
 887              		.loc 1 485 1 view .LVU221
 888              	@ ../freertos/timers.c:485: Timer_t * const pxTimer = ( Timer_t * ) listGET_OWNER_OF_HEAD_ENTRY( px
 485:../freertos/timers.c **** 
 889              		.loc 1 485 41 is_stmt 0 view .LVU222
 890 01f0 EB6A     		ldr	r3, [r5, #44]	@ pxCurrentTimerList, pxCurrentTimerList
 891              	@ ../freertos/timers.c:485: Timer_t * const pxTimer = ( Timer_t * ) listGET_OWNER_OF_HEAD_ENTRY( px
 485:../freertos/timers.c **** 
 892              		.loc 1 485 17 view .LVU223
 893 01f2 DB68     		ldr	r3, [r3, #12]	@ pxCurrentTimerList.15_57->xListEnd.pxNext, pxCurrentTimerList.15_57->xListEnd.
 894 01f4 D3F80C90 		ldr	r9, [r3, #12]	@ pxTimer, _58->pvOwner
 895              	.LVL62:
 489:../freertos/timers.c **** 	traceTIMER_EXPIRED( pxTimer );
 896              		.loc 1 489 2 is_stmt 1 view .LVU224
 897              	@ ../freertos/timers.c:489: 	( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
 489:../freertos/timers.c **** 	traceTIMER_EXPIRED( pxTimer );
 898              		.loc 1 489 11 is_stmt 0 view .LVU225
 899 01f8 09F10400 		add	r0, r9, #4	@, pxTimer,
 900 01fc FFF7FEFF 		bl	uxListRemove		@
 901              	.LVL63:
 490:../freertos/timers.c **** 
 902              		.loc 1 490 31 is_stmt 1 view .LVU226
 494:../freertos/timers.c **** 	{
 903              		.loc 1 494 2 view .LVU227
 904              	@ ../freertos/timers.c:494: 	if( ( pxTimer->ucStatus & tmrSTATUS_IS_AUTORELOAD ) != 0 )
 494:../freertos/timers.c **** 	{
 905              		.loc 1 494 15 is_stmt 0 view .LVU228
 906 0200 99F82830 		ldrb	r3, [r9, #40]	@ zero_extendqisi2	@ _61, pxTimer_59->ucStatus
 907              	@ ../freertos/timers.c:494: 	if( ( pxTimer->ucStatus & tmrSTATUS_IS_AUTORELOAD ) != 0 )
 494:../freertos/timers.c **** 	{
 908              		.loc 1 494 4 view .LVU229
 909 0204 5807     		lsls	r0, r3, #29	@, _61,
 910 0206 33D5     		bpl	.L54		@,
 499:../freertos/timers.c **** 		{
 911              		.loc 1 499 3 is_stmt 1 view .LVU230
 912              	@ ../freertos/timers.c:499: 		if( prvInsertTimerInActiveList( pxTimer, ( xNextExpireTime + pxTimer-
 499:../freertos/timers.c **** 		{
 913              		.loc 1 499 7 is_stmt 0 view .LVU231
 914 0208 D9F81810 		ldr	r1, [r9, #24]	@ pxTimer_59->xTimerPeriodInTicks, pxTimer_59->xTimerPeriodInTicks
 915 020c 4346     		mov	r3, r8	@, xNextExpireTime
 916 020e 3246     		mov	r2, r6	@, xTimeNow
 917 0210 4846     		mov	r0, r9	@, pxTimer
 918 0212 4144     		add	r1, r1, r8	@, xNextExpireTime
 919 0214 FFF712FF 		bl	prvInsertTimerInActiveList		@
 920              	.LVL64:
 921              	@ ../freertos/timers.c:499: 		if( prvInsertTimerInActiveList( pxTimer, ( xNextExpireTime + pxTimer-
 499:../freertos/timers.c **** 		{
 922              		.loc 1 499 5 view .LVU232
 923 0218 30B1     		cbz	r0, .L55	@ tmp234,
 503:../freertos/timers.c **** 			configASSERT( xResult );
 924              		.loc 1 503 4 is_stmt 1 view .LVU233
 925              	@ ../freertos/timers.c:503: 			xResult = xTimerGenericCommand( pxTimer, tmrCOMMAND_START_DONT_TRACE
 503:../freertos/timers.c **** 			configASSERT( xResult );
ARM GAS  /tmp/cc4130RP.s 			page 38


 926              		.loc 1 503 14 is_stmt 0 view .LVU234
 927 021a 2346     		mov	r3, r4	@, xListWasEmpty
 928 021c 4246     		mov	r2, r8	@, xNextExpireTime
 929 021e 2146     		mov	r1, r4	@, tmp3
 930 0220 4846     		mov	r0, r9	@, pxTimer
 931 0222 0094     		str	r4, [sp]	@ xListWasEmpty,
 932 0224 FFF7FEFF 		bl	xTimerGenericCommand		@
 933              	.LVL65:
 504:../freertos/timers.c **** 			( void ) xResult;
 934              		.loc 1 504 27 is_stmt 1 view .LVU235
 505:../freertos/timers.c **** 		}
 935              		.loc 1 505 4 view .LVU236
 936              	.L55:
 515:../freertos/timers.c **** 	}
 937              		.loc 1 515 27 view .LVU237
 519:../freertos/timers.c **** }
 938              		.loc 1 519 2 view .LVU238
 939 0228 4846     		mov	r0, r9	@, pxTimer
 940 022a D9F82030 		ldr	r3, [r9, #32]	@ pxTimer_59->pxCallbackFunction, pxTimer_59->pxCallbackFunction
 941 022e 9847     		blx	r3		@ pxTimer_59->pxCallbackFunction
 942              	.LVL66:
 943              	.L58:
 519:../freertos/timers.c **** }
 944              		.loc 1 519 2 is_stmt 0 view .LVU239
 945              	.LBE32:
 946              	.LBE31:
 947              	.LBE30:
 948              	.LBE29:
 949              	.LBB36:
 950              	.LBB37:
 716:../freertos/timers.c **** 	{
 951              		.loc 1 716 7 is_stmt 1 view .LVU240
 952              	@ ../freertos/timers.c:716: 	while( xQueueReceive( xTimerQueue, &xMessage, tmrNO_DELAY ) != pdFAIL 
 716:../freertos/timers.c **** 	{
 953              		.loc 1 716 9 is_stmt 0 view .LVU241
 954 0230 0022     		movs	r2, #0	@,
 955 0232 2868     		ldr	r0, [r5]	@, xTimerQueue
 956 0234 03A9     		add	r1, sp, #12	@ tmp243,,
 957 0236 FFF7FEFF 		bl	xQueueReceive		@
 958              	.LVL67:
 959              	@ ../freertos/timers.c:716: 	while( xQueueReceive( xTimerQueue, &xMessage, tmrNO_DELAY ) != pdFAIL 
 716:../freertos/timers.c **** 	{
 960              		.loc 1 716 7 view .LVU242
 961 023a 0028     		cmp	r0, #0	@ tmp238
 962 023c BFD0     		beq	.L71	@
 742:../freertos/timers.c **** 		{
 963              		.loc 1 742 3 is_stmt 1 view .LVU243
 964              	@ ../freertos/timers.c:742: 		if( xMessage.xMessageID >= ( BaseType_t ) 0 )
 742:../freertos/timers.c **** 		{
 965              		.loc 1 742 5 is_stmt 0 view .LVU244
 966 023e 039B     		ldr	r3, [sp, #12]	@ MEM[(struct tmrTimerQueueMessage *)_75].xMessageID, MEM[(struct tmrTimerQueueM
 967 0240 002B     		cmp	r3, #0	@ MEM[(struct tmrTimerQueueMessage *)_75].xMessageID,
 968 0242 F5DB     		blt	.L58		@,
 746:../freertos/timers.c **** 
 969              		.loc 1 746 4 is_stmt 1 view .LVU245
 970              	@ ../freertos/timers.c:746: 			pxTimer = xMessage.u.xTimerParameters.pxTimer;
 746:../freertos/timers.c **** 
ARM GAS  /tmp/cc4130RP.s 			page 39


 971              		.loc 1 746 12 is_stmt 0 view .LVU246
 972 0244 059C     		ldr	r4, [sp, #20]	@ pxTimer, MEM[(struct tmrTimerQueueMessage *)_75].u.xTimerParameters.pxTimer
 973              	.LVL68:
 748:../freertos/timers.c **** 			{
 974              		.loc 1 748 4 is_stmt 1 view .LVU247
 975              	@ ../freertos/timers.c:748: 			if( listIS_CONTAINED_WITHIN( NULL, &( pxTimer->xTimerListItem ) ) ==
 748:../freertos/timers.c **** 			{
 976              		.loc 1 748 6 is_stmt 0 view .LVU248
 977 0246 6369     		ldr	r3, [r4, #20]	@ pxTimer_9->xTimerListItem.pvContainer, pxTimer_9->xTimerListItem.pvContainer
 978 0248 13B1     		cbz	r3, .L59	@ pxTimer_9->xTimerListItem.pvContainer,
 751:../freertos/timers.c **** 			}
 979              		.loc 1 751 5 is_stmt 1 view .LVU249
 980              	@ ../freertos/timers.c:751: 				( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
 751:../freertos/timers.c **** 			}
 981              		.loc 1 751 14 is_stmt 0 view .LVU250
 982 024a 201D     		adds	r0, r4, #4	@, pxTimer,
 983 024c FFF7FEFF 		bl	uxListRemove		@
 984              	.LVL69:
 985              	.L59:
 755:../freertos/timers.c **** 			}
 986              		.loc 1 755 29 is_stmt 1 view .LVU251
 758:../freertos/timers.c **** 
 987              		.loc 1 758 106 view .LVU252
 766:../freertos/timers.c **** 
 988              		.loc 1 766 4 view .LVU253
 989              	@ ../freertos/timers.c:766: 			xTimeNow = prvSampleTimeNow( &xTimerListsWereSwitched );
 766:../freertos/timers.c **** 
 990              		.loc 1 766 15 is_stmt 0 view .LVU254
 991 0250 02A8     		add	r0, sp, #8	@ tmp242,,
 992 0252 FFF76DFF 		bl	prvSampleTimeNow		@
 993              	.LVL70:
 994              	@ ../freertos/timers.c:768: 			switch( xMessage.xMessageID )
 768:../freertos/timers.c **** 			{
 995              		.loc 1 768 4 view .LVU255
 996 0256 039B     		ldr	r3, [sp, #12]	@ MEM[(struct tmrTimerQueueMessage *)_75].xMessageID, MEM[(struct tmrTimerQueueM
 997              	@ ../freertos/timers.c:766: 			xTimeNow = prvSampleTimeNow( &xTimerListsWereSwitched );
 766:../freertos/timers.c **** 
 998              		.loc 1 766 15 view .LVU256
 999 0258 0246     		mov	r2, r0	@ xTimeNow, tmp236
 1000              	.LVL71:
 768:../freertos/timers.c **** 			{
 1001              		.loc 1 768 4 is_stmt 1 view .LVU257
 1002 025a 092B     		cmp	r3, #9	@ MEM[(struct tmrTimerQueueMessage *)_75].xMessageID,
 1003 025c E8D8     		bhi	.L58		@
 1004 025e DFE803F0 		tbb	[pc, r3]	@ MEM[(struct tmrTimerQueueMessage *)_75].xMessageID
 1005              	.L62:
 1006 0262 29       		.byte	(.L64-.L62)/2
 1007 0263 29       		.byte	(.L64-.L62)/2
 1008 0264 29       		.byte	(.L64-.L62)/2
 1009 0265 48       		.byte	(.L63-.L62)/2
 1010 0266 4F       		.byte	(.L61-.L62)/2
 1011 0267 5D       		.byte	(.L65-.L62)/2
 1012 0268 29       		.byte	(.L64-.L62)/2
 1013 0269 29       		.byte	(.L64-.L62)/2
 1014 026a 48       		.byte	(.L63-.L62)/2
 1015 026b 4F       		.byte	(.L61-.L62)/2
 1016              	.LVL72:
ARM GAS  /tmp/cc4130RP.s 			page 40


 1017              		.p2align 1
 1018              	.L72:
 768:../freertos/timers.c **** 			{
 1019              		.loc 1 768 4 is_stmt 0 view .LVU258
 1020              	.LBE37:
 1021              	.LBE36:
 1022              	.LBB39:
 1023              	.LBB27:
 1024              	@ ../freertos/timers.c:630: 	*pxListWasEmpty = listLIST_IS_EMPTY( pxCurrentTimerList );
 630:../freertos/timers.c **** 	if( *pxListWasEmpty == pdFALSE )
 1025              		.loc 1 630 20 view .LVU259
 1026 026c 0124     		movs	r4, #1	@ xListWasEmpty,
 1027 026e B0E7     		b	.L50		@
 1028              	.LVL73:
 1029              	.L54:
 630:../freertos/timers.c **** 	if( *pxListWasEmpty == pdFALSE )
 1030              		.loc 1 630 20 view .LVU260
 1031              	.LBE27:
 1032              	.LBE39:
 1033              	.LBB40:
 1034              	.LBB35:
 1035              	.LBB34:
 1036              	.LBB33:
 514:../freertos/timers.c **** 		mtCOVERAGE_TEST_MARKER();
 1037              		.loc 1 514 3 is_stmt 1 view .LVU261
 1038              	@ ../freertos/timers.c:514: 		pxTimer->ucStatus &= ~tmrSTATUS_IS_ACTIVE;
 514:../freertos/timers.c **** 		mtCOVERAGE_TEST_MARKER();
 1039              		.loc 1 514 21 is_stmt 0 view .LVU262
 1040 0270 23F00103 		bic	r3, r3, #1	@ tmp180, _61,
 1041 0274 89F82830 		strb	r3, [r9, #40]	@ tmp180, pxTimer_59->ucStatus
 1042 0278 D6E7     		b	.L55		@
 1043              	.LVL74:
 1044              	.L52:
 514:../freertos/timers.c **** 		mtCOVERAGE_TEST_MARKER();
 1045              		.loc 1 514 21 view .LVU263
 1046              	.LBE33:
 1047              	.LBE34:
 588:../freertos/timers.c **** 				{
 1048              		.loc 1 588 5 is_stmt 1 view .LVU264
 592:../freertos/timers.c **** 				}
 1049              		.loc 1 592 6 view .LVU265
 1050              	@ ../freertos/timers.c:592: 					xListWasEmpty = listLIST_IS_EMPTY( pxOverflowTimerList );
 592:../freertos/timers.c **** 				}
 1051              		.loc 1 592 22 is_stmt 0 view .LVU266
 1052 027a 2B6B     		ldr	r3, [r5, #48]	@ pxOverflowTimerList.7_45, pxOverflowTimerList
 1053 027c 1C68     		ldr	r4, [r3]	@ _46, pxOverflowTimerList.7_45->uxNumberOfItems
 1054              	.LVL75:
 592:../freertos/timers.c **** 				}
 1055              		.loc 1 592 22 view .LVU267
 1056 027e B4FA84F4 		clz	r4, r4	@ xListWasEmpty, _46
 1057 0282 6409     		lsrs	r4, r4, #5	@ xListWasEmpty, xListWasEmpty,
 1058              	.L53:
 1059              	.LVL76:
 595:../freertos/timers.c **** 
 1060              		.loc 1 595 5 is_stmt 1 view .LVU268
 1061 0284 2246     		mov	r2, r4	@, xListWasEmpty
 1062 0286 2868     		ldr	r0, [r5]	@, xTimerQueue
ARM GAS  /tmp/cc4130RP.s 			page 41


 1063              	.LVL77:
 595:../freertos/timers.c **** 
 1064              		.loc 1 595 5 is_stmt 0 view .LVU269
 1065 0288 A8EB0601 		sub	r1, r8, r6	@, xNextExpireTime, xTimeNow
 1066 028c FFF7FEFF 		bl	vQueueWaitForMessageRestricted		@
 1067              	.LVL78:
 597:../freertos/timers.c **** 				{
 1068              		.loc 1 597 5 is_stmt 1 view .LVU270
 1069              	@ ../freertos/timers.c:597: 				if( xTaskResumeAll() == pdFALSE )
 597:../freertos/timers.c **** 				{
 1070              		.loc 1 597 9 is_stmt 0 view .LVU271
 1071 0290 FFF7FEFF 		bl	xTaskResumeAll		@
 1072              	.LVL79:
 1073              	@ ../freertos/timers.c:597: 				if( xTaskResumeAll() == pdFALSE )
 597:../freertos/timers.c **** 				{
 1074              		.loc 1 597 7 view .LVU272
 1075 0294 0028     		cmp	r0, #0	@ tmp235
 1076 0296 CBD1     		bne	.L58	@
 603:../freertos/timers.c **** 				}
 1077              		.loc 1 603 6 is_stmt 1 view .LVU273
 1078 0298 4FF0E023 		mov	r3, #-536813568	@ tmp188,
 1079 029c 4FF08052 		mov	r2, #268435456	@ tmp189,
 1080 02a0 C3F8042D 		str	r2, [r3, #3332]	@ tmp189, MEM[(volatile uint32_t *)3758157060B]
 603:../freertos/timers.c **** 				}
 1081              		.loc 1 603 6 view .LVU274
 1082              		.syntax unified
 1083              	@ 603 "../freertos/timers.c" 1
 1084 02a4 BFF34F8F 		dsb	
 1085              	@ 0 "" 2
 603:../freertos/timers.c **** 				}
 1086              		.loc 1 603 6 view .LVU275
 1087              	@ 603 "../freertos/timers.c" 1
 1088 02a8 BFF36F8F 		isb
 1089              	@ 0 "" 2
 603:../freertos/timers.c **** 				}
 1090              		.loc 1 603 28 view .LVU276
 1091              		.thumb
 1092              		.syntax unified
 1093 02ac C0E7     		b	.L58		@
 1094              	.LVL80:
 1095              	.L51:
 613:../freertos/timers.c **** 		}
 1096              		.loc 1 613 4 view .LVU277
 1097              	@ ../freertos/timers.c:613: 			( void ) xTaskResumeAll();
 613:../freertos/timers.c **** 		}
 1098              		.loc 1 613 13 is_stmt 0 view .LVU278
 1099 02ae FFF7FEFF 		bl	xTaskResumeAll		@
 1100              	.LVL81:
 1101              	@ ../freertos/timers.c:616: }
 616:../freertos/timers.c **** /*-----------------------------------------------------------*/
 1102              		.loc 1 616 1 view .LVU279
 1103 02b2 BDE7     		b	.L58		@
 1104              	.LVL82:
 1105              	.L64:
 616:../freertos/timers.c **** /*-----------------------------------------------------------*/
 1106              		.loc 1 616 1 view .LVU280
 1107              	.LBE35:
ARM GAS  /tmp/cc4130RP.s 			page 42


 1108              	.LBE40:
 1109              	.LBB41:
 1110              	.LBB38:
 776:../freertos/timers.c **** 					if( prvInsertTimerInActiveList( pxTimer,  xMessage.u.xTimerParameters.xMessageValue + pxTimer-
 1111              		.loc 1 776 6 is_stmt 1 view .LVU281
 1112              	@ ../freertos/timers.c:776: 					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
 776:../freertos/timers.c **** 					if( prvInsertTimerInActiveList( pxTimer,  xMessage.u.xTimerParameters.xMessageValue + pxTimer-
 1113              		.loc 1 776 24 is_stmt 0 view .LVU282
 1114 02b4 94F82830 		ldrb	r3, [r4, #40]	@ zero_extendqisi2	@ pxTimer_9->ucStatus, pxTimer_9->ucStatus
 1115              	@ ../freertos/timers.c:777: 					if( prvInsertTimerInActiveList( pxTimer,  xMessage.u.xTimerParamet
 777:../freertos/timers.c **** 					{
 1116              		.loc 1 777 10 view .LVU283
 1117 02b8 A169     		ldr	r1, [r4, #24]	@ pxTimer_9->xTimerPeriodInTicks, pxTimer_9->xTimerPeriodInTicks
 1118              	@ ../freertos/timers.c:776: 					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
 776:../freertos/timers.c **** 					if( prvInsertTimerInActiveList( pxTimer,  xMessage.u.xTimerParameters.xMessageValue + pxTimer-
 1119              		.loc 1 776 24 view .LVU284
 1120 02ba 43F00103 		orr	r3, r3, #1	@ tmp197, pxTimer_9->ucStatus,
 1121 02be 84F82830 		strb	r3, [r4, #40]	@ tmp197, pxTimer_9->ucStatus
 777:../freertos/timers.c **** 					{
 1122              		.loc 1 777 6 is_stmt 1 view .LVU285
 1123              	@ ../freertos/timers.c:777: 					if( prvInsertTimerInActiveList( pxTimer,  xMessage.u.xTimerParamet
 777:../freertos/timers.c **** 					{
 1124              		.loc 1 777 10 is_stmt 0 view .LVU286
 1125 02c2 049B     		ldr	r3, [sp, #16]	@, MEM[(struct tmrTimerQueueMessage *)_75].u.xTimerParameters.xMessageValue
 1126 02c4 2046     		mov	r0, r4	@, pxTimer
 1127              	.LVL83:
 777:../freertos/timers.c **** 					{
 1128              		.loc 1 777 10 view .LVU287
 1129 02c6 1944     		add	r1, r1, r3	@,
 1130 02c8 FFF7B8FE 		bl	prvInsertTimerInActiveList		@
 1131              	.LVL84:
 1132              	@ ../freertos/timers.c:777: 					if( prvInsertTimerInActiveList( pxTimer,  xMessage.u.xTimerParamet
 777:../freertos/timers.c **** 					{
 1133              		.loc 1 777 8 view .LVU288
 1134 02cc 0028     		cmp	r0, #0	@ tmp237
 1135 02ce AFD0     		beq	.L58	@
 781:../freertos/timers.c **** 						traceTIMER_EXPIRED( pxTimer );
 1136              		.loc 1 781 7 is_stmt 1 view .LVU289
 1137 02d0 236A     		ldr	r3, [r4, #32]	@ pxTimer_9->pxCallbackFunction, pxTimer_9->pxCallbackFunction
 1138 02d2 2046     		mov	r0, r4	@, pxTimer
 1139 02d4 9847     		blx	r3		@ pxTimer_9->pxCallbackFunction
 1140              	.LVL85:
 782:../freertos/timers.c **** 
 1141              		.loc 1 782 36 view .LVU290
 784:../freertos/timers.c **** 						{
 1142              		.loc 1 784 7 view .LVU291
 1143              	@ ../freertos/timers.c:784: 						if( ( pxTimer->ucStatus & tmrSTATUS_IS_AUTORELOAD ) != 0 )
 784:../freertos/timers.c **** 						{
 1144              		.loc 1 784 9 is_stmt 0 view .LVU292
 1145 02d6 94F82830 		ldrb	r3, [r4, #40]	@ zero_extendqisi2	@ pxTimer_9->ucStatus, pxTimer_9->ucStatus
 1146 02da 5907     		lsls	r1, r3, #29	@, pxTimer_9->ucStatus,
 1147 02dc A8D5     		bpl	.L58		@,
 786:../freertos/timers.c **** 							configASSERT( xResult );
 1148              		.loc 1 786 8 is_stmt 1 view .LVU293
 1149              	@ ../freertos/timers.c:786: 							xResult = xTimerGenericCommand( pxTimer, tmrCOMMAND_START_DONT_T
 786:../freertos/timers.c **** 							configASSERT( xResult );
 1150              		.loc 1 786 18 is_stmt 0 view .LVU294
ARM GAS  /tmp/cc4130RP.s 			page 43


 1151 02de 0023     		movs	r3, #0	@,
 1152 02e0 A269     		ldr	r2, [r4, #24]	@ pxTimer_9->xTimerPeriodInTicks, pxTimer_9->xTimerPeriodInTicks
 1153 02e2 0499     		ldr	r1, [sp, #16]	@ MEM[(struct tmrTimerQueueMessage *)_75].u.xTimerParameters.xMessageValue, MEM[
 1154 02e4 2046     		mov	r0, r4	@, pxTimer
 1155 02e6 0A44     		add	r2, r2, r1	@, MEM[(struct tmrTimerQueueMessage *)_75].u.xTimerParameters.xMessageValue
 1156 02e8 0097     		str	r7, [sp]	@ xListWasEmpty,
 1157 02ea 1946     		mov	r1, r3	@,
 1158 02ec FFF7FEFF 		bl	xTimerGenericCommand		@
 1159              	.LVL86:
 787:../freertos/timers.c **** 							( void ) xResult;
 1160              		.loc 1 787 31 is_stmt 1 view .LVU295
 788:../freertos/timers.c **** 						}
 1161              		.loc 1 788 8 view .LVU296
 1162 02f0 9EE7     		b	.L58		@
 1163              	.LVL87:
 1164              	.L63:
 804:../freertos/timers.c **** 					break;
 1165              		.loc 1 804 6 view .LVU297
 1166              	@ ../freertos/timers.c:804: 					pxTimer->ucStatus &= ~tmrSTATUS_IS_ACTIVE;
 804:../freertos/timers.c **** 					break;
 1167              		.loc 1 804 24 is_stmt 0 view .LVU298
 1168 02f2 94F82830 		ldrb	r3, [r4, #40]	@ zero_extendqisi2	@ pxTimer_9->ucStatus, pxTimer_9->ucStatus
 1169              	.L69:
 834:../freertos/timers.c **** 						}
 1170              		.loc 1 834 8 is_stmt 1 view .LVU299
 1171              	@ ../freertos/timers.c:834: 							pxTimer->ucStatus &= ~tmrSTATUS_IS_ACTIVE;
 834:../freertos/timers.c **** 						}
 1172              		.loc 1 834 26 is_stmt 0 view .LVU300
 1173 02f6 23F00103 		bic	r3, r3, #1	@ tmp223, _38,
 1174 02fa 84F82830 		strb	r3, [r4, #40]	@ tmp223, pxTimer_9->ucStatus
 1175 02fe 97E7     		b	.L58		@
 1176              	.L61:
 809:../freertos/timers.c **** 					pxTimer->xTimerPeriodInTicks = xMessage.u.xTimerParameters.xMessageValue;
 1177              		.loc 1 809 6 is_stmt 1 view .LVU301
 1178              	@ ../freertos/timers.c:809: 					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
 809:../freertos/timers.c **** 					pxTimer->xTimerPeriodInTicks = xMessage.u.xTimerParameters.xMessageValue;
 1179              		.loc 1 809 24 is_stmt 0 view .LVU302
 1180 0300 94F82830 		ldrb	r3, [r4, #40]	@ zero_extendqisi2	@ pxTimer_9->ucStatus, pxTimer_9->ucStatus
 1181 0304 43F00103 		orr	r3, r3, #1	@ tmp217, pxTimer_9->ucStatus,
 1182 0308 84F82830 		strb	r3, [r4, #40]	@ tmp217, pxTimer_9->ucStatus
 810:../freertos/timers.c **** 					configASSERT( ( pxTimer->xTimerPeriodInTicks > 0 ) );
 1183              		.loc 1 810 6 is_stmt 1 view .LVU303
 1184              	@ ../freertos/timers.c:810: 					pxTimer->xTimerPeriodInTicks = xMessage.u.xTimerParameters.xMessag
 810:../freertos/timers.c **** 					configASSERT( ( pxTimer->xTimerPeriodInTicks > 0 ) );
 1185              		.loc 1 810 64 is_stmt 0 view .LVU304
 1186 030c 0499     		ldr	r1, [sp, #16]	@ _34, MEM[(struct tmrTimerQueueMessage *)_75].u.xTimerParameters.xMessageValue
 1187              	@ ../freertos/timers.c:819: 					( void ) prvInsertTimerInActiveList( pxTimer, ( xTimeNow + pxTimer
 819:../freertos/timers.c **** 					break;
 1188              		.loc 1 819 15 view .LVU305
 1189 030e 0346     		mov	r3, r0	@, xTimeNow
 1190              	@ ../freertos/timers.c:810: 					pxTimer->xTimerPeriodInTicks = xMessage.u.xTimerParameters.xMessag
 810:../freertos/timers.c **** 					configASSERT( ( pxTimer->xTimerPeriodInTicks > 0 ) );
 1191              		.loc 1 810 35 view .LVU306
 1192 0310 A161     		str	r1, [r4, #24]	@ _34, pxTimer_9->xTimerPeriodInTicks
 811:../freertos/timers.c **** 
 1193              		.loc 1 811 58 is_stmt 1 view .LVU307
 819:../freertos/timers.c **** 					break;
ARM GAS  /tmp/cc4130RP.s 			page 44


 1194              		.loc 1 819 6 view .LVU308
 1195              	@ ../freertos/timers.c:819: 					( void ) prvInsertTimerInActiveList( pxTimer, ( xTimeNow + pxTimer
 819:../freertos/timers.c **** 					break;
 1196              		.loc 1 819 15 is_stmt 0 view .LVU309
 1197 0312 0144     		add	r1, r1, r0	@, tmp3
 1198 0314 2046     		mov	r0, r4	@, pxTimer
 1199              	.LVL88:
 819:../freertos/timers.c **** 					break;
 1200              		.loc 1 819 15 view .LVU310
 1201 0316 FFF791FE 		bl	prvInsertTimerInActiveList		@
 1202              	.LVL89:
 820:../freertos/timers.c **** 
 1203              		.loc 1 820 6 is_stmt 1 view .LVU311
 1204 031a 89E7     		b	.L58		@
 1205              	.LVL90:
 1206              	.L65:
 828:../freertos/timers.c **** 						{
 1207              		.loc 1 828 7 view .LVU312
 1208              	@ ../freertos/timers.c:828: 						if( ( pxTimer->ucStatus & tmrSTATUS_IS_STATICALLY_ALLOCATED ) == 
 828:../freertos/timers.c **** 						{
 1209              		.loc 1 828 20 is_stmt 0 view .LVU313
 1210 031c 94F82830 		ldrb	r3, [r4, #40]	@ zero_extendqisi2	@ _38, pxTimer_9->ucStatus
 1211              	@ ../freertos/timers.c:828: 						if( ( pxTimer->ucStatus & tmrSTATUS_IS_STATICALLY_ALLOCATED ) == 
 828:../freertos/timers.c **** 						{
 1212              		.loc 1 828 9 view .LVU314
 1213 0320 9A07     		lsls	r2, r3, #30	@, _38,
 1214 0322 E8D4     		bmi	.L69		@,
 830:../freertos/timers.c **** 						}
 1215              		.loc 1 830 8 is_stmt 1 view .LVU315
 1216 0324 2046     		mov	r0, r4	@, pxTimer
 1217              	.LVL91:
 830:../freertos/timers.c **** 						}
 1218              		.loc 1 830 8 is_stmt 0 view .LVU316
 1219 0326 FFF7FEFF 		bl	vPortFree		@
 1220              	.LVL92:
 1221 032a 81E7     		b	.L58		@
 1222              	.L85:
 1223              		.align	2
 1224              	.L84:
 1225 032c 00000000 		.word	.LANCHOR0
 1226              	.LBE38:
 1227              	.LBE41:
 1228              		.cfi_endproc
 1229              	.LFE15:
 1230              		.size	prvTimerTask, .-prvTimerTask
 1231              		.align	1
 1232              		.global	xTimerGetTimerDaemonTaskHandle
 1233              		.syntax unified
 1234              		.thumb
 1235              		.thumb_func
 1236              		.type	xTimerGetTimerDaemonTaskHandle, %function
 1237              	xTimerGetTimerDaemonTaskHandle:
 1238              	.LFB9:
 425:../freertos/timers.c **** 	/* If xTimerGetTimerDaemonTaskHandle() is called before the scheduler has been
 1239              		.loc 1 425 1 is_stmt 1 view -0
 1240              		.cfi_startproc
 1241              		@ args = 0, pretend = 0, frame = 0
ARM GAS  /tmp/cc4130RP.s 			page 45


 1242              		@ frame_needed = 0, uses_anonymous_args = 0
 1243              		@ link register save eliminated.
 428:../freertos/timers.c **** 	return xTimerTaskHandle;
 1244              		.loc 1 428 46 view .LVU318
 429:../freertos/timers.c **** }
 1245              		.loc 1 429 2 view .LVU319
 1246              	@ ../freertos/timers.c:430: }
 430:../freertos/timers.c **** /*-----------------------------------------------------------*/
 1247              		.loc 1 430 1 is_stmt 0 view .LVU320
 1248 0330 014B     		ldr	r3, .L87	@ tmp115,
 1249 0332 586B     		ldr	r0, [r3, #52]	@, xTimerTaskHandle
 1250 0334 7047     		bx	lr	@
 1251              	.L88:
 1252 0336 00BF     		.align	2
 1253              	.L87:
 1254 0338 00000000 		.word	.LANCHOR0
 1255              		.cfi_endproc
 1256              	.LFE9:
 1257              		.size	xTimerGetTimerDaemonTaskHandle, .-xTimerGetTimerDaemonTaskHandle
 1258              		.align	1
 1259              		.global	xTimerGetPeriod
 1260              		.syntax unified
 1261              		.thumb
 1262              		.thumb_func
 1263              		.type	xTimerGetPeriod, %function
 1264              	xTimerGetPeriod:
 1265              	.LVL93:
 1266              	.LFB10:
 434:../freertos/timers.c **** Timer_t *pxTimer = xTimer;
 1267              		.loc 1 434 1 is_stmt 1 view -0
 1268              		.cfi_startproc
 1269              		@ args = 0, pretend = 0, frame = 0
 1270              		@ frame_needed = 0, uses_anonymous_args = 0
 1271              		@ link register save eliminated.
 435:../freertos/timers.c **** 
 1272              		.loc 1 435 1 view .LVU322
 437:../freertos/timers.c **** 	return pxTimer->xTimerPeriodInTicks;
 1273              		.loc 1 437 24 view .LVU323
 438:../freertos/timers.c **** }
 1274              		.loc 1 438 2 view .LVU324
 1275              	@ ../freertos/timers.c:439: }
 439:../freertos/timers.c **** /*-----------------------------------------------------------*/
 1276              		.loc 1 439 1 is_stmt 0 view .LVU325
 1277 033c 8069     		ldr	r0, [r0, #24]	@, MEM[(struct Timer_t *)xTimer_1(D)].xTimerPeriodInTicks
 1278              	.LVL94:
 439:../freertos/timers.c **** /*-----------------------------------------------------------*/
 1279              		.loc 1 439 1 view .LVU326
 1280 033e 7047     		bx	lr	@
 1281              		.cfi_endproc
 1282              	.LFE10:
 1283              		.size	xTimerGetPeriod, .-xTimerGetPeriod
 1284              		.align	1
 1285              		.global	vTimerSetReloadMode
 1286              		.syntax unified
 1287              		.thumb
 1288              		.thumb_func
 1289              		.type	vTimerSetReloadMode, %function
ARM GAS  /tmp/cc4130RP.s 			page 46


 1290              	vTimerSetReloadMode:
 1291              	.LVL95:
 1292              	.LFB11:
 443:../freertos/timers.c **** Timer_t * pxTimer =  xTimer;
 1293              		.loc 1 443 1 is_stmt 1 view -0
 1294              		.cfi_startproc
 1295              		@ args = 0, pretend = 0, frame = 0
 1296              		@ frame_needed = 0, uses_anonymous_args = 0
 444:../freertos/timers.c **** 
 1297              		.loc 1 444 1 view .LVU328
 1298              	@ ../freertos/timers.c:443: {
 443:../freertos/timers.c **** Timer_t * pxTimer =  xTimer;
 1299              		.loc 1 443 1 is_stmt 0 view .LVU329
 1300 0340 38B5     		push	{r3, r4, r5, lr}	@
 1301              	.LCFI14:
 1302              		.cfi_def_cfa_offset 16
 1303              		.cfi_offset 3, -16
 1304              		.cfi_offset 4, -12
 1305              		.cfi_offset 5, -8
 1306              		.cfi_offset 14, -4
 1307              	@ ../freertos/timers.c:443: {
 443:../freertos/timers.c **** Timer_t * pxTimer =  xTimer;
 1308              		.loc 1 443 1 view .LVU330
 1309 0342 0446     		mov	r4, r0	@ xTimer, tmp126
 1310              	.LVL96:
 446:../freertos/timers.c **** 	taskENTER_CRITICAL();
 1311              		.loc 1 446 24 is_stmt 1 view .LVU331
 447:../freertos/timers.c **** 	{
 1312              		.loc 1 447 2 view .LVU332
 1313              	@ ../freertos/timers.c:443: {
 443:../freertos/timers.c **** Timer_t * pxTimer =  xTimer;
 1314              		.loc 1 443 1 is_stmt 0 view .LVU333
 1315 0344 0D46     		mov	r5, r1	@ uxAutoReload, tmp127
 1316              	@ ../freertos/timers.c:447: 	taskENTER_CRITICAL();
 447:../freertos/timers.c **** 	{
 1317              		.loc 1 447 2 view .LVU334
 1318 0346 FFF7FEFF 		bl	vPortEnterCritical		@
 1319              	.LVL97:
 449:../freertos/timers.c **** 		{
 1320              		.loc 1 449 3 is_stmt 1 view .LVU335
 1321 034a 94F82830 		ldrb	r3, [r4, #40]	@ zero_extendqisi2	@ MEM[(struct Timer_t *)xTimer_6(D)].ucStatus, MEM[(struct T
 1322              	@ ../freertos/timers.c:449: 		if( uxAutoReload != pdFALSE )
 449:../freertos/timers.c **** 		{
 1323              		.loc 1 449 5 is_stmt 0 view .LVU336
 1324 034e 3DB1     		cbz	r5, .L91	@ uxAutoReload,
 451:../freertos/timers.c **** 		}
 1325              		.loc 1 451 4 is_stmt 1 view .LVU337
 1326              	@ ../freertos/timers.c:451: 			pxTimer->ucStatus |= tmrSTATUS_IS_AUTORELOAD;
 451:../freertos/timers.c **** 		}
 1327              		.loc 1 451 22 is_stmt 0 view .LVU338
 1328 0350 43F00403 		orr	r3, r3, #4	@ cstore_14, MEM[(struct Timer_t *)xTimer_6(D)].ucStatus,
 1329              	.L92:
 1330 0354 84F82830 		strb	r3, [r4, #40]	@ cstore_14, MEM[(struct Timer_t *)xTimer_6(D)].ucStatus
 458:../freertos/timers.c **** }
 1331              		.loc 1 458 2 is_stmt 1 view .LVU339
 1332              	@ ../freertos/timers.c:459: }
 459:../freertos/timers.c **** /*-----------------------------------------------------------*/
ARM GAS  /tmp/cc4130RP.s 			page 47


 1333              		.loc 1 459 1 is_stmt 0 view .LVU340
 1334 0358 BDE83840 		pop	{r3, r4, r5, lr}	@
 1335              	.LCFI15:
 1336              		.cfi_remember_state
 1337              		.cfi_restore 14
 1338              		.cfi_restore 5
 1339              		.cfi_restore 4
 1340              		.cfi_restore 3
 1341              		.cfi_def_cfa_offset 0
 1342              	.LVL98:
 1343              	@ ../freertos/timers.c:458: 	taskEXIT_CRITICAL();
 458:../freertos/timers.c **** }
 1344              		.loc 1 458 2 view .LVU341
 1345 035c FFF7FEBF 		b	vPortExitCritical		@
 1346              	.LVL99:
 1347              	.L91:
 1348              	.LCFI16:
 1349              		.cfi_restore_state
 455:../freertos/timers.c **** 		}
 1350              		.loc 1 455 4 is_stmt 1 view .LVU342
 1351              	@ ../freertos/timers.c:455: 			pxTimer->ucStatus &= ~tmrSTATUS_IS_AUTORELOAD;
 455:../freertos/timers.c **** 		}
 1352              		.loc 1 455 22 is_stmt 0 view .LVU343
 1353 0360 03F0FB03 		and	r3, r3, #251	@ cstore_14, MEM[(struct Timer_t *)xTimer_6(D)].ucStatus,
 1354 0364 F6E7     		b	.L92		@
 1355              		.cfi_endproc
 1356              	.LFE11:
 1357              		.size	vTimerSetReloadMode, .-vTimerSetReloadMode
 1358              		.align	1
 1359              		.global	xTimerGetExpiryTime
 1360              		.syntax unified
 1361              		.thumb
 1362              		.thumb_func
 1363              		.type	xTimerGetExpiryTime, %function
 1364              	xTimerGetExpiryTime:
 1365              	.LVL100:
 1366              	.LFB12:
 463:../freertos/timers.c **** Timer_t * pxTimer =  xTimer;
 1367              		.loc 1 463 1 is_stmt 1 view -0
 1368              		.cfi_startproc
 1369              		@ args = 0, pretend = 0, frame = 0
 1370              		@ frame_needed = 0, uses_anonymous_args = 0
 1371              		@ link register save eliminated.
 464:../freertos/timers.c **** TickType_t xReturn;
 1372              		.loc 1 464 1 view .LVU345
 465:../freertos/timers.c **** 
 1373              		.loc 1 465 1 view .LVU346
 467:../freertos/timers.c **** 	xReturn = listGET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ) );
 1374              		.loc 1 467 24 view .LVU347
 468:../freertos/timers.c **** 	return xReturn;
 1375              		.loc 1 468 2 view .LVU348
 469:../freertos/timers.c **** }
 1376              		.loc 1 469 2 view .LVU349
 1377              	@ ../freertos/timers.c:470: }
 470:../freertos/timers.c **** /*-----------------------------------------------------------*/
 1378              		.loc 1 470 1 is_stmt 0 view .LVU350
 1379 0366 4068     		ldr	r0, [r0, #4]	@, MEM[(struct Timer_t *)xTimer_1(D)].xTimerListItem.xItemValue
ARM GAS  /tmp/cc4130RP.s 			page 48


 1380              	.LVL101:
 470:../freertos/timers.c **** /*-----------------------------------------------------------*/
 1381              		.loc 1 470 1 view .LVU351
 1382 0368 7047     		bx	lr	@
 1383              		.cfi_endproc
 1384              	.LFE12:
 1385              		.size	xTimerGetExpiryTime, .-xTimerGetExpiryTime
 1386              		.align	1
 1387              		.global	pcTimerGetName
 1388              		.syntax unified
 1389              		.thumb
 1390              		.thumb_func
 1391              		.type	pcTimerGetName, %function
 1392              	pcTimerGetName:
 1393              	.LVL102:
 1394              	.LFB13:
 474:../freertos/timers.c **** Timer_t *pxTimer = xTimer;
 1395              		.loc 1 474 1 is_stmt 1 view -0
 1396              		.cfi_startproc
 1397              		@ args = 0, pretend = 0, frame = 0
 1398              		@ frame_needed = 0, uses_anonymous_args = 0
 1399              		@ link register save eliminated.
 475:../freertos/timers.c **** 
 1400              		.loc 1 475 1 view .LVU353
 477:../freertos/timers.c **** 	return pxTimer->pcTimerName;
 1401              		.loc 1 477 24 view .LVU354
 478:../freertos/timers.c **** }
 1402              		.loc 1 478 2 view .LVU355
 1403              	@ ../freertos/timers.c:479: }
 479:../freertos/timers.c **** /*-----------------------------------------------------------*/
 1404              		.loc 1 479 1 is_stmt 0 view .LVU356
 1405 036a 0068     		ldr	r0, [r0]	@, MEM[(struct Timer_t *)xTimer_1(D)].pcTimerName
 1406              	.LVL103:
 479:../freertos/timers.c **** /*-----------------------------------------------------------*/
 1407              		.loc 1 479 1 view .LVU357
 1408 036c 7047     		bx	lr	@
 1409              		.cfi_endproc
 1410              	.LFE13:
 1411              		.size	pcTimerGetName, .-pcTimerGetName
 1412              		.align	1
 1413              		.global	xTimerIsTimerActive
 1414              		.syntax unified
 1415              		.thumb
 1416              		.thumb_func
 1417              		.type	xTimerIsTimerActive, %function
 1418              	xTimerIsTimerActive:
 1419              	.LVL104:
 1420              	.LFB23:
 965:../freertos/timers.c **** /*-----------------------------------------------------------*/
 966:../freertos/timers.c **** 
 967:../freertos/timers.c **** BaseType_t xTimerIsTimerActive( TimerHandle_t xTimer )
 968:../freertos/timers.c **** {
 1421              		.loc 1 968 1 is_stmt 1 view -0
 1422              		.cfi_startproc
 1423              		@ args = 0, pretend = 0, frame = 0
 1424              		@ frame_needed = 0, uses_anonymous_args = 0
 969:../freertos/timers.c **** BaseType_t xReturn;
ARM GAS  /tmp/cc4130RP.s 			page 49


 1425              		.loc 1 969 1 view .LVU359
 970:../freertos/timers.c **** Timer_t *pxTimer = xTimer;
 1426              		.loc 1 970 1 view .LVU360
 1427              	@ ../freertos/timers.c:968: {
 968:../freertos/timers.c **** BaseType_t xReturn;
 1428              		.loc 1 968 1 is_stmt 0 view .LVU361
 1429 036e 10B5     		push	{r4, lr}	@
 1430              	.LCFI17:
 1431              		.cfi_def_cfa_offset 8
 1432              		.cfi_offset 4, -8
 1433              		.cfi_offset 14, -4
 1434              	@ ../freertos/timers.c:968: {
 968:../freertos/timers.c **** BaseType_t xReturn;
 1435              		.loc 1 968 1 view .LVU362
 1436 0370 0446     		mov	r4, r0	@ xTimer, tmp121
 1437              	.LVL105:
 971:../freertos/timers.c **** 
 972:../freertos/timers.c **** 	configASSERT( xTimer );
 1438              		.loc 1 972 24 is_stmt 1 view .LVU363
 973:../freertos/timers.c **** 
 974:../freertos/timers.c **** 	/* Is the timer in the list of active timers? */
 975:../freertos/timers.c **** 	taskENTER_CRITICAL();
 1439              		.loc 1 975 2 view .LVU364
 1440 0372 FFF7FEFF 		bl	vPortEnterCritical		@
 1441              	.LVL106:
 976:../freertos/timers.c **** 	{
 977:../freertos/timers.c **** 		if( ( pxTimer->ucStatus & tmrSTATUS_IS_ACTIVE ) == 0 )
 1442              		.loc 1 977 3 view .LVU365
 1443              	@ ../freertos/timers.c:977: 		if( ( pxTimer->ucStatus & tmrSTATUS_IS_ACTIVE ) == 0 )
 1444              		.loc 1 977 5 is_stmt 0 view .LVU366
 1445 0376 94F82840 		ldrb	r4, [r4, #40]	@ zero_extendqisi2	@ MEM[(struct Timer_t *)xTimer_3(D)].ucStatus, MEM[(struct T
 1446              	.LVL107:
 1447              	@ ../freertos/timers.c:986: 	taskEXIT_CRITICAL();
 978:../freertos/timers.c **** 		{
 979:../freertos/timers.c **** 			xReturn = pdFALSE;
 980:../freertos/timers.c **** 		}
 981:../freertos/timers.c **** 		else
 982:../freertos/timers.c **** 		{
 983:../freertos/timers.c **** 			xReturn = pdTRUE;
 984:../freertos/timers.c **** 		}
 985:../freertos/timers.c **** 	}
 986:../freertos/timers.c **** 	taskEXIT_CRITICAL();
 1448              		.loc 1 986 2 view .LVU367
 1449 037a FFF7FEFF 		bl	vPortExitCritical		@
 1450              	.LVL108:
 1451              	@ ../freertos/timers.c:977: 		if( ( pxTimer->ucStatus & tmrSTATUS_IS_ACTIVE ) == 0 )
 977:../freertos/timers.c **** 		{
 1452              		.loc 1 977 5 view .LVU368
 1453 037e 04F00104 		and	r4, r4, #1	@ <retval>, MEM[(struct Timer_t *)xTimer_3(D)].ucStatus,
 1454              	.LVL109:
 1455              		.loc 1 986 2 is_stmt 1 view .LVU369
 987:../freertos/timers.c **** 
 988:../freertos/timers.c **** 	return xReturn;
 1456              		.loc 1 988 2 view .LVU370
 1457              	@ ../freertos/timers.c:989: } /*lint !e818 Can't be pointer to const due to the typedef. */
 989:../freertos/timers.c **** } /*lint !e818 Can't be pointer to const due to the typedef. */
 1458              		.loc 1 989 1 is_stmt 0 view .LVU371
ARM GAS  /tmp/cc4130RP.s 			page 50


 1459 0382 2046     		mov	r0, r4	@, <retval>
 1460 0384 10BD     		pop	{r4, pc}	@
 1461              		.loc 1 989 1 view .LVU372
 1462              		.cfi_endproc
 1463              	.LFE23:
 1464              		.size	xTimerIsTimerActive, .-xTimerIsTimerActive
 1465              		.align	1
 1466              		.global	pvTimerGetTimerID
 1467              		.syntax unified
 1468              		.thumb
 1469              		.thumb_func
 1470              		.type	pvTimerGetTimerID, %function
 1471              	pvTimerGetTimerID:
 1472              	.LVL110:
 1473              	.LFB24:
 990:../freertos/timers.c **** /*-----------------------------------------------------------*/
 991:../freertos/timers.c **** 
 992:../freertos/timers.c **** void *pvTimerGetTimerID( const TimerHandle_t xTimer )
 993:../freertos/timers.c **** {
 1474              		.loc 1 993 1 is_stmt 1 view -0
 1475              		.cfi_startproc
 1476              		@ args = 0, pretend = 0, frame = 0
 1477              		@ frame_needed = 0, uses_anonymous_args = 0
 994:../freertos/timers.c **** Timer_t * const pxTimer = xTimer;
 1478              		.loc 1 994 1 view .LVU374
 1479              	@ ../freertos/timers.c:993: {
 993:../freertos/timers.c **** Timer_t * const pxTimer = xTimer;
 1480              		.loc 1 993 1 is_stmt 0 view .LVU375
 1481 0386 10B5     		push	{r4, lr}	@
 1482              	.LCFI18:
 1483              		.cfi_def_cfa_offset 8
 1484              		.cfi_offset 4, -8
 1485              		.cfi_offset 14, -4
 1486              	@ ../freertos/timers.c:993: {
 993:../freertos/timers.c **** Timer_t * const pxTimer = xTimer;
 1487              		.loc 1 993 1 view .LVU376
 1488 0388 0446     		mov	r4, r0	@ xTimer, tmp116
 1489              	.LVL111:
 995:../freertos/timers.c **** void *pvReturn;
 1490              		.loc 1 995 1 is_stmt 1 view .LVU377
 996:../freertos/timers.c **** 
 997:../freertos/timers.c **** 	configASSERT( xTimer );
 1491              		.loc 1 997 24 view .LVU378
 998:../freertos/timers.c **** 
 999:../freertos/timers.c **** 	taskENTER_CRITICAL();
 1492              		.loc 1 999 2 view .LVU379
 1493 038a FFF7FEFF 		bl	vPortEnterCritical		@
 1494              	.LVL112:
1000:../freertos/timers.c **** 	{
1001:../freertos/timers.c **** 		pvReturn = pxTimer->pvTimerID;
 1495              		.loc 1 1001 3 view .LVU380
 1496              	@ ../freertos/timers.c:1001: 		pvReturn = pxTimer->pvTimerID;
 1497              		.loc 1 1001 12 is_stmt 0 view .LVU381
 1498 038e E469     		ldr	r4, [r4, #28]	@ <retval>, MEM[(struct Timer_t *)xTimer_1(D)].pvTimerID
 1499              	.LVL113:
1002:../freertos/timers.c **** 	}
1003:../freertos/timers.c **** 	taskEXIT_CRITICAL();
ARM GAS  /tmp/cc4130RP.s 			page 51


 1500              		.loc 1 1003 2 is_stmt 1 view .LVU382
 1501 0390 FFF7FEFF 		bl	vPortExitCritical		@
 1502              	.LVL114:
1004:../freertos/timers.c **** 
1005:../freertos/timers.c **** 	return pvReturn;
 1503              		.loc 1 1005 2 view .LVU383
 1504              	@ ../freertos/timers.c:1006: }
1006:../freertos/timers.c **** }
 1505              		.loc 1 1006 1 is_stmt 0 view .LVU384
 1506 0394 2046     		mov	r0, r4	@, <retval>
 1507 0396 10BD     		pop	{r4, pc}	@
 1508              		.loc 1 1006 1 view .LVU385
 1509              		.cfi_endproc
 1510              	.LFE24:
 1511              		.size	pvTimerGetTimerID, .-pvTimerGetTimerID
 1512              		.align	1
 1513              		.global	vTimerSetTimerID
 1514              		.syntax unified
 1515              		.thumb
 1516              		.thumb_func
 1517              		.type	vTimerSetTimerID, %function
 1518              	vTimerSetTimerID:
 1519              	.LVL115:
 1520              	.LFB25:
1007:../freertos/timers.c **** /*-----------------------------------------------------------*/
1008:../freertos/timers.c **** 
1009:../freertos/timers.c **** void vTimerSetTimerID( TimerHandle_t xTimer, void *pvNewID )
1010:../freertos/timers.c **** {
 1521              		.loc 1 1010 1 is_stmt 1 view -0
 1522              		.cfi_startproc
 1523              		@ args = 0, pretend = 0, frame = 0
 1524              		@ frame_needed = 0, uses_anonymous_args = 0
1011:../freertos/timers.c **** Timer_t * const pxTimer = xTimer;
 1525              		.loc 1 1011 1 view .LVU387
 1526              	@ ../freertos/timers.c:1010: {
1010:../freertos/timers.c **** Timer_t * const pxTimer = xTimer;
 1527              		.loc 1 1010 1 is_stmt 0 view .LVU388
 1528 0398 38B5     		push	{r3, r4, r5, lr}	@
 1529              	.LCFI19:
 1530              		.cfi_def_cfa_offset 16
 1531              		.cfi_offset 3, -16
 1532              		.cfi_offset 4, -12
 1533              		.cfi_offset 5, -8
 1534              		.cfi_offset 14, -4
 1535              	@ ../freertos/timers.c:1010: {
1010:../freertos/timers.c **** Timer_t * const pxTimer = xTimer;
 1536              		.loc 1 1010 1 view .LVU389
 1537 039a 0446     		mov	r4, r0	@ xTimer, tmp115
 1538              	.LVL116:
1012:../freertos/timers.c **** 
1013:../freertos/timers.c **** 	configASSERT( xTimer );
 1539              		.loc 1 1013 24 is_stmt 1 view .LVU390
1014:../freertos/timers.c **** 
1015:../freertos/timers.c **** 	taskENTER_CRITICAL();
 1540              		.loc 1 1015 2 view .LVU391
 1541              	@ ../freertos/timers.c:1010: {
1010:../freertos/timers.c **** Timer_t * const pxTimer = xTimer;
ARM GAS  /tmp/cc4130RP.s 			page 52


 1542              		.loc 1 1010 1 is_stmt 0 view .LVU392
 1543 039c 0D46     		mov	r5, r1	@ pvNewID, tmp116
 1544              	@ ../freertos/timers.c:1015: 	taskENTER_CRITICAL();
 1545              		.loc 1 1015 2 view .LVU393
 1546 039e FFF7FEFF 		bl	vPortEnterCritical		@
 1547              	.LVL117:
1016:../freertos/timers.c **** 	{
1017:../freertos/timers.c **** 		pxTimer->pvTimerID = pvNewID;
 1548              		.loc 1 1017 3 is_stmt 1 view .LVU394
 1549              	@ ../freertos/timers.c:1017: 		pxTimer->pvTimerID = pvNewID;
 1550              		.loc 1 1017 22 is_stmt 0 view .LVU395
 1551 03a2 E561     		str	r5, [r4, #28]	@ pvNewID, MEM[(struct Timer_t *)xTimer_1(D)].pvTimerID
1018:../freertos/timers.c **** 	}
1019:../freertos/timers.c **** 	taskEXIT_CRITICAL();
 1552              		.loc 1 1019 2 is_stmt 1 view .LVU396
 1553              	@ ../freertos/timers.c:1020: }
1020:../freertos/timers.c **** }
 1554              		.loc 1 1020 1 is_stmt 0 view .LVU397
 1555 03a4 BDE83840 		pop	{r3, r4, r5, lr}	@
 1556              	.LCFI20:
 1557              		.cfi_restore 14
 1558              		.cfi_restore 5
 1559              		.cfi_restore 4
 1560              		.cfi_restore 3
 1561              		.cfi_def_cfa_offset 0
 1562              	.LVL118:
 1563              	@ ../freertos/timers.c:1019: 	taskEXIT_CRITICAL();
1019:../freertos/timers.c **** }
 1564              		.loc 1 1019 2 view .LVU398
 1565 03a8 FFF7FEBF 		b	vPortExitCritical		@
 1566              	.LVL119:
1019:../freertos/timers.c **** }
 1567              		.loc 1 1019 2 view .LVU399
 1568              		.cfi_endproc
 1569              	.LFE25:
 1570              		.size	vTimerSetTimerID, .-vTimerSetTimerID
 1571              		.align	1
 1572              		.global	uxTimerGetTimerNumber
 1573              		.syntax unified
 1574              		.thumb
 1575              		.thumb_func
 1576              		.type	uxTimerGetTimerNumber, %function
 1577              	uxTimerGetTimerNumber:
 1578              	.LVL120:
 1579              	.LFB26:
1021:../freertos/timers.c **** /*-----------------------------------------------------------*/
1022:../freertos/timers.c **** 
1023:../freertos/timers.c **** #if( INCLUDE_xTimerPendFunctionCall == 1 )
1024:../freertos/timers.c **** 
1025:../freertos/timers.c **** 	BaseType_t xTimerPendFunctionCallFromISR( PendedFunction_t xFunctionToPend, void *pvParameter1, ui
1026:../freertos/timers.c **** 	{
1027:../freertos/timers.c **** 	DaemonTaskMessage_t xMessage;
1028:../freertos/timers.c **** 	BaseType_t xReturn;
1029:../freertos/timers.c **** 
1030:../freertos/timers.c **** 		/* Complete the message with the function parameters and post it to the
1031:../freertos/timers.c **** 		daemon task. */
1032:../freertos/timers.c **** 		xMessage.xMessageID = tmrCOMMAND_EXECUTE_CALLBACK_FROM_ISR;
ARM GAS  /tmp/cc4130RP.s 			page 53


1033:../freertos/timers.c **** 		xMessage.u.xCallbackParameters.pxCallbackFunction = xFunctionToPend;
1034:../freertos/timers.c **** 		xMessage.u.xCallbackParameters.pvParameter1 = pvParameter1;
1035:../freertos/timers.c **** 		xMessage.u.xCallbackParameters.ulParameter2 = ulParameter2;
1036:../freertos/timers.c **** 
1037:../freertos/timers.c **** 		xReturn = xQueueSendFromISR( xTimerQueue, &xMessage, pxHigherPriorityTaskWoken );
1038:../freertos/timers.c **** 
1039:../freertos/timers.c **** 		tracePEND_FUNC_CALL_FROM_ISR( xFunctionToPend, pvParameter1, ulParameter2, xReturn );
1040:../freertos/timers.c **** 
1041:../freertos/timers.c **** 		return xReturn;
1042:../freertos/timers.c **** 	}
1043:../freertos/timers.c **** 
1044:../freertos/timers.c **** #endif /* INCLUDE_xTimerPendFunctionCall */
1045:../freertos/timers.c **** /*-----------------------------------------------------------*/
1046:../freertos/timers.c **** 
1047:../freertos/timers.c **** #if( INCLUDE_xTimerPendFunctionCall == 1 )
1048:../freertos/timers.c **** 
1049:../freertos/timers.c **** 	BaseType_t xTimerPendFunctionCall( PendedFunction_t xFunctionToPend, void *pvParameter1, uint32_t 
1050:../freertos/timers.c **** 	{
1051:../freertos/timers.c **** 	DaemonTaskMessage_t xMessage;
1052:../freertos/timers.c **** 	BaseType_t xReturn;
1053:../freertos/timers.c **** 
1054:../freertos/timers.c **** 		/* This function can only be called after a timer has been created or
1055:../freertos/timers.c **** 		after the scheduler has been started because, until then, the timer
1056:../freertos/timers.c **** 		queue does not exist. */
1057:../freertos/timers.c **** 		configASSERT( xTimerQueue );
1058:../freertos/timers.c **** 
1059:../freertos/timers.c **** 		/* Complete the message with the function parameters and post it to the
1060:../freertos/timers.c **** 		daemon task. */
1061:../freertos/timers.c **** 		xMessage.xMessageID = tmrCOMMAND_EXECUTE_CALLBACK;
1062:../freertos/timers.c **** 		xMessage.u.xCallbackParameters.pxCallbackFunction = xFunctionToPend;
1063:../freertos/timers.c **** 		xMessage.u.xCallbackParameters.pvParameter1 = pvParameter1;
1064:../freertos/timers.c **** 		xMessage.u.xCallbackParameters.ulParameter2 = ulParameter2;
1065:../freertos/timers.c **** 
1066:../freertos/timers.c **** 		xReturn = xQueueSendToBack( xTimerQueue, &xMessage, xTicksToWait );
1067:../freertos/timers.c **** 
1068:../freertos/timers.c **** 		tracePEND_FUNC_CALL( xFunctionToPend, pvParameter1, ulParameter2, xReturn );
1069:../freertos/timers.c **** 
1070:../freertos/timers.c **** 		return xReturn;
1071:../freertos/timers.c **** 	}
1072:../freertos/timers.c **** 
1073:../freertos/timers.c **** #endif /* INCLUDE_xTimerPendFunctionCall */
1074:../freertos/timers.c **** /*-----------------------------------------------------------*/
1075:../freertos/timers.c **** 
1076:../freertos/timers.c **** #if ( configUSE_TRACE_FACILITY == 1 )
1077:../freertos/timers.c **** 
1078:../freertos/timers.c **** 	UBaseType_t uxTimerGetTimerNumber( TimerHandle_t xTimer )
1079:../freertos/timers.c **** 	{
 1580              		.loc 1 1079 2 is_stmt 1 view -0
 1581              		.cfi_startproc
 1582              		@ args = 0, pretend = 0, frame = 0
 1583              		@ frame_needed = 0, uses_anonymous_args = 0
 1584              		@ link register save eliminated.
1080:../freertos/timers.c **** 		return ( ( Timer_t * ) xTimer )->uxTimerNumber;
 1585              		.loc 1 1080 3 view .LVU401
 1586              	@ ../freertos/timers.c:1081: 	}
1081:../freertos/timers.c **** 	}
 1587              		.loc 1 1081 2 is_stmt 0 view .LVU402
ARM GAS  /tmp/cc4130RP.s 			page 54


 1588 03ac 406A     		ldr	r0, [r0, #36]	@, MEM[(struct Timer_t *)xTimer_2(D)].uxTimerNumber
 1589              	.LVL121:
 1590              		.loc 1 1081 2 view .LVU403
 1591 03ae 7047     		bx	lr	@
 1592              		.cfi_endproc
 1593              	.LFE26:
 1594              		.size	uxTimerGetTimerNumber, .-uxTimerGetTimerNumber
 1595              		.align	1
 1596              		.global	vTimerSetTimerNumber
 1597              		.syntax unified
 1598              		.thumb
 1599              		.thumb_func
 1600              		.type	vTimerSetTimerNumber, %function
 1601              	vTimerSetTimerNumber:
 1602              	.LVL122:
 1603              	.LFB27:
1082:../freertos/timers.c **** 
1083:../freertos/timers.c **** #endif /* configUSE_TRACE_FACILITY */
1084:../freertos/timers.c **** /*-----------------------------------------------------------*/
1085:../freertos/timers.c **** 
1086:../freertos/timers.c **** #if ( configUSE_TRACE_FACILITY == 1 )
1087:../freertos/timers.c **** 
1088:../freertos/timers.c **** 	void vTimerSetTimerNumber( TimerHandle_t xTimer, UBaseType_t uxTimerNumber )
1089:../freertos/timers.c **** 	{
 1604              		.loc 1 1089 2 is_stmt 1 view -0
 1605              		.cfi_startproc
 1606              		@ args = 0, pretend = 0, frame = 0
 1607              		@ frame_needed = 0, uses_anonymous_args = 0
 1608              		@ link register save eliminated.
1090:../freertos/timers.c **** 		( ( Timer_t * ) xTimer )->uxTimerNumber = uxTimerNumber;
 1609              		.loc 1 1090 3 view .LVU405
 1610              	@ ../freertos/timers.c:1090: 		( ( Timer_t * ) xTimer )->uxTimerNumber = uxTimerNumber;
 1611              		.loc 1 1090 43 is_stmt 0 view .LVU406
 1612 03b0 4162     		str	r1, [r0, #36]	@ tmp116, MEM[(struct Timer_t *)xTimer_2(D)].uxTimerNumber
 1613              	@ ../freertos/timers.c:1091: 	}
1091:../freertos/timers.c **** 	}
 1614              		.loc 1 1091 2 view .LVU407
 1615 03b2 7047     		bx	lr	@
 1616              		.cfi_endproc
 1617              	.LFE27:
 1618              		.size	vTimerSetTimerNumber, .-vTimerSetTimerNumber
 1619              		.bss
 1620              		.align	2
 1621              		.set	.LANCHOR0,. + 0
 1622              		.type	xTimerQueue, %object
 1623              		.size	xTimerQueue, 4
 1624              	xTimerQueue:
 1625 0000 00000000 		.space	4
 1626              		.type	xActiveTimerList1, %object
 1627              		.size	xActiveTimerList1, 20
 1628              	xActiveTimerList1:
 1629 0004 00000000 		.space	20
 1629      00000000 
 1629      00000000 
 1629      00000000 
 1629      00000000 
 1630              		.type	xActiveTimerList2, %object
ARM GAS  /tmp/cc4130RP.s 			page 55


 1631              		.size	xActiveTimerList2, 20
 1632              	xActiveTimerList2:
 1633 0018 00000000 		.space	20
 1633      00000000 
 1633      00000000 
 1633      00000000 
 1633      00000000 
 1634              		.type	pxCurrentTimerList, %object
 1635              		.size	pxCurrentTimerList, 4
 1636              	pxCurrentTimerList:
 1637 002c 00000000 		.space	4
 1638              		.type	pxOverflowTimerList, %object
 1639              		.size	pxOverflowTimerList, 4
 1640              	pxOverflowTimerList:
 1641 0030 00000000 		.space	4
 1642              		.type	xTimerTaskHandle, %object
 1643              		.size	xTimerTaskHandle, 4
 1644              	xTimerTaskHandle:
 1645 0034 00000000 		.space	4
 1646              		.type	xLastTime.0, %object
 1647              		.size	xLastTime.0, 4
 1648              	xLastTime.0:
 1649 0038 00000000 		.space	4
 1650              		.text
 1651              	.Letext0:
 1652              		.file 2 "/usr/arm-none-eabi/include/machine/_default_types.h"
 1653              		.file 3 "/usr/arm-none-eabi/include/sys/_stdint.h"
 1654              		.file 4 "../freertos/portable/GCC/ARM_CM3/portmacro.h"
 1655              		.file 5 "../freertos/include/list.h"
 1656              		.file 6 "../freertos/include/task.h"
 1657              		.file 7 "../freertos/include/queue.h"
 1658              		.file 8 "../freertos/include/timers.h"
 1659              		.file 9 "../freertos/include/portable.h"
 1660              		.section	.debug_info,"",%progbits
 1661              	.Ldebug_info0:
 1662 0000 F3110000 		.4byte	0x11f3
 1663 0004 0200     		.2byte	0x2
 1664 0006 00000000 		.4byte	.Ldebug_abbrev0
 1665 000a 04       		.byte	0x4
 1666 000b 01       		.uleb128 0x1
 1667 000c 73050000 		.4byte	.LASF125
 1668 0010 0C       		.byte	0xc
 1669 0011 3E010000 		.4byte	.LASF126
 1670 0015 FF020000 		.4byte	.LASF127
 1671 0019 00000000 		.4byte	.Ltext0
 1672 001d B4030000 		.4byte	.Letext0
 1673 0021 00000000 		.4byte	.Ldebug_line0
 1674 0025 02       		.uleb128 0x2
 1675 0026 04       		.byte	0x4
 1676 0027 07       		.byte	0x7
 1677 0028 12010000 		.4byte	.LASF0
 1678 002c 03       		.uleb128 0x3
 1679 002d 04       		.byte	0x4
 1680 002e 05       		.byte	0x5
 1681 002f 696E7400 		.ascii	"int\000"
 1682 0033 02       		.uleb128 0x2
 1683 0034 08       		.byte	0x8
ARM GAS  /tmp/cc4130RP.s 			page 56


 1684 0035 05       		.byte	0x5
 1685 0036 AE040000 		.4byte	.LASF1
 1686 003a 02       		.uleb128 0x2
 1687 003b 08       		.byte	0x8
 1688 003c 04       		.byte	0x4
 1689 003d 18050000 		.4byte	.LASF2
 1690 0041 02       		.uleb128 0x2
 1691 0042 01       		.byte	0x1
 1692 0043 06       		.byte	0x6
 1693 0044 FD070000 		.4byte	.LASF3
 1694 0048 04       		.uleb128 0x4
 1695 0049 AD060000 		.4byte	.LASF8
 1696 004d 02       		.byte	0x2
 1697 004e 2B       		.byte	0x2b
 1698 004f 18       		.byte	0x18
 1699 0050 54000000 		.4byte	0x54
 1700 0054 02       		.uleb128 0x2
 1701 0055 01       		.byte	0x1
 1702 0056 08       		.byte	0x8
 1703 0057 46070000 		.4byte	.LASF4
 1704 005b 02       		.uleb128 0x2
 1705 005c 02       		.byte	0x2
 1706 005d 05       		.byte	0x5
 1707 005e F3050000 		.4byte	.LASF5
 1708 0062 02       		.uleb128 0x2
 1709 0063 02       		.byte	0x2
 1710 0064 07       		.byte	0x7
 1711 0065 19080000 		.4byte	.LASF6
 1712 0069 02       		.uleb128 0x2
 1713 006a 04       		.byte	0x4
 1714 006b 05       		.byte	0x5
 1715 006c 40060000 		.4byte	.LASF7
 1716 0070 04       		.uleb128 0x4
 1717 0071 62070000 		.4byte	.LASF9
 1718 0075 02       		.byte	0x2
 1719 0076 4F       		.byte	0x4f
 1720 0077 19       		.byte	0x19
 1721 0078 7C000000 		.4byte	0x7c
 1722 007c 02       		.uleb128 0x2
 1723 007d 04       		.byte	0x4
 1724 007e 07       		.byte	0x7
 1725 007f 07070000 		.4byte	.LASF10
 1726 0083 02       		.uleb128 0x2
 1727 0084 08       		.byte	0x8
 1728 0085 07       		.byte	0x7
 1729 0086 20020000 		.4byte	.LASF11
 1730 008a 05       		.uleb128 0x5
 1731 008b 04       		.byte	0x4
 1732 008c 06       		.uleb128 0x6
 1733 008d 8A000000 		.4byte	0x8a
 1734 0091 02       		.uleb128 0x2
 1735 0092 01       		.byte	0x1
 1736 0093 08       		.byte	0x8
 1737 0094 D7030000 		.4byte	.LASF12
 1738 0098 06       		.uleb128 0x6
 1739 0099 91000000 		.4byte	0x91
 1740 009d 07       		.uleb128 0x7
ARM GAS  /tmp/cc4130RP.s 			page 57


 1741 009e 04       		.byte	0x4
 1742 009f 98000000 		.4byte	0x98
 1743 00a3 06       		.uleb128 0x6
 1744 00a4 9D000000 		.4byte	0x9d
 1745 00a8 04       		.uleb128 0x4
 1746 00a9 57040000 		.4byte	.LASF13
 1747 00ad 03       		.byte	0x3
 1748 00ae 18       		.byte	0x18
 1749 00af 13       		.byte	0x13
 1750 00b0 48000000 		.4byte	0x48
 1751 00b4 04       		.uleb128 0x4
 1752 00b5 DA010000 		.4byte	.LASF14
 1753 00b9 03       		.byte	0x3
 1754 00ba 30       		.byte	0x30
 1755 00bb 14       		.byte	0x14
 1756 00bc 70000000 		.4byte	0x70
 1757 00c0 04       		.uleb128 0x4
 1758 00c1 C4040000 		.4byte	.LASF15
 1759 00c5 04       		.byte	0x4
 1760 00c6 38       		.byte	0x38
 1761 00c7 0E       		.byte	0xe
 1762 00c8 69000000 		.4byte	0x69
 1763 00cc 06       		.uleb128 0x6
 1764 00cd C0000000 		.4byte	0xc0
 1765 00d1 04       		.uleb128 0x4
 1766 00d2 E7030000 		.4byte	.LASF16
 1767 00d6 04       		.byte	0x4
 1768 00d7 39       		.byte	0x39
 1769 00d8 17       		.byte	0x17
 1770 00d9 7C000000 		.4byte	0x7c
 1771 00dd 08       		.uleb128 0x8
 1772 00de D1000000 		.4byte	0xd1
 1773 00e2 06       		.uleb128 0x6
 1774 00e3 D1000000 		.4byte	0xd1
 1775 00e7 04       		.uleb128 0x4
 1776 00e8 FE040000 		.4byte	.LASF17
 1777 00ec 04       		.byte	0x4
 1778 00ed 3F       		.byte	0x3f
 1779 00ee 13       		.byte	0x13
 1780 00ef B4000000 		.4byte	0xb4
 1781 00f3 06       		.uleb128 0x6
 1782 00f4 E7000000 		.4byte	0xe7
 1783 00f8 09       		.uleb128 0x9
 1784 00f9 33010000 		.4byte	.LASF23
 1785 00fd 14       		.byte	0x14
 1786 00fe 05       		.byte	0x5
 1787 00ff 8C       		.byte	0x8c
 1788 0100 08       		.byte	0x8
 1789 0101 51010000 		.4byte	0x151
 1790 0105 0A       		.uleb128 0xa
 1791 0106 1A060000 		.4byte	.LASF18
 1792 010a 05       		.byte	0x5
 1793 010b 8F       		.byte	0x8f
 1794 010c 21       		.byte	0x21
 1795 010d E7000000 		.4byte	0xe7
 1796 0111 02       		.byte	0x2
 1797 0112 23       		.byte	0x23
ARM GAS  /tmp/cc4130RP.s 			page 58


 1798 0113 00       		.uleb128 0
 1799 0114 0A       		.uleb128 0xa
 1800 0115 E3040000 		.4byte	.LASF19
 1801 0119 05       		.byte	0x5
 1802 011a 90       		.byte	0x90
 1803 011b 2A       		.byte	0x2a
 1804 011c 51010000 		.4byte	0x151
 1805 0120 02       		.byte	0x2
 1806 0121 23       		.byte	0x23
 1807 0122 04       		.uleb128 0x4
 1808 0123 0A       		.uleb128 0xa
 1809 0124 58020000 		.4byte	.LASF20
 1810 0128 05       		.byte	0x5
 1811 0129 91       		.byte	0x91
 1812 012a 2A       		.byte	0x2a
 1813 012b 51010000 		.4byte	0x151
 1814 012f 02       		.byte	0x2
 1815 0130 23       		.byte	0x23
 1816 0131 08       		.uleb128 0x8
 1817 0132 0A       		.uleb128 0xa
 1818 0133 C6070000 		.4byte	.LASF21
 1819 0137 05       		.byte	0x5
 1820 0138 92       		.byte	0x92
 1821 0139 09       		.byte	0x9
 1822 013a 8A000000 		.4byte	0x8a
 1823 013e 02       		.byte	0x2
 1824 013f 23       		.byte	0x23
 1825 0140 0C       		.uleb128 0xc
 1826 0141 0A       		.uleb128 0xa
 1827 0142 39050000 		.4byte	.LASF22
 1828 0146 05       		.byte	0x5
 1829 0147 93       		.byte	0x93
 1830 0148 25       		.byte	0x25
 1831 0149 92010000 		.4byte	0x192
 1832 014d 02       		.byte	0x2
 1833 014e 23       		.byte	0x23
 1834 014f 10       		.uleb128 0x10
 1835 0150 00       		.byte	0
 1836 0151 07       		.uleb128 0x7
 1837 0152 04       		.byte	0x4
 1838 0153 F8000000 		.4byte	0xf8
 1839 0157 09       		.uleb128 0x9
 1840 0158 F9020000 		.4byte	.LASF24
 1841 015c 14       		.byte	0x14
 1842 015d 05       		.byte	0x5
 1843 015e A4       		.byte	0xa4
 1844 015f 10       		.byte	0x10
 1845 0160 92010000 		.4byte	0x192
 1846 0164 0A       		.uleb128 0xa
 1847 0165 30000000 		.4byte	.LASF25
 1848 0169 05       		.byte	0x5
 1849 016a A7       		.byte	0xa7
 1850 016b 17       		.byte	0x17
 1851 016c DD000000 		.4byte	0xdd
 1852 0170 02       		.byte	0x2
 1853 0171 23       		.byte	0x23
 1854 0172 00       		.uleb128 0
ARM GAS  /tmp/cc4130RP.s 			page 59


 1855 0173 0A       		.uleb128 0xa
 1856 0174 1F010000 		.4byte	.LASF26
 1857 0178 05       		.byte	0x5
 1858 0179 A8       		.byte	0xa8
 1859 017a 23       		.byte	0x23
 1860 017b EB010000 		.4byte	0x1eb
 1861 017f 02       		.byte	0x2
 1862 0180 23       		.byte	0x23
 1863 0181 04       		.uleb128 0x4
 1864 0182 0A       		.uleb128 0xa
 1865 0183 33040000 		.4byte	.LASF27
 1866 0187 05       		.byte	0x5
 1867 0188 A9       		.byte	0xa9
 1868 0189 11       		.byte	0x11
 1869 018a DF010000 		.4byte	0x1df
 1870 018e 02       		.byte	0x2
 1871 018f 23       		.byte	0x23
 1872 0190 08       		.uleb128 0x8
 1873 0191 00       		.byte	0
 1874 0192 07       		.uleb128 0x7
 1875 0193 04       		.byte	0x4
 1876 0194 57010000 		.4byte	0x157
 1877 0198 04       		.uleb128 0x4
 1878 0199 DC030000 		.4byte	.LASF28
 1879 019d 05       		.byte	0x5
 1880 019e 96       		.byte	0x96
 1881 019f 1B       		.byte	0x1b
 1882 01a0 F8000000 		.4byte	0xf8
 1883 01a4 09       		.uleb128 0x9
 1884 01a5 D5020000 		.4byte	.LASF29
 1885 01a9 0C       		.byte	0xc
 1886 01aa 05       		.byte	0x5
 1887 01ab 98       		.byte	0x98
 1888 01ac 08       		.byte	0x8
 1889 01ad DF010000 		.4byte	0x1df
 1890 01b1 0A       		.uleb128 0xa
 1891 01b2 1A060000 		.4byte	.LASF18
 1892 01b6 05       		.byte	0x5
 1893 01b7 9B       		.byte	0x9b
 1894 01b8 21       		.byte	0x21
 1895 01b9 E7000000 		.4byte	0xe7
 1896 01bd 02       		.byte	0x2
 1897 01be 23       		.byte	0x23
 1898 01bf 00       		.uleb128 0
 1899 01c0 0A       		.uleb128 0xa
 1900 01c1 E3040000 		.4byte	.LASF19
 1901 01c5 05       		.byte	0x5
 1902 01c6 9C       		.byte	0x9c
 1903 01c7 2A       		.byte	0x2a
 1904 01c8 51010000 		.4byte	0x151
 1905 01cc 02       		.byte	0x2
 1906 01cd 23       		.byte	0x23
 1907 01ce 04       		.uleb128 0x4
 1908 01cf 0A       		.uleb128 0xa
 1909 01d0 58020000 		.4byte	.LASF20
 1910 01d4 05       		.byte	0x5
 1911 01d5 9D       		.byte	0x9d
ARM GAS  /tmp/cc4130RP.s 			page 60


 1912 01d6 2A       		.byte	0x2a
 1913 01d7 51010000 		.4byte	0x151
 1914 01db 02       		.byte	0x2
 1915 01dc 23       		.byte	0x23
 1916 01dd 08       		.uleb128 0x8
 1917 01de 00       		.byte	0
 1918 01df 04       		.uleb128 0x4
 1919 01e0 3C040000 		.4byte	.LASF30
 1920 01e4 05       		.byte	0x5
 1921 01e5 9F       		.byte	0x9f
 1922 01e6 20       		.byte	0x20
 1923 01e7 A4010000 		.4byte	0x1a4
 1924 01eb 07       		.uleb128 0x7
 1925 01ec 04       		.byte	0x4
 1926 01ed 98010000 		.4byte	0x198
 1927 01f1 04       		.uleb128 0x4
 1928 01f2 F7040000 		.4byte	.LASF31
 1929 01f6 05       		.byte	0x5
 1930 01f7 AB       		.byte	0xab
 1931 01f8 03       		.byte	0x3
 1932 01f9 57010000 		.4byte	0x157
 1933 01fd 04       		.uleb128 0x4
 1934 01fe EA040000 		.4byte	.LASF32
 1935 0202 06       		.byte	0x6
 1936 0203 46       		.byte	0x46
 1937 0204 25       		.byte	0x25
 1938 0205 09020000 		.4byte	0x209
 1939 0209 07       		.uleb128 0x7
 1940 020a 04       		.byte	0x4
 1941 020b 0F020000 		.4byte	0x20f
 1942 020f 0B       		.uleb128 0xb
 1943 0210 9F000000 		.4byte	.LASF34
 1944 0214 01       		.byte	0x1
 1945 0215 04       		.uleb128 0x4
 1946 0216 07040000 		.4byte	.LASF33
 1947 021a 07       		.byte	0x7
 1948 021b 30       		.byte	0x30
 1949 021c 22       		.byte	0x22
 1950 021d 21020000 		.4byte	0x221
 1951 0221 07       		.uleb128 0x7
 1952 0222 04       		.byte	0x4
 1953 0223 27020000 		.4byte	0x227
 1954 0227 0B       		.uleb128 0xb
 1955 0228 10020000 		.4byte	.LASF35
 1956 022c 01       		.byte	0x1
 1957 022d 04       		.uleb128 0x4
 1958 022e 02020000 		.4byte	.LASF36
 1959 0232 08       		.byte	0x8
 1960 0233 4D       		.byte	0x4d
 1961 0234 22       		.byte	0x22
 1962 0235 3E020000 		.4byte	0x23e
 1963 0239 06       		.uleb128 0x6
 1964 023a 2D020000 		.4byte	0x22d
 1965 023e 07       		.uleb128 0x7
 1966 023f 04       		.byte	0x4
 1967 0240 44020000 		.4byte	0x244
 1968 0244 09       		.uleb128 0x9
ARM GAS  /tmp/cc4130RP.s 			page 61


 1969 0245 9A070000 		.4byte	.LASF37
 1970 0249 2C       		.byte	0x2c
 1971 024a 01       		.byte	0x1
 1972 024b 49       		.byte	0x49
 1973 024c 10       		.byte	0x10
 1974 024d BB020000 		.4byte	0x2bb
 1975 0251 0A       		.uleb128 0xa
 1976 0252 27010000 		.4byte	.LASF38
 1977 0256 01       		.byte	0x1
 1978 0257 4B       		.byte	0x4b
 1979 0258 11       		.byte	0x11
 1980 0259 9D000000 		.4byte	0x9d
 1981 025d 02       		.byte	0x2
 1982 025e 23       		.byte	0x23
 1983 025f 00       		.uleb128 0
 1984 0260 0A       		.uleb128 0xa
 1985 0261 09050000 		.4byte	.LASF39
 1986 0265 01       		.byte	0x1
 1987 0266 4C       		.byte	0x4c
 1988 0267 10       		.byte	0x10
 1989 0268 98010000 		.4byte	0x198
 1990 026c 02       		.byte	0x2
 1991 026d 23       		.byte	0x23
 1992 026e 04       		.uleb128 0x4
 1993 026f 0A       		.uleb128 0xa
 1994 0270 40000000 		.4byte	.LASF40
 1995 0274 01       		.byte	0x1
 1996 0275 4D       		.byte	0x4d
 1997 0276 10       		.byte	0x10
 1998 0277 E7000000 		.4byte	0xe7
 1999 027b 02       		.byte	0x2
 2000 027c 23       		.byte	0x23
 2001 027d 18       		.uleb128 0x18
 2002 027e 0A       		.uleb128 0xa
 2003 027f 96060000 		.4byte	.LASF41
 2004 0283 01       		.byte	0x1
 2005 0284 4E       		.byte	0x4e
 2006 0285 0D       		.byte	0xd
 2007 0286 8A000000 		.4byte	0x8a
 2008 028a 02       		.byte	0x2
 2009 028b 23       		.byte	0x23
 2010 028c 1C       		.uleb128 0x1c
 2011 028d 0A       		.uleb128 0xa
 2012 028e 66000000 		.4byte	.LASF42
 2013 0292 01       		.byte	0x1
 2014 0293 4F       		.byte	0x4f
 2015 0294 1A       		.byte	0x1a
 2016 0295 BB020000 		.4byte	0x2bb
 2017 0299 02       		.byte	0x2
 2018 029a 23       		.byte	0x23
 2019 029b 20       		.uleb128 0x20
 2020 029c 0A       		.uleb128 0xa
 2021 029d 88000000 		.4byte	.LASF43
 2022 02a1 01       		.byte	0x1
 2023 02a2 51       		.byte	0x51
 2024 02a3 11       		.byte	0x11
 2025 02a4 D1000000 		.4byte	0xd1
ARM GAS  /tmp/cc4130RP.s 			page 62


 2026 02a8 02       		.byte	0x2
 2027 02a9 23       		.byte	0x23
 2028 02aa 24       		.uleb128 0x24
 2029 02ab 0A       		.uleb128 0xa
 2030 02ac 11060000 		.4byte	.LASF44
 2031 02b0 01       		.byte	0x1
 2032 02b1 53       		.byte	0x53
 2033 02b2 0E       		.byte	0xe
 2034 02b3 A8000000 		.4byte	0xa8
 2035 02b7 02       		.byte	0x2
 2036 02b8 23       		.byte	0x23
 2037 02b9 28       		.uleb128 0x28
 2038 02ba 00       		.byte	0
 2039 02bb 04       		.uleb128 0x4
 2040 02bc 90010000 		.4byte	.LASF45
 2041 02c0 08       		.byte	0x8
 2042 02c1 52       		.byte	0x52
 2043 02c2 10       		.byte	0x10
 2044 02c3 C7020000 		.4byte	0x2c7
 2045 02c7 07       		.uleb128 0x7
 2046 02c8 04       		.byte	0x4
 2047 02c9 CD020000 		.4byte	0x2cd
 2048 02cd 0C       		.uleb128 0xc
 2049 02ce 01       		.byte	0x1
 2050 02cf D9020000 		.4byte	0x2d9
 2051 02d3 0D       		.uleb128 0xd
 2052 02d4 2D020000 		.4byte	0x22d
 2053 02d8 00       		.byte	0
 2054 02d9 04       		.uleb128 0x4
 2055 02da 91030000 		.4byte	.LASF46
 2056 02de 01       		.byte	0x1
 2057 02df 54       		.byte	0x54
 2058 02e0 03       		.byte	0x3
 2059 02e1 44020000 		.4byte	0x244
 2060 02e5 04       		.uleb128 0x4
 2061 02e6 B7060000 		.4byte	.LASF47
 2062 02ea 01       		.byte	0x1
 2063 02eb 58       		.byte	0x58
 2064 02ec 10       		.byte	0x10
 2065 02ed D9020000 		.4byte	0x2d9
 2066 02f1 09       		.uleb128 0x9
 2067 02f2 2C080000 		.4byte	.LASF48
 2068 02f6 08       		.byte	0x8
 2069 02f7 01       		.byte	0x1
 2070 02f8 5F       		.byte	0x5f
 2071 02f9 10       		.byte	0x10
 2072 02fa 1D030000 		.4byte	0x31d
 2073 02fe 0A       		.uleb128 0xa
 2074 02ff 54070000 		.4byte	.LASF49
 2075 0303 01       		.byte	0x1
 2076 0304 61       		.byte	0x61
 2077 0305 0F       		.byte	0xf
 2078 0306 E7000000 		.4byte	0xe7
 2079 030a 02       		.byte	0x2
 2080 030b 23       		.byte	0x23
 2081 030c 00       		.uleb128 0
 2082 030d 0A       		.uleb128 0xa
ARM GAS  /tmp/cc4130RP.s 			page 63


 2083 030e 3E070000 		.4byte	.LASF50
 2084 0312 01       		.byte	0x1
 2085 0313 62       		.byte	0x62
 2086 0314 0E       		.byte	0xe
 2087 0315 1D030000 		.4byte	0x31d
 2088 0319 02       		.byte	0x2
 2089 031a 23       		.byte	0x23
 2090 031b 04       		.uleb128 0x4
 2091 031c 00       		.byte	0
 2092 031d 07       		.uleb128 0x7
 2093 031e 04       		.byte	0x4
 2094 031f E5020000 		.4byte	0x2e5
 2095 0323 06       		.uleb128 0x6
 2096 0324 1D030000 		.4byte	0x31d
 2097 0328 04       		.uleb128 0x4
 2098 0329 60010000 		.4byte	.LASF51
 2099 032d 01       		.byte	0x1
 2100 032e 63       		.byte	0x63
 2101 032f 03       		.byte	0x3
 2102 0330 F1020000 		.4byte	0x2f1
 2103 0334 0E       		.uleb128 0xe
 2104 0335 08       		.byte	0x8
 2105 0336 01       		.byte	0x1
 2106 0337 72       		.byte	0x72
 2107 0338 02       		.byte	0x2
 2108 0339 4A030000 		.4byte	0x34a
 2109 033d 0F       		.uleb128 0xf
 2110 033e B3000000 		.4byte	.LASF128
 2111 0342 01       		.byte	0x1
 2112 0343 74       		.byte	0x74
 2113 0344 14       		.byte	0x14
 2114 0345 28030000 		.4byte	0x328
 2115 0349 00       		.byte	0
 2116 034a 09       		.uleb128 0x9
 2117 034b 63030000 		.4byte	.LASF52
 2118 034f 0C       		.byte	0xc
 2119 0350 01       		.byte	0x1
 2120 0351 6F       		.byte	0x6f
 2121 0352 10       		.byte	0x10
 2122 0353 74030000 		.4byte	0x374
 2123 0357 0A       		.uleb128 0xa
 2124 0358 BF060000 		.4byte	.LASF53
 2125 035c 01       		.byte	0x1
 2126 035d 71       		.byte	0x71
 2127 035e 0F       		.byte	0xf
 2128 035f C0000000 		.4byte	0xc0
 2129 0363 02       		.byte	0x2
 2130 0364 23       		.byte	0x23
 2131 0365 00       		.uleb128 0
 2132 0366 10       		.uleb128 0x10
 2133 0367 7500     		.ascii	"u\000"
 2134 0369 01       		.byte	0x1
 2135 036a 7B       		.byte	0x7b
 2136 036b 04       		.byte	0x4
 2137 036c 34030000 		.4byte	0x334
 2138 0370 02       		.byte	0x2
 2139 0371 23       		.byte	0x23
ARM GAS  /tmp/cc4130RP.s 			page 64


 2140 0372 04       		.uleb128 0x4
 2141 0373 00       		.byte	0
 2142 0374 04       		.uleb128 0x4
 2143 0375 CA060000 		.4byte	.LASF54
 2144 0379 01       		.byte	0x1
 2145 037a 7C       		.byte	0x7c
 2146 037b 03       		.byte	0x3
 2147 037c 4A030000 		.4byte	0x34a
 2148 0380 11       		.uleb128 0x11
 2149 0381 98030000 		.4byte	.LASF55
 2150 0385 01       		.byte	0x1
 2151 0386 87       		.byte	0x87
 2152 0387 1F       		.byte	0x1f
 2153 0388 F1010000 		.4byte	0x1f1
 2154 038c 05       		.byte	0x5
 2155 038d 03       		.byte	0x3
 2156 038e 04000000 		.4byte	xActiveTimerList1
 2157 0392 11       		.uleb128 0x11
 2158 0393 AA030000 		.4byte	.LASF56
 2159 0397 01       		.byte	0x1
 2160 0398 88       		.byte	0x88
 2161 0399 1F       		.byte	0x1f
 2162 039a F1010000 		.4byte	0x1f1
 2163 039e 05       		.byte	0x5
 2164 039f 03       		.byte	0x3
 2165 03a0 18000000 		.4byte	xActiveTimerList2
 2166 03a4 11       		.uleb128 0x11
 2167 03a5 62060000 		.4byte	.LASF57
 2168 03a9 01       		.byte	0x1
 2169 03aa 89       		.byte	0x89
 2170 03ab 20       		.byte	0x20
 2171 03ac B6030000 		.4byte	0x3b6
 2172 03b0 05       		.byte	0x5
 2173 03b1 03       		.byte	0x3
 2174 03b2 2C000000 		.4byte	pxCurrentTimerList
 2175 03b6 07       		.uleb128 0x7
 2176 03b7 04       		.byte	0x4
 2177 03b8 F1010000 		.4byte	0x1f1
 2178 03bc 11       		.uleb128 0x11
 2179 03bd E5020000 		.4byte	.LASF58
 2180 03c1 01       		.byte	0x1
 2181 03c2 8A       		.byte	0x8a
 2182 03c3 20       		.byte	0x20
 2183 03c4 B6030000 		.4byte	0x3b6
 2184 03c8 05       		.byte	0x5
 2185 03c9 03       		.byte	0x3
 2186 03ca 30000000 		.4byte	pxOverflowTimerList
 2187 03ce 11       		.uleb128 0x11
 2188 03cf 71010000 		.4byte	.LASF59
 2189 03d3 01       		.byte	0x1
 2190 03d4 8D       		.byte	0x8d
 2191 03d5 26       		.byte	0x26
 2192 03d6 15020000 		.4byte	0x215
 2193 03da 05       		.byte	0x5
 2194 03db 03       		.byte	0x3
 2195 03dc 00000000 		.4byte	xTimerQueue
 2196 03e0 11       		.uleb128 0x11
ARM GAS  /tmp/cc4130RP.s 			page 65


 2197 03e1 45050000 		.4byte	.LASF60
 2198 03e5 01       		.byte	0x1
 2199 03e6 8E       		.byte	0x8e
 2200 03e7 25       		.byte	0x25
 2201 03e8 FD010000 		.4byte	0x1fd
 2202 03ec 05       		.byte	0x5
 2203 03ed 03       		.byte	0x3
 2204 03ee 34000000 		.4byte	xTimerTaskHandle
 2205 03f2 12       		.uleb128 0x12
 2206 03f3 01       		.byte	0x1
 2207 03f4 F2060000 		.4byte	.LASF62
 2208 03f8 01       		.byte	0x1
 2209 03f9 4004     		.2byte	0x440
 2210 03fb 07       		.byte	0x7
 2211 03fc 01       		.byte	0x1
 2212 03fd B0030000 		.4byte	.LFB27
 2213 0401 B4030000 		.4byte	.LFE27
 2214 0405 02       		.byte	0x2
 2215 0406 7D       		.byte	0x7d
 2216 0407 00       		.sleb128 0
 2217 0408 01       		.byte	0x1
 2218 0409 2C040000 		.4byte	0x42c
 2219 040d 13       		.uleb128 0x13
 2220 040e 8A030000 		.4byte	.LASF61
 2221 0412 01       		.byte	0x1
 2222 0413 4004     		.2byte	0x440
 2223 0415 2B       		.byte	0x2b
 2224 0416 2D020000 		.4byte	0x22d
 2225 041a 01       		.byte	0x1
 2226 041b 50       		.byte	0x50
 2227 041c 13       		.uleb128 0x13
 2228 041d 88000000 		.4byte	.LASF43
 2229 0421 01       		.byte	0x1
 2230 0422 4004     		.2byte	0x440
 2231 0424 3F       		.byte	0x3f
 2232 0425 D1000000 		.4byte	0xd1
 2233 0429 01       		.byte	0x1
 2234 042a 51       		.byte	0x51
 2235 042b 00       		.byte	0
 2236 042c 14       		.uleb128 0x14
 2237 042d 01       		.byte	0x1
 2238 042e 37020000 		.4byte	.LASF65
 2239 0432 01       		.byte	0x1
 2240 0433 3604     		.2byte	0x436
 2241 0435 0E       		.byte	0xe
 2242 0436 01       		.byte	0x1
 2243 0437 D1000000 		.4byte	0xd1
 2244 043b AC030000 		.4byte	.LFB26
 2245 043f B0030000 		.4byte	.LFE26
 2246 0443 02       		.byte	0x2
 2247 0444 7D       		.byte	0x7d
 2248 0445 00       		.sleb128 0
 2249 0446 01       		.byte	0x1
 2250 0447 61040000 		.4byte	0x461
 2251 044b 15       		.uleb128 0x15
 2252 044c 8A030000 		.4byte	.LASF61
 2253 0450 01       		.byte	0x1
ARM GAS  /tmp/cc4130RP.s 			page 66


 2254 0451 3604     		.2byte	0x436
 2255 0453 33       		.byte	0x33
 2256 0454 2D020000 		.4byte	0x22d
 2257 0458 04000000 		.4byte	.LLST76
 2258 045c 00000000 		.4byte	.LVUS76
 2259 0460 00       		.byte	0
 2260 0461 16       		.uleb128 0x16
 2261 0462 01       		.byte	0x1
 2262 0463 5F040000 		.4byte	.LASF63
 2263 0467 01       		.byte	0x1
 2264 0468 F103     		.2byte	0x3f1
 2265 046a 06       		.byte	0x6
 2266 046b 01       		.byte	0x1
 2267 046c 98030000 		.4byte	.LFB25
 2268 0470 AC030000 		.4byte	.LFE25
 2269 0474 25000000 		.4byte	.LLST72
 2270 0478 01       		.byte	0x1
 2271 0479 D0040000 		.4byte	0x4d0
 2272 047d 15       		.uleb128 0x15
 2273 047e 8A030000 		.4byte	.LASF61
 2274 0482 01       		.byte	0x1
 2275 0483 F103     		.2byte	0x3f1
 2276 0485 26       		.byte	0x26
 2277 0486 2D020000 		.4byte	0x22d
 2278 048a 57000000 		.4byte	.LLST73
 2279 048e 51000000 		.4byte	.LVUS73
 2280 0492 15       		.uleb128 0x15
 2281 0493 BC040000 		.4byte	.LASF64
 2282 0497 01       		.byte	0x1
 2283 0498 F103     		.2byte	0x3f1
 2284 049a 34       		.byte	0x34
 2285 049b 8A000000 		.4byte	0x8a
 2286 049f 8B000000 		.4byte	.LLST74
 2287 04a3 83000000 		.4byte	.LVUS74
 2288 04a7 17       		.uleb128 0x17
 2289 04a8 3E070000 		.4byte	.LASF50
 2290 04ac 01       		.byte	0x1
 2291 04ad F303     		.2byte	0x3f3
 2292 04af 11       		.byte	0x11
 2293 04b0 23030000 		.4byte	0x323
 2294 04b4 CC000000 		.4byte	.LLST75
 2295 04b8 C6000000 		.4byte	.LVUS75
 2296 04bc 18       		.uleb128 0x18
 2297 04bd A2030000 		.4byte	.LVL117
 2298 04c1 EC100000 		.4byte	0x10ec
 2299 04c5 19       		.uleb128 0x19
 2300 04c6 AC030000 		.4byte	.LVL119
 2301 04ca 01       		.byte	0x1
 2302 04cb FA100000 		.4byte	0x10fa
 2303 04cf 00       		.byte	0
 2304 04d0 1A       		.uleb128 0x1a
 2305 04d1 01       		.byte	0x1
 2306 04d2 C3020000 		.4byte	.LASF66
 2307 04d6 01       		.byte	0x1
 2308 04d7 E003     		.2byte	0x3e0
 2309 04d9 07       		.byte	0x7
 2310 04da 01       		.byte	0x1
ARM GAS  /tmp/cc4130RP.s 			page 67


 2311 04db 8A000000 		.4byte	0x8a
 2312 04df 86030000 		.4byte	.LFB24
 2313 04e3 98030000 		.4byte	.LFE24
 2314 04e7 F8000000 		.4byte	.LLST68
 2315 04eb 01       		.byte	0x1
 2316 04ec 42050000 		.4byte	0x542
 2317 04f0 15       		.uleb128 0x15
 2318 04f1 8A030000 		.4byte	.LASF61
 2319 04f5 01       		.byte	0x1
 2320 04f6 E003     		.2byte	0x3e0
 2321 04f8 2E       		.byte	0x2e
 2322 04f9 39020000 		.4byte	0x239
 2323 04fd 1E010000 		.4byte	.LLST69
 2324 0501 18010000 		.4byte	.LVUS69
 2325 0505 17       		.uleb128 0x17
 2326 0506 3E070000 		.4byte	.LASF50
 2327 050a 01       		.byte	0x1
 2328 050b E203     		.2byte	0x3e2
 2329 050d 11       		.byte	0x11
 2330 050e 23030000 		.4byte	0x323
 2331 0512 50010000 		.4byte	.LLST70
 2332 0516 4A010000 		.4byte	.LVUS70
 2333 051a 17       		.uleb128 0x17
 2334 051b 63020000 		.4byte	.LASF67
 2335 051f 01       		.byte	0x1
 2336 0520 E303     		.2byte	0x3e3
 2337 0522 07       		.byte	0x7
 2338 0523 8A000000 		.4byte	0x8a
 2339 0527 7E010000 		.4byte	.LLST71
 2340 052b 7C010000 		.4byte	.LVUS71
 2341 052f 18       		.uleb128 0x18
 2342 0530 8E030000 		.4byte	.LVL112
 2343 0534 EC100000 		.4byte	0x10ec
 2344 0538 18       		.uleb128 0x18
 2345 0539 94030000 		.4byte	.LVL114
 2346 053d FA100000 		.4byte	0x10fa
 2347 0541 00       		.byte	0
 2348 0542 1A       		.uleb128 0x1a
 2349 0543 01       		.byte	0x1
 2350 0544 AF020000 		.4byte	.LASF68
 2351 0548 01       		.byte	0x1
 2352 0549 C703     		.2byte	0x3c7
 2353 054b 0C       		.byte	0xc
 2354 054c 01       		.byte	0x1
 2355 054d C0000000 		.4byte	0xc0
 2356 0551 6E030000 		.4byte	.LFB23
 2357 0555 86030000 		.4byte	.LFE23
 2358 0559 91010000 		.4byte	.LLST64
 2359 055d 01       		.byte	0x1
 2360 055e B4050000 		.4byte	0x5b4
 2361 0562 15       		.uleb128 0x15
 2362 0563 8A030000 		.4byte	.LASF61
 2363 0567 01       		.byte	0x1
 2364 0568 C703     		.2byte	0x3c7
 2365 056a 2F       		.byte	0x2f
 2366 056b 2D020000 		.4byte	0x22d
 2367 056f B7010000 		.4byte	.LLST65
ARM GAS  /tmp/cc4130RP.s 			page 68


 2368 0573 B1010000 		.4byte	.LVUS65
 2369 0577 17       		.uleb128 0x17
 2370 0578 EA060000 		.4byte	.LASF69
 2371 057c 01       		.byte	0x1
 2372 057d C903     		.2byte	0x3c9
 2373 057f 0C       		.byte	0xc
 2374 0580 C0000000 		.4byte	0xc0
 2375 0584 E5010000 		.4byte	.LLST66
 2376 0588 E3010000 		.4byte	.LVUS66
 2377 058c 17       		.uleb128 0x17
 2378 058d 3E070000 		.4byte	.LASF50
 2379 0591 01       		.byte	0x1
 2380 0592 CA03     		.2byte	0x3ca
 2381 0594 0A       		.byte	0xa
 2382 0595 1D030000 		.4byte	0x31d
 2383 0599 FE010000 		.4byte	.LLST67
 2384 059d F8010000 		.4byte	.LVUS67
 2385 05a1 18       		.uleb128 0x18
 2386 05a2 76030000 		.4byte	.LVL106
 2387 05a6 EC100000 		.4byte	0x10ec
 2388 05aa 18       		.uleb128 0x18
 2389 05ab 7E030000 		.4byte	.LVL108
 2390 05af FA100000 		.4byte	0x10fa
 2391 05b3 00       		.byte	0
 2392 05b4 1B       		.uleb128 0x1b
 2393 05b5 6D070000 		.4byte	.LASF89
 2394 05b9 01       		.byte	0x1
 2395 05ba 9403     		.2byte	0x394
 2396 05bc 0D       		.byte	0xd
 2397 05bd 01       		.byte	0x1
 2398 05be 00000000 		.4byte	.LFB22
 2399 05c2 3C000000 		.4byte	.LFE22
 2400 05c6 2A020000 		.4byte	.LLST0
 2401 05ca 01       		.byte	0x1
 2402 05cb 29060000 		.4byte	0x629
 2403 05cf 18       		.uleb128 0x18
 2404 05d0 08000000 		.4byte	.LVL0
 2405 05d4 EC100000 		.4byte	0x10ec
 2406 05d8 1C       		.uleb128 0x1c
 2407 05d9 18000000 		.4byte	.LVL1
 2408 05dd 08110000 		.4byte	0x1108
 2409 05e1 EC050000 		.4byte	0x5ec
 2410 05e5 1D       		.uleb128 0x1d
 2411 05e6 01       		.byte	0x1
 2412 05e7 50       		.byte	0x50
 2413 05e8 02       		.byte	0x2
 2414 05e9 77       		.byte	0x77
 2415 05ea 00       		.sleb128 0
 2416 05eb 00       		.byte	0
 2417 05ec 1C       		.uleb128 0x1c
 2418 05ed 1E000000 		.4byte	.LVL2
 2419 05f1 08110000 		.4byte	0x1108
 2420 05f5 00060000 		.4byte	0x600
 2421 05f9 1D       		.uleb128 0x1d
 2422 05fa 01       		.byte	0x1
 2423 05fb 50       		.byte	0x50
 2424 05fc 02       		.byte	0x2
ARM GAS  /tmp/cc4130RP.s 			page 69


 2425 05fd 76       		.byte	0x76
 2426 05fe 00       		.sleb128 0
 2427 05ff 00       		.byte	0
 2428 0600 1C       		.uleb128 0x1c
 2429 0601 2C000000 		.4byte	.LVL3
 2430 0605 17110000 		.4byte	0x1117
 2431 0609 1E060000 		.4byte	0x61e
 2432 060d 1D       		.uleb128 0x1d
 2433 060e 01       		.byte	0x1
 2434 060f 50       		.byte	0x50
 2435 0610 01       		.byte	0x1
 2436 0611 3A       		.byte	0x3a
 2437 0612 1D       		.uleb128 0x1d
 2438 0613 01       		.byte	0x1
 2439 0614 51       		.byte	0x51
 2440 0615 01       		.byte	0x1
 2441 0616 3C       		.byte	0x3c
 2442 0617 1D       		.uleb128 0x1d
 2443 0618 01       		.byte	0x1
 2444 0619 52       		.byte	0x52
 2445 061a 02       		.byte	0x2
 2446 061b 75       		.byte	0x75
 2447 061c 00       		.sleb128 0
 2448 061d 00       		.byte	0
 2449 061e 19       		.uleb128 0x19
 2450 061f 36000000 		.4byte	.LVL4
 2451 0623 01       		.byte	0x1
 2452 0624 FA100000 		.4byte	0x10fa
 2453 0628 00       		.byte	0
 2454 0629 1E       		.uleb128 0x1e
 2455 062a CF040000 		.4byte	.LASF74
 2456 062e 01       		.byte	0x1
 2457 062f 5903     		.2byte	0x359
 2458 0631 0D       		.byte	0xd
 2459 0632 01       		.byte	0x1
 2460 0633 01       		.byte	0x1
 2461 0634 7A060000 		.4byte	0x67a
 2462 0638 1F       		.uleb128 0x1f
 2463 0639 63050000 		.4byte	.LASF70
 2464 063d 01       		.byte	0x1
 2465 063e 5B03     		.2byte	0x35b
 2466 0640 0C       		.byte	0xc
 2467 0641 E7000000 		.4byte	0xe7
 2468 0645 1F       		.uleb128 0x1f
 2469 0646 DE060000 		.4byte	.LASF71
 2470 064a 01       		.byte	0x1
 2471 064b 5B03     		.2byte	0x35b
 2472 064d 1D       		.byte	0x1d
 2473 064e E7000000 		.4byte	0xe7
 2474 0652 1F       		.uleb128 0x1f
 2475 0653 6C020000 		.4byte	.LASF72
 2476 0657 01       		.byte	0x1
 2477 0658 5C03     		.2byte	0x35c
 2478 065a 09       		.byte	0x9
 2479 065b B6030000 		.4byte	0x3b6
 2480 065f 1F       		.uleb128 0x1f
 2481 0660 3E070000 		.4byte	.LASF50
ARM GAS  /tmp/cc4130RP.s 			page 70


 2482 0664 01       		.byte	0x1
 2483 0665 5D03     		.2byte	0x35d
 2484 0667 0A       		.byte	0xa
 2485 0668 1D030000 		.4byte	0x31d
 2486 066c 1F       		.uleb128 0x1f
 2487 066d 26070000 		.4byte	.LASF73
 2488 0671 01       		.byte	0x1
 2489 0672 5E03     		.2byte	0x35e
 2490 0674 0C       		.byte	0xc
 2491 0675 C0000000 		.4byte	0xc0
 2492 0679 00       		.byte	0
 2493 067a 1E       		.uleb128 0x1e
 2494 067b 25060000 		.4byte	.LASF75
 2495 067f 01       		.byte	0x1
 2496 0680 C502     		.2byte	0x2c5
 2497 0682 0D       		.byte	0xd
 2498 0683 01       		.byte	0x1
 2499 0684 01       		.byte	0x1
 2500 0685 CB060000 		.4byte	0x6cb
 2501 0689 1F       		.uleb128 0x1f
 2502 068a 75060000 		.4byte	.LASF76
 2503 068e 01       		.byte	0x1
 2504 068f C702     		.2byte	0x2c7
 2505 0691 15       		.byte	0x15
 2506 0692 74030000 		.4byte	0x374
 2507 0696 1F       		.uleb128 0x1f
 2508 0697 3E070000 		.4byte	.LASF50
 2509 069b 01       		.byte	0x1
 2510 069c C802     		.2byte	0x2c8
 2511 069e 0A       		.byte	0xa
 2512 069f 1D030000 		.4byte	0x31d
 2513 06a3 1F       		.uleb128 0x1f
 2514 06a4 70040000 		.4byte	.LASF77
 2515 06a8 01       		.byte	0x1
 2516 06a9 C902     		.2byte	0x2c9
 2517 06ab 0C       		.byte	0xc
 2518 06ac C0000000 		.4byte	0xc0
 2519 06b0 1F       		.uleb128 0x1f
 2520 06b1 26070000 		.4byte	.LASF73
 2521 06b5 01       		.byte	0x1
 2522 06b6 C902     		.2byte	0x2c9
 2523 06b8 25       		.byte	0x25
 2524 06b9 C0000000 		.4byte	0xc0
 2525 06bd 1F       		.uleb128 0x1f
 2526 06be 96000000 		.4byte	.LASF78
 2527 06c2 01       		.byte	0x1
 2528 06c3 CA02     		.2byte	0x2ca
 2529 06c5 0C       		.byte	0xc
 2530 06c6 E7000000 		.4byte	0xe7
 2531 06ca 00       		.byte	0
 2532 06cb 20       		.uleb128 0x20
 2533 06cc BC030000 		.4byte	.LASF84
 2534 06d0 01       		.byte	0x1
 2535 06d1 9C02     		.2byte	0x29c
 2536 06d3 13       		.byte	0x13
 2537 06d4 01       		.byte	0x1
 2538 06d5 C0000000 		.4byte	0xc0
ARM GAS  /tmp/cc4130RP.s 			page 71


 2539 06d9 01       		.byte	0x1
 2540 06da 20070000 		.4byte	0x720
 2541 06de 21       		.uleb128 0x21
 2542 06df 3E070000 		.4byte	.LASF50
 2543 06e3 01       		.byte	0x1
 2544 06e4 9C02     		.2byte	0x29c
 2545 06e6 3F       		.byte	0x3f
 2546 06e7 23030000 		.4byte	0x323
 2547 06eb 21       		.uleb128 0x21
 2548 06ec 09080000 		.4byte	.LASF79
 2549 06f0 01       		.byte	0x1
 2550 06f1 9C02     		.2byte	0x29c
 2551 06f3 59       		.byte	0x59
 2552 06f4 F3000000 		.4byte	0xf3
 2553 06f8 21       		.uleb128 0x21
 2554 06f9 96000000 		.4byte	.LASF78
 2555 06fd 01       		.byte	0x1
 2556 06fe 9C02     		.2byte	0x29c
 2557 0700 7B       		.byte	0x7b
 2558 0701 F3000000 		.4byte	0xf3
 2559 0705 21       		.uleb128 0x21
 2560 0706 23000000 		.4byte	.LASF80
 2561 070a 01       		.byte	0x1
 2562 070b 9C02     		.2byte	0x29c
 2563 070d 96       		.byte	0x96
 2564 070e F3000000 		.4byte	0xf3
 2565 0712 1F       		.uleb128 0x1f
 2566 0713 C9010000 		.4byte	.LASF81
 2567 0717 01       		.byte	0x1
 2568 0718 9E02     		.2byte	0x29e
 2569 071a 0C       		.byte	0xc
 2570 071b C0000000 		.4byte	0xc0
 2571 071f 00       		.byte	0
 2572 0720 22       		.uleb128 0x22
 2573 0721 22040000 		.4byte	.LASF129
 2574 0725 01       		.byte	0x1
 2575 0726 8502     		.2byte	0x285
 2576 0728 13       		.byte	0x13
 2577 0729 01       		.byte	0x1
 2578 072a E7000000 		.4byte	0xe7
 2579 072e 30010000 		.4byte	.LFB18
 2580 0732 B4010000 		.4byte	.LFE18
 2581 0736 56020000 		.4byte	.LLST32
 2582 073a 01       		.byte	0x1
 2583 073b 38080000 		.4byte	0x838
 2584 073f 15       		.uleb128 0x15
 2585 0740 54080000 		.4byte	.LASF82
 2586 0744 01       		.byte	0x1
 2587 0745 8502     		.2byte	0x285
 2588 0747 38       		.byte	0x38
 2589 0748 3E080000 		.4byte	0x83e
 2590 074c 92020000 		.4byte	.LLST33
 2591 0750 8E020000 		.4byte	.LVUS33
 2592 0754 17       		.uleb128 0x17
 2593 0755 96000000 		.4byte	.LASF78
 2594 0759 01       		.byte	0x1
 2595 075a 8702     		.2byte	0x287
ARM GAS  /tmp/cc4130RP.s 			page 72


 2596 075c 0C       		.byte	0xc
 2597 075d E7000000 		.4byte	0xe7
 2598 0761 B6020000 		.4byte	.LLST34
 2599 0765 B0020000 		.4byte	.LVUS34
 2600 0769 23       		.uleb128 0x23
 2601 076a 49060000 		.4byte	.LASF83
 2602 076e 01       		.byte	0x1
 2603 076f 8802     		.2byte	0x288
 2604 0771 23       		.byte	0x23
 2605 0772 E7000000 		.4byte	0xe7
 2606 0776 05       		.byte	0x5
 2607 0777 03       		.byte	0x3
 2608 0778 38000000 		.4byte	xLastTime.0
 2609 077c 24       		.uleb128 0x24
 2610 077d 29060000 		.4byte	0x629
 2611 0781 00000000 		.4byte	.Ldebug_ranges0+0
 2612 0785 01       		.byte	0x1
 2613 0786 8E02     		.2byte	0x28e
 2614 0788 03       		.byte	0x3
 2615 0789 2E080000 		.4byte	0x82e
 2616 078d 25       		.uleb128 0x25
 2617 078e 00000000 		.4byte	.Ldebug_ranges0+0
 2618 0792 26       		.uleb128 0x26
 2619 0793 38060000 		.4byte	0x638
 2620 0797 E1020000 		.4byte	.LLST35
 2621 079b DF020000 		.4byte	.LVUS35
 2622 079f 26       		.uleb128 0x26
 2623 07a0 45060000 		.4byte	0x645
 2624 07a4 FA020000 		.4byte	.LLST36
 2625 07a8 F4020000 		.4byte	.LVUS36
 2626 07ac 26       		.uleb128 0x26
 2627 07ad 52060000 		.4byte	0x652
 2628 07b1 2B030000 		.4byte	.LLST37
 2629 07b5 29030000 		.4byte	.LVUS37
 2630 07b9 26       		.uleb128 0x26
 2631 07ba 5F060000 		.4byte	0x65f
 2632 07be 40030000 		.4byte	.LLST38
 2633 07c2 3E030000 		.4byte	.LVUS38
 2634 07c6 27       		.uleb128 0x27
 2635 07c7 6C060000 		.4byte	0x66c
 2636 07cb 1C       		.uleb128 0x1c
 2637 07cc 74010000 		.4byte	.LVL45
 2638 07d0 26110000 		.4byte	0x1126
 2639 07d4 DF070000 		.4byte	0x7df
 2640 07d8 1D       		.uleb128 0x1d
 2641 07d9 01       		.byte	0x1
 2642 07da 50       		.byte	0x50
 2643 07db 02       		.byte	0x2
 2644 07dc 7A       		.byte	0x7a
 2645 07dd 00       		.sleb128 0
 2646 07de 00       		.byte	0
 2647 07df 28       		.uleb128 0x28
 2648 07e0 7A010000 		.4byte	.LVL46
 2649 07e4 EF070000 		.4byte	0x7ef
 2650 07e8 1D       		.uleb128 0x1d
 2651 07e9 01       		.byte	0x1
 2652 07ea 50       		.byte	0x50
ARM GAS  /tmp/cc4130RP.s 			page 73


 2653 07eb 02       		.byte	0x2
 2654 07ec 74       		.byte	0x74
 2655 07ed 00       		.sleb128 0
 2656 07ee 00       		.byte	0
 2657 07ef 1C       		.uleb128 0x1c
 2658 07f0 96010000 		.4byte	.LVL48
 2659 07f4 35110000 		.4byte	0x1135
 2660 07f8 03080000 		.4byte	0x803
 2661 07fc 1D       		.uleb128 0x1d
 2662 07fd 01       		.byte	0x1
 2663 07fe 51       		.byte	0x51
 2664 07ff 02       		.byte	0x2
 2665 0800 7A       		.byte	0x7a
 2666 0801 00       		.sleb128 0
 2667 0802 00       		.byte	0
 2668 0803 29       		.uleb128 0x29
 2669 0804 A8010000 		.4byte	.LVL52
 2670 0808 530D0000 		.4byte	0xd53
 2671 080c 1D       		.uleb128 0x1d
 2672 080d 01       		.byte	0x1
 2673 080e 50       		.byte	0x50
 2674 080f 02       		.byte	0x2
 2675 0810 74       		.byte	0x74
 2676 0811 00       		.sleb128 0
 2677 0812 1D       		.uleb128 0x1d
 2678 0813 01       		.byte	0x1
 2679 0814 51       		.byte	0x51
 2680 0815 02       		.byte	0x2
 2681 0816 78       		.byte	0x78
 2682 0817 00       		.sleb128 0
 2683 0818 1D       		.uleb128 0x1d
 2684 0819 01       		.byte	0x1
 2685 081a 52       		.byte	0x52
 2686 081b 02       		.byte	0x2
 2687 081c 79       		.byte	0x79
 2688 081d 00       		.sleb128 0
 2689 081e 1D       		.uleb128 0x1d
 2690 081f 01       		.byte	0x1
 2691 0820 53       		.byte	0x53
 2692 0821 02       		.byte	0x2
 2693 0822 78       		.byte	0x78
 2694 0823 00       		.sleb128 0
 2695 0824 1D       		.uleb128 0x1d
 2696 0825 02       		.byte	0x2
 2697 0826 7D       		.byte	0x7d
 2698 0827 00       		.sleb128 0
 2699 0828 02       		.byte	0x2
 2700 0829 78       		.byte	0x78
 2701 082a 00       		.sleb128 0
 2702 082b 00       		.byte	0
 2703 082c 00       		.byte	0
 2704 082d 00       		.byte	0
 2705 082e 18       		.uleb128 0x18
 2706 082f 3A010000 		.4byte	.LVL38
 2707 0833 44110000 		.4byte	0x1144
 2708 0837 00       		.byte	0
 2709 0838 07       		.uleb128 0x7
ARM GAS  /tmp/cc4130RP.s 			page 74


 2710 0839 04       		.byte	0x4
 2711 083a C0000000 		.4byte	0xc0
 2712 083e 06       		.uleb128 0x6
 2713 083f 38080000 		.4byte	0x838
 2714 0843 20       		.uleb128 0x20
 2715 0844 3F080000 		.4byte	.LASF85
 2716 0848 01       		.byte	0x1
 2717 0849 6B02     		.2byte	0x26b
 2718 084b 13       		.byte	0x13
 2719 084c 01       		.byte	0x1
 2720 084d E7000000 		.4byte	0xe7
 2721 0851 01       		.byte	0x1
 2722 0852 71080000 		.4byte	0x871
 2723 0856 21       		.uleb128 0x21
 2724 0857 79000000 		.4byte	.LASF86
 2725 085b 01       		.byte	0x1
 2726 085c 6B02     		.2byte	0x26b
 2727 085e 3C       		.byte	0x3c
 2728 085f 3E080000 		.4byte	0x83e
 2729 0863 1F       		.uleb128 0x1f
 2730 0864 63050000 		.4byte	.LASF70
 2731 0868 01       		.byte	0x1
 2732 0869 6D02     		.2byte	0x26d
 2733 086b 0C       		.byte	0xc
 2734 086c E7000000 		.4byte	0xe7
 2735 0870 00       		.byte	0
 2736 0871 1E       		.uleb128 0x1e
 2737 0872 CE070000 		.4byte	.LASF87
 2738 0876 01       		.byte	0x1
 2739 0877 2F02     		.2byte	0x22f
 2740 0879 0D       		.byte	0xd
 2741 087a 01       		.byte	0x1
 2742 087b 01       		.byte	0x1
 2743 087c B5080000 		.4byte	0x8b5
 2744 0880 21       		.uleb128 0x21
 2745 0881 63050000 		.4byte	.LASF70
 2746 0885 01       		.byte	0x1
 2747 0886 2F02     		.2byte	0x22f
 2748 0888 3A       		.byte	0x3a
 2749 0889 F3000000 		.4byte	0xf3
 2750 088d 21       		.uleb128 0x21
 2751 088e 88060000 		.4byte	.LASF88
 2752 0892 01       		.byte	0x1
 2753 0893 2F02     		.2byte	0x22f
 2754 0895 56       		.byte	0x56
 2755 0896 C0000000 		.4byte	0xc0
 2756 089a 1F       		.uleb128 0x1f
 2757 089b 96000000 		.4byte	.LASF78
 2758 089f 01       		.byte	0x1
 2759 08a0 3102     		.2byte	0x231
 2760 08a2 0C       		.byte	0xc
 2761 08a3 E7000000 		.4byte	0xe7
 2762 08a7 1F       		.uleb128 0x1f
 2763 08a8 70040000 		.4byte	.LASF77
 2764 08ac 01       		.byte	0x1
 2765 08ad 3202     		.2byte	0x232
 2766 08af 0C       		.byte	0xc
ARM GAS  /tmp/cc4130RP.s 			page 75


 2767 08b0 C0000000 		.4byte	0xc0
 2768 08b4 00       		.byte	0
 2769 08b5 1B       		.uleb128 0x1b
 2770 08b6 56050000 		.4byte	.LASF90
 2771 08ba 01       		.byte	0x1
 2772 08bb 0B02     		.2byte	0x20b
 2773 08bd 08       		.byte	0x8
 2774 08be 01       		.byte	0x1
 2775 08bf B4010000 		.4byte	.LFB15
 2776 08c3 30030000 		.4byte	.LFE15
 2777 08c7 53030000 		.4byte	.LLST39
 2778 08cb 01       		.byte	0x1
 2779 08cc 920B0000 		.4byte	0xb92
 2780 08d0 15       		.uleb128 0x15
 2781 08d1 53010000 		.4byte	.LASF91
 2782 08d5 01       		.byte	0x1
 2783 08d6 0B02     		.2byte	0x20b
 2784 08d8 08       		.byte	0x8
 2785 08d9 8A000000 		.4byte	0x8a
 2786 08dd 83030000 		.4byte	.LLST40
 2787 08e1 7F030000 		.4byte	.LVUS40
 2788 08e5 17       		.uleb128 0x17
 2789 08e6 63050000 		.4byte	.LASF70
 2790 08ea 01       		.byte	0x1
 2791 08eb 0D02     		.2byte	0x20d
 2792 08ed 0C       		.byte	0xc
 2793 08ee E7000000 		.4byte	0xe7
 2794 08f2 A8030000 		.4byte	.LLST41
 2795 08f6 A4030000 		.4byte	.LVUS41
 2796 08fa 17       		.uleb128 0x17
 2797 08fb 88060000 		.4byte	.LASF88
 2798 08ff 01       		.byte	0x1
 2799 0900 0E02     		.2byte	0x20e
 2800 0902 0C       		.byte	0xc
 2801 0903 C0000000 		.4byte	0xc0
 2802 0907 C8030000 		.4byte	.LLST42
 2803 090b C6030000 		.4byte	.LVUS42
 2804 090f 2A       		.uleb128 0x2a
 2805 0910 43080000 		.4byte	0x843
 2806 0914 BE010000 		.4byte	.LBI24
 2807 0918 05       		.byte	.LVU192
 2808 0919 18000000 		.4byte	.Ldebug_ranges0+0x18
 2809 091d 01       		.byte	0x1
 2810 091e 2302     		.2byte	0x223
 2811 0920 15       		.byte	0x15
 2812 0921 46090000 		.4byte	0x946
 2813 0925 2B       		.uleb128 0x2b
 2814 0926 56080000 		.4byte	0x856
 2815 092a E0030000 		.4byte	.LLST43
 2816 092e DC030000 		.4byte	.LVUS43
 2817 0932 25       		.uleb128 0x25
 2818 0933 18000000 		.4byte	.Ldebug_ranges0+0x18
 2819 0937 26       		.uleb128 0x26
 2820 0938 63080000 		.4byte	0x863
 2821 093c 0A040000 		.4byte	.LLST44
 2822 0940 08040000 		.4byte	.LVUS44
 2823 0944 00       		.byte	0
ARM GAS  /tmp/cc4130RP.s 			page 76


 2824 0945 00       		.byte	0
 2825 0946 2A       		.uleb128 0x2a
 2826 0947 71080000 		.4byte	0x871
 2827 094b D2010000 		.4byte	.LBI29
 2828 094f 03       		.byte	.LVU203
 2829 0950 38000000 		.4byte	.Ldebug_ranges0+0x38
 2830 0954 01       		.byte	0x1
 2831 0955 2702     		.2byte	0x227
 2832 0957 03       		.byte	0x3
 2833 0958 9D0A0000 		.4byte	0xa9d
 2834 095c 2B       		.uleb128 0x2b
 2835 095d 8D080000 		.4byte	0x88d
 2836 0961 23040000 		.4byte	.LLST45
 2837 0965 1D040000 		.4byte	.LVUS45
 2838 0969 2B       		.uleb128 0x2b
 2839 096a 80080000 		.4byte	0x880
 2840 096e 50040000 		.4byte	.LLST46
 2841 0972 4C040000 		.4byte	.LVUS46
 2842 0976 25       		.uleb128 0x25
 2843 0977 38000000 		.4byte	.Ldebug_ranges0+0x38
 2844 097b 26       		.uleb128 0x26
 2845 097c 9A080000 		.4byte	0x89a
 2846 0980 7C040000 		.4byte	.LLST47
 2847 0984 6E040000 		.4byte	.LVUS47
 2848 0988 2C       		.uleb128 0x2c
 2849 0989 A7080000 		.4byte	0x8a7
 2850 098d 02       		.byte	0x2
 2851 098e 91       		.byte	0x91
 2852 098f 54       		.sleb128 -44
 2853 0990 2A       		.uleb128 0x2a
 2854 0991 920B0000 		.4byte	0xb92
 2855 0995 F0010000 		.4byte	.LBI31
 2856 0999 01       		.byte	.LVU219
 2857 099a 50000000 		.4byte	.Ldebug_ranges0+0x50
 2858 099e 01       		.byte	0x1
 2859 099f 4202     		.2byte	0x242
 2860 09a1 05       		.byte	0x5
 2861 09a2 460A0000 		.4byte	0xa46
 2862 09a6 2B       		.uleb128 0x2b
 2863 09a7 AE0B0000 		.4byte	0xbae
 2864 09ab D5040000 		.4byte	.LLST48
 2865 09af D1040000 		.4byte	.LVUS48
 2866 09b3 2B       		.uleb128 0x2b
 2867 09b4 A10B0000 		.4byte	0xba1
 2868 09b8 F7040000 		.4byte	.LLST49
 2869 09bc F3040000 		.4byte	.LVUS49
 2870 09c0 25       		.uleb128 0x25
 2871 09c1 50000000 		.4byte	.Ldebug_ranges0+0x50
 2872 09c5 27       		.uleb128 0x27
 2873 09c6 BB0B0000 		.4byte	0xbbb
 2874 09ca 26       		.uleb128 0x26
 2875 09cb C80B0000 		.4byte	0xbc8
 2876 09cf 19050000 		.4byte	.LLST50
 2877 09d3 15050000 		.4byte	.LVUS50
 2878 09d7 1C       		.uleb128 0x1c
 2879 09d8 00020000 		.4byte	.LVL63
 2880 09dc 26110000 		.4byte	0x1126
ARM GAS  /tmp/cc4130RP.s 			page 77


 2881 09e0 EB090000 		.4byte	0x9eb
 2882 09e4 1D       		.uleb128 0x1d
 2883 09e5 01       		.byte	0x1
 2884 09e6 50       		.byte	0x50
 2885 09e7 02       		.byte	0x2
 2886 09e8 79       		.byte	0x79
 2887 09e9 04       		.sleb128 4
 2888 09ea 00       		.byte	0
 2889 09eb 1C       		.uleb128 0x1c
 2890 09ec 18020000 		.4byte	.LVL64
 2891 09f0 CB060000 		.4byte	0x6cb
 2892 09f4 0B0A0000 		.4byte	0xa0b
 2893 09f8 1D       		.uleb128 0x1d
 2894 09f9 01       		.byte	0x1
 2895 09fa 50       		.byte	0x50
 2896 09fb 02       		.byte	0x2
 2897 09fc 79       		.byte	0x79
 2898 09fd 00       		.sleb128 0
 2899 09fe 1D       		.uleb128 0x1d
 2900 09ff 01       		.byte	0x1
 2901 0a00 52       		.byte	0x52
 2902 0a01 02       		.byte	0x2
 2903 0a02 76       		.byte	0x76
 2904 0a03 00       		.sleb128 0
 2905 0a04 1D       		.uleb128 0x1d
 2906 0a05 01       		.byte	0x1
 2907 0a06 53       		.byte	0x53
 2908 0a07 02       		.byte	0x2
 2909 0a08 78       		.byte	0x78
 2910 0a09 00       		.sleb128 0
 2911 0a0a 00       		.byte	0
 2912 0a0b 1C       		.uleb128 0x1c
 2913 0a0c 28020000 		.4byte	.LVL65
 2914 0a10 530D0000 		.4byte	0xd53
 2915 0a14 380A0000 		.4byte	0xa38
 2916 0a18 1D       		.uleb128 0x1d
 2917 0a19 01       		.byte	0x1
 2918 0a1a 50       		.byte	0x50
 2919 0a1b 02       		.byte	0x2
 2920 0a1c 79       		.byte	0x79
 2921 0a1d 00       		.sleb128 0
 2922 0a1e 1D       		.uleb128 0x1d
 2923 0a1f 01       		.byte	0x1
 2924 0a20 51       		.byte	0x51
 2925 0a21 02       		.byte	0x2
 2926 0a22 74       		.byte	0x74
 2927 0a23 00       		.sleb128 0
 2928 0a24 1D       		.uleb128 0x1d
 2929 0a25 01       		.byte	0x1
 2930 0a26 52       		.byte	0x52
 2931 0a27 02       		.byte	0x2
 2932 0a28 78       		.byte	0x78
 2933 0a29 00       		.sleb128 0
 2934 0a2a 1D       		.uleb128 0x1d
 2935 0a2b 01       		.byte	0x1
 2936 0a2c 53       		.byte	0x53
 2937 0a2d 02       		.byte	0x2
ARM GAS  /tmp/cc4130RP.s 			page 78


 2938 0a2e 74       		.byte	0x74
 2939 0a2f 00       		.sleb128 0
 2940 0a30 1D       		.uleb128 0x1d
 2941 0a31 02       		.byte	0x2
 2942 0a32 7D       		.byte	0x7d
 2943 0a33 00       		.sleb128 0
 2944 0a34 02       		.byte	0x2
 2945 0a35 74       		.byte	0x74
 2946 0a36 00       		.sleb128 0
 2947 0a37 00       		.byte	0
 2948 0a38 2D       		.uleb128 0x2d
 2949 0a39 30020000 		.4byte	.LVL66
 2950 0a3d 1D       		.uleb128 0x1d
 2951 0a3e 01       		.byte	0x1
 2952 0a3f 50       		.byte	0x50
 2953 0a40 02       		.byte	0x2
 2954 0a41 79       		.byte	0x79
 2955 0a42 00       		.sleb128 0
 2956 0a43 00       		.byte	0
 2957 0a44 00       		.byte	0
 2958 0a45 00       		.byte	0
 2959 0a46 18       		.uleb128 0x18
 2960 0a47 D6010000 		.4byte	.LVL58
 2961 0a4b 53110000 		.4byte	0x1153
 2962 0a4f 1C       		.uleb128 0x1c
 2963 0a50 DC010000 		.4byte	.LVL59
 2964 0a54 20070000 		.4byte	0x720
 2965 0a58 630A0000 		.4byte	0xa63
 2966 0a5c 1D       		.uleb128 0x1d
 2967 0a5d 01       		.byte	0x1
 2968 0a5e 50       		.byte	0x50
 2969 0a5f 02       		.byte	0x2
 2970 0a60 91       		.byte	0x91
 2971 0a61 54       		.sleb128 -44
 2972 0a62 00       		.byte	0
 2973 0a63 18       		.uleb128 0x18
 2974 0a64 F0010000 		.4byte	.LVL61
 2975 0a68 62110000 		.4byte	0x1162
 2976 0a6c 1C       		.uleb128 0x1c
 2977 0a6d 90020000 		.4byte	.LVL78
 2978 0a71 71110000 		.4byte	0x1171
 2979 0a75 890A0000 		.4byte	0xa89
 2980 0a79 1D       		.uleb128 0x1d
 2981 0a7a 01       		.byte	0x1
 2982 0a7b 51       		.byte	0x51
 2983 0a7c 05       		.byte	0x5
 2984 0a7d 78       		.byte	0x78
 2985 0a7e 00       		.sleb128 0
 2986 0a7f 76       		.byte	0x76
 2987 0a80 00       		.sleb128 0
 2988 0a81 1C       		.byte	0x1c
 2989 0a82 1D       		.uleb128 0x1d
 2990 0a83 01       		.byte	0x1
 2991 0a84 52       		.byte	0x52
 2992 0a85 02       		.byte	0x2
 2993 0a86 74       		.byte	0x74
 2994 0a87 00       		.sleb128 0
ARM GAS  /tmp/cc4130RP.s 			page 79


 2995 0a88 00       		.byte	0
 2996 0a89 18       		.uleb128 0x18
 2997 0a8a 94020000 		.4byte	.LVL79
 2998 0a8e 62110000 		.4byte	0x1162
 2999 0a92 18       		.uleb128 0x18
 3000 0a93 B2020000 		.4byte	.LVL81
 3001 0a97 62110000 		.4byte	0x1162
 3002 0a9b 00       		.byte	0
 3003 0a9c 00       		.byte	0
 3004 0a9d 2E       		.uleb128 0x2e
 3005 0a9e 7A060000 		.4byte	0x67a
 3006 0aa2 68000000 		.4byte	.Ldebug_ranges0+0x68
 3007 0aa6 01       		.byte	0x1
 3008 0aa7 2A02     		.2byte	0x22a
 3009 0aa9 03       		.byte	0x3
 3010 0aaa 25       		.uleb128 0x25
 3011 0aab 68000000 		.4byte	.Ldebug_ranges0+0x68
 3012 0aaf 2C       		.uleb128 0x2c
 3013 0ab0 89060000 		.4byte	0x689
 3014 0ab4 02       		.byte	0x2
 3015 0ab5 91       		.byte	0x91
 3016 0ab6 54       		.sleb128 -44
 3017 0ab7 26       		.uleb128 0x26
 3018 0ab8 96060000 		.4byte	0x696
 3019 0abc 3B050000 		.4byte	.LLST51
 3020 0ac0 37050000 		.4byte	.LVUS51
 3021 0ac4 2C       		.uleb128 0x2c
 3022 0ac5 A3060000 		.4byte	0x6a3
 3023 0ac9 02       		.byte	0x2
 3024 0aca 91       		.byte	0x91
 3025 0acb 50       		.sleb128 -48
 3026 0acc 27       		.uleb128 0x27
 3027 0acd B0060000 		.4byte	0x6b0
 3028 0ad1 26       		.uleb128 0x26
 3029 0ad2 BD060000 		.4byte	0x6bd
 3030 0ad6 65050000 		.4byte	.LLST52
 3031 0ada 59050000 		.4byte	.LVUS52
 3032 0ade 1C       		.uleb128 0x1c
 3033 0adf 3A020000 		.4byte	.LVL67
 3034 0ae3 80110000 		.4byte	0x1180
 3035 0ae7 F80A0000 		.4byte	0xaf8
 3036 0aeb 1D       		.uleb128 0x1d
 3037 0aec 01       		.byte	0x1
 3038 0aed 51       		.byte	0x51
 3039 0aee 02       		.byte	0x2
 3040 0aef 91       		.byte	0x91
 3041 0af0 54       		.sleb128 -44
 3042 0af1 1D       		.uleb128 0x1d
 3043 0af2 01       		.byte	0x1
 3044 0af3 52       		.byte	0x52
 3045 0af4 02       		.byte	0x2
 3046 0af5 77       		.byte	0x77
 3047 0af6 00       		.sleb128 0
 3048 0af7 00       		.byte	0
 3049 0af8 1C       		.uleb128 0x1c
 3050 0af9 50020000 		.4byte	.LVL69
 3051 0afd 26110000 		.4byte	0x1126
ARM GAS  /tmp/cc4130RP.s 			page 80


 3052 0b01 0C0B0000 		.4byte	0xb0c
 3053 0b05 1D       		.uleb128 0x1d
 3054 0b06 01       		.byte	0x1
 3055 0b07 50       		.byte	0x50
 3056 0b08 02       		.byte	0x2
 3057 0b09 74       		.byte	0x74
 3058 0b0a 04       		.sleb128 4
 3059 0b0b 00       		.byte	0
 3060 0b0c 1C       		.uleb128 0x1c
 3061 0b0d 56020000 		.4byte	.LVL70
 3062 0b11 20070000 		.4byte	0x720
 3063 0b15 200B0000 		.4byte	0xb20
 3064 0b19 1D       		.uleb128 0x1d
 3065 0b1a 01       		.byte	0x1
 3066 0b1b 50       		.byte	0x50
 3067 0b1c 02       		.byte	0x2
 3068 0b1d 91       		.byte	0x91
 3069 0b1e 50       		.sleb128 -48
 3070 0b1f 00       		.byte	0
 3071 0b20 1C       		.uleb128 0x1c
 3072 0b21 CC020000 		.4byte	.LVL84
 3073 0b25 CB060000 		.4byte	0x6cb
 3074 0b29 340B0000 		.4byte	0xb34
 3075 0b2d 1D       		.uleb128 0x1d
 3076 0b2e 01       		.byte	0x1
 3077 0b2f 50       		.byte	0x50
 3078 0b30 02       		.byte	0x2
 3079 0b31 74       		.byte	0x74
 3080 0b32 00       		.sleb128 0
 3081 0b33 00       		.byte	0
 3082 0b34 28       		.uleb128 0x28
 3083 0b35 D6020000 		.4byte	.LVL85
 3084 0b39 440B0000 		.4byte	0xb44
 3085 0b3d 1D       		.uleb128 0x1d
 3086 0b3e 01       		.byte	0x1
 3087 0b3f 50       		.byte	0x50
 3088 0b40 02       		.byte	0x2
 3089 0b41 74       		.byte	0x74
 3090 0b42 00       		.sleb128 0
 3091 0b43 00       		.byte	0
 3092 0b44 1C       		.uleb128 0x1c
 3093 0b45 F0020000 		.4byte	.LVL86
 3094 0b49 530D0000 		.4byte	0xd53
 3095 0b4d 6B0B0000 		.4byte	0xb6b
 3096 0b51 1D       		.uleb128 0x1d
 3097 0b52 01       		.byte	0x1
 3098 0b53 50       		.byte	0x50
 3099 0b54 02       		.byte	0x2
 3100 0b55 74       		.byte	0x74
 3101 0b56 00       		.sleb128 0
 3102 0b57 1D       		.uleb128 0x1d
 3103 0b58 01       		.byte	0x1
 3104 0b59 51       		.byte	0x51
 3105 0b5a 02       		.byte	0x2
 3106 0b5b 77       		.byte	0x77
 3107 0b5c 00       		.sleb128 0
 3108 0b5d 1D       		.uleb128 0x1d
ARM GAS  /tmp/cc4130RP.s 			page 81


 3109 0b5e 01       		.byte	0x1
 3110 0b5f 53       		.byte	0x53
 3111 0b60 02       		.byte	0x2
 3112 0b61 77       		.byte	0x77
 3113 0b62 00       		.sleb128 0
 3114 0b63 1D       		.uleb128 0x1d
 3115 0b64 02       		.byte	0x2
 3116 0b65 7D       		.byte	0x7d
 3117 0b66 00       		.sleb128 0
 3118 0b67 02       		.byte	0x2
 3119 0b68 77       		.byte	0x77
 3120 0b69 00       		.sleb128 0
 3121 0b6a 00       		.byte	0
 3122 0b6b 1C       		.uleb128 0x1c
 3123 0b6c 1A030000 		.4byte	.LVL89
 3124 0b70 CB060000 		.4byte	0x6cb
 3125 0b74 7F0B0000 		.4byte	0xb7f
 3126 0b78 1D       		.uleb128 0x1d
 3127 0b79 01       		.byte	0x1
 3128 0b7a 50       		.byte	0x50
 3129 0b7b 02       		.byte	0x2
 3130 0b7c 74       		.byte	0x74
 3131 0b7d 00       		.sleb128 0
 3132 0b7e 00       		.byte	0
 3133 0b7f 29       		.uleb128 0x29
 3134 0b80 2A030000 		.4byte	.LVL92
 3135 0b84 8F110000 		.4byte	0x118f
 3136 0b88 1D       		.uleb128 0x1d
 3137 0b89 01       		.byte	0x1
 3138 0b8a 50       		.byte	0x50
 3139 0b8b 02       		.byte	0x2
 3140 0b8c 74       		.byte	0x74
 3141 0b8d 00       		.sleb128 0
 3142 0b8e 00       		.byte	0
 3143 0b8f 00       		.byte	0
 3144 0b90 00       		.byte	0
 3145 0b91 00       		.byte	0
 3146 0b92 1E       		.uleb128 0x1e
 3147 0b93 0C000000 		.4byte	.LASF92
 3148 0b97 01       		.byte	0x1
 3149 0b98 E201     		.2byte	0x1e2
 3150 0b9a 0D       		.byte	0xd
 3151 0b9b 01       		.byte	0x1
 3152 0b9c 01       		.byte	0x1
 3153 0b9d D60B0000 		.4byte	0xbd6
 3154 0ba1 21       		.uleb128 0x21
 3155 0ba2 63050000 		.4byte	.LASF70
 3156 0ba6 01       		.byte	0x1
 3157 0ba7 E201     		.2byte	0x1e2
 3158 0ba9 36       		.byte	0x36
 3159 0baa F3000000 		.4byte	0xf3
 3160 0bae 21       		.uleb128 0x21
 3161 0baf 96000000 		.4byte	.LASF78
 3162 0bb3 01       		.byte	0x1
 3163 0bb4 E201     		.2byte	0x1e2
 3164 0bb6 58       		.byte	0x58
 3165 0bb7 F3000000 		.4byte	0xf3
ARM GAS  /tmp/cc4130RP.s 			page 82


 3166 0bbb 1F       		.uleb128 0x1f
 3167 0bbc 26070000 		.4byte	.LASF73
 3168 0bc0 01       		.byte	0x1
 3169 0bc1 E401     		.2byte	0x1e4
 3170 0bc3 0C       		.byte	0xc
 3171 0bc4 C0000000 		.4byte	0xc0
 3172 0bc8 1F       		.uleb128 0x1f
 3173 0bc9 3E070000 		.4byte	.LASF50
 3174 0bcd 01       		.byte	0x1
 3175 0bce E501     		.2byte	0x1e5
 3176 0bd0 11       		.byte	0x11
 3177 0bd1 23030000 		.4byte	0x323
 3178 0bd5 00       		.byte	0
 3179 0bd6 14       		.uleb128 0x14
 3180 0bd7 01       		.byte	0x1
 3181 0bd8 AA070000 		.4byte	.LASF93
 3182 0bdc 01       		.byte	0x1
 3183 0bdd D901     		.2byte	0x1d9
 3184 0bdf 0E       		.byte	0xe
 3185 0be0 01       		.byte	0x1
 3186 0be1 9D000000 		.4byte	0x9d
 3187 0be5 6A030000 		.4byte	.LFB13
 3188 0be9 6E030000 		.4byte	.LFE13
 3189 0bed 02       		.byte	0x2
 3190 0bee 7D       		.byte	0x7d
 3191 0bef 00       		.sleb128 0
 3192 0bf0 01       		.byte	0x1
 3193 0bf1 200C0000 		.4byte	0xc20
 3194 0bf5 15       		.uleb128 0x15
 3195 0bf6 8A030000 		.4byte	.LASF61
 3196 0bfa 01       		.byte	0x1
 3197 0bfb D901     		.2byte	0x1d9
 3198 0bfd 2C       		.byte	0x2c
 3199 0bfe 2D020000 		.4byte	0x22d
 3200 0c02 B3050000 		.4byte	.LLST62
 3201 0c06 AF050000 		.4byte	.LVUS62
 3202 0c0a 17       		.uleb128 0x17
 3203 0c0b 3E070000 		.4byte	.LASF50
 3204 0c0f 01       		.byte	0x1
 3205 0c10 DB01     		.2byte	0x1db
 3206 0c12 0A       		.byte	0xa
 3207 0c13 1D030000 		.4byte	0x31d
 3208 0c17 D8050000 		.4byte	.LLST63
 3209 0c1b D4050000 		.4byte	.LVUS63
 3210 0c1f 00       		.byte	0
 3211 0c20 14       		.uleb128 0x14
 3212 0c21 01       		.byte	0x1
 3213 0c22 F3030000 		.4byte	.LASF94
 3214 0c26 01       		.byte	0x1
 3215 0c27 CE01     		.2byte	0x1ce
 3216 0c29 0C       		.byte	0xc
 3217 0c2a 01       		.byte	0x1
 3218 0c2b E7000000 		.4byte	0xe7
 3219 0c2f 66030000 		.4byte	.LFB12
 3220 0c33 6A030000 		.4byte	.LFE12
 3221 0c37 02       		.byte	0x2
 3222 0c38 7D       		.byte	0x7d
ARM GAS  /tmp/cc4130RP.s 			page 83


 3223 0c39 00       		.sleb128 0
 3224 0c3a 01       		.byte	0x1
 3225 0c3b 7F0C0000 		.4byte	0xc7f
 3226 0c3f 15       		.uleb128 0x15
 3227 0c40 8A030000 		.4byte	.LASF61
 3228 0c44 01       		.byte	0x1
 3229 0c45 CE01     		.2byte	0x1ce
 3230 0c47 2F       		.byte	0x2f
 3231 0c48 2D020000 		.4byte	0x22d
 3232 0c4c FD050000 		.4byte	.LLST59
 3233 0c50 F9050000 		.4byte	.LVUS59
 3234 0c54 17       		.uleb128 0x17
 3235 0c55 3E070000 		.4byte	.LASF50
 3236 0c59 01       		.byte	0x1
 3237 0c5a D001     		.2byte	0x1d0
 3238 0c5c 0B       		.byte	0xb
 3239 0c5d 1D030000 		.4byte	0x31d
 3240 0c61 22060000 		.4byte	.LLST60
 3241 0c65 1E060000 		.4byte	.LVUS60
 3242 0c69 17       		.uleb128 0x17
 3243 0c6a EA060000 		.4byte	.LASF69
 3244 0c6e 01       		.byte	0x1
 3245 0c6f D101     		.2byte	0x1d1
 3246 0c71 0C       		.byte	0xc
 3247 0c72 E7000000 		.4byte	0xe7
 3248 0c76 47060000 		.4byte	.LLST61
 3249 0c7a 43060000 		.4byte	.LVUS61
 3250 0c7e 00       		.byte	0
 3251 0c7f 16       		.uleb128 0x16
 3252 0c80 01       		.byte	0x1
 3253 0c81 E9070000 		.4byte	.LASF95
 3254 0c85 01       		.byte	0x1
 3255 0c86 BA01     		.2byte	0x1ba
 3256 0c88 06       		.byte	0x6
 3257 0c89 01       		.byte	0x1
 3258 0c8a 40030000 		.4byte	.LFB11
 3259 0c8e 66030000 		.4byte	.LFE11
 3260 0c92 66060000 		.4byte	.LLST55
 3261 0c96 01       		.byte	0x1
 3262 0c97 EE0C0000 		.4byte	0xcee
 3263 0c9b 15       		.uleb128 0x15
 3264 0c9c 8A030000 		.4byte	.LASF61
 3265 0ca0 01       		.byte	0x1
 3266 0ca1 BA01     		.2byte	0x1ba
 3267 0ca3 29       		.byte	0x29
 3268 0ca4 2D020000 		.4byte	0x22d
 3269 0ca8 A6060000 		.4byte	.LLST56
 3270 0cac 9E060000 		.4byte	.LVUS56
 3271 0cb0 15       		.uleb128 0x15
 3272 0cb1 A0060000 		.4byte	.LASF96
 3273 0cb5 01       		.byte	0x1
 3274 0cb6 BA01     		.2byte	0x1ba
 3275 0cb8 43       		.byte	0x43
 3276 0cb9 E2000000 		.4byte	0xe2
 3277 0cbd E5060000 		.4byte	.LLST57
 3278 0cc1 DD060000 		.4byte	.LVUS57
 3279 0cc5 17       		.uleb128 0x17
ARM GAS  /tmp/cc4130RP.s 			page 84


 3280 0cc6 3E070000 		.4byte	.LASF50
 3281 0cca 01       		.byte	0x1
 3282 0ccb BC01     		.2byte	0x1bc
 3283 0ccd 0B       		.byte	0xb
 3284 0cce 1D030000 		.4byte	0x31d
 3285 0cd2 24070000 		.4byte	.LLST58
 3286 0cd6 1C070000 		.4byte	.LVUS58
 3287 0cda 18       		.uleb128 0x18
 3288 0cdb 4A030000 		.4byte	.LVL97
 3289 0cdf EC100000 		.4byte	0x10ec
 3290 0ce3 19       		.uleb128 0x19
 3291 0ce4 60030000 		.4byte	.LVL99
 3292 0ce8 01       		.byte	0x1
 3293 0ce9 FA100000 		.4byte	0x10fa
 3294 0ced 00       		.byte	0
 3295 0cee 14       		.uleb128 0x14
 3296 0cef 01       		.byte	0x1
 3297 0cf0 2E070000 		.4byte	.LASF97
 3298 0cf4 01       		.byte	0x1
 3299 0cf5 B101     		.2byte	0x1b1
 3300 0cf7 0C       		.byte	0xc
 3301 0cf8 01       		.byte	0x1
 3302 0cf9 E7000000 		.4byte	0xe7
 3303 0cfd 3C030000 		.4byte	.LFB10
 3304 0d01 40030000 		.4byte	.LFE10
 3305 0d05 02       		.byte	0x2
 3306 0d06 7D       		.byte	0x7d
 3307 0d07 00       		.sleb128 0
 3308 0d08 01       		.byte	0x1
 3309 0d09 380D0000 		.4byte	0xd38
 3310 0d0d 15       		.uleb128 0x15
 3311 0d0e 8A030000 		.4byte	.LASF61
 3312 0d12 01       		.byte	0x1
 3313 0d13 B101     		.2byte	0x1b1
 3314 0d15 2B       		.byte	0x2b
 3315 0d16 2D020000 		.4byte	0x22d
 3316 0d1a 5F070000 		.4byte	.LLST53
 3317 0d1e 5B070000 		.4byte	.LVUS53
 3318 0d22 17       		.uleb128 0x17
 3319 0d23 3E070000 		.4byte	.LASF50
 3320 0d27 01       		.byte	0x1
 3321 0d28 B301     		.2byte	0x1b3
 3322 0d2a 0A       		.byte	0xa
 3323 0d2b 1D030000 		.4byte	0x31d
 3324 0d2f 84070000 		.4byte	.LLST54
 3325 0d33 80070000 		.4byte	.LVUS54
 3326 0d37 00       		.byte	0
 3327 0d38 2F       		.uleb128 0x2f
 3328 0d39 01       		.byte	0x1
 3329 0d3a E3010000 		.4byte	.LASF130
 3330 0d3e 01       		.byte	0x1
 3331 0d3f A801     		.2byte	0x1a8
 3332 0d41 0E       		.byte	0xe
 3333 0d42 01       		.byte	0x1
 3334 0d43 FD010000 		.4byte	0x1fd
 3335 0d47 30030000 		.4byte	.LFB9
 3336 0d4b 3C030000 		.4byte	.LFE9
ARM GAS  /tmp/cc4130RP.s 			page 85


 3337 0d4f 02       		.byte	0x2
 3338 0d50 7D       		.byte	0x7d
 3339 0d51 00       		.sleb128 0
 3340 0d52 01       		.byte	0x1
 3341 0d53 1A       		.uleb128 0x1a
 3342 0d54 01       		.byte	0x1
 3343 0d55 24050000 		.4byte	.LASF98
 3344 0d59 01       		.byte	0x1
 3345 0d5a 7D01     		.2byte	0x17d
 3346 0d5c 0C       		.byte	0xc
 3347 0d5d 01       		.byte	0x1
 3348 0d5e C0000000 		.4byte	0xc0
 3349 0d62 EE000000 		.4byte	.LFB8
 3350 0d66 30010000 		.4byte	.LFE8
 3351 0d6a A5070000 		.4byte	.LLST25
 3352 0d6e 01       		.byte	0x1
 3353 0d6f 390E0000 		.4byte	0xe39
 3354 0d73 15       		.uleb128 0x15
 3355 0d74 8A030000 		.4byte	.LASF61
 3356 0d78 01       		.byte	0x1
 3357 0d79 7D01     		.2byte	0x17d
 3358 0d7b 30       		.byte	0x30
 3359 0d7c 2D020000 		.4byte	0x22d
 3360 0d80 E1070000 		.4byte	.LLST26
 3361 0d84 DD070000 		.4byte	.LVUS26
 3362 0d88 15       		.uleb128 0x15
 3363 0d89 A8010000 		.4byte	.LASF99
 3364 0d8d 01       		.byte	0x1
 3365 0d8e 7D01     		.2byte	0x17d
 3366 0d90 49       		.byte	0x49
 3367 0d91 CC000000 		.4byte	0xcc
 3368 0d95 09080000 		.4byte	.LLST27
 3369 0d99 FF070000 		.4byte	.LVUS27
 3370 0d9d 15       		.uleb128 0x15
 3371 0d9e C4000000 		.4byte	.LASF100
 3372 0da2 01       		.byte	0x1
 3373 0da3 7D01     		.2byte	0x17d
 3374 0da5 66       		.byte	0x66
 3375 0da6 F3000000 		.4byte	0xf3
 3376 0daa 53080000 		.4byte	.LLST28
 3377 0dae 4F080000 		.4byte	.LVUS28
 3378 0db2 15       		.uleb128 0x15
 3379 0db3 F8000000 		.4byte	.LASF101
 3380 0db7 01       		.byte	0x1
 3381 0db8 7D01     		.2byte	0x17d
 3382 0dba 89       		.byte	0x89
 3383 0dbb 3E080000 		.4byte	0x83e
 3384 0dbf 79080000 		.4byte	.LLST29
 3385 0dc3 71080000 		.4byte	.LVUS29
 3386 0dc7 15       		.uleb128 0x15
 3387 0dc8 B9070000 		.4byte	.LASF102
 3388 0dcc 01       		.byte	0x1
 3389 0dcd 7D01     		.2byte	0x17d
 3390 0dcf B5       		.byte	0xb5
 3391 0dd0 F3000000 		.4byte	0xf3
 3392 0dd4 B7080000 		.4byte	.LLST30
 3393 0dd8 B3080000 		.4byte	.LVUS30
ARM GAS  /tmp/cc4130RP.s 			page 86


 3394 0ddc 17       		.uleb128 0x17
 3395 0ddd EA060000 		.4byte	.LASF69
 3396 0de1 01       		.byte	0x1
 3397 0de2 7F01     		.2byte	0x17f
 3398 0de4 0C       		.byte	0xc
 3399 0de5 C0000000 		.4byte	0xc0
 3400 0de9 DD080000 		.4byte	.LLST31
 3401 0ded D7080000 		.4byte	.LVUS31
 3402 0df1 23       		.uleb128 0x23
 3403 0df2 75060000 		.4byte	.LASF76
 3404 0df6 01       		.byte	0x1
 3405 0df7 8001     		.2byte	0x180
 3406 0df9 15       		.byte	0x15
 3407 0dfa 74030000 		.4byte	0x374
 3408 0dfe 02       		.byte	0x2
 3409 0dff 91       		.byte	0x91
 3410 0e00 64       		.sleb128 -28
 3411 0e01 18       		.uleb128 0x18
 3412 0e02 0A010000 		.4byte	.LVL32
 3413 0e06 9D110000 		.4byte	0x119d
 3414 0e0a 1C       		.uleb128 0x1c
 3415 0e0b 1C010000 		.4byte	.LVL33
 3416 0e0f AC110000 		.4byte	0x11ac
 3417 0e13 230E0000 		.4byte	0xe23
 3418 0e17 1D       		.uleb128 0x1d
 3419 0e18 01       		.byte	0x1
 3420 0e19 51       		.byte	0x51
 3421 0e1a 02       		.byte	0x2
 3422 0e1b 91       		.byte	0x91
 3423 0e1c 64       		.sleb128 -28
 3424 0e1d 1D       		.uleb128 0x1d
 3425 0e1e 01       		.byte	0x1
 3426 0e1f 53       		.byte	0x53
 3427 0e20 01       		.byte	0x1
 3428 0e21 30       		.byte	0x30
 3429 0e22 00       		.byte	0
 3430 0e23 29       		.uleb128 0x29
 3431 0e24 28010000 		.4byte	.LVL36
 3432 0e28 BB110000 		.4byte	0x11bb
 3433 0e2c 1D       		.uleb128 0x1d
 3434 0e2d 01       		.byte	0x1
 3435 0e2e 51       		.byte	0x51
 3436 0e2f 02       		.byte	0x2
 3437 0e30 91       		.byte	0x91
 3438 0e31 64       		.sleb128 -28
 3439 0e32 1D       		.uleb128 0x1d
 3440 0e33 01       		.byte	0x1
 3441 0e34 53       		.byte	0x53
 3442 0e35 01       		.byte	0x1
 3443 0e36 30       		.byte	0x30
 3444 0e37 00       		.byte	0
 3445 0e38 00       		.byte	0
 3446 0e39 1E       		.uleb128 0x1e
 3447 0e3a 4D030000 		.4byte	.LASF103
 3448 0e3e 01       		.byte	0x1
 3449 0e3f 5D01     		.2byte	0x15d
 3450 0e41 0D       		.byte	0xd
ARM GAS  /tmp/cc4130RP.s 			page 87


 3451 0e42 01       		.byte	0x1
 3452 0e43 01       		.byte	0x1
 3453 0e44 970E0000 		.4byte	0xe97
 3454 0e48 21       		.uleb128 0x21
 3455 0e49 27010000 		.4byte	.LASF38
 3456 0e4d 01       		.byte	0x1
 3457 0e4e 5D01     		.2byte	0x15d
 3458 0e50 37       		.byte	0x37
 3459 0e51 A3000000 		.4byte	0xa3
 3460 0e55 21       		.uleb128 0x21
 3461 0e56 40000000 		.4byte	.LASF40
 3462 0e5a 01       		.byte	0x1
 3463 0e5b 5E01     		.2byte	0x15e
 3464 0e5d 1B       		.byte	0x1b
 3465 0e5e F3000000 		.4byte	0xf3
 3466 0e62 21       		.uleb128 0x21
 3467 0e63 A0060000 		.4byte	.LASF96
 3468 0e67 01       		.byte	0x1
 3469 0e68 5F01     		.2byte	0x15f
 3470 0e6a 1C       		.byte	0x1c
 3471 0e6b E2000000 		.4byte	0xe2
 3472 0e6f 21       		.uleb128 0x21
 3473 0e70 96060000 		.4byte	.LASF41
 3474 0e74 01       		.byte	0x1
 3475 0e75 6001     		.2byte	0x160
 3476 0e77 17       		.byte	0x17
 3477 0e78 8C000000 		.4byte	0x8c
 3478 0e7c 21       		.uleb128 0x21
 3479 0e7d 66000000 		.4byte	.LASF42
 3480 0e81 01       		.byte	0x1
 3481 0e82 6101     		.2byte	0x161
 3482 0e84 22       		.byte	0x22
 3483 0e85 BB020000 		.4byte	0x2bb
 3484 0e89 21       		.uleb128 0x21
 3485 0e8a 4D020000 		.4byte	.LASF104
 3486 0e8e 01       		.byte	0x1
 3487 0e8f 6201     		.2byte	0x162
 3488 0e91 13       		.byte	0x13
 3489 0e92 1D030000 		.4byte	0x31d
 3490 0e96 00       		.byte	0
 3491 0e97 1A       		.uleb128 0x1a
 3492 0e98 01       		.byte	0x1
 3493 0e99 15040000 		.4byte	.LASF105
 3494 0e9d 01       		.byte	0x1
 3495 0e9e 1A01     		.2byte	0x11a
 3496 0ea0 10       		.byte	0x10
 3497 0ea1 01       		.byte	0x1
 3498 0ea2 2D020000 		.4byte	0x22d
 3499 0ea6 A8000000 		.4byte	.LFB6
 3500 0eaa EE000000 		.4byte	.LFE6
 3501 0eae 08090000 		.4byte	.LLST13
 3502 0eb2 01       		.byte	0x1
 3503 0eb3 C30F0000 		.4byte	0xfc3
 3504 0eb7 15       		.uleb128 0x15
 3505 0eb8 27010000 		.4byte	.LASF38
 3506 0ebc 01       		.byte	0x1
 3507 0ebd 1A01     		.2byte	0x11a
ARM GAS  /tmp/cc4130RP.s 			page 88


 3508 0ebf 31       		.byte	0x31
 3509 0ec0 A3000000 		.4byte	0xa3
 3510 0ec4 2C090000 		.4byte	.LLST14
 3511 0ec8 28090000 		.4byte	.LVUS14
 3512 0ecc 15       		.uleb128 0x15
 3513 0ecd 40000000 		.4byte	.LASF40
 3514 0ed1 01       		.byte	0x1
 3515 0ed2 1B01     		.2byte	0x11b
 3516 0ed4 1A       		.byte	0x1a
 3517 0ed5 F3000000 		.4byte	0xf3
 3518 0ed9 4E090000 		.4byte	.LLST15
 3519 0edd 4A090000 		.4byte	.LVUS15
 3520 0ee1 15       		.uleb128 0x15
 3521 0ee2 A0060000 		.4byte	.LASF96
 3522 0ee6 01       		.byte	0x1
 3523 0ee7 1C01     		.2byte	0x11c
 3524 0ee9 1B       		.byte	0x1b
 3525 0eea E2000000 		.4byte	0xe2
 3526 0eee 70090000 		.4byte	.LLST16
 3527 0ef2 6C090000 		.4byte	.LVUS16
 3528 0ef6 15       		.uleb128 0x15
 3529 0ef7 96060000 		.4byte	.LASF41
 3530 0efb 01       		.byte	0x1
 3531 0efc 1D01     		.2byte	0x11d
 3532 0efe 16       		.byte	0x16
 3533 0eff 8C000000 		.4byte	0x8c
 3534 0f03 92090000 		.4byte	.LLST17
 3535 0f07 8E090000 		.4byte	.LVUS17
 3536 0f0b 13       		.uleb128 0x13
 3537 0f0c 66000000 		.4byte	.LASF42
 3538 0f10 01       		.byte	0x1
 3539 0f11 1E01     		.2byte	0x11e
 3540 0f13 21       		.byte	0x21
 3541 0f14 BB020000 		.4byte	0x2bb
 3542 0f18 02       		.byte	0x2
 3543 0f19 91       		.byte	0x91
 3544 0f1a 00       		.sleb128 0
 3545 0f1b 17       		.uleb128 0x17
 3546 0f1c 4D020000 		.4byte	.LASF104
 3547 0f20 01       		.byte	0x1
 3548 0f21 2001     		.2byte	0x120
 3549 0f23 0B       		.byte	0xb
 3550 0f24 1D030000 		.4byte	0x31d
 3551 0f28 B4090000 		.4byte	.LLST18
 3552 0f2c B0090000 		.4byte	.LVUS18
 3553 0f30 30       		.uleb128 0x30
 3554 0f31 390E0000 		.4byte	0xe39
 3555 0f35 C4000000 		.4byte	.LBI8
 3556 0f39 01       		.byte	.LVU75
 3557 0f3a C4000000 		.4byte	.LBB8
 3558 0f3e E8000000 		.4byte	.LBE8
 3559 0f42 01       		.byte	0x1
 3560 0f43 2A01     		.2byte	0x12a
 3561 0f45 04       		.byte	0x4
 3562 0f46 B20F0000 		.4byte	0xfb2
 3563 0f4a 2B       		.uleb128 0x2b
 3564 0f4b 890E0000 		.4byte	0xe89
ARM GAS  /tmp/cc4130RP.s 			page 89


 3565 0f4f D6090000 		.4byte	.LLST19
 3566 0f53 D2090000 		.4byte	.LVUS19
 3567 0f57 2B       		.uleb128 0x2b
 3568 0f58 7C0E0000 		.4byte	0xe7c
 3569 0f5c F6090000 		.4byte	.LLST20
 3570 0f60 F4090000 		.4byte	.LVUS20
 3571 0f64 2B       		.uleb128 0x2b
 3572 0f65 6F0E0000 		.4byte	0xe6f
 3573 0f69 0C0A0000 		.4byte	.LLST21
 3574 0f6d 0A0A0000 		.4byte	.LVUS21
 3575 0f71 2B       		.uleb128 0x2b
 3576 0f72 620E0000 		.4byte	0xe62
 3577 0f76 210A0000 		.4byte	.LLST22
 3578 0f7a 1F0A0000 		.4byte	.LVUS22
 3579 0f7e 2B       		.uleb128 0x2b
 3580 0f7f 550E0000 		.4byte	0xe55
 3581 0f83 360A0000 		.4byte	.LLST23
 3582 0f87 340A0000 		.4byte	.LVUS23
 3583 0f8b 2B       		.uleb128 0x2b
 3584 0f8c 480E0000 		.4byte	0xe48
 3585 0f90 4B0A0000 		.4byte	.LLST24
 3586 0f94 490A0000 		.4byte	.LVUS24
 3587 0f98 18       		.uleb128 0x18
 3588 0f99 C8000000 		.4byte	.LVL26
 3589 0f9d B4050000 		.4byte	0x5b4
 3590 0fa1 29       		.uleb128 0x29
 3591 0fa2 DA000000 		.4byte	.LVL27
 3592 0fa6 CA110000 		.4byte	0x11ca
 3593 0faa 1D       		.uleb128 0x1d
 3594 0fab 01       		.byte	0x1
 3595 0fac 50       		.byte	0x50
 3596 0fad 02       		.byte	0x2
 3597 0fae 74       		.byte	0x74
 3598 0faf 04       		.sleb128 4
 3599 0fb0 00       		.byte	0
 3600 0fb1 00       		.byte	0
 3601 0fb2 29       		.uleb128 0x29
 3602 0fb3 BA000000 		.4byte	.LVL24
 3603 0fb7 D9110000 		.4byte	0x11d9
 3604 0fbb 1D       		.uleb128 0x1d
 3605 0fbc 01       		.byte	0x1
 3606 0fbd 50       		.byte	0x50
 3607 0fbe 02       		.byte	0x2
 3608 0fbf 08       		.byte	0x8
 3609 0fc0 2C       		.byte	0x2c
 3610 0fc1 00       		.byte	0
 3611 0fc2 00       		.byte	0
 3612 0fc3 31       		.uleb128 0x31
 3613 0fc4 01       		.byte	0x1
 3614 0fc5 B3010000 		.4byte	.LASF106
 3615 0fc9 01       		.byte	0x1
 3616 0fca E3       		.byte	0xe3
 3617 0fcb 0C       		.byte	0xc
 3618 0fcc 01       		.byte	0x1
 3619 0fcd C0000000 		.4byte	0xc0
 3620 0fd1 74000000 		.4byte	.LFB5
 3621 0fd5 A8000000 		.4byte	.LFE5
ARM GAS  /tmp/cc4130RP.s 			page 90


 3622 0fd9 5E0A0000 		.4byte	.LLST11
 3623 0fdd 01       		.byte	0x1
 3624 0fde 37100000 		.4byte	0x1037
 3625 0fe2 32       		.uleb128 0x32
 3626 0fe3 EA060000 		.4byte	.LASF69
 3627 0fe7 01       		.byte	0x1
 3628 0fe8 E5       		.byte	0xe5
 3629 0fe9 0C       		.byte	0xc
 3630 0fea C0000000 		.4byte	0xc0
 3631 0fee 8C0A0000 		.4byte	.LLST12
 3632 0ff2 8A0A0000 		.4byte	.LVUS12
 3633 0ff6 18       		.uleb128 0x18
 3634 0ff7 7A000000 		.4byte	.LVL20
 3635 0ffb B4050000 		.4byte	0x5b4
 3636 0fff 29       		.uleb128 0x29
 3637 1000 94000000 		.4byte	.LVL21
 3638 1004 E7110000 		.4byte	0x11e7
 3639 1008 1D       		.uleb128 0x1d
 3640 1009 01       		.byte	0x1
 3641 100a 50       		.byte	0x50
 3642 100b 05       		.byte	0x5
 3643 100c 03       		.byte	0x3
 3644 100d 00000000 		.4byte	prvTimerTask
 3645 1011 1D       		.uleb128 0x1d
 3646 1012 01       		.byte	0x1
 3647 1013 51       		.byte	0x51
 3648 1014 05       		.byte	0x5
 3649 1015 03       		.byte	0x3
 3650 1016 00000000 		.4byte	.LC0
 3651 101a 1D       		.uleb128 0x1d
 3652 101b 01       		.byte	0x1
 3653 101c 52       		.byte	0x52
 3654 101d 02       		.byte	0x2
 3655 101e 08       		.byte	0x8
 3656 101f F0       		.byte	0xf0
 3657 1020 1D       		.uleb128 0x1d
 3658 1021 01       		.byte	0x1
 3659 1022 53       		.byte	0x53
 3660 1023 01       		.byte	0x1
 3661 1024 30       		.byte	0x30
 3662 1025 1D       		.uleb128 0x1d
 3663 1026 02       		.byte	0x2
 3664 1027 7D       		.byte	0x7d
 3665 1028 00       		.sleb128 0
 3666 1029 01       		.byte	0x1
 3667 102a 31       		.byte	0x31
 3668 102b 1D       		.uleb128 0x1d
 3669 102c 02       		.byte	0x2
 3670 102d 7D       		.byte	0x7d
 3671 102e 04       		.sleb128 4
 3672 102f 05       		.byte	0x5
 3673 1030 03       		.byte	0x3
 3674 1031 34000000 		.4byte	.LANCHOR0+52
 3675 1035 00       		.byte	0
 3676 1036 00       		.byte	0
 3677 1037 33       		.uleb128 0x33
 3678 1038 CB060000 		.4byte	0x6cb
ARM GAS  /tmp/cc4130RP.s 			page 91


 3679 103c 3C000000 		.4byte	.LFB19
 3680 1040 74000000 		.4byte	.LFE19
 3681 1044 A00A0000 		.4byte	.LLST1
 3682 1048 01       		.byte	0x1
 3683 1049 EC100000 		.4byte	0x10ec
 3684 104d 2B       		.uleb128 0x2b
 3685 104e DE060000 		.4byte	0x6de
 3686 1052 CC0A0000 		.4byte	.LLST2
 3687 1056 C00A0000 		.4byte	.LVUS2
 3688 105a 2B       		.uleb128 0x2b
 3689 105b EB060000 		.4byte	0x6eb
 3690 105f 2E0B0000 		.4byte	.LLST3
 3691 1063 1E0B0000 		.4byte	.LVUS3
 3692 1067 2B       		.uleb128 0x2b
 3693 1068 F8060000 		.4byte	0x6f8
 3694 106c A00B0000 		.4byte	.LLST4
 3695 1070 980B0000 		.4byte	.LVUS4
 3696 1074 2B       		.uleb128 0x2b
 3697 1075 05070000 		.4byte	0x705
 3698 1079 E20B0000 		.4byte	.LLST5
 3699 107d DA0B0000 		.4byte	.LVUS5
 3700 1081 26       		.uleb128 0x26
 3701 1082 12070000 		.4byte	0x712
 3702 1086 220C0000 		.4byte	.LLST6
 3703 108a 1C0C0000 		.4byte	.LVUS6
 3704 108e 30       		.uleb128 0x30
 3705 108f CB060000 		.4byte	0x6cb
 3706 1093 4E000000 		.4byte	.LBI4
 3707 1097 00       		.byte	.LVU34
 3708 1098 4E000000 		.4byte	.LBB4
 3709 109c 54000000 		.4byte	.LBE4
 3710 10a0 01       		.byte	0x1
 3711 10a1 9C02     		.2byte	0x29c
 3712 10a3 13       		.byte	0x13
 3713 10a4 E2100000 		.4byte	0x10e2
 3714 10a8 2B       		.uleb128 0x2b
 3715 10a9 EB060000 		.4byte	0x6eb
 3716 10ad 520C0000 		.4byte	.LLST7
 3717 10b1 4E0C0000 		.4byte	.LVUS7
 3718 10b5 2B       		.uleb128 0x2b
 3719 10b6 F8060000 		.4byte	0x6f8
 3720 10ba 730C0000 		.4byte	.LLST8
 3721 10be 710C0000 		.4byte	.LVUS8
 3722 10c2 2B       		.uleb128 0x2b
 3723 10c3 05070000 		.4byte	0x705
 3724 10c7 8B0C0000 		.4byte	.LLST9
 3725 10cb 890C0000 		.4byte	.LVUS9
 3726 10cf 2B       		.uleb128 0x2b
 3727 10d0 DE060000 		.4byte	0x6de
 3728 10d4 A30C0000 		.4byte	.LLST10
 3729 10d8 A10C0000 		.4byte	.LVUS10
 3730 10dc 27       		.uleb128 0x27
 3731 10dd 12070000 		.4byte	0x712
 3732 10e1 00       		.byte	0
 3733 10e2 18       		.uleb128 0x18
 3734 10e3 58000000 		.4byte	.LVL11
 3735 10e7 35110000 		.4byte	0x1135
ARM GAS  /tmp/cc4130RP.s 			page 92


 3736 10eb 00       		.byte	0
 3737 10ec 34       		.uleb128 0x34
 3738 10ed 01       		.byte	0x1
 3739 10ee 01       		.byte	0x1
 3740 10ef 7D010000 		.4byte	.LASF107
 3741 10f3 7D010000 		.4byte	.LASF107
 3742 10f7 04       		.byte	0x4
 3743 10f8 61       		.byte	0x61
 3744 10f9 0D       		.byte	0xd
 3745 10fa 34       		.uleb128 0x34
 3746 10fb 01       		.byte	0x1
 3747 10fc 01       		.byte	0x1
 3748 10fd 54000000 		.4byte	.LASF108
 3749 1101 54000000 		.4byte	.LASF108
 3750 1105 04       		.byte	0x4
 3751 1106 62       		.byte	0x62
 3752 1107 0D       		.byte	0xd
 3753 1108 35       		.uleb128 0x35
 3754 1109 01       		.byte	0x1
 3755 110a 01       		.byte	0x1
 3756 110b 8A070000 		.4byte	.LASF109
 3757 110f 8A070000 		.4byte	.LASF109
 3758 1113 05       		.byte	0x5
 3759 1114 5901     		.2byte	0x159
 3760 1116 06       		.byte	0x6
 3761 1117 35       		.uleb128 0x35
 3762 1118 01       		.byte	0x1
 3763 1119 01       		.byte	0x1
 3764 111a 88040000 		.4byte	.LASF110
 3765 111e 88040000 		.4byte	.LASF110
 3766 1122 07       		.byte	0x7
 3767 1123 D805     		.2byte	0x5d8
 3768 1125 10       		.byte	0x10
 3769 1126 35       		.uleb128 0x35
 3770 1127 01       		.byte	0x1
 3771 1128 01       		.byte	0x1
 3772 1129 19070000 		.4byte	.LASF111
 3773 112d 19070000 		.4byte	.LASF111
 3774 1131 05       		.byte	0x5
 3775 1132 9501     		.2byte	0x195
 3776 1134 0D       		.byte	0xd
 3777 1135 35       		.uleb128 0x35
 3778 1136 01       		.byte	0x1
 3779 1137 01       		.byte	0x1
 3780 1138 00000000 		.4byte	.LASF112
 3781 113c 00000000 		.4byte	.LASF112
 3782 1140 05       		.byte	0x5
 3783 1141 7101     		.2byte	0x171
 3784 1143 06       		.byte	0x6
 3785 1144 35       		.uleb128 0x35
 3786 1145 01       		.byte	0x1
 3787 1146 01       		.byte	0x1
 3788 1147 9C040000 		.4byte	.LASF113
 3789 114b 9C040000 		.4byte	.LASF113
 3790 114f 06       		.byte	0x6
 3791 1150 4705     		.2byte	0x547
 3792 1152 0C       		.byte	0xc
ARM GAS  /tmp/cc4130RP.s 			page 93


 3793 1153 35       		.uleb128 0x35
 3794 1154 01       		.byte	0x1
 3795 1155 01       		.byte	0x1
 3796 1156 80020000 		.4byte	.LASF114
 3797 115a 80020000 		.4byte	.LASF114
 3798 115e 06       		.byte	0x6
 3799 115f 0205     		.2byte	0x502
 3800 1161 06       		.byte	0x6
 3801 1162 35       		.uleb128 0x35
 3802 1163 01       		.byte	0x1
 3803 1164 01       		.byte	0x1
 3804 1165 53060000 		.4byte	.LASF115
 3805 1169 53060000 		.4byte	.LASF115
 3806 116d 06       		.byte	0x6
 3807 116e 3805     		.2byte	0x538
 3808 1170 0C       		.byte	0xc
 3809 1171 35       		.uleb128 0x35
 3810 1172 01       		.byte	0x1
 3811 1173 01       		.byte	0x1
 3812 1174 90020000 		.4byte	.LASF116
 3813 1178 90020000 		.4byte	.LASF116
 3814 117c 07       		.byte	0x7
 3815 117d 6B06     		.2byte	0x66b
 3816 117f 06       		.byte	0x6
 3817 1180 35       		.uleb128 0x35
 3818 1181 01       		.byte	0x1
 3819 1182 01       		.byte	0x1
 3820 1183 D3000000 		.4byte	.LASF117
 3821 1187 D3000000 		.4byte	.LASF117
 3822 118b 07       		.byte	0x7
 3823 118c 6403     		.2byte	0x364
 3824 118e 0C       		.byte	0xc
 3825 118f 34       		.uleb128 0x34
 3826 1190 01       		.byte	0x1
 3827 1191 01       		.byte	0x1
 3828 1192 7E060000 		.4byte	.LASF118
 3829 1196 7E060000 		.4byte	.LASF118
 3830 119a 09       		.byte	0x9
 3831 119b 92       		.byte	0x92
 3832 119c 06       		.byte	0x6
 3833 119d 35       		.uleb128 0x35
 3834 119e 01       		.byte	0x1
 3835 119f 01       		.byte	0x1
 3836 11a0 E1000000 		.4byte	.LASF119
 3837 11a4 E1000000 		.4byte	.LASF119
 3838 11a8 06       		.byte	0x6
 3839 11a9 2509     		.2byte	0x925
 3840 11ab 0C       		.byte	0xc
 3841 11ac 35       		.uleb128 0x35
 3842 11ad 01       		.byte	0x1
 3843 11ae 01       		.byte	0x1
 3844 11af 78030000 		.4byte	.LASF120
 3845 11b3 78030000 		.4byte	.LASF120
 3846 11b7 07       		.byte	0x7
 3847 11b8 8A02     		.2byte	0x28a
 3848 11ba 0C       		.byte	0xc
 3849 11bb 35       		.uleb128 0x35
ARM GAS  /tmp/cc4130RP.s 			page 94


 3850 11bc 01       		.byte	0x1
 3851 11bd 01       		.byte	0x1
 3852 11be 34030000 		.4byte	.LASF121
 3853 11c2 34030000 		.4byte	.LASF121
 3854 11c6 07       		.byte	0x7
 3855 11c7 0F05     		.2byte	0x50f
 3856 11c9 0C       		.byte	0xc
 3857 11ca 35       		.uleb128 0x35
 3858 11cb 01       		.byte	0x1
 3859 11cc 01       		.byte	0x1
 3860 11cd FD050000 		.4byte	.LASF122
 3861 11d1 FD050000 		.4byte	.LASF122
 3862 11d5 05       		.byte	0x5
 3863 11d6 6401     		.2byte	0x164
 3864 11d8 06       		.byte	0x6
 3865 11d9 34       		.uleb128 0x34
 3866 11da 01       		.byte	0x1
 3867 11db 01       		.byte	0x1
 3868 11dc 73020000 		.4byte	.LASF123
 3869 11e0 73020000 		.4byte	.LASF123
 3870 11e4 09       		.byte	0x9
 3871 11e5 91       		.byte	0x91
 3872 11e6 07       		.byte	0x7
 3873 11e7 35       		.uleb128 0x35
 3874 11e8 01       		.byte	0x1
 3875 11e9 01       		.byte	0x1
 3876 11ea 4B040000 		.4byte	.LASF124
 3877 11ee 4B040000 		.4byte	.LASF124
 3878 11f2 06       		.byte	0x6
 3879 11f3 4A01     		.2byte	0x14a
 3880 11f5 0D       		.byte	0xd
 3881 11f6 00       		.byte	0
 3882              		.section	.debug_abbrev,"",%progbits
 3883              	.Ldebug_abbrev0:
 3884 0000 01       		.uleb128 0x1
 3885 0001 11       		.uleb128 0x11
 3886 0002 01       		.byte	0x1
 3887 0003 25       		.uleb128 0x25
 3888 0004 0E       		.uleb128 0xe
 3889 0005 13       		.uleb128 0x13
 3890 0006 0B       		.uleb128 0xb
 3891 0007 03       		.uleb128 0x3
 3892 0008 0E       		.uleb128 0xe
 3893 0009 1B       		.uleb128 0x1b
 3894 000a 0E       		.uleb128 0xe
 3895 000b 11       		.uleb128 0x11
 3896 000c 01       		.uleb128 0x1
 3897 000d 12       		.uleb128 0x12
 3898 000e 01       		.uleb128 0x1
 3899 000f 10       		.uleb128 0x10
 3900 0010 06       		.uleb128 0x6
 3901 0011 00       		.byte	0
 3902 0012 00       		.byte	0
 3903 0013 02       		.uleb128 0x2
 3904 0014 24       		.uleb128 0x24
 3905 0015 00       		.byte	0
 3906 0016 0B       		.uleb128 0xb
ARM GAS  /tmp/cc4130RP.s 			page 95


 3907 0017 0B       		.uleb128 0xb
 3908 0018 3E       		.uleb128 0x3e
 3909 0019 0B       		.uleb128 0xb
 3910 001a 03       		.uleb128 0x3
 3911 001b 0E       		.uleb128 0xe
 3912 001c 00       		.byte	0
 3913 001d 00       		.byte	0
 3914 001e 03       		.uleb128 0x3
 3915 001f 24       		.uleb128 0x24
 3916 0020 00       		.byte	0
 3917 0021 0B       		.uleb128 0xb
 3918 0022 0B       		.uleb128 0xb
 3919 0023 3E       		.uleb128 0x3e
 3920 0024 0B       		.uleb128 0xb
 3921 0025 03       		.uleb128 0x3
 3922 0026 08       		.uleb128 0x8
 3923 0027 00       		.byte	0
 3924 0028 00       		.byte	0
 3925 0029 04       		.uleb128 0x4
 3926 002a 16       		.uleb128 0x16
 3927 002b 00       		.byte	0
 3928 002c 03       		.uleb128 0x3
 3929 002d 0E       		.uleb128 0xe
 3930 002e 3A       		.uleb128 0x3a
 3931 002f 0B       		.uleb128 0xb
 3932 0030 3B       		.uleb128 0x3b
 3933 0031 0B       		.uleb128 0xb
 3934 0032 39       		.uleb128 0x39
 3935 0033 0B       		.uleb128 0xb
 3936 0034 49       		.uleb128 0x49
 3937 0035 13       		.uleb128 0x13
 3938 0036 00       		.byte	0
 3939 0037 00       		.byte	0
 3940 0038 05       		.uleb128 0x5
 3941 0039 0F       		.uleb128 0xf
 3942 003a 00       		.byte	0
 3943 003b 0B       		.uleb128 0xb
 3944 003c 0B       		.uleb128 0xb
 3945 003d 00       		.byte	0
 3946 003e 00       		.byte	0
 3947 003f 06       		.uleb128 0x6
 3948 0040 26       		.uleb128 0x26
 3949 0041 00       		.byte	0
 3950 0042 49       		.uleb128 0x49
 3951 0043 13       		.uleb128 0x13
 3952 0044 00       		.byte	0
 3953 0045 00       		.byte	0
 3954 0046 07       		.uleb128 0x7
 3955 0047 0F       		.uleb128 0xf
 3956 0048 00       		.byte	0
 3957 0049 0B       		.uleb128 0xb
 3958 004a 0B       		.uleb128 0xb
 3959 004b 49       		.uleb128 0x49
 3960 004c 13       		.uleb128 0x13
 3961 004d 00       		.byte	0
 3962 004e 00       		.byte	0
 3963 004f 08       		.uleb128 0x8
ARM GAS  /tmp/cc4130RP.s 			page 96


 3964 0050 35       		.uleb128 0x35
 3965 0051 00       		.byte	0
 3966 0052 49       		.uleb128 0x49
 3967 0053 13       		.uleb128 0x13
 3968 0054 00       		.byte	0
 3969 0055 00       		.byte	0
 3970 0056 09       		.uleb128 0x9
 3971 0057 13       		.uleb128 0x13
 3972 0058 01       		.byte	0x1
 3973 0059 03       		.uleb128 0x3
 3974 005a 0E       		.uleb128 0xe
 3975 005b 0B       		.uleb128 0xb
 3976 005c 0B       		.uleb128 0xb
 3977 005d 3A       		.uleb128 0x3a
 3978 005e 0B       		.uleb128 0xb
 3979 005f 3B       		.uleb128 0x3b
 3980 0060 0B       		.uleb128 0xb
 3981 0061 39       		.uleb128 0x39
 3982 0062 0B       		.uleb128 0xb
 3983 0063 01       		.uleb128 0x1
 3984 0064 13       		.uleb128 0x13
 3985 0065 00       		.byte	0
 3986 0066 00       		.byte	0
 3987 0067 0A       		.uleb128 0xa
 3988 0068 0D       		.uleb128 0xd
 3989 0069 00       		.byte	0
 3990 006a 03       		.uleb128 0x3
 3991 006b 0E       		.uleb128 0xe
 3992 006c 3A       		.uleb128 0x3a
 3993 006d 0B       		.uleb128 0xb
 3994 006e 3B       		.uleb128 0x3b
 3995 006f 0B       		.uleb128 0xb
 3996 0070 39       		.uleb128 0x39
 3997 0071 0B       		.uleb128 0xb
 3998 0072 49       		.uleb128 0x49
 3999 0073 13       		.uleb128 0x13
 4000 0074 38       		.uleb128 0x38
 4001 0075 0A       		.uleb128 0xa
 4002 0076 00       		.byte	0
 4003 0077 00       		.byte	0
 4004 0078 0B       		.uleb128 0xb
 4005 0079 13       		.uleb128 0x13
 4006 007a 00       		.byte	0
 4007 007b 03       		.uleb128 0x3
 4008 007c 0E       		.uleb128 0xe
 4009 007d 3C       		.uleb128 0x3c
 4010 007e 0C       		.uleb128 0xc
 4011 007f 00       		.byte	0
 4012 0080 00       		.byte	0
 4013 0081 0C       		.uleb128 0xc
 4014 0082 15       		.uleb128 0x15
 4015 0083 01       		.byte	0x1
 4016 0084 27       		.uleb128 0x27
 4017 0085 0C       		.uleb128 0xc
 4018 0086 01       		.uleb128 0x1
 4019 0087 13       		.uleb128 0x13
 4020 0088 00       		.byte	0
ARM GAS  /tmp/cc4130RP.s 			page 97


 4021 0089 00       		.byte	0
 4022 008a 0D       		.uleb128 0xd
 4023 008b 05       		.uleb128 0x5
 4024 008c 00       		.byte	0
 4025 008d 49       		.uleb128 0x49
 4026 008e 13       		.uleb128 0x13
 4027 008f 00       		.byte	0
 4028 0090 00       		.byte	0
 4029 0091 0E       		.uleb128 0xe
 4030 0092 17       		.uleb128 0x17
 4031 0093 01       		.byte	0x1
 4032 0094 0B       		.uleb128 0xb
 4033 0095 0B       		.uleb128 0xb
 4034 0096 3A       		.uleb128 0x3a
 4035 0097 0B       		.uleb128 0xb
 4036 0098 3B       		.uleb128 0x3b
 4037 0099 0B       		.uleb128 0xb
 4038 009a 39       		.uleb128 0x39
 4039 009b 0B       		.uleb128 0xb
 4040 009c 01       		.uleb128 0x1
 4041 009d 13       		.uleb128 0x13
 4042 009e 00       		.byte	0
 4043 009f 00       		.byte	0
 4044 00a0 0F       		.uleb128 0xf
 4045 00a1 0D       		.uleb128 0xd
 4046 00a2 00       		.byte	0
 4047 00a3 03       		.uleb128 0x3
 4048 00a4 0E       		.uleb128 0xe
 4049 00a5 3A       		.uleb128 0x3a
 4050 00a6 0B       		.uleb128 0xb
 4051 00a7 3B       		.uleb128 0x3b
 4052 00a8 0B       		.uleb128 0xb
 4053 00a9 39       		.uleb128 0x39
 4054 00aa 0B       		.uleb128 0xb
 4055 00ab 49       		.uleb128 0x49
 4056 00ac 13       		.uleb128 0x13
 4057 00ad 00       		.byte	0
 4058 00ae 00       		.byte	0
 4059 00af 10       		.uleb128 0x10
 4060 00b0 0D       		.uleb128 0xd
 4061 00b1 00       		.byte	0
 4062 00b2 03       		.uleb128 0x3
 4063 00b3 08       		.uleb128 0x8
 4064 00b4 3A       		.uleb128 0x3a
 4065 00b5 0B       		.uleb128 0xb
 4066 00b6 3B       		.uleb128 0x3b
 4067 00b7 0B       		.uleb128 0xb
 4068 00b8 39       		.uleb128 0x39
 4069 00b9 0B       		.uleb128 0xb
 4070 00ba 49       		.uleb128 0x49
 4071 00bb 13       		.uleb128 0x13
 4072 00bc 38       		.uleb128 0x38
 4073 00bd 0A       		.uleb128 0xa
 4074 00be 00       		.byte	0
 4075 00bf 00       		.byte	0
 4076 00c0 11       		.uleb128 0x11
 4077 00c1 34       		.uleb128 0x34
ARM GAS  /tmp/cc4130RP.s 			page 98


 4078 00c2 00       		.byte	0
 4079 00c3 03       		.uleb128 0x3
 4080 00c4 0E       		.uleb128 0xe
 4081 00c5 3A       		.uleb128 0x3a
 4082 00c6 0B       		.uleb128 0xb
 4083 00c7 3B       		.uleb128 0x3b
 4084 00c8 0B       		.uleb128 0xb
 4085 00c9 39       		.uleb128 0x39
 4086 00ca 0B       		.uleb128 0xb
 4087 00cb 49       		.uleb128 0x49
 4088 00cc 13       		.uleb128 0x13
 4089 00cd 02       		.uleb128 0x2
 4090 00ce 0A       		.uleb128 0xa
 4091 00cf 00       		.byte	0
 4092 00d0 00       		.byte	0
 4093 00d1 12       		.uleb128 0x12
 4094 00d2 2E       		.uleb128 0x2e
 4095 00d3 01       		.byte	0x1
 4096 00d4 3F       		.uleb128 0x3f
 4097 00d5 0C       		.uleb128 0xc
 4098 00d6 03       		.uleb128 0x3
 4099 00d7 0E       		.uleb128 0xe
 4100 00d8 3A       		.uleb128 0x3a
 4101 00d9 0B       		.uleb128 0xb
 4102 00da 3B       		.uleb128 0x3b
 4103 00db 05       		.uleb128 0x5
 4104 00dc 39       		.uleb128 0x39
 4105 00dd 0B       		.uleb128 0xb
 4106 00de 27       		.uleb128 0x27
 4107 00df 0C       		.uleb128 0xc
 4108 00e0 11       		.uleb128 0x11
 4109 00e1 01       		.uleb128 0x1
 4110 00e2 12       		.uleb128 0x12
 4111 00e3 01       		.uleb128 0x1
 4112 00e4 40       		.uleb128 0x40
 4113 00e5 0A       		.uleb128 0xa
 4114 00e6 9742     		.uleb128 0x2117
 4115 00e8 0C       		.uleb128 0xc
 4116 00e9 01       		.uleb128 0x1
 4117 00ea 13       		.uleb128 0x13
 4118 00eb 00       		.byte	0
 4119 00ec 00       		.byte	0
 4120 00ed 13       		.uleb128 0x13
 4121 00ee 05       		.uleb128 0x5
 4122 00ef 00       		.byte	0
 4123 00f0 03       		.uleb128 0x3
 4124 00f1 0E       		.uleb128 0xe
 4125 00f2 3A       		.uleb128 0x3a
 4126 00f3 0B       		.uleb128 0xb
 4127 00f4 3B       		.uleb128 0x3b
 4128 00f5 05       		.uleb128 0x5
 4129 00f6 39       		.uleb128 0x39
 4130 00f7 0B       		.uleb128 0xb
 4131 00f8 49       		.uleb128 0x49
 4132 00f9 13       		.uleb128 0x13
 4133 00fa 02       		.uleb128 0x2
 4134 00fb 0A       		.uleb128 0xa
ARM GAS  /tmp/cc4130RP.s 			page 99


 4135 00fc 00       		.byte	0
 4136 00fd 00       		.byte	0
 4137 00fe 14       		.uleb128 0x14
 4138 00ff 2E       		.uleb128 0x2e
 4139 0100 01       		.byte	0x1
 4140 0101 3F       		.uleb128 0x3f
 4141 0102 0C       		.uleb128 0xc
 4142 0103 03       		.uleb128 0x3
 4143 0104 0E       		.uleb128 0xe
 4144 0105 3A       		.uleb128 0x3a
 4145 0106 0B       		.uleb128 0xb
 4146 0107 3B       		.uleb128 0x3b
 4147 0108 05       		.uleb128 0x5
 4148 0109 39       		.uleb128 0x39
 4149 010a 0B       		.uleb128 0xb
 4150 010b 27       		.uleb128 0x27
 4151 010c 0C       		.uleb128 0xc
 4152 010d 49       		.uleb128 0x49
 4153 010e 13       		.uleb128 0x13
 4154 010f 11       		.uleb128 0x11
 4155 0110 01       		.uleb128 0x1
 4156 0111 12       		.uleb128 0x12
 4157 0112 01       		.uleb128 0x1
 4158 0113 40       		.uleb128 0x40
 4159 0114 0A       		.uleb128 0xa
 4160 0115 9742     		.uleb128 0x2117
 4161 0117 0C       		.uleb128 0xc
 4162 0118 01       		.uleb128 0x1
 4163 0119 13       		.uleb128 0x13
 4164 011a 00       		.byte	0
 4165 011b 00       		.byte	0
 4166 011c 15       		.uleb128 0x15
 4167 011d 05       		.uleb128 0x5
 4168 011e 00       		.byte	0
 4169 011f 03       		.uleb128 0x3
 4170 0120 0E       		.uleb128 0xe
 4171 0121 3A       		.uleb128 0x3a
 4172 0122 0B       		.uleb128 0xb
 4173 0123 3B       		.uleb128 0x3b
 4174 0124 05       		.uleb128 0x5
 4175 0125 39       		.uleb128 0x39
 4176 0126 0B       		.uleb128 0xb
 4177 0127 49       		.uleb128 0x49
 4178 0128 13       		.uleb128 0x13
 4179 0129 02       		.uleb128 0x2
 4180 012a 06       		.uleb128 0x6
 4181 012b B742     		.uleb128 0x2137
 4182 012d 06       		.uleb128 0x6
 4183 012e 00       		.byte	0
 4184 012f 00       		.byte	0
 4185 0130 16       		.uleb128 0x16
 4186 0131 2E       		.uleb128 0x2e
 4187 0132 01       		.byte	0x1
 4188 0133 3F       		.uleb128 0x3f
 4189 0134 0C       		.uleb128 0xc
 4190 0135 03       		.uleb128 0x3
 4191 0136 0E       		.uleb128 0xe
ARM GAS  /tmp/cc4130RP.s 			page 100


 4192 0137 3A       		.uleb128 0x3a
 4193 0138 0B       		.uleb128 0xb
 4194 0139 3B       		.uleb128 0x3b
 4195 013a 05       		.uleb128 0x5
 4196 013b 39       		.uleb128 0x39
 4197 013c 0B       		.uleb128 0xb
 4198 013d 27       		.uleb128 0x27
 4199 013e 0C       		.uleb128 0xc
 4200 013f 11       		.uleb128 0x11
 4201 0140 01       		.uleb128 0x1
 4202 0141 12       		.uleb128 0x12
 4203 0142 01       		.uleb128 0x1
 4204 0143 40       		.uleb128 0x40
 4205 0144 06       		.uleb128 0x6
 4206 0145 9742     		.uleb128 0x2117
 4207 0147 0C       		.uleb128 0xc
 4208 0148 01       		.uleb128 0x1
 4209 0149 13       		.uleb128 0x13
 4210 014a 00       		.byte	0
 4211 014b 00       		.byte	0
 4212 014c 17       		.uleb128 0x17
 4213 014d 34       		.uleb128 0x34
 4214 014e 00       		.byte	0
 4215 014f 03       		.uleb128 0x3
 4216 0150 0E       		.uleb128 0xe
 4217 0151 3A       		.uleb128 0x3a
 4218 0152 0B       		.uleb128 0xb
 4219 0153 3B       		.uleb128 0x3b
 4220 0154 05       		.uleb128 0x5
 4221 0155 39       		.uleb128 0x39
 4222 0156 0B       		.uleb128 0xb
 4223 0157 49       		.uleb128 0x49
 4224 0158 13       		.uleb128 0x13
 4225 0159 02       		.uleb128 0x2
 4226 015a 06       		.uleb128 0x6
 4227 015b B742     		.uleb128 0x2137
 4228 015d 06       		.uleb128 0x6
 4229 015e 00       		.byte	0
 4230 015f 00       		.byte	0
 4231 0160 18       		.uleb128 0x18
 4232 0161 898201   		.uleb128 0x4109
 4233 0164 00       		.byte	0
 4234 0165 11       		.uleb128 0x11
 4235 0166 01       		.uleb128 0x1
 4236 0167 31       		.uleb128 0x31
 4237 0168 13       		.uleb128 0x13
 4238 0169 00       		.byte	0
 4239 016a 00       		.byte	0
 4240 016b 19       		.uleb128 0x19
 4241 016c 898201   		.uleb128 0x4109
 4242 016f 00       		.byte	0
 4243 0170 11       		.uleb128 0x11
 4244 0171 01       		.uleb128 0x1
 4245 0172 9542     		.uleb128 0x2115
 4246 0174 0C       		.uleb128 0xc
 4247 0175 31       		.uleb128 0x31
 4248 0176 13       		.uleb128 0x13
ARM GAS  /tmp/cc4130RP.s 			page 101


 4249 0177 00       		.byte	0
 4250 0178 00       		.byte	0
 4251 0179 1A       		.uleb128 0x1a
 4252 017a 2E       		.uleb128 0x2e
 4253 017b 01       		.byte	0x1
 4254 017c 3F       		.uleb128 0x3f
 4255 017d 0C       		.uleb128 0xc
 4256 017e 03       		.uleb128 0x3
 4257 017f 0E       		.uleb128 0xe
 4258 0180 3A       		.uleb128 0x3a
 4259 0181 0B       		.uleb128 0xb
 4260 0182 3B       		.uleb128 0x3b
 4261 0183 05       		.uleb128 0x5
 4262 0184 39       		.uleb128 0x39
 4263 0185 0B       		.uleb128 0xb
 4264 0186 27       		.uleb128 0x27
 4265 0187 0C       		.uleb128 0xc
 4266 0188 49       		.uleb128 0x49
 4267 0189 13       		.uleb128 0x13
 4268 018a 11       		.uleb128 0x11
 4269 018b 01       		.uleb128 0x1
 4270 018c 12       		.uleb128 0x12
 4271 018d 01       		.uleb128 0x1
 4272 018e 40       		.uleb128 0x40
 4273 018f 06       		.uleb128 0x6
 4274 0190 9742     		.uleb128 0x2117
 4275 0192 0C       		.uleb128 0xc
 4276 0193 01       		.uleb128 0x1
 4277 0194 13       		.uleb128 0x13
 4278 0195 00       		.byte	0
 4279 0196 00       		.byte	0
 4280 0197 1B       		.uleb128 0x1b
 4281 0198 2E       		.uleb128 0x2e
 4282 0199 01       		.byte	0x1
 4283 019a 03       		.uleb128 0x3
 4284 019b 0E       		.uleb128 0xe
 4285 019c 3A       		.uleb128 0x3a
 4286 019d 0B       		.uleb128 0xb
 4287 019e 3B       		.uleb128 0x3b
 4288 019f 05       		.uleb128 0x5
 4289 01a0 39       		.uleb128 0x39
 4290 01a1 0B       		.uleb128 0xb
 4291 01a2 27       		.uleb128 0x27
 4292 01a3 0C       		.uleb128 0xc
 4293 01a4 11       		.uleb128 0x11
 4294 01a5 01       		.uleb128 0x1
 4295 01a6 12       		.uleb128 0x12
 4296 01a7 01       		.uleb128 0x1
 4297 01a8 40       		.uleb128 0x40
 4298 01a9 06       		.uleb128 0x6
 4299 01aa 9742     		.uleb128 0x2117
 4300 01ac 0C       		.uleb128 0xc
 4301 01ad 01       		.uleb128 0x1
 4302 01ae 13       		.uleb128 0x13
 4303 01af 00       		.byte	0
 4304 01b0 00       		.byte	0
 4305 01b1 1C       		.uleb128 0x1c
ARM GAS  /tmp/cc4130RP.s 			page 102


 4306 01b2 898201   		.uleb128 0x4109
 4307 01b5 01       		.byte	0x1
 4308 01b6 11       		.uleb128 0x11
 4309 01b7 01       		.uleb128 0x1
 4310 01b8 31       		.uleb128 0x31
 4311 01b9 13       		.uleb128 0x13
 4312 01ba 01       		.uleb128 0x1
 4313 01bb 13       		.uleb128 0x13
 4314 01bc 00       		.byte	0
 4315 01bd 00       		.byte	0
 4316 01be 1D       		.uleb128 0x1d
 4317 01bf 8A8201   		.uleb128 0x410a
 4318 01c2 00       		.byte	0
 4319 01c3 02       		.uleb128 0x2
 4320 01c4 0A       		.uleb128 0xa
 4321 01c5 9142     		.uleb128 0x2111
 4322 01c7 0A       		.uleb128 0xa
 4323 01c8 00       		.byte	0
 4324 01c9 00       		.byte	0
 4325 01ca 1E       		.uleb128 0x1e
 4326 01cb 2E       		.uleb128 0x2e
 4327 01cc 01       		.byte	0x1
 4328 01cd 03       		.uleb128 0x3
 4329 01ce 0E       		.uleb128 0xe
 4330 01cf 3A       		.uleb128 0x3a
 4331 01d0 0B       		.uleb128 0xb
 4332 01d1 3B       		.uleb128 0x3b
 4333 01d2 05       		.uleb128 0x5
 4334 01d3 39       		.uleb128 0x39
 4335 01d4 0B       		.uleb128 0xb
 4336 01d5 27       		.uleb128 0x27
 4337 01d6 0C       		.uleb128 0xc
 4338 01d7 20       		.uleb128 0x20
 4339 01d8 0B       		.uleb128 0xb
 4340 01d9 01       		.uleb128 0x1
 4341 01da 13       		.uleb128 0x13
 4342 01db 00       		.byte	0
 4343 01dc 00       		.byte	0
 4344 01dd 1F       		.uleb128 0x1f
 4345 01de 34       		.uleb128 0x34
 4346 01df 00       		.byte	0
 4347 01e0 03       		.uleb128 0x3
 4348 01e1 0E       		.uleb128 0xe
 4349 01e2 3A       		.uleb128 0x3a
 4350 01e3 0B       		.uleb128 0xb
 4351 01e4 3B       		.uleb128 0x3b
 4352 01e5 05       		.uleb128 0x5
 4353 01e6 39       		.uleb128 0x39
 4354 01e7 0B       		.uleb128 0xb
 4355 01e8 49       		.uleb128 0x49
 4356 01e9 13       		.uleb128 0x13
 4357 01ea 00       		.byte	0
 4358 01eb 00       		.byte	0
 4359 01ec 20       		.uleb128 0x20
 4360 01ed 2E       		.uleb128 0x2e
 4361 01ee 01       		.byte	0x1
 4362 01ef 03       		.uleb128 0x3
ARM GAS  /tmp/cc4130RP.s 			page 103


 4363 01f0 0E       		.uleb128 0xe
 4364 01f1 3A       		.uleb128 0x3a
 4365 01f2 0B       		.uleb128 0xb
 4366 01f3 3B       		.uleb128 0x3b
 4367 01f4 05       		.uleb128 0x5
 4368 01f5 39       		.uleb128 0x39
 4369 01f6 0B       		.uleb128 0xb
 4370 01f7 27       		.uleb128 0x27
 4371 01f8 0C       		.uleb128 0xc
 4372 01f9 49       		.uleb128 0x49
 4373 01fa 13       		.uleb128 0x13
 4374 01fb 20       		.uleb128 0x20
 4375 01fc 0B       		.uleb128 0xb
 4376 01fd 01       		.uleb128 0x1
 4377 01fe 13       		.uleb128 0x13
 4378 01ff 00       		.byte	0
 4379 0200 00       		.byte	0
 4380 0201 21       		.uleb128 0x21
 4381 0202 05       		.uleb128 0x5
 4382 0203 00       		.byte	0
 4383 0204 03       		.uleb128 0x3
 4384 0205 0E       		.uleb128 0xe
 4385 0206 3A       		.uleb128 0x3a
 4386 0207 0B       		.uleb128 0xb
 4387 0208 3B       		.uleb128 0x3b
 4388 0209 05       		.uleb128 0x5
 4389 020a 39       		.uleb128 0x39
 4390 020b 0B       		.uleb128 0xb
 4391 020c 49       		.uleb128 0x49
 4392 020d 13       		.uleb128 0x13
 4393 020e 00       		.byte	0
 4394 020f 00       		.byte	0
 4395 0210 22       		.uleb128 0x22
 4396 0211 2E       		.uleb128 0x2e
 4397 0212 01       		.byte	0x1
 4398 0213 03       		.uleb128 0x3
 4399 0214 0E       		.uleb128 0xe
 4400 0215 3A       		.uleb128 0x3a
 4401 0216 0B       		.uleb128 0xb
 4402 0217 3B       		.uleb128 0x3b
 4403 0218 05       		.uleb128 0x5
 4404 0219 39       		.uleb128 0x39
 4405 021a 0B       		.uleb128 0xb
 4406 021b 27       		.uleb128 0x27
 4407 021c 0C       		.uleb128 0xc
 4408 021d 49       		.uleb128 0x49
 4409 021e 13       		.uleb128 0x13
 4410 021f 11       		.uleb128 0x11
 4411 0220 01       		.uleb128 0x1
 4412 0221 12       		.uleb128 0x12
 4413 0222 01       		.uleb128 0x1
 4414 0223 40       		.uleb128 0x40
 4415 0224 06       		.uleb128 0x6
 4416 0225 9742     		.uleb128 0x2117
 4417 0227 0C       		.uleb128 0xc
 4418 0228 01       		.uleb128 0x1
 4419 0229 13       		.uleb128 0x13
ARM GAS  /tmp/cc4130RP.s 			page 104


 4420 022a 00       		.byte	0
 4421 022b 00       		.byte	0
 4422 022c 23       		.uleb128 0x23
 4423 022d 34       		.uleb128 0x34
 4424 022e 00       		.byte	0
 4425 022f 03       		.uleb128 0x3
 4426 0230 0E       		.uleb128 0xe
 4427 0231 3A       		.uleb128 0x3a
 4428 0232 0B       		.uleb128 0xb
 4429 0233 3B       		.uleb128 0x3b
 4430 0234 05       		.uleb128 0x5
 4431 0235 39       		.uleb128 0x39
 4432 0236 0B       		.uleb128 0xb
 4433 0237 49       		.uleb128 0x49
 4434 0238 13       		.uleb128 0x13
 4435 0239 02       		.uleb128 0x2
 4436 023a 0A       		.uleb128 0xa
 4437 023b 00       		.byte	0
 4438 023c 00       		.byte	0
 4439 023d 24       		.uleb128 0x24
 4440 023e 1D       		.uleb128 0x1d
 4441 023f 01       		.byte	0x1
 4442 0240 31       		.uleb128 0x31
 4443 0241 13       		.uleb128 0x13
 4444 0242 55       		.uleb128 0x55
 4445 0243 06       		.uleb128 0x6
 4446 0244 58       		.uleb128 0x58
 4447 0245 0B       		.uleb128 0xb
 4448 0246 59       		.uleb128 0x59
 4449 0247 05       		.uleb128 0x5
 4450 0248 57       		.uleb128 0x57
 4451 0249 0B       		.uleb128 0xb
 4452 024a 01       		.uleb128 0x1
 4453 024b 13       		.uleb128 0x13
 4454 024c 00       		.byte	0
 4455 024d 00       		.byte	0
 4456 024e 25       		.uleb128 0x25
 4457 024f 0B       		.uleb128 0xb
 4458 0250 01       		.byte	0x1
 4459 0251 55       		.uleb128 0x55
 4460 0252 06       		.uleb128 0x6
 4461 0253 00       		.byte	0
 4462 0254 00       		.byte	0
 4463 0255 26       		.uleb128 0x26
 4464 0256 34       		.uleb128 0x34
 4465 0257 00       		.byte	0
 4466 0258 31       		.uleb128 0x31
 4467 0259 13       		.uleb128 0x13
 4468 025a 02       		.uleb128 0x2
 4469 025b 06       		.uleb128 0x6
 4470 025c B742     		.uleb128 0x2137
 4471 025e 06       		.uleb128 0x6
 4472 025f 00       		.byte	0
 4473 0260 00       		.byte	0
 4474 0261 27       		.uleb128 0x27
 4475 0262 34       		.uleb128 0x34
 4476 0263 00       		.byte	0
ARM GAS  /tmp/cc4130RP.s 			page 105


 4477 0264 31       		.uleb128 0x31
 4478 0265 13       		.uleb128 0x13
 4479 0266 00       		.byte	0
 4480 0267 00       		.byte	0
 4481 0268 28       		.uleb128 0x28
 4482 0269 898201   		.uleb128 0x4109
 4483 026c 01       		.byte	0x1
 4484 026d 11       		.uleb128 0x11
 4485 026e 01       		.uleb128 0x1
 4486 026f 01       		.uleb128 0x1
 4487 0270 13       		.uleb128 0x13
 4488 0271 00       		.byte	0
 4489 0272 00       		.byte	0
 4490 0273 29       		.uleb128 0x29
 4491 0274 898201   		.uleb128 0x4109
 4492 0277 01       		.byte	0x1
 4493 0278 11       		.uleb128 0x11
 4494 0279 01       		.uleb128 0x1
 4495 027a 31       		.uleb128 0x31
 4496 027b 13       		.uleb128 0x13
 4497 027c 00       		.byte	0
 4498 027d 00       		.byte	0
 4499 027e 2A       		.uleb128 0x2a
 4500 027f 1D       		.uleb128 0x1d
 4501 0280 01       		.byte	0x1
 4502 0281 31       		.uleb128 0x31
 4503 0282 13       		.uleb128 0x13
 4504 0283 52       		.uleb128 0x52
 4505 0284 01       		.uleb128 0x1
 4506 0285 B842     		.uleb128 0x2138
 4507 0287 0B       		.uleb128 0xb
 4508 0288 55       		.uleb128 0x55
 4509 0289 06       		.uleb128 0x6
 4510 028a 58       		.uleb128 0x58
 4511 028b 0B       		.uleb128 0xb
 4512 028c 59       		.uleb128 0x59
 4513 028d 05       		.uleb128 0x5
 4514 028e 57       		.uleb128 0x57
 4515 028f 0B       		.uleb128 0xb
 4516 0290 01       		.uleb128 0x1
 4517 0291 13       		.uleb128 0x13
 4518 0292 00       		.byte	0
 4519 0293 00       		.byte	0
 4520 0294 2B       		.uleb128 0x2b
 4521 0295 05       		.uleb128 0x5
 4522 0296 00       		.byte	0
 4523 0297 31       		.uleb128 0x31
 4524 0298 13       		.uleb128 0x13
 4525 0299 02       		.uleb128 0x2
 4526 029a 06       		.uleb128 0x6
 4527 029b B742     		.uleb128 0x2137
 4528 029d 06       		.uleb128 0x6
 4529 029e 00       		.byte	0
 4530 029f 00       		.byte	0
 4531 02a0 2C       		.uleb128 0x2c
 4532 02a1 34       		.uleb128 0x34
 4533 02a2 00       		.byte	0
ARM GAS  /tmp/cc4130RP.s 			page 106


 4534 02a3 31       		.uleb128 0x31
 4535 02a4 13       		.uleb128 0x13
 4536 02a5 02       		.uleb128 0x2
 4537 02a6 0A       		.uleb128 0xa
 4538 02a7 00       		.byte	0
 4539 02a8 00       		.byte	0
 4540 02a9 2D       		.uleb128 0x2d
 4541 02aa 898201   		.uleb128 0x4109
 4542 02ad 01       		.byte	0x1
 4543 02ae 11       		.uleb128 0x11
 4544 02af 01       		.uleb128 0x1
 4545 02b0 00       		.byte	0
 4546 02b1 00       		.byte	0
 4547 02b2 2E       		.uleb128 0x2e
 4548 02b3 1D       		.uleb128 0x1d
 4549 02b4 01       		.byte	0x1
 4550 02b5 31       		.uleb128 0x31
 4551 02b6 13       		.uleb128 0x13
 4552 02b7 55       		.uleb128 0x55
 4553 02b8 06       		.uleb128 0x6
 4554 02b9 58       		.uleb128 0x58
 4555 02ba 0B       		.uleb128 0xb
 4556 02bb 59       		.uleb128 0x59
 4557 02bc 05       		.uleb128 0x5
 4558 02bd 57       		.uleb128 0x57
 4559 02be 0B       		.uleb128 0xb
 4560 02bf 00       		.byte	0
 4561 02c0 00       		.byte	0
 4562 02c1 2F       		.uleb128 0x2f
 4563 02c2 2E       		.uleb128 0x2e
 4564 02c3 00       		.byte	0
 4565 02c4 3F       		.uleb128 0x3f
 4566 02c5 0C       		.uleb128 0xc
 4567 02c6 03       		.uleb128 0x3
 4568 02c7 0E       		.uleb128 0xe
 4569 02c8 3A       		.uleb128 0x3a
 4570 02c9 0B       		.uleb128 0xb
 4571 02ca 3B       		.uleb128 0x3b
 4572 02cb 05       		.uleb128 0x5
 4573 02cc 39       		.uleb128 0x39
 4574 02cd 0B       		.uleb128 0xb
 4575 02ce 27       		.uleb128 0x27
 4576 02cf 0C       		.uleb128 0xc
 4577 02d0 49       		.uleb128 0x49
 4578 02d1 13       		.uleb128 0x13
 4579 02d2 11       		.uleb128 0x11
 4580 02d3 01       		.uleb128 0x1
 4581 02d4 12       		.uleb128 0x12
 4582 02d5 01       		.uleb128 0x1
 4583 02d6 40       		.uleb128 0x40
 4584 02d7 0A       		.uleb128 0xa
 4585 02d8 9742     		.uleb128 0x2117
 4586 02da 0C       		.uleb128 0xc
 4587 02db 00       		.byte	0
 4588 02dc 00       		.byte	0
 4589 02dd 30       		.uleb128 0x30
 4590 02de 1D       		.uleb128 0x1d
ARM GAS  /tmp/cc4130RP.s 			page 107


 4591 02df 01       		.byte	0x1
 4592 02e0 31       		.uleb128 0x31
 4593 02e1 13       		.uleb128 0x13
 4594 02e2 52       		.uleb128 0x52
 4595 02e3 01       		.uleb128 0x1
 4596 02e4 B842     		.uleb128 0x2138
 4597 02e6 0B       		.uleb128 0xb
 4598 02e7 11       		.uleb128 0x11
 4599 02e8 01       		.uleb128 0x1
 4600 02e9 12       		.uleb128 0x12
 4601 02ea 01       		.uleb128 0x1
 4602 02eb 58       		.uleb128 0x58
 4603 02ec 0B       		.uleb128 0xb
 4604 02ed 59       		.uleb128 0x59
 4605 02ee 05       		.uleb128 0x5
 4606 02ef 57       		.uleb128 0x57
 4607 02f0 0B       		.uleb128 0xb
 4608 02f1 01       		.uleb128 0x1
 4609 02f2 13       		.uleb128 0x13
 4610 02f3 00       		.byte	0
 4611 02f4 00       		.byte	0
 4612 02f5 31       		.uleb128 0x31
 4613 02f6 2E       		.uleb128 0x2e
 4614 02f7 01       		.byte	0x1
 4615 02f8 3F       		.uleb128 0x3f
 4616 02f9 0C       		.uleb128 0xc
 4617 02fa 03       		.uleb128 0x3
 4618 02fb 0E       		.uleb128 0xe
 4619 02fc 3A       		.uleb128 0x3a
 4620 02fd 0B       		.uleb128 0xb
 4621 02fe 3B       		.uleb128 0x3b
 4622 02ff 0B       		.uleb128 0xb
 4623 0300 39       		.uleb128 0x39
 4624 0301 0B       		.uleb128 0xb
 4625 0302 27       		.uleb128 0x27
 4626 0303 0C       		.uleb128 0xc
 4627 0304 49       		.uleb128 0x49
 4628 0305 13       		.uleb128 0x13
 4629 0306 11       		.uleb128 0x11
 4630 0307 01       		.uleb128 0x1
 4631 0308 12       		.uleb128 0x12
 4632 0309 01       		.uleb128 0x1
 4633 030a 40       		.uleb128 0x40
 4634 030b 06       		.uleb128 0x6
 4635 030c 9742     		.uleb128 0x2117
 4636 030e 0C       		.uleb128 0xc
 4637 030f 01       		.uleb128 0x1
 4638 0310 13       		.uleb128 0x13
 4639 0311 00       		.byte	0
 4640 0312 00       		.byte	0
 4641 0313 32       		.uleb128 0x32
 4642 0314 34       		.uleb128 0x34
 4643 0315 00       		.byte	0
 4644 0316 03       		.uleb128 0x3
 4645 0317 0E       		.uleb128 0xe
 4646 0318 3A       		.uleb128 0x3a
 4647 0319 0B       		.uleb128 0xb
ARM GAS  /tmp/cc4130RP.s 			page 108


 4648 031a 3B       		.uleb128 0x3b
 4649 031b 0B       		.uleb128 0xb
 4650 031c 39       		.uleb128 0x39
 4651 031d 0B       		.uleb128 0xb
 4652 031e 49       		.uleb128 0x49
 4653 031f 13       		.uleb128 0x13
 4654 0320 02       		.uleb128 0x2
 4655 0321 06       		.uleb128 0x6
 4656 0322 B742     		.uleb128 0x2137
 4657 0324 06       		.uleb128 0x6
 4658 0325 00       		.byte	0
 4659 0326 00       		.byte	0
 4660 0327 33       		.uleb128 0x33
 4661 0328 2E       		.uleb128 0x2e
 4662 0329 01       		.byte	0x1
 4663 032a 31       		.uleb128 0x31
 4664 032b 13       		.uleb128 0x13
 4665 032c 11       		.uleb128 0x11
 4666 032d 01       		.uleb128 0x1
 4667 032e 12       		.uleb128 0x12
 4668 032f 01       		.uleb128 0x1
 4669 0330 40       		.uleb128 0x40
 4670 0331 06       		.uleb128 0x6
 4671 0332 9742     		.uleb128 0x2117
 4672 0334 0C       		.uleb128 0xc
 4673 0335 01       		.uleb128 0x1
 4674 0336 13       		.uleb128 0x13
 4675 0337 00       		.byte	0
 4676 0338 00       		.byte	0
 4677 0339 34       		.uleb128 0x34
 4678 033a 2E       		.uleb128 0x2e
 4679 033b 00       		.byte	0
 4680 033c 3F       		.uleb128 0x3f
 4681 033d 0C       		.uleb128 0xc
 4682 033e 3C       		.uleb128 0x3c
 4683 033f 0C       		.uleb128 0xc
 4684 0340 8740     		.uleb128 0x2007
 4685 0342 0E       		.uleb128 0xe
 4686 0343 03       		.uleb128 0x3
 4687 0344 0E       		.uleb128 0xe
 4688 0345 3A       		.uleb128 0x3a
 4689 0346 0B       		.uleb128 0xb
 4690 0347 3B       		.uleb128 0x3b
 4691 0348 0B       		.uleb128 0xb
 4692 0349 39       		.uleb128 0x39
 4693 034a 0B       		.uleb128 0xb
 4694 034b 00       		.byte	0
 4695 034c 00       		.byte	0
 4696 034d 35       		.uleb128 0x35
 4697 034e 2E       		.uleb128 0x2e
 4698 034f 00       		.byte	0
 4699 0350 3F       		.uleb128 0x3f
 4700 0351 0C       		.uleb128 0xc
 4701 0352 3C       		.uleb128 0x3c
 4702 0353 0C       		.uleb128 0xc
 4703 0354 8740     		.uleb128 0x2007
 4704 0356 0E       		.uleb128 0xe
ARM GAS  /tmp/cc4130RP.s 			page 109


 4705 0357 03       		.uleb128 0x3
 4706 0358 0E       		.uleb128 0xe
 4707 0359 3A       		.uleb128 0x3a
 4708 035a 0B       		.uleb128 0xb
 4709 035b 3B       		.uleb128 0x3b
 4710 035c 05       		.uleb128 0x5
 4711 035d 39       		.uleb128 0x39
 4712 035e 0B       		.uleb128 0xb
 4713 035f 00       		.byte	0
 4714 0360 00       		.byte	0
 4715 0361 00       		.byte	0
 4716              		.section	.debug_loc,"",%progbits
 4717              	.Ldebug_loc0:
 4718              	.LVUS76:
 4719 0000 00       		.uleb128 0
 4720 0001 00       		.uleb128 .LVU403
 4721 0002 00       		.uleb128 .LVU403
 4722 0003 00       		.uleb128 0
 4723              	.LLST76:
 4724 0004 AC030000 		.4byte	.LVL120-.Ltext0
 4725 0008 AE030000 		.4byte	.LVL121-.Ltext0
 4726 000c 0100     		.2byte	0x1
 4727 000e 50       		.byte	0x50
 4728 000f AE030000 		.4byte	.LVL121-.Ltext0
 4729 0013 B0030000 		.4byte	.LFE26-.Ltext0
 4730 0017 0400     		.2byte	0x4
 4731 0019 F3       		.byte	0xf3
 4732 001a 01       		.uleb128 0x1
 4733 001b 50       		.byte	0x50
 4734 001c 9F       		.byte	0x9f
 4735 001d 00000000 		.4byte	0
 4736 0021 00000000 		.4byte	0
 4737              	.LLST72:
 4738 0025 98030000 		.4byte	.LFB25-.Ltext0
 4739 0029 9A030000 		.4byte	.LCFI19-.Ltext0
 4740 002d 0200     		.2byte	0x2
 4741 002f 7D       		.byte	0x7d
 4742 0030 00       		.sleb128 0
 4743 0031 9A030000 		.4byte	.LCFI19-.Ltext0
 4744 0035 A8030000 		.4byte	.LCFI20-.Ltext0
 4745 0039 0200     		.2byte	0x2
 4746 003b 7D       		.byte	0x7d
 4747 003c 10       		.sleb128 16
 4748 003d A8030000 		.4byte	.LCFI20-.Ltext0
 4749 0041 AC030000 		.4byte	.LFE25-.Ltext0
 4750 0045 0200     		.2byte	0x2
 4751 0047 7D       		.byte	0x7d
 4752 0048 00       		.sleb128 0
 4753 0049 00000000 		.4byte	0
 4754 004d 00000000 		.4byte	0
 4755              	.LVUS73:
 4756 0051 00       		.uleb128 0
 4757 0052 00       		.uleb128 .LVU394
 4758 0053 00       		.uleb128 .LVU394
 4759 0054 00       		.uleb128 .LVU398
 4760 0055 00       		.uleb128 .LVU398
 4761 0056 00       		.uleb128 0
ARM GAS  /tmp/cc4130RP.s 			page 110


 4762              	.LLST73:
 4763 0057 98030000 		.4byte	.LVL115-.Ltext0
 4764 005b A1030000 		.4byte	.LVL117-1-.Ltext0
 4765 005f 0100     		.2byte	0x1
 4766 0061 50       		.byte	0x50
 4767 0062 A1030000 		.4byte	.LVL117-1-.Ltext0
 4768 0066 A8030000 		.4byte	.LVL118-.Ltext0
 4769 006a 0100     		.2byte	0x1
 4770 006c 54       		.byte	0x54
 4771 006d A8030000 		.4byte	.LVL118-.Ltext0
 4772 0071 AC030000 		.4byte	.LFE25-.Ltext0
 4773 0075 0400     		.2byte	0x4
 4774 0077 F3       		.byte	0xf3
 4775 0078 01       		.uleb128 0x1
 4776 0079 50       		.byte	0x50
 4777 007a 9F       		.byte	0x9f
 4778 007b 00000000 		.4byte	0
 4779 007f 00000000 		.4byte	0
 4780              	.LVUS74:
 4781 0083 00       		.uleb128 0
 4782 0084 00       		.uleb128 .LVU394
 4783 0085 00       		.uleb128 .LVU394
 4784 0086 00       		.uleb128 .LVU398
 4785 0087 00       		.uleb128 .LVU398
 4786 0088 00       		.uleb128 .LVU399
 4787 0089 00       		.uleb128 .LVU399
 4788 008a 00       		.uleb128 0
 4789              	.LLST74:
 4790 008b 98030000 		.4byte	.LVL115-.Ltext0
 4791 008f A1030000 		.4byte	.LVL117-1-.Ltext0
 4792 0093 0100     		.2byte	0x1
 4793 0095 51       		.byte	0x51
 4794 0096 A1030000 		.4byte	.LVL117-1-.Ltext0
 4795 009a A8030000 		.4byte	.LVL118-.Ltext0
 4796 009e 0100     		.2byte	0x1
 4797 00a0 55       		.byte	0x55
 4798 00a1 A8030000 		.4byte	.LVL118-.Ltext0
 4799 00a5 AB030000 		.4byte	.LVL119-1-.Ltext0
 4800 00a9 0500     		.2byte	0x5
 4801 00ab F3       		.byte	0xf3
 4802 00ac 01       		.uleb128 0x1
 4803 00ad 50       		.byte	0x50
 4804 00ae 23       		.byte	0x23
 4805 00af 1C       		.uleb128 0x1c
 4806 00b0 AB030000 		.4byte	.LVL119-1-.Ltext0
 4807 00b4 AC030000 		.4byte	.LFE25-.Ltext0
 4808 00b8 0400     		.2byte	0x4
 4809 00ba F3       		.byte	0xf3
 4810 00bb 01       		.uleb128 0x1
 4811 00bc 51       		.byte	0x51
 4812 00bd 9F       		.byte	0x9f
 4813 00be 00000000 		.4byte	0
 4814 00c2 00000000 		.4byte	0
 4815              	.LVUS75:
 4816 00c6 00       		.uleb128 .LVU390
 4817 00c7 00       		.uleb128 .LVU394
 4818 00c8 00       		.uleb128 .LVU394
ARM GAS  /tmp/cc4130RP.s 			page 111


 4819 00c9 00       		.uleb128 .LVU398
 4820 00ca 00       		.uleb128 .LVU398
 4821 00cb 00       		.uleb128 0
 4822              	.LLST75:
 4823 00cc 9C030000 		.4byte	.LVL116-.Ltext0
 4824 00d0 A1030000 		.4byte	.LVL117-1-.Ltext0
 4825 00d4 0100     		.2byte	0x1
 4826 00d6 50       		.byte	0x50
 4827 00d7 A1030000 		.4byte	.LVL117-1-.Ltext0
 4828 00db A8030000 		.4byte	.LVL118-.Ltext0
 4829 00df 0100     		.2byte	0x1
 4830 00e1 54       		.byte	0x54
 4831 00e2 A8030000 		.4byte	.LVL118-.Ltext0
 4832 00e6 AC030000 		.4byte	.LFE25-.Ltext0
 4833 00ea 0400     		.2byte	0x4
 4834 00ec F3       		.byte	0xf3
 4835 00ed 01       		.uleb128 0x1
 4836 00ee 50       		.byte	0x50
 4837 00ef 9F       		.byte	0x9f
 4838 00f0 00000000 		.4byte	0
 4839 00f4 00000000 		.4byte	0
 4840              	.LLST68:
 4841 00f8 86030000 		.4byte	.LFB24-.Ltext0
 4842 00fc 88030000 		.4byte	.LCFI18-.Ltext0
 4843 0100 0200     		.2byte	0x2
 4844 0102 7D       		.byte	0x7d
 4845 0103 00       		.sleb128 0
 4846 0104 88030000 		.4byte	.LCFI18-.Ltext0
 4847 0108 98030000 		.4byte	.LFE24-.Ltext0
 4848 010c 0200     		.2byte	0x2
 4849 010e 7D       		.byte	0x7d
 4850 010f 08       		.sleb128 8
 4851 0110 00000000 		.4byte	0
 4852 0114 00000000 		.4byte	0
 4853              	.LVUS69:
 4854 0118 00       		.uleb128 0
 4855 0119 00       		.uleb128 .LVU380
 4856 011a 00       		.uleb128 .LVU380
 4857 011b 00       		.uleb128 .LVU382
 4858 011c 00       		.uleb128 .LVU382
 4859 011d 00       		.uleb128 0
 4860              	.LLST69:
 4861 011e 86030000 		.4byte	.LVL110-.Ltext0
 4862 0122 8D030000 		.4byte	.LVL112-1-.Ltext0
 4863 0126 0100     		.2byte	0x1
 4864 0128 50       		.byte	0x50
 4865 0129 8D030000 		.4byte	.LVL112-1-.Ltext0
 4866 012d 90030000 		.4byte	.LVL113-.Ltext0
 4867 0131 0100     		.2byte	0x1
 4868 0133 54       		.byte	0x54
 4869 0134 90030000 		.4byte	.LVL113-.Ltext0
 4870 0138 98030000 		.4byte	.LFE24-.Ltext0
 4871 013c 0400     		.2byte	0x4
 4872 013e F3       		.byte	0xf3
 4873 013f 01       		.uleb128 0x1
 4874 0140 50       		.byte	0x50
 4875 0141 9F       		.byte	0x9f
ARM GAS  /tmp/cc4130RP.s 			page 112


 4876 0142 00000000 		.4byte	0
 4877 0146 00000000 		.4byte	0
 4878              	.LVUS70:
 4879 014a 00       		.uleb128 .LVU377
 4880 014b 00       		.uleb128 .LVU380
 4881 014c 00       		.uleb128 .LVU380
 4882 014d 00       		.uleb128 .LVU382
 4883 014e 00       		.uleb128 .LVU382
 4884 014f 00       		.uleb128 0
 4885              	.LLST70:
 4886 0150 8A030000 		.4byte	.LVL111-.Ltext0
 4887 0154 8D030000 		.4byte	.LVL112-1-.Ltext0
 4888 0158 0100     		.2byte	0x1
 4889 015a 50       		.byte	0x50
 4890 015b 8D030000 		.4byte	.LVL112-1-.Ltext0
 4891 015f 90030000 		.4byte	.LVL113-.Ltext0
 4892 0163 0100     		.2byte	0x1
 4893 0165 54       		.byte	0x54
 4894 0166 90030000 		.4byte	.LVL113-.Ltext0
 4895 016a 98030000 		.4byte	.LFE24-.Ltext0
 4896 016e 0400     		.2byte	0x4
 4897 0170 F3       		.byte	0xf3
 4898 0171 01       		.uleb128 0x1
 4899 0172 50       		.byte	0x50
 4900 0173 9F       		.byte	0x9f
 4901 0174 00000000 		.4byte	0
 4902 0178 00000000 		.4byte	0
 4903              	.LVUS71:
 4904 017c 00       		.uleb128 .LVU382
 4905 017d 00       		.uleb128 0
 4906              	.LLST71:
 4907 017e 90030000 		.4byte	.LVL113-.Ltext0
 4908 0182 98030000 		.4byte	.LFE24-.Ltext0
 4909 0186 0100     		.2byte	0x1
 4910 0188 54       		.byte	0x54
 4911 0189 00000000 		.4byte	0
 4912 018d 00000000 		.4byte	0
 4913              	.LLST64:
 4914 0191 6E030000 		.4byte	.LFB23-.Ltext0
 4915 0195 70030000 		.4byte	.LCFI17-.Ltext0
 4916 0199 0200     		.2byte	0x2
 4917 019b 7D       		.byte	0x7d
 4918 019c 00       		.sleb128 0
 4919 019d 70030000 		.4byte	.LCFI17-.Ltext0
 4920 01a1 86030000 		.4byte	.LFE23-.Ltext0
 4921 01a5 0200     		.2byte	0x2
 4922 01a7 7D       		.byte	0x7d
 4923 01a8 08       		.sleb128 8
 4924 01a9 00000000 		.4byte	0
 4925 01ad 00000000 		.4byte	0
 4926              	.LVUS65:
 4927 01b1 00       		.uleb128 0
 4928 01b2 00       		.uleb128 .LVU365
 4929 01b3 00       		.uleb128 .LVU365
 4930 01b4 00       		.uleb128 .LVU367
 4931 01b5 00       		.uleb128 .LVU367
 4932 01b6 00       		.uleb128 0
ARM GAS  /tmp/cc4130RP.s 			page 113


 4933              	.LLST65:
 4934 01b7 6E030000 		.4byte	.LVL104-.Ltext0
 4935 01bb 75030000 		.4byte	.LVL106-1-.Ltext0
 4936 01bf 0100     		.2byte	0x1
 4937 01c1 50       		.byte	0x50
 4938 01c2 75030000 		.4byte	.LVL106-1-.Ltext0
 4939 01c6 7A030000 		.4byte	.LVL107-.Ltext0
 4940 01ca 0100     		.2byte	0x1
 4941 01cc 54       		.byte	0x54
 4942 01cd 7A030000 		.4byte	.LVL107-.Ltext0
 4943 01d1 86030000 		.4byte	.LFE23-.Ltext0
 4944 01d5 0400     		.2byte	0x4
 4945 01d7 F3       		.byte	0xf3
 4946 01d8 01       		.uleb128 0x1
 4947 01d9 50       		.byte	0x50
 4948 01da 9F       		.byte	0x9f
 4949 01db 00000000 		.4byte	0
 4950 01df 00000000 		.4byte	0
 4951              	.LVUS66:
 4952 01e3 00       		.uleb128 .LVU369
 4953 01e4 00       		.uleb128 0
 4954              	.LLST66:
 4955 01e5 82030000 		.4byte	.LVL109-.Ltext0
 4956 01e9 86030000 		.4byte	.LFE23-.Ltext0
 4957 01ed 0100     		.2byte	0x1
 4958 01ef 54       		.byte	0x54
 4959 01f0 00000000 		.4byte	0
 4960 01f4 00000000 		.4byte	0
 4961              	.LVUS67:
 4962 01f8 00       		.uleb128 .LVU363
 4963 01f9 00       		.uleb128 .LVU365
 4964 01fa 00       		.uleb128 .LVU365
 4965 01fb 00       		.uleb128 .LVU367
 4966 01fc 00       		.uleb128 .LVU367
 4967 01fd 00       		.uleb128 0
 4968              	.LLST67:
 4969 01fe 72030000 		.4byte	.LVL105-.Ltext0
 4970 0202 75030000 		.4byte	.LVL106-1-.Ltext0
 4971 0206 0100     		.2byte	0x1
 4972 0208 50       		.byte	0x50
 4973 0209 75030000 		.4byte	.LVL106-1-.Ltext0
 4974 020d 7A030000 		.4byte	.LVL107-.Ltext0
 4975 0211 0100     		.2byte	0x1
 4976 0213 54       		.byte	0x54
 4977 0214 7A030000 		.4byte	.LVL107-.Ltext0
 4978 0218 86030000 		.4byte	.LFE23-.Ltext0
 4979 021c 0400     		.2byte	0x4
 4980 021e F3       		.byte	0xf3
 4981 021f 01       		.uleb128 0x1
 4982 0220 50       		.byte	0x50
 4983 0221 9F       		.byte	0x9f
 4984 0222 00000000 		.4byte	0
 4985 0226 00000000 		.4byte	0
 4986              	.LLST0:
 4987 022a 00000000 		.4byte	.LFB22-.Ltext0
 4988 022e 02000000 		.4byte	.LCFI0-.Ltext0
 4989 0232 0200     		.2byte	0x2
ARM GAS  /tmp/cc4130RP.s 			page 114


 4990 0234 7D       		.byte	0x7d
 4991 0235 00       		.sleb128 0
 4992 0236 02000000 		.4byte	.LCFI0-.Ltext0
 4993 023a 32000000 		.4byte	.LCFI1-.Ltext0
 4994 023e 0200     		.2byte	0x2
 4995 0240 7D       		.byte	0x7d
 4996 0241 18       		.sleb128 24
 4997 0242 32000000 		.4byte	.LCFI1-.Ltext0
 4998 0246 3C000000 		.4byte	.LFE22-.Ltext0
 4999 024a 0200     		.2byte	0x2
 5000 024c 7D       		.byte	0x7d
 5001 024d 00       		.sleb128 0
 5002 024e 00000000 		.4byte	0
 5003 0252 00000000 		.4byte	0
 5004              	.LLST32:
 5005 0256 30010000 		.4byte	.LFB18-.Ltext0
 5006 025a 34010000 		.4byte	.LCFI9-.Ltext0
 5007 025e 0200     		.2byte	0x2
 5008 0260 7D       		.byte	0x7d
 5009 0261 00       		.sleb128 0
 5010 0262 34010000 		.4byte	.LCFI9-.Ltext0
 5011 0266 5E010000 		.4byte	.LCFI10-.Ltext0
 5012 026a 0200     		.2byte	0x2
 5013 026c 7D       		.byte	0x7d
 5014 026d 28       		.sleb128 40
 5015 026e 5E010000 		.4byte	.LCFI10-.Ltext0
 5016 0272 62010000 		.4byte	.LCFI11-.Ltext0
 5017 0276 0200     		.2byte	0x2
 5018 0278 7D       		.byte	0x7d
 5019 0279 20       		.sleb128 32
 5020 027a 62010000 		.4byte	.LCFI11-.Ltext0
 5021 027e B4010000 		.4byte	.LFE18-.Ltext0
 5022 0282 0200     		.2byte	0x2
 5023 0284 7D       		.byte	0x7d
 5024 0285 28       		.sleb128 40
 5025 0286 00000000 		.4byte	0
 5026 028a 00000000 		.4byte	0
 5027              	.LVUS33:
 5028 028e 00       		.uleb128 0
 5029 028f 00       		.uleb128 .LVU134
 5030 0290 00       		.uleb128 .LVU134
 5031 0291 00       		.uleb128 0
 5032              	.LLST33:
 5033 0292 30010000 		.4byte	.LVL37-.Ltext0
 5034 0296 39010000 		.4byte	.LVL38-1-.Ltext0
 5035 029a 0100     		.2byte	0x1
 5036 029c 50       		.byte	0x50
 5037 029d 39010000 		.4byte	.LVL38-1-.Ltext0
 5038 02a1 B4010000 		.4byte	.LFE18-.Ltext0
 5039 02a5 0100     		.2byte	0x1
 5040 02a7 57       		.byte	0x57
 5041 02a8 00000000 		.4byte	0
 5042 02ac 00000000 		.4byte	0
 5043              	.LVUS34:
 5044 02b0 00       		.uleb128 .LVU136
 5045 02b1 00       		.uleb128 .LVU139
 5046 02b2 00       		.uleb128 .LVU139
ARM GAS  /tmp/cc4130RP.s 			page 115


 5047 02b3 00       		.uleb128 .LVU180
 5048 02b4 00       		.uleb128 .LVU180
 5049 02b5 00       		.uleb128 0
 5050              	.LLST34:
 5051 02b6 3E010000 		.4byte	.LVL39-.Ltext0
 5052 02ba 48010000 		.4byte	.LVL40-.Ltext0
 5053 02be 0100     		.2byte	0x1
 5054 02c0 50       		.byte	0x50
 5055 02c1 48010000 		.4byte	.LVL40-.Ltext0
 5056 02c5 AA010000 		.4byte	.LVL53-.Ltext0
 5057 02c9 0100     		.2byte	0x1
 5058 02cb 56       		.byte	0x56
 5059 02cc AA010000 		.4byte	.LVL53-.Ltext0
 5060 02d0 B4010000 		.4byte	.LFE18-.Ltext0
 5061 02d4 0100     		.2byte	0x1
 5062 02d6 50       		.byte	0x50
 5063 02d7 00000000 		.4byte	0
 5064 02db 00000000 		.4byte	0
 5065              	.LVUS35:
 5066 02df 00       		.uleb128 .LVU159
 5067 02e0 00       		.uleb128 .LVU180
 5068              	.LLST35:
 5069 02e1 6A010000 		.4byte	.LVL44-.Ltext0
 5070 02e5 AA010000 		.4byte	.LVL53-.Ltext0
 5071 02e9 0100     		.2byte	0x1
 5072 02eb 59       		.byte	0x59
 5073 02ec 00000000 		.4byte	0
 5074 02f0 00000000 		.4byte	0
 5075              	.LVUS36:
 5076 02f4 00       		.uleb128 .LVU168
 5077 02f5 00       		.uleb128 .LVU175
 5078 02f6 00       		.uleb128 .LVU176
 5079 02f7 00       		.uleb128 .LVU178
 5080 02f8 00       		.uleb128 .LVU178
 5081 02f9 00       		.uleb128 .LVU179
 5082              	.LLST36:
 5083 02fa 86010000 		.4byte	.LVL47-.Ltext0
 5084 02fe 95010000 		.4byte	.LVL48-1-.Ltext0
 5085 0302 0100     		.2byte	0x1
 5086 0304 53       		.byte	0x53
 5087 0305 98010000 		.4byte	.LVL49-.Ltext0
 5088 0309 9A010000 		.4byte	.LVL50-.Ltext0
 5089 030d 0100     		.2byte	0x1
 5090 030f 53       		.byte	0x53
 5091 0310 9A010000 		.4byte	.LVL50-.Ltext0
 5092 0314 A4010000 		.4byte	.LVL51-.Ltext0
 5093 0318 0700     		.2byte	0x7
 5094 031a 74       		.byte	0x74
 5095 031b 18       		.sleb128 24
 5096 031c 06       		.byte	0x6
 5097 031d 79       		.byte	0x79
 5098 031e 00       		.sleb128 0
 5099 031f 22       		.byte	0x22
 5100 0320 9F       		.byte	0x9f
 5101 0321 00000000 		.4byte	0
 5102 0325 00000000 		.4byte	0
 5103              	.LVUS37:
ARM GAS  /tmp/cc4130RP.s 			page 116


 5104 0329 01       		.uleb128 .LVU144
 5105 032a 00       		.uleb128 .LVU149
 5106              	.LLST37:
 5107 032b 4E010000 		.4byte	.LVL41-.Ltext0
 5108 032f 56010000 		.4byte	.LVL42-.Ltext0
 5109 0333 0100     		.2byte	0x1
 5110 0335 53       		.byte	0x53
 5111 0336 00000000 		.4byte	0
 5112 033a 00000000 		.4byte	0
 5113              	.LVUS38:
 5114 033e 01       		.uleb128 .LVU160
 5115 033f 00       		.uleb128 .LVU180
 5116              	.LLST38:
 5117 0340 6A010000 		.4byte	.LVL44-.Ltext0
 5118 0344 AA010000 		.4byte	.LVL53-.Ltext0
 5119 0348 0100     		.2byte	0x1
 5120 034a 54       		.byte	0x54
 5121 034b 00000000 		.4byte	0
 5122 034f 00000000 		.4byte	0
 5123              	.LLST39:
 5124 0353 B4010000 		.4byte	.LFB15-.Ltext0
 5125 0357 B8010000 		.4byte	.LCFI12-.Ltext0
 5126 035b 0200     		.2byte	0x2
 5127 035d 7D       		.byte	0x7d
 5128 035e 00       		.sleb128 0
 5129 035f B8010000 		.4byte	.LCFI12-.Ltext0
 5130 0363 BE010000 		.4byte	.LCFI13-.Ltext0
 5131 0367 0200     		.2byte	0x2
 5132 0369 7D       		.byte	0x7d
 5133 036a 1C       		.sleb128 28
 5134 036b BE010000 		.4byte	.LCFI13-.Ltext0
 5135 036f 30030000 		.4byte	.LFE15-.Ltext0
 5136 0373 0200     		.2byte	0x2
 5137 0375 7D       		.byte	0x7d
 5138 0376 38       		.sleb128 56
 5139 0377 00000000 		.4byte	0
 5140 037b 00000000 		.4byte	0
 5141              	.LVUS40:
 5142 037f 00       		.uleb128 0
 5143 0380 00       		.uleb128 .LVU187
 5144 0381 00       		.uleb128 .LVU187
 5145 0382 00       		.uleb128 0
 5146              	.LLST40:
 5147 0383 B4010000 		.4byte	.LVL54-.Ltext0
 5148 0387 BE010000 		.4byte	.LVL55-.Ltext0
 5149 038b 0100     		.2byte	0x1
 5150 038d 50       		.byte	0x50
 5151 038e BE010000 		.4byte	.LVL55-.Ltext0
 5152 0392 30030000 		.4byte	.LFE15-.Ltext0
 5153 0396 0400     		.2byte	0x4
 5154 0398 F3       		.byte	0xf3
 5155 0399 01       		.uleb128 0x1
 5156 039a 50       		.byte	0x50
 5157 039b 9F       		.byte	0x9f
 5158 039c 00000000 		.4byte	0
 5159 03a0 00000000 		.4byte	0
 5160              	.LVUS41:
ARM GAS  /tmp/cc4130RP.s 			page 117


 5161 03a4 01       		.uleb128 .LVU201
 5162 03a5 00       		.uleb128 .LVU258
 5163 03a6 00       		.uleb128 .LVU260
 5164 03a7 00       		.uleb128 0
 5165              	.LLST41:
 5166 03a8 D2010000 		.4byte	.LVL57-.Ltext0
 5167 03ac 6C020000 		.4byte	.LVL72-.Ltext0
 5168 03b0 0100     		.2byte	0x1
 5169 03b2 58       		.byte	0x58
 5170 03b3 70020000 		.4byte	.LVL73-.Ltext0
 5171 03b7 30030000 		.4byte	.LFE15-.Ltext0
 5172 03bb 0100     		.2byte	0x1
 5173 03bd 58       		.byte	0x58
 5174 03be 00000000 		.4byte	0
 5175 03c2 00000000 		.4byte	0
 5176              	.LVUS42:
 5177 03c6 00       		.uleb128 .LVU196
 5178 03c7 00       		.uleb128 .LVU200
 5179              	.LLST42:
 5180 03c8 CA010000 		.4byte	.LVL56-.Ltext0
 5181 03cc D2010000 		.4byte	.LVL57-.Ltext0
 5182 03d0 0200     		.2byte	0x2
 5183 03d2 30       		.byte	0x30
 5184 03d3 9F       		.byte	0x9f
 5185 03d4 00000000 		.4byte	0
 5186 03d8 00000000 		.4byte	0
 5187              	.LVUS43:
 5188 03dc 05       		.uleb128 .LVU192
 5189 03dd 01       		.uleb128 .LVU201
 5190 03de 00       		.uleb128 .LVU258
 5191 03df 00       		.uleb128 .LVU260
 5192              	.LLST43:
 5193 03e0 BE010000 		.4byte	.LVL55-.Ltext0
 5194 03e4 D2010000 		.4byte	.LVL57-.Ltext0
 5195 03e8 0600     		.2byte	0x6
 5196 03ea F2       		.byte	0xf2
 5197 03eb FA080000 		.4byte	.Ldebug_info0+2298
 5198 03ef 00       		.sleb128 0
 5199 03f0 6C020000 		.4byte	.LVL72-.Ltext0
 5200 03f4 70020000 		.4byte	.LVL73-.Ltext0
 5201 03f8 0600     		.2byte	0x6
 5202 03fa F2       		.byte	0xf2
 5203 03fb FA080000 		.4byte	.Ldebug_info0+2298
 5204 03ff 00       		.sleb128 0
 5205 0400 00000000 		.4byte	0
 5206 0404 00000000 		.4byte	0
 5207              	.LVUS44:
 5208 0408 00       		.uleb128 .LVU200
 5209 0409 01       		.uleb128 .LVU201
 5210              	.LLST44:
 5211 040a D2010000 		.4byte	.LVL57-.Ltext0
 5212 040e D2010000 		.4byte	.LVL57-.Ltext0
 5213 0412 0100     		.2byte	0x1
 5214 0414 58       		.byte	0x58
 5215 0415 00000000 		.4byte	0
 5216 0419 00000000 		.4byte	0
 5217              	.LVUS45:
ARM GAS  /tmp/cc4130RP.s 			page 118


 5218 041d 03       		.uleb128 .LVU203
 5219 041e 00       		.uleb128 .LVU239
 5220 041f 00       		.uleb128 .LVU260
 5221 0420 00       		.uleb128 .LVU267
 5222 0421 00       		.uleb128 .LVU268
 5223 0422 00       		.uleb128 .LVU280
 5224              	.LLST45:
 5225 0423 D2010000 		.4byte	.LVL57-.Ltext0
 5226 0427 30020000 		.4byte	.LVL66-.Ltext0
 5227 042b 0100     		.2byte	0x1
 5228 042d 54       		.byte	0x54
 5229 042e 70020000 		.4byte	.LVL73-.Ltext0
 5230 0432 7E020000 		.4byte	.LVL75-.Ltext0
 5231 0436 0100     		.2byte	0x1
 5232 0438 54       		.byte	0x54
 5233 0439 84020000 		.4byte	.LVL76-.Ltext0
 5234 043d B4020000 		.4byte	.LVL82-.Ltext0
 5235 0441 0100     		.2byte	0x1
 5236 0443 54       		.byte	0x54
 5237 0444 00000000 		.4byte	0
 5238 0448 00000000 		.4byte	0
 5239              	.LVUS46:
 5240 044c 03       		.uleb128 .LVU203
 5241 044d 00       		.uleb128 .LVU258
 5242 044e 00       		.uleb128 .LVU260
 5243 044f 00       		.uleb128 0
 5244              	.LLST46:
 5245 0450 D2010000 		.4byte	.LVL57-.Ltext0
 5246 0454 6C020000 		.4byte	.LVL72-.Ltext0
 5247 0458 0100     		.2byte	0x1
 5248 045a 58       		.byte	0x58
 5249 045b 70020000 		.4byte	.LVL73-.Ltext0
 5250 045f 30030000 		.4byte	.LFE15-.Ltext0
 5251 0463 0100     		.2byte	0x1
 5252 0465 58       		.byte	0x58
 5253 0466 00000000 		.4byte	0
 5254 046a 00000000 		.4byte	0
 5255              	.LVUS47:
 5256 046e 00       		.uleb128 .LVU211
 5257 046f 00       		.uleb128 .LVU218
 5258 0470 00       		.uleb128 .LVU218
 5259 0471 00       		.uleb128 .LVU258
 5260 0472 00       		.uleb128 .LVU260
 5261 0473 00       		.uleb128 .LVU263
 5262 0474 00       		.uleb128 .LVU263
 5263 0475 00       		.uleb128 .LVU269
 5264 0476 00       		.uleb128 .LVU269
 5265 0477 00       		.uleb128 .LVU277
 5266 0478 00       		.uleb128 .LVU277
 5267 0479 00       		.uleb128 .LVU279
 5268 047a 00       		.uleb128 .LVU279
 5269 047b 00       		.uleb128 0
 5270              	.LLST47:
 5271 047c E0010000 		.4byte	.LVL60-.Ltext0
 5272 0480 EF010000 		.4byte	.LVL61-1-.Ltext0
 5273 0484 0100     		.2byte	0x1
 5274 0486 50       		.byte	0x50
ARM GAS  /tmp/cc4130RP.s 			page 119


 5275 0487 EF010000 		.4byte	.LVL61-1-.Ltext0
 5276 048b 6C020000 		.4byte	.LVL72-.Ltext0
 5277 048f 0100     		.2byte	0x1
 5278 0491 56       		.byte	0x56
 5279 0492 70020000 		.4byte	.LVL73-.Ltext0
 5280 0496 7A020000 		.4byte	.LVL74-.Ltext0
 5281 049a 0100     		.2byte	0x1
 5282 049c 56       		.byte	0x56
 5283 049d 7A020000 		.4byte	.LVL74-.Ltext0
 5284 04a1 88020000 		.4byte	.LVL77-.Ltext0
 5285 04a5 0100     		.2byte	0x1
 5286 04a7 50       		.byte	0x50
 5287 04a8 88020000 		.4byte	.LVL77-.Ltext0
 5288 04ac AE020000 		.4byte	.LVL80-.Ltext0
 5289 04b0 0100     		.2byte	0x1
 5290 04b2 56       		.byte	0x56
 5291 04b3 AE020000 		.4byte	.LVL80-.Ltext0
 5292 04b7 B1020000 		.4byte	.LVL81-1-.Ltext0
 5293 04bb 0100     		.2byte	0x1
 5294 04bd 50       		.byte	0x50
 5295 04be B1020000 		.4byte	.LVL81-1-.Ltext0
 5296 04c2 30030000 		.4byte	.LFE15-.Ltext0
 5297 04c6 0100     		.2byte	0x1
 5298 04c8 56       		.byte	0x56
 5299 04c9 00000000 		.4byte	0
 5300 04cd 00000000 		.4byte	0
 5301              	.LVUS48:
 5302 04d1 01       		.uleb128 .LVU219
 5303 04d2 00       		.uleb128 .LVU239
 5304 04d3 00       		.uleb128 .LVU260
 5305 04d4 00       		.uleb128 .LVU263
 5306              	.LLST48:
 5307 04d5 F0010000 		.4byte	.LVL61-.Ltext0
 5308 04d9 30020000 		.4byte	.LVL66-.Ltext0
 5309 04dd 0100     		.2byte	0x1
 5310 04df 56       		.byte	0x56
 5311 04e0 70020000 		.4byte	.LVL73-.Ltext0
 5312 04e4 7A020000 		.4byte	.LVL74-.Ltext0
 5313 04e8 0100     		.2byte	0x1
 5314 04ea 56       		.byte	0x56
 5315 04eb 00000000 		.4byte	0
 5316 04ef 00000000 		.4byte	0
 5317              	.LVUS49:
 5318 04f3 01       		.uleb128 .LVU219
 5319 04f4 00       		.uleb128 .LVU239
 5320 04f5 00       		.uleb128 .LVU260
 5321 04f6 00       		.uleb128 .LVU263
 5322              	.LLST49:
 5323 04f7 F0010000 		.4byte	.LVL61-.Ltext0
 5324 04fb 30020000 		.4byte	.LVL66-.Ltext0
 5325 04ff 0100     		.2byte	0x1
 5326 0501 58       		.byte	0x58
 5327 0502 70020000 		.4byte	.LVL73-.Ltext0
 5328 0506 7A020000 		.4byte	.LVL74-.Ltext0
 5329 050a 0100     		.2byte	0x1
 5330 050c 58       		.byte	0x58
 5331 050d 00000000 		.4byte	0
ARM GAS  /tmp/cc4130RP.s 			page 120


 5332 0511 00000000 		.4byte	0
 5333              	.LVUS50:
 5334 0515 00       		.uleb128 .LVU224
 5335 0516 00       		.uleb128 .LVU239
 5336 0517 00       		.uleb128 .LVU260
 5337 0518 00       		.uleb128 .LVU263
 5338              	.LLST50:
 5339 0519 F8010000 		.4byte	.LVL62-.Ltext0
 5340 051d 30020000 		.4byte	.LVL66-.Ltext0
 5341 0521 0100     		.2byte	0x1
 5342 0523 59       		.byte	0x59
 5343 0524 70020000 		.4byte	.LVL73-.Ltext0
 5344 0528 7A020000 		.4byte	.LVL74-.Ltext0
 5345 052c 0100     		.2byte	0x1
 5346 052e 59       		.byte	0x59
 5347 052f 00000000 		.4byte	0
 5348 0533 00000000 		.4byte	0
 5349              	.LVUS51:
 5350 0537 00       		.uleb128 .LVU247
 5351 0538 00       		.uleb128 .LVU258
 5352 0539 00       		.uleb128 .LVU280
 5353 053a 00       		.uleb128 0
 5354              	.LLST51:
 5355 053b 46020000 		.4byte	.LVL68-.Ltext0
 5356 053f 6C020000 		.4byte	.LVL72-.Ltext0
 5357 0543 0100     		.2byte	0x1
 5358 0545 54       		.byte	0x54
 5359 0546 B4020000 		.4byte	.LVL82-.Ltext0
 5360 054a 30030000 		.4byte	.LFE15-.Ltext0
 5361 054e 0100     		.2byte	0x1
 5362 0550 54       		.byte	0x54
 5363 0551 00000000 		.4byte	0
 5364 0555 00000000 		.4byte	0
 5365              	.LVUS52:
 5366 0559 00       		.uleb128 .LVU257
 5367 055a 00       		.uleb128 .LVU258
 5368 055b 00       		.uleb128 .LVU280
 5369 055c 00       		.uleb128 .LVU287
 5370 055d 00       		.uleb128 .LVU287
 5371 055e 00       		.uleb128 .LVU288
 5372 055f 00       		.uleb128 .LVU297
 5373 0560 00       		.uleb128 .LVU310
 5374 0561 00       		.uleb128 .LVU310
 5375 0562 00       		.uleb128 .LVU311
 5376 0563 00       		.uleb128 .LVU312
 5377 0564 00       		.uleb128 .LVU316
 5378              	.LLST52:
 5379 0565 5A020000 		.4byte	.LVL71-.Ltext0
 5380 0569 6C020000 		.4byte	.LVL72-.Ltext0
 5381 056d 0100     		.2byte	0x1
 5382 056f 50       		.byte	0x50
 5383 0570 B4020000 		.4byte	.LVL82-.Ltext0
 5384 0574 C6020000 		.4byte	.LVL83-.Ltext0
 5385 0578 0100     		.2byte	0x1
 5386 057a 50       		.byte	0x50
 5387 057b C6020000 		.4byte	.LVL83-.Ltext0
 5388 057f CB020000 		.4byte	.LVL84-1-.Ltext0
ARM GAS  /tmp/cc4130RP.s 			page 121


 5389 0583 0100     		.2byte	0x1
 5390 0585 52       		.byte	0x52
 5391 0586 F2020000 		.4byte	.LVL87-.Ltext0
 5392 058a 16030000 		.4byte	.LVL88-.Ltext0
 5393 058e 0100     		.2byte	0x1
 5394 0590 50       		.byte	0x50
 5395 0591 16030000 		.4byte	.LVL88-.Ltext0
 5396 0595 19030000 		.4byte	.LVL89-1-.Ltext0
 5397 0599 0100     		.2byte	0x1
 5398 059b 52       		.byte	0x52
 5399 059c 1C030000 		.4byte	.LVL90-.Ltext0
 5400 05a0 26030000 		.4byte	.LVL91-.Ltext0
 5401 05a4 0100     		.2byte	0x1
 5402 05a6 50       		.byte	0x50
 5403 05a7 00000000 		.4byte	0
 5404 05ab 00000000 		.4byte	0
 5405              	.LVUS62:
 5406 05af 00       		.uleb128 0
 5407 05b0 00       		.uleb128 .LVU357
 5408 05b1 00       		.uleb128 .LVU357
 5409 05b2 00       		.uleb128 0
 5410              	.LLST62:
 5411 05b3 6A030000 		.4byte	.LVL102-.Ltext0
 5412 05b7 6C030000 		.4byte	.LVL103-.Ltext0
 5413 05bb 0100     		.2byte	0x1
 5414 05bd 50       		.byte	0x50
 5415 05be 6C030000 		.4byte	.LVL103-.Ltext0
 5416 05c2 6E030000 		.4byte	.LFE13-.Ltext0
 5417 05c6 0400     		.2byte	0x4
 5418 05c8 F3       		.byte	0xf3
 5419 05c9 01       		.uleb128 0x1
 5420 05ca 50       		.byte	0x50
 5421 05cb 9F       		.byte	0x9f
 5422 05cc 00000000 		.4byte	0
 5423 05d0 00000000 		.4byte	0
 5424              	.LVUS63:
 5425 05d4 02       		.uleb128 .LVU354
 5426 05d5 00       		.uleb128 .LVU357
 5427 05d6 00       		.uleb128 .LVU357
 5428 05d7 00       		.uleb128 0
 5429              	.LLST63:
 5430 05d8 6A030000 		.4byte	.LVL102-.Ltext0
 5431 05dc 6C030000 		.4byte	.LVL103-.Ltext0
 5432 05e0 0100     		.2byte	0x1
 5433 05e2 50       		.byte	0x50
 5434 05e3 6C030000 		.4byte	.LVL103-.Ltext0
 5435 05e7 6E030000 		.4byte	.LFE13-.Ltext0
 5436 05eb 0400     		.2byte	0x4
 5437 05ed F3       		.byte	0xf3
 5438 05ee 01       		.uleb128 0x1
 5439 05ef 50       		.byte	0x50
 5440 05f0 9F       		.byte	0x9f
 5441 05f1 00000000 		.4byte	0
 5442 05f5 00000000 		.4byte	0
 5443              	.LVUS59:
 5444 05f9 00       		.uleb128 0
 5445 05fa 00       		.uleb128 .LVU351
ARM GAS  /tmp/cc4130RP.s 			page 122


 5446 05fb 00       		.uleb128 .LVU351
 5447 05fc 00       		.uleb128 0
 5448              	.LLST59:
 5449 05fd 66030000 		.4byte	.LVL100-.Ltext0
 5450 0601 68030000 		.4byte	.LVL101-.Ltext0
 5451 0605 0100     		.2byte	0x1
 5452 0607 50       		.byte	0x50
 5453 0608 68030000 		.4byte	.LVL101-.Ltext0
 5454 060c 6A030000 		.4byte	.LFE12-.Ltext0
 5455 0610 0400     		.2byte	0x4
 5456 0612 F3       		.byte	0xf3
 5457 0613 01       		.uleb128 0x1
 5458 0614 50       		.byte	0x50
 5459 0615 9F       		.byte	0x9f
 5460 0616 00000000 		.4byte	0
 5461 061a 00000000 		.4byte	0
 5462              	.LVUS60:
 5463 061e 02       		.uleb128 .LVU346
 5464 061f 00       		.uleb128 .LVU351
 5465 0620 00       		.uleb128 .LVU351
 5466 0621 00       		.uleb128 0
 5467              	.LLST60:
 5468 0622 66030000 		.4byte	.LVL100-.Ltext0
 5469 0626 68030000 		.4byte	.LVL101-.Ltext0
 5470 062a 0100     		.2byte	0x1
 5471 062c 50       		.byte	0x50
 5472 062d 68030000 		.4byte	.LVL101-.Ltext0
 5473 0631 6A030000 		.4byte	.LFE12-.Ltext0
 5474 0635 0400     		.2byte	0x4
 5475 0637 F3       		.byte	0xf3
 5476 0638 01       		.uleb128 0x1
 5477 0639 50       		.byte	0x50
 5478 063a 9F       		.byte	0x9f
 5479 063b 00000000 		.4byte	0
 5480 063f 00000000 		.4byte	0
 5481              	.LVUS61:
 5482 0643 05       		.uleb128 .LVU349
 5483 0644 00       		.uleb128 .LVU351
 5484 0645 00       		.uleb128 .LVU351
 5485 0646 00       		.uleb128 0
 5486              	.LLST61:
 5487 0647 66030000 		.4byte	.LVL100-.Ltext0
 5488 064b 68030000 		.4byte	.LVL101-.Ltext0
 5489 064f 0200     		.2byte	0x2
 5490 0651 70       		.byte	0x70
 5491 0652 04       		.sleb128 4
 5492 0653 68030000 		.4byte	.LVL101-.Ltext0
 5493 0657 6A030000 		.4byte	.LFE12-.Ltext0
 5494 065b 0100     		.2byte	0x1
 5495 065d 50       		.byte	0x50
 5496 065e 00000000 		.4byte	0
 5497 0662 00000000 		.4byte	0
 5498              	.LLST55:
 5499 0666 40030000 		.4byte	.LFB11-.Ltext0
 5500 066a 42030000 		.4byte	.LCFI14-.Ltext0
 5501 066e 0200     		.2byte	0x2
 5502 0670 7D       		.byte	0x7d
ARM GAS  /tmp/cc4130RP.s 			page 123


 5503 0671 00       		.sleb128 0
 5504 0672 42030000 		.4byte	.LCFI14-.Ltext0
 5505 0676 5C030000 		.4byte	.LCFI15-.Ltext0
 5506 067a 0200     		.2byte	0x2
 5507 067c 7D       		.byte	0x7d
 5508 067d 10       		.sleb128 16
 5509 067e 5C030000 		.4byte	.LCFI15-.Ltext0
 5510 0682 60030000 		.4byte	.LCFI16-.Ltext0
 5511 0686 0200     		.2byte	0x2
 5512 0688 7D       		.byte	0x7d
 5513 0689 00       		.sleb128 0
 5514 068a 60030000 		.4byte	.LCFI16-.Ltext0
 5515 068e 66030000 		.4byte	.LFE11-.Ltext0
 5516 0692 0200     		.2byte	0x2
 5517 0694 7D       		.byte	0x7d
 5518 0695 10       		.sleb128 16
 5519 0696 00000000 		.4byte	0
 5520 069a 00000000 		.4byte	0
 5521              	.LVUS56:
 5522 069e 00       		.uleb128 0
 5523 069f 00       		.uleb128 .LVU335
 5524 06a0 00       		.uleb128 .LVU335
 5525 06a1 00       		.uleb128 .LVU341
 5526 06a2 00       		.uleb128 .LVU341
 5527 06a3 00       		.uleb128 .LVU342
 5528 06a4 00       		.uleb128 .LVU342
 5529 06a5 00       		.uleb128 0
 5530              	.LLST56:
 5531 06a6 40030000 		.4byte	.LVL95-.Ltext0
 5532 06aa 49030000 		.4byte	.LVL97-1-.Ltext0
 5533 06ae 0100     		.2byte	0x1
 5534 06b0 50       		.byte	0x50
 5535 06b1 49030000 		.4byte	.LVL97-1-.Ltext0
 5536 06b5 5C030000 		.4byte	.LVL98-.Ltext0
 5537 06b9 0100     		.2byte	0x1
 5538 06bb 54       		.byte	0x54
 5539 06bc 5C030000 		.4byte	.LVL98-.Ltext0
 5540 06c0 60030000 		.4byte	.LVL99-.Ltext0
 5541 06c4 0400     		.2byte	0x4
 5542 06c6 F3       		.byte	0xf3
 5543 06c7 01       		.uleb128 0x1
 5544 06c8 50       		.byte	0x50
 5545 06c9 9F       		.byte	0x9f
 5546 06ca 60030000 		.4byte	.LVL99-.Ltext0
 5547 06ce 66030000 		.4byte	.LFE11-.Ltext0
 5548 06d2 0100     		.2byte	0x1
 5549 06d4 54       		.byte	0x54
 5550 06d5 00000000 		.4byte	0
 5551 06d9 00000000 		.4byte	0
 5552              	.LVUS57:
 5553 06dd 00       		.uleb128 0
 5554 06de 00       		.uleb128 .LVU335
 5555 06df 00       		.uleb128 .LVU335
 5556 06e0 00       		.uleb128 .LVU341
 5557 06e1 00       		.uleb128 .LVU341
 5558 06e2 00       		.uleb128 .LVU342
 5559 06e3 00       		.uleb128 .LVU342
ARM GAS  /tmp/cc4130RP.s 			page 124


 5560 06e4 00       		.uleb128 0
 5561              	.LLST57:
 5562 06e5 40030000 		.4byte	.LVL95-.Ltext0
 5563 06e9 49030000 		.4byte	.LVL97-1-.Ltext0
 5564 06ed 0100     		.2byte	0x1
 5565 06ef 51       		.byte	0x51
 5566 06f0 49030000 		.4byte	.LVL97-1-.Ltext0
 5567 06f4 5C030000 		.4byte	.LVL98-.Ltext0
 5568 06f8 0100     		.2byte	0x1
 5569 06fa 55       		.byte	0x55
 5570 06fb 5C030000 		.4byte	.LVL98-.Ltext0
 5571 06ff 60030000 		.4byte	.LVL99-.Ltext0
 5572 0703 0400     		.2byte	0x4
 5573 0705 F3       		.byte	0xf3
 5574 0706 01       		.uleb128 0x1
 5575 0707 51       		.byte	0x51
 5576 0708 9F       		.byte	0x9f
 5577 0709 60030000 		.4byte	.LVL99-.Ltext0
 5578 070d 66030000 		.4byte	.LFE11-.Ltext0
 5579 0711 0100     		.2byte	0x1
 5580 0713 55       		.byte	0x55
 5581 0714 00000000 		.4byte	0
 5582 0718 00000000 		.4byte	0
 5583              	.LVUS58:
 5584 071c 00       		.uleb128 .LVU331
 5585 071d 00       		.uleb128 .LVU335
 5586 071e 00       		.uleb128 .LVU335
 5587 071f 00       		.uleb128 .LVU341
 5588 0720 00       		.uleb128 .LVU341
 5589 0721 00       		.uleb128 .LVU342
 5590 0722 00       		.uleb128 .LVU342
 5591 0723 00       		.uleb128 0
 5592              	.LLST58:
 5593 0724 44030000 		.4byte	.LVL96-.Ltext0
 5594 0728 49030000 		.4byte	.LVL97-1-.Ltext0
 5595 072c 0100     		.2byte	0x1
 5596 072e 50       		.byte	0x50
 5597 072f 49030000 		.4byte	.LVL97-1-.Ltext0
 5598 0733 5C030000 		.4byte	.LVL98-.Ltext0
 5599 0737 0100     		.2byte	0x1
 5600 0739 54       		.byte	0x54
 5601 073a 5C030000 		.4byte	.LVL98-.Ltext0
 5602 073e 60030000 		.4byte	.LVL99-.Ltext0
 5603 0742 0400     		.2byte	0x4
 5604 0744 F3       		.byte	0xf3
 5605 0745 01       		.uleb128 0x1
 5606 0746 50       		.byte	0x50
 5607 0747 9F       		.byte	0x9f
 5608 0748 60030000 		.4byte	.LVL99-.Ltext0
 5609 074c 66030000 		.4byte	.LFE11-.Ltext0
 5610 0750 0100     		.2byte	0x1
 5611 0752 54       		.byte	0x54
 5612 0753 00000000 		.4byte	0
 5613 0757 00000000 		.4byte	0
 5614              	.LVUS53:
 5615 075b 00       		.uleb128 0
 5616 075c 00       		.uleb128 .LVU326
ARM GAS  /tmp/cc4130RP.s 			page 125


 5617 075d 00       		.uleb128 .LVU326
 5618 075e 00       		.uleb128 0
 5619              	.LLST53:
 5620 075f 3C030000 		.4byte	.LVL93-.Ltext0
 5621 0763 3E030000 		.4byte	.LVL94-.Ltext0
 5622 0767 0100     		.2byte	0x1
 5623 0769 50       		.byte	0x50
 5624 076a 3E030000 		.4byte	.LVL94-.Ltext0
 5625 076e 40030000 		.4byte	.LFE10-.Ltext0
 5626 0772 0400     		.2byte	0x4
 5627 0774 F3       		.byte	0xf3
 5628 0775 01       		.uleb128 0x1
 5629 0776 50       		.byte	0x50
 5630 0777 9F       		.byte	0x9f
 5631 0778 00000000 		.4byte	0
 5632 077c 00000000 		.4byte	0
 5633              	.LVUS54:
 5634 0780 02       		.uleb128 .LVU323
 5635 0781 00       		.uleb128 .LVU326
 5636 0782 00       		.uleb128 .LVU326
 5637 0783 00       		.uleb128 0
 5638              	.LLST54:
 5639 0784 3C030000 		.4byte	.LVL93-.Ltext0
 5640 0788 3E030000 		.4byte	.LVL94-.Ltext0
 5641 078c 0100     		.2byte	0x1
 5642 078e 50       		.byte	0x50
 5643 078f 3E030000 		.4byte	.LVL94-.Ltext0
 5644 0793 40030000 		.4byte	.LFE10-.Ltext0
 5645 0797 0400     		.2byte	0x4
 5646 0799 F3       		.byte	0xf3
 5647 079a 01       		.uleb128 0x1
 5648 079b 50       		.byte	0x50
 5649 079c 9F       		.byte	0x9f
 5650 079d 00000000 		.4byte	0
 5651 07a1 00000000 		.4byte	0
 5652              	.LLST25:
 5653 07a5 EE000000 		.4byte	.LFB8-.Ltext0
 5654 07a9 F0000000 		.4byte	.LCFI6-.Ltext0
 5655 07ad 0200     		.2byte	0x2
 5656 07af 7D       		.byte	0x7d
 5657 07b0 00       		.sleb128 0
 5658 07b1 F0000000 		.4byte	.LCFI6-.Ltext0
 5659 07b5 1E010000 		.4byte	.LCFI7-.Ltext0
 5660 07b9 0200     		.2byte	0x2
 5661 07bb 7D       		.byte	0x7d
 5662 07bc 20       		.sleb128 32
 5663 07bd 1E010000 		.4byte	.LCFI7-.Ltext0
 5664 07c1 20010000 		.4byte	.LCFI8-.Ltext0
 5665 07c5 0200     		.2byte	0x2
 5666 07c7 7D       		.byte	0x7d
 5667 07c8 10       		.sleb128 16
 5668 07c9 20010000 		.4byte	.LCFI8-.Ltext0
 5669 07cd 30010000 		.4byte	.LFE8-.Ltext0
 5670 07d1 0200     		.2byte	0x2
 5671 07d3 7D       		.byte	0x7d
 5672 07d4 20       		.sleb128 32
 5673 07d5 00000000 		.4byte	0
ARM GAS  /tmp/cc4130RP.s 			page 126


 5674 07d9 00000000 		.4byte	0
 5675              	.LVUS26:
 5676 07dd 00       		.uleb128 0
 5677 07de 00       		.uleb128 .LVU104
 5678 07df 00       		.uleb128 .LVU104
 5679 07e0 00       		.uleb128 0
 5680              	.LLST26:
 5681 07e1 EE000000 		.4byte	.LVL29-.Ltext0
 5682 07e5 F6000000 		.4byte	.LVL30-.Ltext0
 5683 07e9 0100     		.2byte	0x1
 5684 07eb 50       		.byte	0x50
 5685 07ec F6000000 		.4byte	.LVL30-.Ltext0
 5686 07f0 30010000 		.4byte	.LFE8-.Ltext0
 5687 07f4 0100     		.2byte	0x1
 5688 07f6 55       		.byte	0x55
 5689 07f7 00000000 		.4byte	0
 5690 07fb 00000000 		.4byte	0
 5691              	.LVUS27:
 5692 07ff 00       		.uleb128 0
 5693 0800 00       		.uleb128 .LVU115
 5694 0801 00       		.uleb128 .LVU115
 5695 0802 00       		.uleb128 .LVU123
 5696 0803 00       		.uleb128 .LVU123
 5697 0804 00       		.uleb128 .LVU125
 5698 0805 00       		.uleb128 .LVU125
 5699 0806 00       		.uleb128 .LVU126
 5700 0807 00       		.uleb128 .LVU126
 5701 0808 00       		.uleb128 0
 5702              	.LLST27:
 5703 0809 EE000000 		.4byte	.LVL29-.Ltext0
 5704 080d 09010000 		.4byte	.LVL32-1-.Ltext0
 5705 0811 0100     		.2byte	0x1
 5706 0813 51       		.byte	0x51
 5707 0814 09010000 		.4byte	.LVL32-1-.Ltext0
 5708 0818 20010000 		.4byte	.LVL34-.Ltext0
 5709 081c 0400     		.2byte	0x4
 5710 081e F3       		.byte	0xf3
 5711 081f 01       		.uleb128 0x1
 5712 0820 51       		.byte	0x51
 5713 0821 9F       		.byte	0x9f
 5714 0822 20010000 		.4byte	.LVL34-.Ltext0
 5715 0826 24010000 		.4byte	.LVL35-.Ltext0
 5716 082a 0100     		.2byte	0x1
 5717 082c 51       		.byte	0x51
 5718 082d 24010000 		.4byte	.LVL35-.Ltext0
 5719 0831 27010000 		.4byte	.LVL36-1-.Ltext0
 5720 0835 0200     		.2byte	0x2
 5721 0837 71       		.byte	0x71
 5722 0838 00       		.sleb128 0
 5723 0839 27010000 		.4byte	.LVL36-1-.Ltext0
 5724 083d 30010000 		.4byte	.LFE8-.Ltext0
 5725 0841 0400     		.2byte	0x4
 5726 0843 F3       		.byte	0xf3
 5727 0844 01       		.uleb128 0x1
 5728 0845 51       		.byte	0x51
 5729 0846 9F       		.byte	0x9f
 5730 0847 00000000 		.4byte	0
ARM GAS  /tmp/cc4130RP.s 			page 127


 5731 084b 00000000 		.4byte	0
 5732              	.LVUS28:
 5733 084f 00       		.uleb128 0
 5734 0850 00       		.uleb128 .LVU105
 5735 0851 00       		.uleb128 .LVU105
 5736 0852 00       		.uleb128 0
 5737              	.LLST28:
 5738 0853 EE000000 		.4byte	.LVL29-.Ltext0
 5739 0857 FA000000 		.4byte	.LVL31-.Ltext0
 5740 085b 0100     		.2byte	0x1
 5741 085d 52       		.byte	0x52
 5742 085e FA000000 		.4byte	.LVL31-.Ltext0
 5743 0862 30010000 		.4byte	.LFE8-.Ltext0
 5744 0866 0100     		.2byte	0x1
 5745 0868 56       		.byte	0x56
 5746 0869 00000000 		.4byte	0
 5747 086d 00000000 		.4byte	0
 5748              	.LVUS29:
 5749 0871 00       		.uleb128 0
 5750 0872 00       		.uleb128 .LVU115
 5751 0873 00       		.uleb128 .LVU115
 5752 0874 00       		.uleb128 .LVU123
 5753 0875 00       		.uleb128 .LVU123
 5754 0876 00       		.uleb128 .LVU126
 5755 0877 00       		.uleb128 .LVU126
 5756 0878 00       		.uleb128 0
 5757              	.LLST29:
 5758 0879 EE000000 		.4byte	.LVL29-.Ltext0
 5759 087d 09010000 		.4byte	.LVL32-1-.Ltext0
 5760 0881 0100     		.2byte	0x1
 5761 0883 53       		.byte	0x53
 5762 0884 09010000 		.4byte	.LVL32-1-.Ltext0
 5763 0888 20010000 		.4byte	.LVL34-.Ltext0
 5764 088c 0400     		.2byte	0x4
 5765 088e F3       		.byte	0xf3
 5766 088f 01       		.uleb128 0x1
 5767 0890 53       		.byte	0x53
 5768 0891 9F       		.byte	0x9f
 5769 0892 20010000 		.4byte	.LVL34-.Ltext0
 5770 0896 27010000 		.4byte	.LVL36-1-.Ltext0
 5771 089a 0100     		.2byte	0x1
 5772 089c 52       		.byte	0x52
 5773 089d 27010000 		.4byte	.LVL36-1-.Ltext0
 5774 08a1 30010000 		.4byte	.LFE8-.Ltext0
 5775 08a5 0400     		.2byte	0x4
 5776 08a7 F3       		.byte	0xf3
 5777 08a8 01       		.uleb128 0x1
 5778 08a9 53       		.byte	0x53
 5779 08aa 9F       		.byte	0x9f
 5780 08ab 00000000 		.4byte	0
 5781 08af 00000000 		.4byte	0
 5782              	.LVUS30:
 5783 08b3 00       		.uleb128 0
 5784 08b4 00       		.uleb128 .LVU123
 5785 08b5 00       		.uleb128 .LVU123
 5786 08b6 00       		.uleb128 0
 5787              	.LLST30:
ARM GAS  /tmp/cc4130RP.s 			page 128


 5788 08b7 EE000000 		.4byte	.LVL29-.Ltext0
 5789 08bb 20010000 		.4byte	.LVL34-.Ltext0
 5790 08bf 0200     		.2byte	0x2
 5791 08c1 91       		.byte	0x91
 5792 08c2 00       		.sleb128 0
 5793 08c3 20010000 		.4byte	.LVL34-.Ltext0
 5794 08c7 30010000 		.4byte	.LFE8-.Ltext0
 5795 08cb 0200     		.2byte	0x2
 5796 08cd 91       		.byte	0x91
 5797 08ce 00       		.sleb128 0
 5798 08cf 00000000 		.4byte	0
 5799 08d3 00000000 		.4byte	0
 5800              	.LVUS31:
 5801 08d7 02       		.uleb128 .LVU97
 5802 08d8 00       		.uleb128 .LVU122
 5803 08d9 00       		.uleb128 .LVU123
 5804 08da 00       		.uleb128 .LVU126
 5805 08db 00       		.uleb128 .LVU126
 5806 08dc 00       		.uleb128 0
 5807              	.LLST31:
 5808 08dd EE000000 		.4byte	.LVL29-.Ltext0
 5809 08e1 1C010000 		.4byte	.LVL33-.Ltext0
 5810 08e5 0200     		.2byte	0x2
 5811 08e7 30       		.byte	0x30
 5812 08e8 9F       		.byte	0x9f
 5813 08e9 20010000 		.4byte	.LVL34-.Ltext0
 5814 08ed 28010000 		.4byte	.LVL36-.Ltext0
 5815 08f1 0200     		.2byte	0x2
 5816 08f3 30       		.byte	0x30
 5817 08f4 9F       		.byte	0x9f
 5818 08f5 28010000 		.4byte	.LVL36-.Ltext0
 5819 08f9 30010000 		.4byte	.LFE8-.Ltext0
 5820 08fd 0100     		.2byte	0x1
 5821 08ff 50       		.byte	0x50
 5822 0900 00000000 		.4byte	0
 5823 0904 00000000 		.4byte	0
 5824              	.LLST13:
 5825 0908 A8000000 		.4byte	.LFB6-.Ltext0
 5826 090c AC000000 		.4byte	.LCFI5-.Ltext0
 5827 0910 0200     		.2byte	0x2
 5828 0912 7D       		.byte	0x7d
 5829 0913 00       		.sleb128 0
 5830 0914 AC000000 		.4byte	.LCFI5-.Ltext0
 5831 0918 EE000000 		.4byte	.LFE6-.Ltext0
 5832 091c 0200     		.2byte	0x2
 5833 091e 7D       		.byte	0x7d
 5834 091f 18       		.sleb128 24
 5835 0920 00000000 		.4byte	0
 5836 0924 00000000 		.4byte	0
 5837              	.LVUS14:
 5838 0928 00       		.uleb128 0
 5839 0929 00       		.uleb128 .LVU68
 5840 092a 00       		.uleb128 .LVU68
 5841 092b 00       		.uleb128 0
 5842              	.LLST14:
 5843 092c A8000000 		.4byte	.LVL22-.Ltext0
 5844 0930 B0000000 		.4byte	.LVL23-.Ltext0
ARM GAS  /tmp/cc4130RP.s 			page 129


 5845 0934 0100     		.2byte	0x1
 5846 0936 50       		.byte	0x50
 5847 0937 B0000000 		.4byte	.LVL23-.Ltext0
 5848 093b EE000000 		.4byte	.LFE6-.Ltext0
 5849 093f 0100     		.2byte	0x1
 5850 0941 58       		.byte	0x58
 5851 0942 00000000 		.4byte	0
 5852 0946 00000000 		.4byte	0
 5853              	.LVUS15:
 5854 094a 00       		.uleb128 0
 5855 094b 00       		.uleb128 .LVU70
 5856 094c 00       		.uleb128 .LVU70
 5857 094d 00       		.uleb128 0
 5858              	.LLST15:
 5859 094e A8000000 		.4byte	.LVL22-.Ltext0
 5860 0952 B9000000 		.4byte	.LVL24-1-.Ltext0
 5861 0956 0100     		.2byte	0x1
 5862 0958 51       		.byte	0x51
 5863 0959 B9000000 		.4byte	.LVL24-1-.Ltext0
 5864 095d EE000000 		.4byte	.LFE6-.Ltext0
 5865 0961 0100     		.2byte	0x1
 5866 0963 57       		.byte	0x57
 5867 0964 00000000 		.4byte	0
 5868 0968 00000000 		.4byte	0
 5869              	.LVUS16:
 5870 096c 00       		.uleb128 0
 5871 096d 00       		.uleb128 .LVU70
 5872 096e 00       		.uleb128 .LVU70
 5873 096f 00       		.uleb128 0
 5874              	.LLST16:
 5875 0970 A8000000 		.4byte	.LVL22-.Ltext0
 5876 0974 B9000000 		.4byte	.LVL24-1-.Ltext0
 5877 0978 0100     		.2byte	0x1
 5878 097a 52       		.byte	0x52
 5879 097b B9000000 		.4byte	.LVL24-1-.Ltext0
 5880 097f EE000000 		.4byte	.LFE6-.Ltext0
 5881 0983 0100     		.2byte	0x1
 5882 0985 55       		.byte	0x55
 5883 0986 00000000 		.4byte	0
 5884 098a 00000000 		.4byte	0
 5885              	.LVUS17:
 5886 098e 00       		.uleb128 0
 5887 098f 00       		.uleb128 .LVU70
 5888 0990 00       		.uleb128 .LVU70
 5889 0991 00       		.uleb128 0
 5890              	.LLST17:
 5891 0992 A8000000 		.4byte	.LVL22-.Ltext0
 5892 0996 B9000000 		.4byte	.LVL24-1-.Ltext0
 5893 099a 0100     		.2byte	0x1
 5894 099c 53       		.byte	0x53
 5895 099d B9000000 		.4byte	.LVL24-1-.Ltext0
 5896 09a1 EE000000 		.4byte	.LFE6-.Ltext0
 5897 09a5 0100     		.2byte	0x1
 5898 09a7 56       		.byte	0x56
 5899 09a8 00000000 		.4byte	0
 5900 09ac 00000000 		.4byte	0
 5901              	.LVUS18:
ARM GAS  /tmp/cc4130RP.s 			page 130


 5902 09b0 00       		.uleb128 .LVU70
 5903 09b1 00       		.uleb128 .LVU79
 5904 09b2 00       		.uleb128 .LVU79
 5905 09b3 00       		.uleb128 0
 5906              	.LLST18:
 5907 09b4 BA000000 		.4byte	.LVL24-.Ltext0
 5908 09b8 C7000000 		.4byte	.LVL26-1-.Ltext0
 5909 09bc 0100     		.2byte	0x1
 5910 09be 50       		.byte	0x50
 5911 09bf C7000000 		.4byte	.LVL26-1-.Ltext0
 5912 09c3 EE000000 		.4byte	.LFE6-.Ltext0
 5913 09c7 0100     		.2byte	0x1
 5914 09c9 54       		.byte	0x54
 5915 09ca 00000000 		.4byte	0
 5916 09ce 00000000 		.4byte	0
 5917              	.LVUS19:
 5918 09d2 01       		.uleb128 .LVU75
 5919 09d3 00       		.uleb128 .LVU79
 5920 09d4 00       		.uleb128 .LVU79
 5921 09d5 00       		.uleb128 .LVU91
 5922              	.LLST19:
 5923 09d6 C4000000 		.4byte	.LVL25-.Ltext0
 5924 09da C7000000 		.4byte	.LVL26-1-.Ltext0
 5925 09de 0100     		.2byte	0x1
 5926 09e0 50       		.byte	0x50
 5927 09e1 C7000000 		.4byte	.LVL26-1-.Ltext0
 5928 09e5 E8000000 		.4byte	.LVL28-.Ltext0
 5929 09e9 0100     		.2byte	0x1
 5930 09eb 54       		.byte	0x54
 5931 09ec 00000000 		.4byte	0
 5932 09f0 00000000 		.4byte	0
 5933              	.LVUS20:
 5934 09f4 01       		.uleb128 .LVU75
 5935 09f5 00       		.uleb128 .LVU91
 5936              	.LLST20:
 5937 09f6 C4000000 		.4byte	.LVL25-.Ltext0
 5938 09fa E8000000 		.4byte	.LVL28-.Ltext0
 5939 09fe 0200     		.2byte	0x2
 5940 0a00 91       		.byte	0x91
 5941 0a01 00       		.sleb128 0
 5942 0a02 00000000 		.4byte	0
 5943 0a06 00000000 		.4byte	0
 5944              	.LVUS21:
 5945 0a0a 01       		.uleb128 .LVU75
 5946 0a0b 00       		.uleb128 .LVU91
 5947              	.LLST21:
 5948 0a0c C4000000 		.4byte	.LVL25-.Ltext0
 5949 0a10 E8000000 		.4byte	.LVL28-.Ltext0
 5950 0a14 0100     		.2byte	0x1
 5951 0a16 56       		.byte	0x56
 5952 0a17 00000000 		.4byte	0
 5953 0a1b 00000000 		.4byte	0
 5954              	.LVUS22:
 5955 0a1f 01       		.uleb128 .LVU75
 5956 0a20 00       		.uleb128 .LVU91
 5957              	.LLST22:
 5958 0a21 C4000000 		.4byte	.LVL25-.Ltext0
ARM GAS  /tmp/cc4130RP.s 			page 131


 5959 0a25 E8000000 		.4byte	.LVL28-.Ltext0
 5960 0a29 0100     		.2byte	0x1
 5961 0a2b 55       		.byte	0x55
 5962 0a2c 00000000 		.4byte	0
 5963 0a30 00000000 		.4byte	0
 5964              	.LVUS23:
 5965 0a34 01       		.uleb128 .LVU75
 5966 0a35 00       		.uleb128 .LVU91
 5967              	.LLST23:
 5968 0a36 C4000000 		.4byte	.LVL25-.Ltext0
 5969 0a3a E8000000 		.4byte	.LVL28-.Ltext0
 5970 0a3e 0100     		.2byte	0x1
 5971 0a40 57       		.byte	0x57
 5972 0a41 00000000 		.4byte	0
 5973 0a45 00000000 		.4byte	0
 5974              	.LVUS24:
 5975 0a49 01       		.uleb128 .LVU75
 5976 0a4a 00       		.uleb128 .LVU91
 5977              	.LLST24:
 5978 0a4b C4000000 		.4byte	.LVL25-.Ltext0
 5979 0a4f E8000000 		.4byte	.LVL28-.Ltext0
 5980 0a53 0100     		.2byte	0x1
 5981 0a55 58       		.byte	0x58
 5982 0a56 00000000 		.4byte	0
 5983 0a5a 00000000 		.4byte	0
 5984              	.LLST11:
 5985 0a5e 74000000 		.4byte	.LFB5-.Ltext0
 5986 0a62 76000000 		.4byte	.LCFI3-.Ltext0
 5987 0a66 0200     		.2byte	0x2
 5988 0a68 7D       		.byte	0x7d
 5989 0a69 00       		.sleb128 0
 5990 0a6a 76000000 		.4byte	.LCFI3-.Ltext0
 5991 0a6e 96000000 		.4byte	.LCFI4-.Ltext0
 5992 0a72 0200     		.2byte	0x2
 5993 0a74 7D       		.byte	0x7d
 5994 0a75 10       		.sleb128 16
 5995 0a76 96000000 		.4byte	.LCFI4-.Ltext0
 5996 0a7a A8000000 		.4byte	.LFE5-.Ltext0
 5997 0a7e 0200     		.2byte	0x2
 5998 0a80 7D       		.byte	0x7d
 5999 0a81 04       		.sleb128 4
 6000 0a82 00000000 		.4byte	0
 6001 0a86 00000000 		.4byte	0
 6002              	.LVUS12:
 6003 0a8a 02       		.uleb128 .LVU53
 6004 0a8b 00       		.uleb128 .LVU61
 6005              	.LLST12:
 6006 0a8c 74000000 		.4byte	.LVL19-.Ltext0
 6007 0a90 94000000 		.4byte	.LVL21-.Ltext0
 6008 0a94 0200     		.2byte	0x2
 6009 0a96 30       		.byte	0x30
 6010 0a97 9F       		.byte	0x9f
 6011 0a98 00000000 		.4byte	0
 6012 0a9c 00000000 		.4byte	0
 6013              	.LLST1:
 6014 0aa0 3C000000 		.4byte	.LFB19-.Ltext0
 6015 0aa4 40000000 		.4byte	.LCFI2-.Ltext0
ARM GAS  /tmp/cc4130RP.s 			page 132


 6016 0aa8 0200     		.2byte	0x2
 6017 0aaa 7D       		.byte	0x7d
 6018 0aab 00       		.sleb128 0
 6019 0aac 40000000 		.4byte	.LCFI2-.Ltext0
 6020 0ab0 74000000 		.4byte	.LFE19-.Ltext0
 6021 0ab4 0200     		.2byte	0x2
 6022 0ab6 7D       		.byte	0x7d
 6023 0ab7 08       		.sleb128 8
 6024 0ab8 00000000 		.4byte	0
 6025 0abc 00000000 		.4byte	0
 6026              	.LVUS2:
 6027 0ac0 00       		.uleb128 0
 6028 0ac1 00       		.uleb128 .LVU37
 6029 0ac2 00       		.uleb128 .LVU37
 6030 0ac3 00       		.uleb128 .LVU41
 6031 0ac4 00       		.uleb128 .LVU41
 6032 0ac5 00       		.uleb128 .LVU47
 6033 0ac6 00       		.uleb128 .LVU47
 6034 0ac7 00       		.uleb128 .LVU48
 6035 0ac8 00       		.uleb128 .LVU48
 6036 0ac9 00       		.uleb128 .LVU49
 6037 0aca 00       		.uleb128 .LVU49
 6038 0acb 00       		.uleb128 0
 6039              	.LLST2:
 6040 0acc 3C000000 		.4byte	.LVL5-.Ltext0
 6041 0ad0 54000000 		.4byte	.LVL10-.Ltext0
 6042 0ad4 0100     		.2byte	0x1
 6043 0ad6 50       		.byte	0x50
 6044 0ad7 54000000 		.4byte	.LVL10-.Ltext0
 6045 0adb 5C000000 		.4byte	.LVL13-.Ltext0
 6046 0adf 0400     		.2byte	0x4
 6047 0ae1 F3       		.byte	0xf3
 6048 0ae2 01       		.uleb128 0x1
 6049 0ae3 50       		.byte	0x50
 6050 0ae4 9F       		.byte	0x9f
 6051 0ae5 5C000000 		.4byte	.LVL13-.Ltext0
 6052 0ae9 6A000000 		.4byte	.LVL16-.Ltext0
 6053 0aed 0100     		.2byte	0x1
 6054 0aef 50       		.byte	0x50
 6055 0af0 6A000000 		.4byte	.LVL16-.Ltext0
 6056 0af4 6C000000 		.4byte	.LVL17-.Ltext0
 6057 0af8 0300     		.2byte	0x3
 6058 0afa 71       		.byte	0x71
 6059 0afb 7C       		.sleb128 -4
 6060 0afc 9F       		.byte	0x9f
 6061 0afd 6C000000 		.4byte	.LVL17-.Ltext0
 6062 0b01 6E000000 		.4byte	.LVL18-.Ltext0
 6063 0b05 0100     		.2byte	0x1
 6064 0b07 50       		.byte	0x50
 6065 0b08 6E000000 		.4byte	.LVL18-.Ltext0
 6066 0b0c 74000000 		.4byte	.LFE19-.Ltext0
 6067 0b10 0400     		.2byte	0x4
 6068 0b12 F3       		.byte	0xf3
 6069 0b13 01       		.uleb128 0x1
 6070 0b14 50       		.byte	0x50
 6071 0b15 9F       		.byte	0x9f
 6072 0b16 00000000 		.4byte	0
ARM GAS  /tmp/cc4130RP.s 			page 133


 6073 0b1a 00000000 		.4byte	0
 6074              	.LVUS3:
 6075 0b1e 00       		.uleb128 0
 6076 0b1f 00       		.uleb128 .LVU36
 6077 0b20 00       		.uleb128 .LVU36
 6078 0b21 00       		.uleb128 .LVU37
 6079 0b22 00       		.uleb128 .LVU37
 6080 0b23 00       		.uleb128 .LVU39
 6081 0b24 00       		.uleb128 .LVU39
 6082 0b25 00       		.uleb128 .LVU41
 6083 0b26 00       		.uleb128 .LVU41
 6084 0b27 00       		.uleb128 .LVU46
 6085 0b28 00       		.uleb128 .LVU46
 6086 0b29 00       		.uleb128 .LVU47
 6087 0b2a 00       		.uleb128 .LVU47
 6088 0b2b 00       		.uleb128 .LVU48
 6089 0b2c 00       		.uleb128 .LVU48
 6090 0b2d 00       		.uleb128 0
 6091              	.LLST3:
 6092 0b2e 3C000000 		.4byte	.LVL5-.Ltext0
 6093 0b32 52000000 		.4byte	.LVL9-.Ltext0
 6094 0b36 0100     		.2byte	0x1
 6095 0b38 51       		.byte	0x51
 6096 0b39 52000000 		.4byte	.LVL9-.Ltext0
 6097 0b3d 54000000 		.4byte	.LVL10-.Ltext0
 6098 0b41 0200     		.2byte	0x2
 6099 0b43 71       		.byte	0x71
 6100 0b44 00       		.sleb128 0
 6101 0b45 54000000 		.4byte	.LVL10-.Ltext0
 6102 0b49 57000000 		.4byte	.LVL11-1-.Ltext0
 6103 0b4d 0500     		.2byte	0x5
 6104 0b4f F3       		.byte	0xf3
 6105 0b50 01       		.uleb128 0x1
 6106 0b51 50       		.byte	0x50
 6107 0b52 23       		.byte	0x23
 6108 0b53 04       		.uleb128 0x4
 6109 0b54 57000000 		.4byte	.LVL11-1-.Ltext0
 6110 0b58 5C000000 		.4byte	.LVL13-.Ltext0
 6111 0b5c 0400     		.2byte	0x4
 6112 0b5e F3       		.byte	0xf3
 6113 0b5f 01       		.uleb128 0x1
 6114 0b60 51       		.byte	0x51
 6115 0b61 9F       		.byte	0x9f
 6116 0b62 5C000000 		.4byte	.LVL13-.Ltext0
 6117 0b66 68000000 		.4byte	.LVL15-.Ltext0
 6118 0b6a 0100     		.2byte	0x1
 6119 0b6c 51       		.byte	0x51
 6120 0b6d 68000000 		.4byte	.LVL15-.Ltext0
 6121 0b71 6A000000 		.4byte	.LVL16-.Ltext0
 6122 0b75 0200     		.2byte	0x2
 6123 0b77 70       		.byte	0x70
 6124 0b78 04       		.sleb128 4
 6125 0b79 6A000000 		.4byte	.LVL16-.Ltext0
 6126 0b7d 6C000000 		.4byte	.LVL17-.Ltext0
 6127 0b81 0200     		.2byte	0x2
 6128 0b83 71       		.byte	0x71
 6129 0b84 00       		.sleb128 0
ARM GAS  /tmp/cc4130RP.s 			page 134


 6130 0b85 6C000000 		.4byte	.LVL17-.Ltext0
 6131 0b89 74000000 		.4byte	.LFE19-.Ltext0
 6132 0b8d 0100     		.2byte	0x1
 6133 0b8f 51       		.byte	0x51
 6134 0b90 00000000 		.4byte	0
 6135 0b94 00000000 		.4byte	0
 6136              	.LVUS4:
 6137 0b98 00       		.uleb128 0
 6138 0b99 00       		.uleb128 .LVU32
 6139 0b9a 00       		.uleb128 .LVU32
 6140 0b9b 00       		.uleb128 .LVU41
 6141 0b9c 00       		.uleb128 .LVU41
 6142 0b9d 00       		.uleb128 .LVU48
 6143 0b9e 00       		.uleb128 .LVU48
 6144 0b9f 00       		.uleb128 0
 6145              	.LLST4:
 6146 0ba0 3C000000 		.4byte	.LVL5-.Ltext0
 6147 0ba4 48000000 		.4byte	.LVL6-.Ltext0
 6148 0ba8 0100     		.2byte	0x1
 6149 0baa 52       		.byte	0x52
 6150 0bab 48000000 		.4byte	.LVL6-.Ltext0
 6151 0baf 5C000000 		.4byte	.LVL13-.Ltext0
 6152 0bb3 0400     		.2byte	0x4
 6153 0bb5 F3       		.byte	0xf3
 6154 0bb6 01       		.uleb128 0x1
 6155 0bb7 52       		.byte	0x52
 6156 0bb8 9F       		.byte	0x9f
 6157 0bb9 5C000000 		.4byte	.LVL13-.Ltext0
 6158 0bbd 6C000000 		.4byte	.LVL17-.Ltext0
 6159 0bc1 0100     		.2byte	0x1
 6160 0bc3 52       		.byte	0x52
 6161 0bc4 6C000000 		.4byte	.LVL17-.Ltext0
 6162 0bc8 74000000 		.4byte	.LFE19-.Ltext0
 6163 0bcc 0400     		.2byte	0x4
 6164 0bce F3       		.byte	0xf3
 6165 0bcf 01       		.uleb128 0x1
 6166 0bd0 52       		.byte	0x52
 6167 0bd1 9F       		.byte	0x9f
 6168 0bd2 00000000 		.4byte	0
 6169 0bd6 00000000 		.4byte	0
 6170              	.LVUS5:
 6171 0bda 00       		.uleb128 0
 6172 0bdb 00       		.uleb128 .LVU33
 6173 0bdc 00       		.uleb128 .LVU33
 6174 0bdd 00       		.uleb128 .LVU41
 6175 0bde 00       		.uleb128 .LVU41
 6176 0bdf 00       		.uleb128 .LVU45
 6177 0be0 00       		.uleb128 .LVU45
 6178 0be1 00       		.uleb128 0
 6179              	.LLST5:
 6180 0be2 3C000000 		.4byte	.LVL5-.Ltext0
 6181 0be6 4A000000 		.4byte	.LVL7-.Ltext0
 6182 0bea 0100     		.2byte	0x1
 6183 0bec 53       		.byte	0x53
 6184 0bed 4A000000 		.4byte	.LVL7-.Ltext0
 6185 0bf1 5C000000 		.4byte	.LVL13-.Ltext0
 6186 0bf5 0400     		.2byte	0x4
ARM GAS  /tmp/cc4130RP.s 			page 135


 6187 0bf7 F3       		.byte	0xf3
 6188 0bf8 01       		.uleb128 0x1
 6189 0bf9 53       		.byte	0x53
 6190 0bfa 9F       		.byte	0x9f
 6191 0bfb 5C000000 		.4byte	.LVL13-.Ltext0
 6192 0bff 66000000 		.4byte	.LVL14-.Ltext0
 6193 0c03 0100     		.2byte	0x1
 6194 0c05 53       		.byte	0x53
 6195 0c06 66000000 		.4byte	.LVL14-.Ltext0
 6196 0c0a 74000000 		.4byte	.LFE19-.Ltext0
 6197 0c0e 0400     		.2byte	0x4
 6198 0c10 F3       		.byte	0xf3
 6199 0c11 01       		.uleb128 0x1
 6200 0c12 53       		.byte	0x53
 6201 0c13 9F       		.byte	0x9f
 6202 0c14 00000000 		.4byte	0
 6203 0c18 00000000 		.4byte	0
 6204              	.LVUS6:
 6205 0c1c 02       		.uleb128 .LVU23
 6206 0c1d 00       		.uleb128 .LVU40
 6207 0c1e 00       		.uleb128 .LVU41
 6208 0c1f 00       		.uleb128 .LVU49
 6209 0c20 00       		.uleb128 .LVU49
 6210 0c21 00       		.uleb128 0
 6211              	.LLST6:
 6212 0c22 3C000000 		.4byte	.LVL5-.Ltext0
 6213 0c26 5A000000 		.4byte	.LVL12-.Ltext0
 6214 0c2a 0200     		.2byte	0x2
 6215 0c2c 30       		.byte	0x30
 6216 0c2d 9F       		.byte	0x9f
 6217 0c2e 5C000000 		.4byte	.LVL13-.Ltext0
 6218 0c32 6E000000 		.4byte	.LVL18-.Ltext0
 6219 0c36 0200     		.2byte	0x2
 6220 0c38 30       		.byte	0x30
 6221 0c39 9F       		.byte	0x9f
 6222 0c3a 6E000000 		.4byte	.LVL18-.Ltext0
 6223 0c3e 74000000 		.4byte	.LFE19-.Ltext0
 6224 0c42 0200     		.2byte	0x2
 6225 0c44 31       		.byte	0x31
 6226 0c45 9F       		.byte	0x9f
 6227 0c46 00000000 		.4byte	0
 6228 0c4a 00000000 		.4byte	0
 6229              	.LVUS7:
 6230 0c4e 01       		.uleb128 .LVU35
 6231 0c4f 00       		.uleb128 .LVU36
 6232 0c50 00       		.uleb128 .LVU36
 6233 0c51 00       		.uleb128 .LVU37
 6234              	.LLST7:
 6235 0c52 4E000000 		.4byte	.LVL8-.Ltext0
 6236 0c56 52000000 		.4byte	.LVL9-.Ltext0
 6237 0c5a 0100     		.2byte	0x1
 6238 0c5c 51       		.byte	0x51
 6239 0c5d 52000000 		.4byte	.LVL9-.Ltext0
 6240 0c61 54000000 		.4byte	.LVL10-.Ltext0
 6241 0c65 0200     		.2byte	0x2
 6242 0c67 71       		.byte	0x71
 6243 0c68 00       		.sleb128 0
ARM GAS  /tmp/cc4130RP.s 			page 136


 6244 0c69 00000000 		.4byte	0
 6245 0c6d 00000000 		.4byte	0
 6246              	.LVUS8:
 6247 0c71 01       		.uleb128 .LVU35
 6248 0c72 00       		.uleb128 .LVU37
 6249              	.LLST8:
 6250 0c73 4E000000 		.4byte	.LVL8-.Ltext0
 6251 0c77 54000000 		.4byte	.LVL10-.Ltext0
 6252 0c7b 0400     		.2byte	0x4
 6253 0c7d F3       		.byte	0xf3
 6254 0c7e 01       		.uleb128 0x1
 6255 0c7f 52       		.byte	0x52
 6256 0c80 9F       		.byte	0x9f
 6257 0c81 00000000 		.4byte	0
 6258 0c85 00000000 		.4byte	0
 6259              	.LVUS9:
 6260 0c89 01       		.uleb128 .LVU35
 6261 0c8a 00       		.uleb128 .LVU37
 6262              	.LLST9:
 6263 0c8b 4E000000 		.4byte	.LVL8-.Ltext0
 6264 0c8f 54000000 		.4byte	.LVL10-.Ltext0
 6265 0c93 0400     		.2byte	0x4
 6266 0c95 F3       		.byte	0xf3
 6267 0c96 01       		.uleb128 0x1
 6268 0c97 53       		.byte	0x53
 6269 0c98 9F       		.byte	0x9f
 6270 0c99 00000000 		.4byte	0
 6271 0c9d 00000000 		.4byte	0
 6272              	.LVUS10:
 6273 0ca1 00       		.uleb128 .LVU34
 6274 0ca2 00       		.uleb128 .LVU37
 6275              	.LLST10:
 6276 0ca3 4E000000 		.4byte	.LVL8-.Ltext0
 6277 0ca7 54000000 		.4byte	.LVL10-.Ltext0
 6278 0cab 0100     		.2byte	0x1
 6279 0cad 50       		.byte	0x50
 6280 0cae 00000000 		.4byte	0
 6281 0cb2 00000000 		.4byte	0
 6282              		.section	.debug_aranges,"",%progbits
 6283 0000 1C000000 		.4byte	0x1c
 6284 0004 0200     		.2byte	0x2
 6285 0006 00000000 		.4byte	.Ldebug_info0
 6286 000a 04       		.byte	0x4
 6287 000b 00       		.byte	0
 6288 000c 0000     		.2byte	0
 6289 000e 0000     		.2byte	0
 6290 0010 00000000 		.4byte	.Ltext0
 6291 0014 B4030000 		.4byte	.Letext0-.Ltext0
 6292 0018 00000000 		.4byte	0
 6293 001c 00000000 		.4byte	0
 6294              		.section	.debug_ranges,"",%progbits
 6295              	.Ldebug_ranges0:
 6296 0000 44010000 		.4byte	.LBB12-.Ltext0
 6297 0004 54010000 		.4byte	.LBE12-.Ltext0
 6298 0008 62010000 		.4byte	.LBB15-.Ltext0
 6299 000c AA010000 		.4byte	.LBE15-.Ltext0
 6300 0010 00000000 		.4byte	0
ARM GAS  /tmp/cc4130RP.s 			page 137


 6301 0014 00000000 		.4byte	0
 6302 0018 B8010000 		.4byte	.LBB24-.Ltext0
 6303 001c BC010000 		.4byte	.LBE24-.Ltext0
 6304 0020 BE010000 		.4byte	.LBB28-.Ltext0
 6305 0024 D2010000 		.4byte	.LBE28-.Ltext0
 6306 0028 6C020000 		.4byte	.LBB39-.Ltext0
 6307 002c 70020000 		.4byte	.LBE39-.Ltext0
 6308 0030 00000000 		.4byte	0
 6309 0034 00000000 		.4byte	0
 6310 0038 D2010000 		.4byte	.LBB29-.Ltext0
 6311 003c 30020000 		.4byte	.LBE29-.Ltext0
 6312 0040 70020000 		.4byte	.LBB40-.Ltext0
 6313 0044 B4020000 		.4byte	.LBE40-.Ltext0
 6314 0048 00000000 		.4byte	0
 6315 004c 00000000 		.4byte	0
 6316 0050 F0010000 		.4byte	.LBB31-.Ltext0
 6317 0054 30020000 		.4byte	.LBE31-.Ltext0
 6318 0058 70020000 		.4byte	.LBB34-.Ltext0
 6319 005c 7A020000 		.4byte	.LBE34-.Ltext0
 6320 0060 00000000 		.4byte	0
 6321 0064 00000000 		.4byte	0
 6322 0068 30020000 		.4byte	.LBB36-.Ltext0
 6323 006c 6C020000 		.4byte	.LBE36-.Ltext0
 6324 0070 B4020000 		.4byte	.LBB41-.Ltext0
 6325 0074 30030000 		.4byte	.LBE41-.Ltext0
 6326 0078 00000000 		.4byte	0
 6327 007c 00000000 		.4byte	0
 6328              		.section	.debug_line,"",%progbits
 6329              	.Ldebug_line0:
 6330 0000 25070000 		.section	.debug_str,"MS",%progbits,1
 6330      03000B01 
 6330      00000201 
 6330      FB0E0D00 
 6330      01010101 
 6331              	.LASF112:
 6332 0000 764C6973 		.ascii	"vListInsert\000"
 6332      74496E73 
 6332      65727400 
 6333              	.LASF92:
 6334 000c 70727650 		.ascii	"prvProcessExpiredTimer\000"
 6334      726F6365 
 6334      73734578 
 6334      70697265 
 6334      6454696D 
 6335              	.LASF80:
 6336 0023 78436F6D 		.ascii	"xCommandTime\000"
 6336      6D616E64 
 6336      54696D65 
 6336      00
 6337              	.LASF25:
 6338 0030 75784E75 		.ascii	"uxNumberOfItems\000"
 6338      6D626572 
 6338      4F664974 
 6338      656D7300 
 6339              	.LASF40:
 6340 0040 7854696D 		.ascii	"xTimerPeriodInTicks\000"
 6340      65725065 
ARM GAS  /tmp/cc4130RP.s 			page 138


 6340      72696F64 
 6340      496E5469 
 6340      636B7300 
 6341              	.LASF108:
 6342 0054 76506F72 		.ascii	"vPortExitCritical\000"
 6342      74457869 
 6342      74437269 
 6342      74696361 
 6342      6C00
 6343              	.LASF42:
 6344 0066 70784361 		.ascii	"pxCallbackFunction\000"
 6344      6C6C6261 
 6344      636B4675 
 6344      6E637469 
 6344      6F6E00
 6345              	.LASF86:
 6346 0079 70784C69 		.ascii	"pxListWasEmpty\000"
 6346      73745761 
 6346      73456D70 
 6346      747900
 6347              	.LASF43:
 6348 0088 75785469 		.ascii	"uxTimerNumber\000"
 6348      6D65724E 
 6348      756D6265 
 6348      7200
 6349              	.LASF78:
 6350 0096 7854696D 		.ascii	"xTimeNow\000"
 6350      654E6F77 
 6350      00
 6351              	.LASF34:
 6352 009f 74736B54 		.ascii	"tskTaskControlBlock\000"
 6352      61736B43 
 6352      6F6E7472 
 6352      6F6C426C 
 6352      6F636B00 
 6353              	.LASF128:
 6354 00b3 7854696D 		.ascii	"xTimerParameters\000"
 6354      65725061 
 6354      72616D65 
 6354      74657273 
 6354      00
 6355              	.LASF100:
 6356 00c4 784F7074 		.ascii	"xOptionalValue\000"
 6356      696F6E61 
 6356      6C56616C 
 6356      756500
 6357              	.LASF117:
 6358 00d3 78517565 		.ascii	"xQueueReceive\000"
 6358      75655265 
 6358      63656976 
 6358      6500
 6359              	.LASF119:
 6360 00e1 78546173 		.ascii	"xTaskGetSchedulerState\000"
 6360      6B476574 
 6360      53636865 
 6360      64756C65 
 6360      72537461 
ARM GAS  /tmp/cc4130RP.s 			page 139


 6361              	.LASF101:
 6362 00f8 70784869 		.ascii	"pxHigherPriorityTaskWoken\000"
 6362      67686572 
 6362      5072696F 
 6362      72697479 
 6362      5461736B 
 6363              	.LASF0:
 6364 0112 756E7369 		.ascii	"unsigned int\000"
 6364      676E6564 
 6364      20696E74 
 6364      00
 6365              	.LASF26:
 6366 011f 7078496E 		.ascii	"pxIndex\000"
 6366      64657800 
 6367              	.LASF38:
 6368 0127 70635469 		.ascii	"pcTimerName\000"
 6368      6D65724E 
 6368      616D6500 
 6369              	.LASF23:
 6370 0133 784C4953 		.ascii	"xLIST_ITEM\000"
 6370      545F4954 
 6370      454D00
 6371              	.LASF126:
 6372 013e 2E2E2F66 		.ascii	"../freertos/timers.c\000"
 6372      72656572 
 6372      746F732F 
 6372      74696D65 
 6372      72732E63 
 6373              	.LASF91:
 6374 0153 70765061 		.ascii	"pvParameters\000"
 6374      72616D65 
 6374      74657273 
 6374      00
 6375              	.LASF51:
 6376 0160 54696D65 		.ascii	"TimerParameter_t\000"
 6376      72506172 
 6376      616D6574 
 6376      65725F74 
 6376      00
 6377              	.LASF59:
 6378 0171 7854696D 		.ascii	"xTimerQueue\000"
 6378      65725175 
 6378      65756500 
 6379              	.LASF107:
 6380 017d 76506F72 		.ascii	"vPortEnterCritical\000"
 6380      74456E74 
 6380      65724372 
 6380      69746963 
 6380      616C00
 6381              	.LASF45:
 6382 0190 54696D65 		.ascii	"TimerCallbackFunction_t\000"
 6382      7243616C 
 6382      6C626163 
 6382      6B46756E 
 6382      6374696F 
 6383              	.LASF99:
 6384 01a8 78436F6D 		.ascii	"xCommandID\000"
ARM GAS  /tmp/cc4130RP.s 			page 140


 6384      6D616E64 
 6384      494400
 6385              	.LASF106:
 6386 01b3 7854696D 		.ascii	"xTimerCreateTimerTask\000"
 6386      65724372 
 6386      65617465 
 6386      54696D65 
 6386      72546173 
 6387              	.LASF81:
 6388 01c9 7850726F 		.ascii	"xProcessTimerNow\000"
 6388      63657373 
 6388      54696D65 
 6388      724E6F77 
 6388      00
 6389              	.LASF14:
 6390 01da 75696E74 		.ascii	"uint32_t\000"
 6390      33325F74 
 6390      00
 6391              	.LASF130:
 6392 01e3 7854696D 		.ascii	"xTimerGetTimerDaemonTaskHandle\000"
 6392      65724765 
 6392      7454696D 
 6392      65724461 
 6392      656D6F6E 
 6393              	.LASF36:
 6394 0202 54696D65 		.ascii	"TimerHandle_t\000"
 6394      7248616E 
 6394      646C655F 
 6394      7400
 6395              	.LASF35:
 6396 0210 51756575 		.ascii	"QueueDefinition\000"
 6396      65446566 
 6396      696E6974 
 6396      696F6E00 
 6397              	.LASF11:
 6398 0220 6C6F6E67 		.ascii	"long long unsigned int\000"
 6398      206C6F6E 
 6398      6720756E 
 6398      7369676E 
 6398      65642069 
 6399              	.LASF65:
 6400 0237 75785469 		.ascii	"uxTimerGetTimerNumber\000"
 6400      6D657247 
 6400      65745469 
 6400      6D65724E 
 6400      756D6265 
 6401              	.LASF104:
 6402 024d 70784E65 		.ascii	"pxNewTimer\000"
 6402      7754696D 
 6402      657200
 6403              	.LASF20:
 6404 0258 70785072 		.ascii	"pxPrevious\000"
 6404      6576696F 
 6404      757300
 6405              	.LASF67:
 6406 0263 70765265 		.ascii	"pvReturn\000"
 6406      7475726E 
ARM GAS  /tmp/cc4130RP.s 			page 141


 6406      00
 6407              	.LASF72:
 6408 026c 70785465 		.ascii	"pxTemp\000"
 6408      6D7000
 6409              	.LASF123:
 6410 0273 7076506F 		.ascii	"pvPortMalloc\000"
 6410      72744D61 
 6410      6C6C6F63 
 6410      00
 6411              	.LASF114:
 6412 0280 76546173 		.ascii	"vTaskSuspendAll\000"
 6412      6B537573 
 6412      70656E64 
 6412      416C6C00 
 6413              	.LASF116:
 6414 0290 76517565 		.ascii	"vQueueWaitForMessageRestricted\000"
 6414      75655761 
 6414      6974466F 
 6414      724D6573 
 6414      73616765 
 6415              	.LASF68:
 6416 02af 7854696D 		.ascii	"xTimerIsTimerActive\000"
 6416      65724973 
 6416      54696D65 
 6416      72416374 
 6416      69766500 
 6417              	.LASF66:
 6418 02c3 70765469 		.ascii	"pvTimerGetTimerID\000"
 6418      6D657247 
 6418      65745469 
 6418      6D657249 
 6418      4400
 6419              	.LASF29:
 6420 02d5 784D494E 		.ascii	"xMINI_LIST_ITEM\000"
 6420      495F4C49 
 6420      53545F49 
 6420      54454D00 
 6421              	.LASF58:
 6422 02e5 70784F76 		.ascii	"pxOverflowTimerList\000"
 6422      6572666C 
 6422      6F775469 
 6422      6D65724C 
 6422      69737400 
 6423              	.LASF24:
 6424 02f9 784C4953 		.ascii	"xLIST\000"
 6424      5400
 6425              	.LASF127:
 6426 02ff 2F686F6D 		.ascii	"/home/junior/Codigos/6-Stm32_GCC_FreeRTOS10.2.1/use"
 6426      652F6A75 
 6426      6E696F72 
 6426      2F436F64 
 6426      69676F73 
 6427 0332 7200     		.ascii	"r\000"
 6428              	.LASF121:
 6429 0334 78517565 		.ascii	"xQueueGenericSendFromISR\000"
 6429      75654765 
 6429      6E657269 
ARM GAS  /tmp/cc4130RP.s 			page 142


 6429      6353656E 
 6429      6446726F 
 6430              	.LASF103:
 6431 034d 70727649 		.ascii	"prvInitialiseNewTimer\000"
 6431      6E697469 
 6431      616C6973 
 6431      654E6577 
 6431      54696D65 
 6432              	.LASF52:
 6433 0363 746D7254 		.ascii	"tmrTimerQueueMessage\000"
 6433      696D6572 
 6433      51756575 
 6433      654D6573 
 6433      73616765 
 6434              	.LASF120:
 6435 0378 78517565 		.ascii	"xQueueGenericSend\000"
 6435      75654765 
 6435      6E657269 
 6435      6353656E 
 6435      6400
 6436              	.LASF61:
 6437 038a 7854696D 		.ascii	"xTimer\000"
 6437      657200
 6438              	.LASF46:
 6439 0391 7854494D 		.ascii	"xTIMER\000"
 6439      455200
 6440              	.LASF55:
 6441 0398 78416374 		.ascii	"xActiveTimerList1\000"
 6441      69766554 
 6441      696D6572 
 6441      4C697374 
 6441      3100
 6442              	.LASF56:
 6443 03aa 78416374 		.ascii	"xActiveTimerList2\000"
 6443      69766554 
 6443      696D6572 
 6443      4C697374 
 6443      3200
 6444              	.LASF84:
 6445 03bc 70727649 		.ascii	"prvInsertTimerInActiveList\000"
 6445      6E736572 
 6445      7454696D 
 6445      6572496E 
 6445      41637469 
 6446              	.LASF12:
 6447 03d7 63686172 		.ascii	"char\000"
 6447      00
 6448              	.LASF28:
 6449 03dc 4C697374 		.ascii	"ListItem_t\000"
 6449      4974656D 
 6449      5F7400
 6450              	.LASF16:
 6451 03e7 55426173 		.ascii	"UBaseType_t\000"
 6451      65547970 
 6451      655F7400 
 6452              	.LASF94:
 6453 03f3 7854696D 		.ascii	"xTimerGetExpiryTime\000"
ARM GAS  /tmp/cc4130RP.s 			page 143


 6453      65724765 
 6453      74457870 
 6453      69727954 
 6453      696D6500 
 6454              	.LASF33:
 6455 0407 51756575 		.ascii	"QueueHandle_t\000"
 6455      6548616E 
 6455      646C655F 
 6455      7400
 6456              	.LASF105:
 6457 0415 7854696D 		.ascii	"xTimerCreate\000"
 6457      65724372 
 6457      65617465 
 6457      00
 6458              	.LASF129:
 6459 0422 70727653 		.ascii	"prvSampleTimeNow\000"
 6459      616D706C 
 6459      6554696D 
 6459      654E6F77 
 6459      00
 6460              	.LASF27:
 6461 0433 784C6973 		.ascii	"xListEnd\000"
 6461      74456E64 
 6461      00
 6462              	.LASF30:
 6463 043c 4D696E69 		.ascii	"MiniListItem_t\000"
 6463      4C697374 
 6463      4974656D 
 6463      5F7400
 6464              	.LASF124:
 6465 044b 78546173 		.ascii	"xTaskCreate\000"
 6465      6B437265 
 6465      61746500 
 6466              	.LASF13:
 6467 0457 75696E74 		.ascii	"uint8_t\000"
 6467      385F7400 
 6468              	.LASF63:
 6469 045f 7654696D 		.ascii	"vTimerSetTimerID\000"
 6469      65725365 
 6469      7454696D 
 6469      65724944 
 6469      00
 6470              	.LASF77:
 6471 0470 7854696D 		.ascii	"xTimerListsWereSwitched\000"
 6471      65724C69 
 6471      73747357 
 6471      65726553 
 6471      77697463 
 6472              	.LASF110:
 6473 0488 78517565 		.ascii	"xQueueGenericCreate\000"
 6473      75654765 
 6473      6E657269 
 6473      63437265 
 6473      61746500 
 6474              	.LASF113:
 6475 049c 78546173 		.ascii	"xTaskGetTickCount\000"
 6475      6B476574 
ARM GAS  /tmp/cc4130RP.s 			page 144


 6475      5469636B 
 6475      436F756E 
 6475      7400
 6476              	.LASF1:
 6477 04ae 6C6F6E67 		.ascii	"long long int\000"
 6477      206C6F6E 
 6477      6720696E 
 6477      7400
 6478              	.LASF64:
 6479 04bc 70764E65 		.ascii	"pvNewID\000"
 6479      77494400 
 6480              	.LASF15:
 6481 04c4 42617365 		.ascii	"BaseType_t\000"
 6481      54797065 
 6481      5F7400
 6482              	.LASF74:
 6483 04cf 70727653 		.ascii	"prvSwitchTimerLists\000"
 6483      77697463 
 6483      6854696D 
 6483      65724C69 
 6483      73747300 
 6484              	.LASF19:
 6485 04e3 70784E65 		.ascii	"pxNext\000"
 6485      787400
 6486              	.LASF32:
 6487 04ea 5461736B 		.ascii	"TaskHandle_t\000"
 6487      48616E64 
 6487      6C655F74 
 6487      00
 6488              	.LASF31:
 6489 04f7 4C697374 		.ascii	"List_t\000"
 6489      5F7400
 6490              	.LASF17:
 6491 04fe 5469636B 		.ascii	"TickType_t\000"
 6491      54797065 
 6491      5F7400
 6492              	.LASF39:
 6493 0509 7854696D 		.ascii	"xTimerListItem\000"
 6493      65724C69 
 6493      73744974 
 6493      656D00
 6494              	.LASF2:
 6495 0518 6C6F6E67 		.ascii	"long double\000"
 6495      20646F75 
 6495      626C6500 
 6496              	.LASF98:
 6497 0524 7854696D 		.ascii	"xTimerGenericCommand\000"
 6497      65724765 
 6497      6E657269 
 6497      63436F6D 
 6497      6D616E64 
 6498              	.LASF22:
 6499 0539 7076436F 		.ascii	"pvContainer\000"
 6499      6E746169 
 6499      6E657200 
 6500              	.LASF60:
 6501 0545 7854696D 		.ascii	"xTimerTaskHandle\000"
ARM GAS  /tmp/cc4130RP.s 			page 145


 6501      65725461 
 6501      736B4861 
 6501      6E646C65 
 6501      00
 6502              	.LASF90:
 6503 0556 70727654 		.ascii	"prvTimerTask\000"
 6503      696D6572 
 6503      5461736B 
 6503      00
 6504              	.LASF70:
 6505 0563 784E6578 		.ascii	"xNextExpireTime\000"
 6505      74457870 
 6505      69726554 
 6505      696D6500 
 6506              	.LASF125:
 6507 0573 474E5520 		.ascii	"GNU C17 10.3.1 20210824 (release) -mcpu=cortex-m3 -"
 6507      43313720 
 6507      31302E33 
 6507      2E312032 
 6507      30323130 
 6508 05a6 6D746875 		.ascii	"mthumb -mfloat-abi=soft -march=armv7-m -g -gdwarf-2"
 6508      6D62202D 
 6508      6D666C6F 
 6508      61742D61 
 6508      62693D73 
 6509 05d9 202D4F73 		.ascii	" -Os -fomit-frame-pointer\000"
 6509      202D666F 
 6509      6D69742D 
 6509      6672616D 
 6509      652D706F 
 6510              	.LASF5:
 6511 05f3 73686F72 		.ascii	"short int\000"
 6511      7420696E 
 6511      7400
 6512              	.LASF122:
 6513 05fd 764C6973 		.ascii	"vListInitialiseItem\000"
 6513      74496E69 
 6513      7469616C 
 6513      69736549 
 6513      74656D00 
 6514              	.LASF44:
 6515 0611 75635374 		.ascii	"ucStatus\000"
 6515      61747573 
 6515      00
 6516              	.LASF18:
 6517 061a 78497465 		.ascii	"xItemValue\000"
 6517      6D56616C 
 6517      756500
 6518              	.LASF75:
 6519 0625 70727650 		.ascii	"prvProcessReceivedCommands\000"
 6519      726F6365 
 6519      73735265 
 6519      63656976 
 6519      6564436F 
 6520              	.LASF7:
 6521 0640 6C6F6E67 		.ascii	"long int\000"
 6521      20696E74 
ARM GAS  /tmp/cc4130RP.s 			page 146


 6521      00
 6522              	.LASF83:
 6523 0649 784C6173 		.ascii	"xLastTime\000"
 6523      7454696D 
 6523      6500
 6524              	.LASF115:
 6525 0653 78546173 		.ascii	"xTaskResumeAll\000"
 6525      6B526573 
 6525      756D6541 
 6525      6C6C00
 6526              	.LASF57:
 6527 0662 70784375 		.ascii	"pxCurrentTimerList\000"
 6527      7272656E 
 6527      7454696D 
 6527      65724C69 
 6527      737400
 6528              	.LASF76:
 6529 0675 784D6573 		.ascii	"xMessage\000"
 6529      73616765 
 6529      00
 6530              	.LASF118:
 6531 067e 76506F72 		.ascii	"vPortFree\000"
 6531      74467265 
 6531      6500
 6532              	.LASF88:
 6533 0688 784C6973 		.ascii	"xListWasEmpty\000"
 6533      74576173 
 6533      456D7074 
 6533      7900
 6534              	.LASF41:
 6535 0696 70765469 		.ascii	"pvTimerID\000"
 6535      6D657249 
 6535      4400
 6536              	.LASF96:
 6537 06a0 75784175 		.ascii	"uxAutoReload\000"
 6537      746F5265 
 6537      6C6F6164 
 6537      00
 6538              	.LASF8:
 6539 06ad 5F5F7569 		.ascii	"__uint8_t\000"
 6539      6E74385F 
 6539      7400
 6540              	.LASF47:
 6541 06b7 54696D65 		.ascii	"Timer_t\000"
 6541      725F7400 
 6542              	.LASF53:
 6543 06bf 784D6573 		.ascii	"xMessageID\000"
 6543      73616765 
 6543      494400
 6544              	.LASF54:
 6545 06ca 4461656D 		.ascii	"DaemonTaskMessage_t\000"
 6545      6F6E5461 
 6545      736B4D65 
 6545      73736167 
 6545      655F7400 
 6546              	.LASF71:
 6547 06de 7852656C 		.ascii	"xReloadTime\000"
ARM GAS  /tmp/cc4130RP.s 			page 147


 6547      6F616454 
 6547      696D6500 
 6548              	.LASF69:
 6549 06ea 78526574 		.ascii	"xReturn\000"
 6549      75726E00 
 6550              	.LASF62:
 6551 06f2 7654696D 		.ascii	"vTimerSetTimerNumber\000"
 6551      65725365 
 6551      7454696D 
 6551      65724E75 
 6551      6D626572 
 6552              	.LASF10:
 6553 0707 6C6F6E67 		.ascii	"long unsigned int\000"
 6553      20756E73 
 6553      69676E65 
 6553      6420696E 
 6553      7400
 6554              	.LASF111:
 6555 0719 75784C69 		.ascii	"uxListRemove\000"
 6555      73745265 
 6555      6D6F7665 
 6555      00
 6556              	.LASF73:
 6557 0726 78526573 		.ascii	"xResult\000"
 6557      756C7400 
 6558              	.LASF97:
 6559 072e 7854696D 		.ascii	"xTimerGetPeriod\000"
 6559      65724765 
 6559      74506572 
 6559      696F6400 
 6560              	.LASF50:
 6561 073e 70785469 		.ascii	"pxTimer\000"
 6561      6D657200 
 6562              	.LASF4:
 6563 0746 756E7369 		.ascii	"unsigned char\000"
 6563      676E6564 
 6563      20636861 
 6563      7200
 6564              	.LASF49:
 6565 0754 784D6573 		.ascii	"xMessageValue\000"
 6565      73616765 
 6565      56616C75 
 6565      6500
 6566              	.LASF9:
 6567 0762 5F5F7569 		.ascii	"__uint32_t\000"
 6567      6E743332 
 6567      5F7400
 6568              	.LASF89:
 6569 076d 70727643 		.ascii	"prvCheckForValidListAndQueue\000"
 6569      6865636B 
 6569      466F7256 
 6569      616C6964 
 6569      4C697374 
 6570              	.LASF109:
 6571 078a 764C6973 		.ascii	"vListInitialise\000"
 6571      74496E69 
 6571      7469616C 
ARM GAS  /tmp/cc4130RP.s 			page 148


 6571      69736500 
 6572              	.LASF37:
 6573 079a 746D7254 		.ascii	"tmrTimerControl\000"
 6573      696D6572 
 6573      436F6E74 
 6573      726F6C00 
 6574              	.LASF93:
 6575 07aa 70635469 		.ascii	"pcTimerGetName\000"
 6575      6D657247 
 6575      65744E61 
 6575      6D6500
 6576              	.LASF102:
 6577 07b9 78546963 		.ascii	"xTicksToWait\000"
 6577      6B73546F 
 6577      57616974 
 6577      00
 6578              	.LASF21:
 6579 07c6 70764F77 		.ascii	"pvOwner\000"
 6579      6E657200 
 6580              	.LASF87:
 6581 07ce 70727650 		.ascii	"prvProcessTimerOrBlockTask\000"
 6581      726F6365 
 6581      73735469 
 6581      6D65724F 
 6581      72426C6F 
 6582              	.LASF95:
 6583 07e9 7654696D 		.ascii	"vTimerSetReloadMode\000"
 6583      65725365 
 6583      7452656C 
 6583      6F61644D 
 6583      6F646500 
 6584              	.LASF3:
 6585 07fd 7369676E 		.ascii	"signed char\000"
 6585      65642063 
 6585      68617200 
 6586              	.LASF79:
 6587 0809 784E6578 		.ascii	"xNextExpiryTime\000"
 6587      74457870 
 6587      69727954 
 6587      696D6500 
 6588              	.LASF6:
 6589 0819 73686F72 		.ascii	"short unsigned int\000"
 6589      7420756E 
 6589      7369676E 
 6589      65642069 
 6589      6E7400
 6590              	.LASF48:
 6591 082c 746D7254 		.ascii	"tmrTimerParameters\000"
 6591      696D6572 
 6591      50617261 
 6591      6D657465 
 6591      727300
 6592              	.LASF85:
 6593 083f 70727647 		.ascii	"prvGetNextExpireTime\000"
 6593      65744E65 
 6593      78744578 
 6593      70697265 
ARM GAS  /tmp/cc4130RP.s 			page 149


 6593      54696D65 
 6594              	.LASF82:
 6595 0854 70785469 		.ascii	"pxTimerListsWereSwitched\000"
 6595      6D65724C 
 6595      69737473 
 6595      57657265 
 6595      53776974 
 6596              		.ident	"GCC: (GNU Arm Embedded Toolchain 10.3-2021.10) 10.3.1 20210824 (release)"
ARM GAS  /tmp/cc4130RP.s 			page 150


DEFINED SYMBOLS
                            *ABS*:0000000000000000 timers.c
     /tmp/cc4130RP.s:77     .text:0000000000000000 $t
     /tmp/cc4130RP.s:82     .text:0000000000000000 prvCheckForValidListAndQueue
     /tmp/cc4130RP.s:165    .text:0000000000000038 $d
     /tmp/cc4130RP.s:169    .text:000000000000003c $t
     /tmp/cc4130RP.s:174    .text:000000000000003c prvInsertTimerInActiveList
     /tmp/cc4130RP.s:278    .text:0000000000000070 $d
     /tmp/cc4130RP.s:286    .text:0000000000000074 $t
     /tmp/cc4130RP.s:292    .text:0000000000000074 xTimerCreateTimerTask
     /tmp/cc4130RP.s:343    .text:000000000000009c $d
     /tmp/cc4130RP.s:773    .text:00000000000001b4 prvTimerTask
     /tmp/cc4130RP.s:349    .text:00000000000000a8 $t
     /tmp/cc4130RP.s:355    .text:00000000000000a8 xTimerCreate
     /tmp/cc4130RP.s:461    .text:00000000000000ee xTimerGenericCommand
     /tmp/cc4130RP.s:567    .text:000000000000012c $d
     /tmp/cc4130RP.s:571    .text:0000000000000130 $t
     /tmp/cc4130RP.s:576    .text:0000000000000130 prvSampleTimeNow
     /tmp/cc4130RP.s:764    .text:00000000000001b0 $d
     /tmp/cc4130RP.s:768    .text:00000000000001b4 $t
     /tmp/cc4130RP.s:1006   .text:0000000000000262 $d
     /tmp/cc4130RP.s:1017   .text:000000000000026c $t
     /tmp/cc4130RP.s:1225   .text:000000000000032c $d
     /tmp/cc4130RP.s:1231   .text:0000000000000330 $t
     /tmp/cc4130RP.s:1237   .text:0000000000000330 xTimerGetTimerDaemonTaskHandle
     /tmp/cc4130RP.s:1254   .text:0000000000000338 $d
     /tmp/cc4130RP.s:1258   .text:000000000000033c $t
     /tmp/cc4130RP.s:1264   .text:000000000000033c xTimerGetPeriod
     /tmp/cc4130RP.s:1290   .text:0000000000000340 vTimerSetReloadMode
     /tmp/cc4130RP.s:1364   .text:0000000000000366 xTimerGetExpiryTime
     /tmp/cc4130RP.s:1392   .text:000000000000036a pcTimerGetName
     /tmp/cc4130RP.s:1418   .text:000000000000036e xTimerIsTimerActive
     /tmp/cc4130RP.s:1471   .text:0000000000000386 pvTimerGetTimerID
     /tmp/cc4130RP.s:1518   .text:0000000000000398 vTimerSetTimerID
     /tmp/cc4130RP.s:1577   .text:00000000000003ac uxTimerGetTimerNumber
     /tmp/cc4130RP.s:1601   .text:00000000000003b0 vTimerSetTimerNumber
     /tmp/cc4130RP.s:1620   .bss:0000000000000000 $d
     /tmp/cc4130RP.s:1624   .bss:0000000000000000 xTimerQueue
     /tmp/cc4130RP.s:1628   .bss:0000000000000004 xActiveTimerList1
     /tmp/cc4130RP.s:1632   .bss:0000000000000018 xActiveTimerList2
     /tmp/cc4130RP.s:1636   .bss:000000000000002c pxCurrentTimerList
     /tmp/cc4130RP.s:1640   .bss:0000000000000030 pxOverflowTimerList
     /tmp/cc4130RP.s:1644   .bss:0000000000000034 xTimerTaskHandle
     /tmp/cc4130RP.s:1648   .bss:0000000000000038 xLastTime.0

UNDEFINED SYMBOLS
vPortEnterCritical
vListInitialise
xQueueGenericCreate
vPortExitCritical
vListInsert
xTaskCreate
pvPortMalloc
vListInitialiseItem
xTaskGetSchedulerState
xQueueGenericSend
xQueueGenericSendFromISR
ARM GAS  /tmp/cc4130RP.s 			page 151


xTaskGetTickCount
uxListRemove
vTaskSuspendAll
xTaskResumeAll
xQueueReceive
vQueueWaitForMessageRestricted
vPortFree
