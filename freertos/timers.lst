ARM GAS  /tmp/ccx8nc1r.s 			page 1


   1              		.cpu cortex-m3
   2              		.arch armv7-m
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1	@ Tag_ABI_FP_denormal
   5              		.eabi_attribute 21, 1	@ Tag_ABI_FP_exceptions
   6              		.eabi_attribute 23, 3	@ Tag_ABI_FP_number_model
   7              		.eabi_attribute 24, 1	@ Tag_ABI_align8_needed
   8              		.eabi_attribute 25, 1	@ Tag_ABI_align8_preserved
   9              		.eabi_attribute 26, 1	@ Tag_ABI_enum_size
  10              		.eabi_attribute 30, 4	@ Tag_ABI_optimization_goals
  11              		.eabi_attribute 34, 1	@ Tag_CPU_unaligned_access
  12              		.eabi_attribute 18, 4	@ Tag_ABI_PCS_wchar_t
  13              		.file	"timers.c"
  14              	@ GNU C17 (Arch Repository) version 13.2.0 (arm-none-eabi)
  15              	@	compiled by GNU C version 13.2.1 20230801, GMP version 6.3.0, MPFR version 4.2.0-p12, MPC version
  16              	
  17              	@ warning: MPFR header version 4.2.0-p12 differs from library version 4.2.1.
  18              	@ GGC heuristics: --param ggc-min-expand=100 --param ggc-min-heapsize=131072
  19              	@ options passed: -mcpu=cortex-m3 -mthumb -mfloat-abi=soft -march=armv7-m -g -gdwarf-2 -Os -fomit-f
  20              		.text
  21              	.Ltext0:
  22              		.cfi_sections	.debug_frame
  23              		.file 1 "../freertos/timers.c"
  24              		.align	1
  25              		.syntax unified
  26              		.thumb
  27              		.thumb_func
  28              		.type	prvInsertTimerInActiveList, %function
  29              	prvInsertTimerInActiveList:
  30              	.LVL0:
  31              	.LFB19:
   1:../freertos/timers.c **** /*
   2:../freertos/timers.c ****  * FreeRTOS Kernel V10.2.1
   3:../freertos/timers.c ****  * Copyright (C) 2019 Amazon.com, Inc. or its affiliates.  All Rights Reserved.
   4:../freertos/timers.c ****  *
   5:../freertos/timers.c ****  * Permission is hereby granted, free of charge, to any person obtaining a copy of
   6:../freertos/timers.c ****  * this software and associated documentation files (the "Software"), to deal in
   7:../freertos/timers.c ****  * the Software without restriction, including without limitation the rights to
   8:../freertos/timers.c ****  * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of
   9:../freertos/timers.c ****  * the Software, and to permit persons to whom the Software is furnished to do so,
  10:../freertos/timers.c ****  * subject to the following conditions:
  11:../freertos/timers.c ****  *
  12:../freertos/timers.c ****  * The above copyright notice and this permission notice shall be included in all
  13:../freertos/timers.c ****  * copies or substantial portions of the Software.
  14:../freertos/timers.c ****  *
  15:../freertos/timers.c ****  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  16:../freertos/timers.c ****  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
  17:../freertos/timers.c ****  * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
  18:../freertos/timers.c ****  * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
  19:../freertos/timers.c ****  * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
  20:../freertos/timers.c ****  * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
  21:../freertos/timers.c ****  *
  22:../freertos/timers.c ****  * http://www.FreeRTOS.org
  23:../freertos/timers.c ****  * http://aws.amazon.com/freertos
  24:../freertos/timers.c ****  *
  25:../freertos/timers.c ****  * 1 tab == 4 spaces!
  26:../freertos/timers.c ****  */
ARM GAS  /tmp/ccx8nc1r.s 			page 2


  27:../freertos/timers.c **** 
  28:../freertos/timers.c **** /* Standard includes. */
  29:../freertos/timers.c **** #include <stdlib.h>
  30:../freertos/timers.c **** 
  31:../freertos/timers.c **** /* Defining MPU_WRAPPERS_INCLUDED_FROM_API_FILE prevents task.h from redefining
  32:../freertos/timers.c **** all the API functions to use the MPU wrappers.  That should only be done when
  33:../freertos/timers.c **** task.h is included from an application file. */
  34:../freertos/timers.c **** #define MPU_WRAPPERS_INCLUDED_FROM_API_FILE
  35:../freertos/timers.c **** 
  36:../freertos/timers.c **** #include "FreeRTOS.h"
  37:../freertos/timers.c **** #include "task.h"
  38:../freertos/timers.c **** #include "queue.h"
  39:../freertos/timers.c **** #include "timers.h"
  40:../freertos/timers.c **** 
  41:../freertos/timers.c **** #if ( INCLUDE_xTimerPendFunctionCall == 1 ) && ( configUSE_TIMERS == 0 )
  42:../freertos/timers.c **** 	#error configUSE_TIMERS must be set to 1 to make the xTimerPendFunctionCall() function available.
  43:../freertos/timers.c **** #endif
  44:../freertos/timers.c **** 
  45:../freertos/timers.c **** /* Lint e9021, e961 and e750 are suppressed as a MISRA exception justified
  46:../freertos/timers.c **** because the MPU ports require MPU_WRAPPERS_INCLUDED_FROM_API_FILE to be defined
  47:../freertos/timers.c **** for the header files above, but not in this file, in order to generate the
  48:../freertos/timers.c **** correct privileged Vs unprivileged linkage and placement. */
  49:../freertos/timers.c **** #undef MPU_WRAPPERS_INCLUDED_FROM_API_FILE /*lint !e9021 !e961 !e750. */
  50:../freertos/timers.c **** 
  51:../freertos/timers.c **** 
  52:../freertos/timers.c **** /* This entire source file will be skipped if the application is not configured
  53:../freertos/timers.c **** to include software timer functionality.  This #if is closed at the very bottom
  54:../freertos/timers.c **** of this file.  If you want to include software timer functionality then ensure
  55:../freertos/timers.c **** configUSE_TIMERS is set to 1 in FreeRTOSConfig.h. */
  56:../freertos/timers.c **** #if ( configUSE_TIMERS == 1 )
  57:../freertos/timers.c **** 
  58:../freertos/timers.c **** /* Misc definitions. */
  59:../freertos/timers.c **** #define tmrNO_DELAY		( TickType_t ) 0U
  60:../freertos/timers.c **** 
  61:../freertos/timers.c **** /* The name assigned to the timer service task.  This can be overridden by
  62:../freertos/timers.c **** defining trmTIMER_SERVICE_TASK_NAME in FreeRTOSConfig.h. */
  63:../freertos/timers.c **** #ifndef configTIMER_SERVICE_TASK_NAME
  64:../freertos/timers.c **** 	#define configTIMER_SERVICE_TASK_NAME "Tmr Svc"
  65:../freertos/timers.c **** #endif
  66:../freertos/timers.c **** 
  67:../freertos/timers.c **** /* Bit definitions used in the ucStatus member of a timer structure. */
  68:../freertos/timers.c **** #define tmrSTATUS_IS_ACTIVE					( ( uint8_t ) 0x01 )
  69:../freertos/timers.c **** #define tmrSTATUS_IS_STATICALLY_ALLOCATED	( ( uint8_t ) 0x02 )
  70:../freertos/timers.c **** #define tmrSTATUS_IS_AUTORELOAD				( ( uint8_t ) 0x04 )
  71:../freertos/timers.c **** 
  72:../freertos/timers.c **** /* The definition of the timers themselves. */
  73:../freertos/timers.c **** typedef struct tmrTimerControl /* The old naming convention is used to prevent breaking kernel awar
  74:../freertos/timers.c **** {
  75:../freertos/timers.c **** 	const char				*pcTimerName;		/*<< Text name.  This is not used by the kernel, it is included simpl
  76:../freertos/timers.c **** 	ListItem_t				xTimerListItem;		/*<< Standard linked list item as used by all kernel features for e
  77:../freertos/timers.c **** 	TickType_t				xTimerPeriodInTicks;/*<< How quickly and often the timer expires. */
  78:../freertos/timers.c **** 	void 					*pvTimerID;			/*<< An ID to identify the timer.  This allows the timer to be identified 
  79:../freertos/timers.c **** 	TimerCallbackFunction_t	pxCallbackFunction;	/*<< The function that will be called when the timer e
  80:../freertos/timers.c **** 	#if( configUSE_TRACE_FACILITY == 1 )
  81:../freertos/timers.c **** 		UBaseType_t			uxTimerNumber;		/*<< An ID assigned by trace tools such as FreeRTOS+Trace */
  82:../freertos/timers.c **** 	#endif
  83:../freertos/timers.c **** 	uint8_t 				ucStatus;			/*<< Holds bits to say if the timer was statically allocated or not, and i
ARM GAS  /tmp/ccx8nc1r.s 			page 3


  84:../freertos/timers.c **** } xTIMER;
  85:../freertos/timers.c **** 
  86:../freertos/timers.c **** /* The old xTIMER name is maintained above then typedefed to the new Timer_t
  87:../freertos/timers.c **** name below to enable the use of older kernel aware debuggers. */
  88:../freertos/timers.c **** typedef xTIMER Timer_t;
  89:../freertos/timers.c **** 
  90:../freertos/timers.c **** /* The definition of messages that can be sent and received on the timer queue.
  91:../freertos/timers.c **** Two types of message can be queued - messages that manipulate a software timer,
  92:../freertos/timers.c **** and messages that request the execution of a non-timer related callback.  The
  93:../freertos/timers.c **** two message types are defined in two separate structures, xTimerParametersType
  94:../freertos/timers.c **** and xCallbackParametersType respectively. */
  95:../freertos/timers.c **** typedef struct tmrTimerParameters
  96:../freertos/timers.c **** {
  97:../freertos/timers.c **** 	TickType_t			xMessageValue;		/*<< An optional value used by a subset of commands, for example, whe
  98:../freertos/timers.c **** 	Timer_t *			pxTimer;			/*<< The timer to which the command will be applied. */
  99:../freertos/timers.c **** } TimerParameter_t;
 100:../freertos/timers.c **** 
 101:../freertos/timers.c **** 
 102:../freertos/timers.c **** typedef struct tmrCallbackParameters
 103:../freertos/timers.c **** {
 104:../freertos/timers.c **** 	PendedFunction_t	pxCallbackFunction;	/* << The callback function to execute. */
 105:../freertos/timers.c **** 	void *pvParameter1;						/* << The value that will be used as the callback functions first paramet
 106:../freertos/timers.c **** 	uint32_t ulParameter2;					/* << The value that will be used as the callback functions second para
 107:../freertos/timers.c **** } CallbackParameters_t;
 108:../freertos/timers.c **** 
 109:../freertos/timers.c **** /* The structure that contains the two message types, along with an identifier
 110:../freertos/timers.c **** that is used to determine which message type is valid. */
 111:../freertos/timers.c **** typedef struct tmrTimerQueueMessage
 112:../freertos/timers.c **** {
 113:../freertos/timers.c **** 	BaseType_t			xMessageID;			/*<< The command being sent to the timer service task. */
 114:../freertos/timers.c **** 	union
 115:../freertos/timers.c **** 	{
 116:../freertos/timers.c **** 		TimerParameter_t xTimerParameters;
 117:../freertos/timers.c **** 
 118:../freertos/timers.c **** 		/* Don't include xCallbackParameters if it is not going to be used as
 119:../freertos/timers.c **** 		it makes the structure (and therefore the timer queue) larger. */
 120:../freertos/timers.c **** 		#if ( INCLUDE_xTimerPendFunctionCall == 1 )
 121:../freertos/timers.c **** 			CallbackParameters_t xCallbackParameters;
 122:../freertos/timers.c **** 		#endif /* INCLUDE_xTimerPendFunctionCall */
 123:../freertos/timers.c **** 	} u;
 124:../freertos/timers.c **** } DaemonTaskMessage_t;
 125:../freertos/timers.c **** 
 126:../freertos/timers.c **** /*lint -save -e956 A manual analysis and inspection has been used to determine
 127:../freertos/timers.c **** which static variables must be declared volatile. */
 128:../freertos/timers.c **** 
 129:../freertos/timers.c **** /* The list in which active timers are stored.  Timers are referenced in expire
 130:../freertos/timers.c **** time order, with the nearest expiry time at the front of the list.  Only the
 131:../freertos/timers.c **** timer service task is allowed to access these lists.
 132:../freertos/timers.c **** xActiveTimerList1 and xActiveTimerList2 could be at function scope but that
 133:../freertos/timers.c **** breaks some kernel aware debuggers, and debuggers that reply on removing the
 134:../freertos/timers.c **** static qualifier. */
 135:../freertos/timers.c **** PRIVILEGED_DATA static List_t xActiveTimerList1;
 136:../freertos/timers.c **** PRIVILEGED_DATA static List_t xActiveTimerList2;
 137:../freertos/timers.c **** PRIVILEGED_DATA static List_t *pxCurrentTimerList;
 138:../freertos/timers.c **** PRIVILEGED_DATA static List_t *pxOverflowTimerList;
 139:../freertos/timers.c **** 
 140:../freertos/timers.c **** /* A queue that is used to send commands to the timer service task. */
ARM GAS  /tmp/ccx8nc1r.s 			page 4


 141:../freertos/timers.c **** PRIVILEGED_DATA static QueueHandle_t xTimerQueue = NULL;
 142:../freertos/timers.c **** PRIVILEGED_DATA static TaskHandle_t xTimerTaskHandle = NULL;
 143:../freertos/timers.c **** 
 144:../freertos/timers.c **** /*lint -restore */
 145:../freertos/timers.c **** 
 146:../freertos/timers.c **** /*-----------------------------------------------------------*/
 147:../freertos/timers.c **** 
 148:../freertos/timers.c **** #if( configSUPPORT_STATIC_ALLOCATION == 1 )
 149:../freertos/timers.c **** 
 150:../freertos/timers.c **** 	/* If static allocation is supported then the application must provide the
 151:../freertos/timers.c **** 	following callback function - which enables the application to optionally
 152:../freertos/timers.c **** 	provide the memory that will be used by the timer task as the task's stack
 153:../freertos/timers.c **** 	and TCB. */
 154:../freertos/timers.c **** 	extern void vApplicationGetTimerTaskMemory( StaticTask_t **ppxTimerTaskTCBBuffer, StackType_t **pp
 155:../freertos/timers.c **** 
 156:../freertos/timers.c **** #endif
 157:../freertos/timers.c **** 
 158:../freertos/timers.c **** /*
 159:../freertos/timers.c ****  * Initialise the infrastructure used by the timer service task if it has not
 160:../freertos/timers.c ****  * been initialised already.
 161:../freertos/timers.c ****  */
 162:../freertos/timers.c **** static void prvCheckForValidListAndQueue( void ) PRIVILEGED_FUNCTION;
 163:../freertos/timers.c **** 
 164:../freertos/timers.c **** /*
 165:../freertos/timers.c ****  * The timer service task (daemon).  Timer functionality is controlled by this
 166:../freertos/timers.c ****  * task.  Other tasks communicate with the timer service task using the
 167:../freertos/timers.c ****  * xTimerQueue queue.
 168:../freertos/timers.c ****  */
 169:../freertos/timers.c **** static portTASK_FUNCTION_PROTO( prvTimerTask, pvParameters ) PRIVILEGED_FUNCTION;
 170:../freertos/timers.c **** 
 171:../freertos/timers.c **** /*
 172:../freertos/timers.c ****  * Called by the timer service task to interpret and process a command it
 173:../freertos/timers.c ****  * received on the timer queue.
 174:../freertos/timers.c ****  */
 175:../freertos/timers.c **** static void prvProcessReceivedCommands( void ) PRIVILEGED_FUNCTION;
 176:../freertos/timers.c **** 
 177:../freertos/timers.c **** /*
 178:../freertos/timers.c ****  * Insert the timer into either xActiveTimerList1, or xActiveTimerList2,
 179:../freertos/timers.c ****  * depending on if the expire time causes a timer counter overflow.
 180:../freertos/timers.c ****  */
 181:../freertos/timers.c **** static BaseType_t prvInsertTimerInActiveList( Timer_t * const pxTimer, const TickType_t xNextExpiry
 182:../freertos/timers.c **** 
 183:../freertos/timers.c **** /*
 184:../freertos/timers.c ****  * An active timer has reached its expire time.  Reload the timer if it is an
 185:../freertos/timers.c ****  * auto reload timer, then call its callback.
 186:../freertos/timers.c ****  */
 187:../freertos/timers.c **** static void prvProcessExpiredTimer( const TickType_t xNextExpireTime, const TickType_t xTimeNow ) P
 188:../freertos/timers.c **** 
 189:../freertos/timers.c **** /*
 190:../freertos/timers.c ****  * The tick count has overflowed.  Switch the timer lists after ensuring the
 191:../freertos/timers.c ****  * current timer list does not still reference some timers.
 192:../freertos/timers.c ****  */
 193:../freertos/timers.c **** static void prvSwitchTimerLists( void ) PRIVILEGED_FUNCTION;
 194:../freertos/timers.c **** 
 195:../freertos/timers.c **** /*
 196:../freertos/timers.c ****  * Obtain the current tick count, setting *pxTimerListsWereSwitched to pdTRUE
 197:../freertos/timers.c ****  * if a tick count overflow occurred since prvSampleTimeNow() was last called.
ARM GAS  /tmp/ccx8nc1r.s 			page 5


 198:../freertos/timers.c ****  */
 199:../freertos/timers.c **** static TickType_t prvSampleTimeNow( BaseType_t * const pxTimerListsWereSwitched ) PRIVILEGED_FUNCTI
 200:../freertos/timers.c **** 
 201:../freertos/timers.c **** /*
 202:../freertos/timers.c ****  * If the timer list contains any active timers then return the expire time of
 203:../freertos/timers.c ****  * the timer that will expire first and set *pxListWasEmpty to false.  If the
 204:../freertos/timers.c ****  * timer list does not contain any timers then return 0 and set *pxListWasEmpty
 205:../freertos/timers.c ****  * to pdTRUE.
 206:../freertos/timers.c ****  */
 207:../freertos/timers.c **** static TickType_t prvGetNextExpireTime( BaseType_t * const pxListWasEmpty ) PRIVILEGED_FUNCTION;
 208:../freertos/timers.c **** 
 209:../freertos/timers.c **** /*
 210:../freertos/timers.c ****  * If a timer has expired, process it.  Otherwise, block the timer service task
 211:../freertos/timers.c ****  * until either a timer does expire or a command is received.
 212:../freertos/timers.c ****  */
 213:../freertos/timers.c **** static void prvProcessTimerOrBlockTask( const TickType_t xNextExpireTime, BaseType_t xListWasEmpty 
 214:../freertos/timers.c **** 
 215:../freertos/timers.c **** /*
 216:../freertos/timers.c ****  * Called after a Timer_t structure has been allocated either statically or
 217:../freertos/timers.c ****  * dynamically to fill in the structure's members.
 218:../freertos/timers.c ****  */
 219:../freertos/timers.c **** static void prvInitialiseNewTimer(	const char * const pcTimerName,			/*lint !e971 Unqualified char 
 220:../freertos/timers.c **** 									const TickType_t xTimerPeriodInTicks,
 221:../freertos/timers.c **** 									const UBaseType_t uxAutoReload,
 222:../freertos/timers.c **** 									void * const pvTimerID,
 223:../freertos/timers.c **** 									TimerCallbackFunction_t pxCallbackFunction,
 224:../freertos/timers.c **** 									Timer_t *pxNewTimer ) PRIVILEGED_FUNCTION;
 225:../freertos/timers.c **** /*-----------------------------------------------------------*/
 226:../freertos/timers.c **** 
 227:../freertos/timers.c **** BaseType_t xTimerCreateTimerTask( void )
 228:../freertos/timers.c **** {
 229:../freertos/timers.c **** BaseType_t xReturn = pdFAIL;
 230:../freertos/timers.c **** 
 231:../freertos/timers.c **** 	/* This function is called when the scheduler is started if
 232:../freertos/timers.c **** 	configUSE_TIMERS is set to 1.  Check that the infrastructure used by the
 233:../freertos/timers.c **** 	timer service task has been created/initialised.  If timers have already
 234:../freertos/timers.c **** 	been created then the initialisation will already have been performed. */
 235:../freertos/timers.c **** 	prvCheckForValidListAndQueue();
 236:../freertos/timers.c **** 
 237:../freertos/timers.c **** 	if( xTimerQueue != NULL )
 238:../freertos/timers.c **** 	{
 239:../freertos/timers.c **** 		#if( configSUPPORT_STATIC_ALLOCATION == 1 )
 240:../freertos/timers.c **** 		{
 241:../freertos/timers.c **** 			StaticTask_t *pxTimerTaskTCBBuffer = NULL;
 242:../freertos/timers.c **** 			StackType_t *pxTimerTaskStackBuffer = NULL;
 243:../freertos/timers.c **** 			uint32_t ulTimerTaskStackSize;
 244:../freertos/timers.c **** 
 245:../freertos/timers.c **** 			vApplicationGetTimerTaskMemory( &pxTimerTaskTCBBuffer, &pxTimerTaskStackBuffer, &ulTimerTaskStac
 246:../freertos/timers.c **** 			xTimerTaskHandle = xTaskCreateStatic(	prvTimerTask,
 247:../freertos/timers.c **** 													configTIMER_SERVICE_TASK_NAME,
 248:../freertos/timers.c **** 													ulTimerTaskStackSize,
 249:../freertos/timers.c **** 													NULL,
 250:../freertos/timers.c **** 													( ( UBaseType_t ) configTIMER_TASK_PRIORITY ) | portPRIVILEGE_BIT,
 251:../freertos/timers.c **** 													pxTimerTaskStackBuffer,
 252:../freertos/timers.c **** 													pxTimerTaskTCBBuffer );
 253:../freertos/timers.c **** 
 254:../freertos/timers.c **** 			if( xTimerTaskHandle != NULL )
ARM GAS  /tmp/ccx8nc1r.s 			page 6


 255:../freertos/timers.c **** 			{
 256:../freertos/timers.c **** 				xReturn = pdPASS;
 257:../freertos/timers.c **** 			}
 258:../freertos/timers.c **** 		}
 259:../freertos/timers.c **** 		#else
 260:../freertos/timers.c **** 		{
 261:../freertos/timers.c **** 			xReturn = xTaskCreate(	prvTimerTask,
 262:../freertos/timers.c **** 									configTIMER_SERVICE_TASK_NAME,
 263:../freertos/timers.c **** 									configTIMER_TASK_STACK_DEPTH,
 264:../freertos/timers.c **** 									NULL,
 265:../freertos/timers.c **** 									( ( UBaseType_t ) configTIMER_TASK_PRIORITY ) | portPRIVILEGE_BIT,
 266:../freertos/timers.c **** 									&xTimerTaskHandle );
 267:../freertos/timers.c **** 		}
 268:../freertos/timers.c **** 		#endif /* configSUPPORT_STATIC_ALLOCATION */
 269:../freertos/timers.c **** 	}
 270:../freertos/timers.c **** 	else
 271:../freertos/timers.c **** 	{
 272:../freertos/timers.c **** 		mtCOVERAGE_TEST_MARKER();
 273:../freertos/timers.c **** 	}
 274:../freertos/timers.c **** 
 275:../freertos/timers.c **** 	configASSERT( xReturn );
 276:../freertos/timers.c **** 	return xReturn;
 277:../freertos/timers.c **** }
 278:../freertos/timers.c **** /*-----------------------------------------------------------*/
 279:../freertos/timers.c **** 
 280:../freertos/timers.c **** #if( configSUPPORT_DYNAMIC_ALLOCATION == 1 )
 281:../freertos/timers.c **** 
 282:../freertos/timers.c **** 	TimerHandle_t xTimerCreate(	const char * const pcTimerName,			/*lint !e971 Unqualified char types 
 283:../freertos/timers.c **** 								const TickType_t xTimerPeriodInTicks,
 284:../freertos/timers.c **** 								const UBaseType_t uxAutoReload,
 285:../freertos/timers.c **** 								void * const pvTimerID,
 286:../freertos/timers.c **** 								TimerCallbackFunction_t pxCallbackFunction )
 287:../freertos/timers.c **** 	{
 288:../freertos/timers.c **** 	Timer_t *pxNewTimer;
 289:../freertos/timers.c **** 
 290:../freertos/timers.c **** 		pxNewTimer = ( Timer_t * ) pvPortMalloc( sizeof( Timer_t ) ); /*lint !e9087 !e9079 All values ret
 291:../freertos/timers.c **** 
 292:../freertos/timers.c **** 		if( pxNewTimer != NULL )
 293:../freertos/timers.c **** 		{
 294:../freertos/timers.c **** 			/* Status is thus far zero as the timer is not created statically
 295:../freertos/timers.c **** 			and has not been started.  The autoreload bit may get set in
 296:../freertos/timers.c **** 			prvInitialiseNewTimer. */
 297:../freertos/timers.c **** 			pxNewTimer->ucStatus = 0x00;
 298:../freertos/timers.c **** 			prvInitialiseNewTimer( pcTimerName, xTimerPeriodInTicks, uxAutoReload, pvTimerID, pxCallbackFunc
 299:../freertos/timers.c **** 		}
 300:../freertos/timers.c **** 
 301:../freertos/timers.c **** 		return pxNewTimer;
 302:../freertos/timers.c **** 	}
 303:../freertos/timers.c **** 
 304:../freertos/timers.c **** #endif /* configSUPPORT_DYNAMIC_ALLOCATION */
 305:../freertos/timers.c **** /*-----------------------------------------------------------*/
 306:../freertos/timers.c **** 
 307:../freertos/timers.c **** #if( configSUPPORT_STATIC_ALLOCATION == 1 )
 308:../freertos/timers.c **** 
 309:../freertos/timers.c **** 	TimerHandle_t xTimerCreateStatic(	const char * const pcTimerName,		/*lint !e971 Unqualified char t
 310:../freertos/timers.c **** 										const TickType_t xTimerPeriodInTicks,
 311:../freertos/timers.c **** 										const UBaseType_t uxAutoReload,
ARM GAS  /tmp/ccx8nc1r.s 			page 7


 312:../freertos/timers.c **** 										void * const pvTimerID,
 313:../freertos/timers.c **** 										TimerCallbackFunction_t pxCallbackFunction,
 314:../freertos/timers.c **** 										StaticTimer_t *pxTimerBuffer )
 315:../freertos/timers.c **** 	{
 316:../freertos/timers.c **** 	Timer_t *pxNewTimer;
 317:../freertos/timers.c **** 
 318:../freertos/timers.c **** 		#if( configASSERT_DEFINED == 1 )
 319:../freertos/timers.c **** 		{
 320:../freertos/timers.c **** 			/* Sanity check that the size of the structure used to declare a
 321:../freertos/timers.c **** 			variable of type StaticTimer_t equals the size of the real timer
 322:../freertos/timers.c **** 			structure. */
 323:../freertos/timers.c **** 			volatile size_t xSize = sizeof( StaticTimer_t );
 324:../freertos/timers.c **** 			configASSERT( xSize == sizeof( Timer_t ) );
 325:../freertos/timers.c **** 			( void ) xSize; /* Keeps lint quiet when configASSERT() is not defined. */
 326:../freertos/timers.c **** 		}
 327:../freertos/timers.c **** 		#endif /* configASSERT_DEFINED */
 328:../freertos/timers.c **** 
 329:../freertos/timers.c **** 		/* A pointer to a StaticTimer_t structure MUST be provided, use it. */
 330:../freertos/timers.c **** 		configASSERT( pxTimerBuffer );
 331:../freertos/timers.c **** 		pxNewTimer = ( Timer_t * ) pxTimerBuffer; /*lint !e740 !e9087 StaticTimer_t is a pointer to a Tim
 332:../freertos/timers.c **** 
 333:../freertos/timers.c **** 		if( pxNewTimer != NULL )
 334:../freertos/timers.c **** 		{
 335:../freertos/timers.c **** 			/* Timers can be created statically or dynamically so note this
 336:../freertos/timers.c **** 			timer was created statically in case it is later deleted.  The
 337:../freertos/timers.c **** 			autoreload bit may get set in prvInitialiseNewTimer(). */
 338:../freertos/timers.c **** 			pxNewTimer->ucStatus = tmrSTATUS_IS_STATICALLY_ALLOCATED;
 339:../freertos/timers.c **** 
 340:../freertos/timers.c **** 			prvInitialiseNewTimer( pcTimerName, xTimerPeriodInTicks, uxAutoReload, pvTimerID, pxCallbackFunc
 341:../freertos/timers.c **** 		}
 342:../freertos/timers.c **** 
 343:../freertos/timers.c **** 		return pxNewTimer;
 344:../freertos/timers.c **** 	}
 345:../freertos/timers.c **** 
 346:../freertos/timers.c **** #endif /* configSUPPORT_STATIC_ALLOCATION */
 347:../freertos/timers.c **** /*-----------------------------------------------------------*/
 348:../freertos/timers.c **** 
 349:../freertos/timers.c **** static void prvInitialiseNewTimer(	const char * const pcTimerName,			/*lint !e971 Unqualified char 
 350:../freertos/timers.c **** 									const TickType_t xTimerPeriodInTicks,
 351:../freertos/timers.c **** 									const UBaseType_t uxAutoReload,
 352:../freertos/timers.c **** 									void * const pvTimerID,
 353:../freertos/timers.c **** 									TimerCallbackFunction_t pxCallbackFunction,
 354:../freertos/timers.c **** 									Timer_t *pxNewTimer )
 355:../freertos/timers.c **** {
 356:../freertos/timers.c **** 	/* 0 is not a valid value for xTimerPeriodInTicks. */
 357:../freertos/timers.c **** 	configASSERT( ( xTimerPeriodInTicks > 0 ) );
 358:../freertos/timers.c **** 
 359:../freertos/timers.c **** 	if( pxNewTimer != NULL )
 360:../freertos/timers.c **** 	{
 361:../freertos/timers.c **** 		/* Ensure the infrastructure used by the timer service task has been
 362:../freertos/timers.c **** 		created/initialised. */
 363:../freertos/timers.c **** 		prvCheckForValidListAndQueue();
 364:../freertos/timers.c **** 
 365:../freertos/timers.c **** 		/* Initialise the timer structure members using the function
 366:../freertos/timers.c **** 		parameters. */
 367:../freertos/timers.c **** 		pxNewTimer->pcTimerName = pcTimerName;
 368:../freertos/timers.c **** 		pxNewTimer->xTimerPeriodInTicks = xTimerPeriodInTicks;
ARM GAS  /tmp/ccx8nc1r.s 			page 8


 369:../freertos/timers.c **** 		pxNewTimer->pvTimerID = pvTimerID;
 370:../freertos/timers.c **** 		pxNewTimer->pxCallbackFunction = pxCallbackFunction;
 371:../freertos/timers.c **** 		vListInitialiseItem( &( pxNewTimer->xTimerListItem ) );
 372:../freertos/timers.c **** 		if( uxAutoReload != pdFALSE )
 373:../freertos/timers.c **** 		{
 374:../freertos/timers.c **** 			pxNewTimer->ucStatus |= tmrSTATUS_IS_AUTORELOAD;
 375:../freertos/timers.c **** 		}
 376:../freertos/timers.c **** 		traceTIMER_CREATE( pxNewTimer );
 377:../freertos/timers.c **** 	}
 378:../freertos/timers.c **** }
 379:../freertos/timers.c **** /*-----------------------------------------------------------*/
 380:../freertos/timers.c **** 
 381:../freertos/timers.c **** BaseType_t xTimerGenericCommand( TimerHandle_t xTimer, const BaseType_t xCommandID, const TickType_
 382:../freertos/timers.c **** {
 383:../freertos/timers.c **** BaseType_t xReturn = pdFAIL;
 384:../freertos/timers.c **** DaemonTaskMessage_t xMessage;
 385:../freertos/timers.c **** 
 386:../freertos/timers.c **** 	configASSERT( xTimer );
 387:../freertos/timers.c **** 
 388:../freertos/timers.c **** 	/* Send a message to the timer service task to perform a particular action
 389:../freertos/timers.c **** 	on a particular timer definition. */
 390:../freertos/timers.c **** 	if( xTimerQueue != NULL )
 391:../freertos/timers.c **** 	{
 392:../freertos/timers.c **** 		/* Send a command to the timer service task to start the xTimer timer. */
 393:../freertos/timers.c **** 		xMessage.xMessageID = xCommandID;
 394:../freertos/timers.c **** 		xMessage.u.xTimerParameters.xMessageValue = xOptionalValue;
 395:../freertos/timers.c **** 		xMessage.u.xTimerParameters.pxTimer = xTimer;
 396:../freertos/timers.c **** 
 397:../freertos/timers.c **** 		if( xCommandID < tmrFIRST_FROM_ISR_COMMAND )
 398:../freertos/timers.c **** 		{
 399:../freertos/timers.c **** 			if( xTaskGetSchedulerState() == taskSCHEDULER_RUNNING )
 400:../freertos/timers.c **** 			{
 401:../freertos/timers.c **** 				xReturn = xQueueSendToBack( xTimerQueue, &xMessage, xTicksToWait );
 402:../freertos/timers.c **** 			}
 403:../freertos/timers.c **** 			else
 404:../freertos/timers.c **** 			{
 405:../freertos/timers.c **** 				xReturn = xQueueSendToBack( xTimerQueue, &xMessage, tmrNO_DELAY );
 406:../freertos/timers.c **** 			}
 407:../freertos/timers.c **** 		}
 408:../freertos/timers.c **** 		else
 409:../freertos/timers.c **** 		{
 410:../freertos/timers.c **** 			xReturn = xQueueSendToBackFromISR( xTimerQueue, &xMessage, pxHigherPriorityTaskWoken );
 411:../freertos/timers.c **** 		}
 412:../freertos/timers.c **** 
 413:../freertos/timers.c **** 		traceTIMER_COMMAND_SEND( xTimer, xCommandID, xOptionalValue, xReturn );
 414:../freertos/timers.c **** 	}
 415:../freertos/timers.c **** 	else
 416:../freertos/timers.c **** 	{
 417:../freertos/timers.c **** 		mtCOVERAGE_TEST_MARKER();
 418:../freertos/timers.c **** 	}
 419:../freertos/timers.c **** 
 420:../freertos/timers.c **** 	return xReturn;
 421:../freertos/timers.c **** }
 422:../freertos/timers.c **** /*-----------------------------------------------------------*/
 423:../freertos/timers.c **** 
 424:../freertos/timers.c **** TaskHandle_t xTimerGetTimerDaemonTaskHandle( void )
 425:../freertos/timers.c **** {
ARM GAS  /tmp/ccx8nc1r.s 			page 9


 426:../freertos/timers.c **** 	/* If xTimerGetTimerDaemonTaskHandle() is called before the scheduler has been
 427:../freertos/timers.c **** 	started, then xTimerTaskHandle will be NULL. */
 428:../freertos/timers.c **** 	configASSERT( ( xTimerTaskHandle != NULL ) );
 429:../freertos/timers.c **** 	return xTimerTaskHandle;
 430:../freertos/timers.c **** }
 431:../freertos/timers.c **** /*-----------------------------------------------------------*/
 432:../freertos/timers.c **** 
 433:../freertos/timers.c **** TickType_t xTimerGetPeriod( TimerHandle_t xTimer )
 434:../freertos/timers.c **** {
 435:../freertos/timers.c **** Timer_t *pxTimer = xTimer;
 436:../freertos/timers.c **** 
 437:../freertos/timers.c **** 	configASSERT( xTimer );
 438:../freertos/timers.c **** 	return pxTimer->xTimerPeriodInTicks;
 439:../freertos/timers.c **** }
 440:../freertos/timers.c **** /*-----------------------------------------------------------*/
 441:../freertos/timers.c **** 
 442:../freertos/timers.c **** void vTimerSetReloadMode( TimerHandle_t xTimer, const UBaseType_t uxAutoReload )
 443:../freertos/timers.c **** {
 444:../freertos/timers.c **** Timer_t * pxTimer =  xTimer;
 445:../freertos/timers.c **** 
 446:../freertos/timers.c **** 	configASSERT( xTimer );
 447:../freertos/timers.c **** 	taskENTER_CRITICAL();
 448:../freertos/timers.c **** 	{
 449:../freertos/timers.c **** 		if( uxAutoReload != pdFALSE )
 450:../freertos/timers.c **** 		{
 451:../freertos/timers.c **** 			pxTimer->ucStatus |= tmrSTATUS_IS_AUTORELOAD;
 452:../freertos/timers.c **** 		}
 453:../freertos/timers.c **** 		else
 454:../freertos/timers.c **** 		{
 455:../freertos/timers.c **** 			pxTimer->ucStatus &= ~tmrSTATUS_IS_AUTORELOAD;
 456:../freertos/timers.c **** 		}
 457:../freertos/timers.c **** 	}
 458:../freertos/timers.c **** 	taskEXIT_CRITICAL();
 459:../freertos/timers.c **** }
 460:../freertos/timers.c **** /*-----------------------------------------------------------*/
 461:../freertos/timers.c **** 
 462:../freertos/timers.c **** TickType_t xTimerGetExpiryTime( TimerHandle_t xTimer )
 463:../freertos/timers.c **** {
 464:../freertos/timers.c **** Timer_t * pxTimer =  xTimer;
 465:../freertos/timers.c **** TickType_t xReturn;
 466:../freertos/timers.c **** 
 467:../freertos/timers.c **** 	configASSERT( xTimer );
 468:../freertos/timers.c **** 	xReturn = listGET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ) );
 469:../freertos/timers.c **** 	return xReturn;
 470:../freertos/timers.c **** }
 471:../freertos/timers.c **** /*-----------------------------------------------------------*/
 472:../freertos/timers.c **** 
 473:../freertos/timers.c **** const char * pcTimerGetName( TimerHandle_t xTimer ) /*lint !e971 Unqualified char types are allowed
 474:../freertos/timers.c **** {
 475:../freertos/timers.c **** Timer_t *pxTimer = xTimer;
 476:../freertos/timers.c **** 
 477:../freertos/timers.c **** 	configASSERT( xTimer );
 478:../freertos/timers.c **** 	return pxTimer->pcTimerName;
 479:../freertos/timers.c **** }
 480:../freertos/timers.c **** /*-----------------------------------------------------------*/
 481:../freertos/timers.c **** 
 482:../freertos/timers.c **** static void prvProcessExpiredTimer( const TickType_t xNextExpireTime, const TickType_t xTimeNow )
ARM GAS  /tmp/ccx8nc1r.s 			page 10


 483:../freertos/timers.c **** {
 484:../freertos/timers.c **** BaseType_t xResult;
 485:../freertos/timers.c **** Timer_t * const pxTimer = ( Timer_t * ) listGET_OWNER_OF_HEAD_ENTRY( pxCurrentTimerList ); /*lint !
 486:../freertos/timers.c **** 
 487:../freertos/timers.c **** 	/* Remove the timer from the list of active timers.  A check has already
 488:../freertos/timers.c **** 	been performed to ensure the list is not empty. */
 489:../freertos/timers.c **** 	( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
 490:../freertos/timers.c **** 	traceTIMER_EXPIRED( pxTimer );
 491:../freertos/timers.c **** 
 492:../freertos/timers.c **** 	/* If the timer is an auto reload timer then calculate the next
 493:../freertos/timers.c **** 	expiry time and re-insert the timer in the list of active timers. */
 494:../freertos/timers.c **** 	if( ( pxTimer->ucStatus & tmrSTATUS_IS_AUTORELOAD ) != 0 )
 495:../freertos/timers.c **** 	{
 496:../freertos/timers.c **** 		/* The timer is inserted into a list using a time relative to anything
 497:../freertos/timers.c **** 		other than the current time.  It will therefore be inserted into the
 498:../freertos/timers.c **** 		correct list relative to the time this task thinks it is now. */
 499:../freertos/timers.c **** 		if( prvInsertTimerInActiveList( pxTimer, ( xNextExpireTime + pxTimer->xTimerPeriodInTicks ), xTim
 500:../freertos/timers.c **** 		{
 501:../freertos/timers.c **** 			/* The timer expired before it was added to the active timer
 502:../freertos/timers.c **** 			list.  Reload it now.  */
 503:../freertos/timers.c **** 			xResult = xTimerGenericCommand( pxTimer, tmrCOMMAND_START_DONT_TRACE, xNextExpireTime, NULL, tmr
 504:../freertos/timers.c **** 			configASSERT( xResult );
 505:../freertos/timers.c **** 			( void ) xResult;
 506:../freertos/timers.c **** 		}
 507:../freertos/timers.c **** 		else
 508:../freertos/timers.c **** 		{
 509:../freertos/timers.c **** 			mtCOVERAGE_TEST_MARKER();
 510:../freertos/timers.c **** 		}
 511:../freertos/timers.c **** 	}
 512:../freertos/timers.c **** 	else
 513:../freertos/timers.c **** 	{
 514:../freertos/timers.c **** 		pxTimer->ucStatus &= ~tmrSTATUS_IS_ACTIVE;
 515:../freertos/timers.c **** 		mtCOVERAGE_TEST_MARKER();
 516:../freertos/timers.c **** 	}
 517:../freertos/timers.c **** 
 518:../freertos/timers.c **** 	/* Call the timer callback. */
 519:../freertos/timers.c **** 	pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
 520:../freertos/timers.c **** }
 521:../freertos/timers.c **** /*-----------------------------------------------------------*/
 522:../freertos/timers.c **** 
 523:../freertos/timers.c **** static portTASK_FUNCTION( prvTimerTask, pvParameters )
 524:../freertos/timers.c **** {
 525:../freertos/timers.c **** TickType_t xNextExpireTime;
 526:../freertos/timers.c **** BaseType_t xListWasEmpty;
 527:../freertos/timers.c **** 
 528:../freertos/timers.c **** 	/* Just to avoid compiler warnings. */
 529:../freertos/timers.c **** 	( void ) pvParameters;
 530:../freertos/timers.c **** 
 531:../freertos/timers.c **** 	#if( configUSE_DAEMON_TASK_STARTUP_HOOK == 1 )
 532:../freertos/timers.c **** 	{
 533:../freertos/timers.c **** 		extern void vApplicationDaemonTaskStartupHook( void );
 534:../freertos/timers.c **** 
 535:../freertos/timers.c **** 		/* Allow the application writer to execute some code in the context of
 536:../freertos/timers.c **** 		this task at the point the task starts executing.  This is useful if the
 537:../freertos/timers.c **** 		application includes initialisation code that would benefit from
 538:../freertos/timers.c **** 		executing after the scheduler has been started. */
 539:../freertos/timers.c **** 		vApplicationDaemonTaskStartupHook();
ARM GAS  /tmp/ccx8nc1r.s 			page 11


 540:../freertos/timers.c **** 	}
 541:../freertos/timers.c **** 	#endif /* configUSE_DAEMON_TASK_STARTUP_HOOK */
 542:../freertos/timers.c **** 
 543:../freertos/timers.c **** 	for( ;; )
 544:../freertos/timers.c **** 	{
 545:../freertos/timers.c **** 		/* Query the timers list to see if it contains any timers, and if so,
 546:../freertos/timers.c **** 		obtain the time at which the next timer will expire. */
 547:../freertos/timers.c **** 		xNextExpireTime = prvGetNextExpireTime( &xListWasEmpty );
 548:../freertos/timers.c **** 
 549:../freertos/timers.c **** 		/* If a timer has expired, process it.  Otherwise, block this task
 550:../freertos/timers.c **** 		until either a timer does expire, or a command is received. */
 551:../freertos/timers.c **** 		prvProcessTimerOrBlockTask( xNextExpireTime, xListWasEmpty );
 552:../freertos/timers.c **** 
 553:../freertos/timers.c **** 		/* Empty the command queue. */
 554:../freertos/timers.c **** 		prvProcessReceivedCommands();
 555:../freertos/timers.c **** 	}
 556:../freertos/timers.c **** }
 557:../freertos/timers.c **** /*-----------------------------------------------------------*/
 558:../freertos/timers.c **** 
 559:../freertos/timers.c **** static void prvProcessTimerOrBlockTask( const TickType_t xNextExpireTime, BaseType_t xListWasEmpty 
 560:../freertos/timers.c **** {
 561:../freertos/timers.c **** TickType_t xTimeNow;
 562:../freertos/timers.c **** BaseType_t xTimerListsWereSwitched;
 563:../freertos/timers.c **** 
 564:../freertos/timers.c **** 	vTaskSuspendAll();
 565:../freertos/timers.c **** 	{
 566:../freertos/timers.c **** 		/* Obtain the time now to make an assessment as to whether the timer
 567:../freertos/timers.c **** 		has expired or not.  If obtaining the time causes the lists to switch
 568:../freertos/timers.c **** 		then don't process this timer as any timers that remained in the list
 569:../freertos/timers.c **** 		when the lists were switched will have been processed within the
 570:../freertos/timers.c **** 		prvSampleTimeNow() function. */
 571:../freertos/timers.c **** 		xTimeNow = prvSampleTimeNow( &xTimerListsWereSwitched );
 572:../freertos/timers.c **** 		if( xTimerListsWereSwitched == pdFALSE )
 573:../freertos/timers.c **** 		{
 574:../freertos/timers.c **** 			/* The tick count has not overflowed, has the timer expired? */
 575:../freertos/timers.c **** 			if( ( xListWasEmpty == pdFALSE ) && ( xNextExpireTime <= xTimeNow ) )
 576:../freertos/timers.c **** 			{
 577:../freertos/timers.c **** 				( void ) xTaskResumeAll();
 578:../freertos/timers.c **** 				prvProcessExpiredTimer( xNextExpireTime, xTimeNow );
 579:../freertos/timers.c **** 			}
 580:../freertos/timers.c **** 			else
 581:../freertos/timers.c **** 			{
 582:../freertos/timers.c **** 				/* The tick count has not overflowed, and the next expire
 583:../freertos/timers.c **** 				time has not been reached yet.  This task should therefore
 584:../freertos/timers.c **** 				block to wait for the next expire time or a command to be
 585:../freertos/timers.c **** 				received - whichever comes first.  The following line cannot
 586:../freertos/timers.c **** 				be reached unless xNextExpireTime > xTimeNow, except in the
 587:../freertos/timers.c **** 				case when the current timer list is empty. */
 588:../freertos/timers.c **** 				if( xListWasEmpty != pdFALSE )
 589:../freertos/timers.c **** 				{
 590:../freertos/timers.c **** 					/* The current timer list is empty - is the overflow list
 591:../freertos/timers.c **** 					also empty? */
 592:../freertos/timers.c **** 					xListWasEmpty = listLIST_IS_EMPTY( pxOverflowTimerList );
 593:../freertos/timers.c **** 				}
 594:../freertos/timers.c **** 
 595:../freertos/timers.c **** 				vQueueWaitForMessageRestricted( xTimerQueue, ( xNextExpireTime - xTimeNow ), xListWasEmpty );
 596:../freertos/timers.c **** 
ARM GAS  /tmp/ccx8nc1r.s 			page 12


 597:../freertos/timers.c **** 				if( xTaskResumeAll() == pdFALSE )
 598:../freertos/timers.c **** 				{
 599:../freertos/timers.c **** 					/* Yield to wait for either a command to arrive, or the
 600:../freertos/timers.c **** 					block time to expire.  If a command arrived between the
 601:../freertos/timers.c **** 					critical section being exited and this yield then the yield
 602:../freertos/timers.c **** 					will not cause the task to block. */
 603:../freertos/timers.c **** 					portYIELD_WITHIN_API();
 604:../freertos/timers.c **** 				}
 605:../freertos/timers.c **** 				else
 606:../freertos/timers.c **** 				{
 607:../freertos/timers.c **** 					mtCOVERAGE_TEST_MARKER();
 608:../freertos/timers.c **** 				}
 609:../freertos/timers.c **** 			}
 610:../freertos/timers.c **** 		}
 611:../freertos/timers.c **** 		else
 612:../freertos/timers.c **** 		{
 613:../freertos/timers.c **** 			( void ) xTaskResumeAll();
 614:../freertos/timers.c **** 		}
 615:../freertos/timers.c **** 	}
 616:../freertos/timers.c **** }
 617:../freertos/timers.c **** /*-----------------------------------------------------------*/
 618:../freertos/timers.c **** 
 619:../freertos/timers.c **** static TickType_t prvGetNextExpireTime( BaseType_t * const pxListWasEmpty )
 620:../freertos/timers.c **** {
 621:../freertos/timers.c **** TickType_t xNextExpireTime;
 622:../freertos/timers.c **** 
 623:../freertos/timers.c **** 	/* Timers are listed in expiry time order, with the head of the list
 624:../freertos/timers.c **** 	referencing the task that will expire first.  Obtain the time at which
 625:../freertos/timers.c **** 	the timer with the nearest expiry time will expire.  If there are no
 626:../freertos/timers.c **** 	active timers then just set the next expire time to 0.  That will cause
 627:../freertos/timers.c **** 	this task to unblock when the tick count overflows, at which point the
 628:../freertos/timers.c **** 	timer lists will be switched and the next expiry time can be
 629:../freertos/timers.c **** 	re-assessed.  */
 630:../freertos/timers.c **** 	*pxListWasEmpty = listLIST_IS_EMPTY( pxCurrentTimerList );
 631:../freertos/timers.c **** 	if( *pxListWasEmpty == pdFALSE )
 632:../freertos/timers.c **** 	{
 633:../freertos/timers.c **** 		xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
 634:../freertos/timers.c **** 	}
 635:../freertos/timers.c **** 	else
 636:../freertos/timers.c **** 	{
 637:../freertos/timers.c **** 		/* Ensure the task unblocks when the tick count rolls over. */
 638:../freertos/timers.c **** 		xNextExpireTime = ( TickType_t ) 0U;
 639:../freertos/timers.c **** 	}
 640:../freertos/timers.c **** 
 641:../freertos/timers.c **** 	return xNextExpireTime;
 642:../freertos/timers.c **** }
 643:../freertos/timers.c **** /*-----------------------------------------------------------*/
 644:../freertos/timers.c **** 
 645:../freertos/timers.c **** static TickType_t prvSampleTimeNow( BaseType_t * const pxTimerListsWereSwitched )
 646:../freertos/timers.c **** {
 647:../freertos/timers.c **** TickType_t xTimeNow;
 648:../freertos/timers.c **** PRIVILEGED_DATA static TickType_t xLastTime = ( TickType_t ) 0U; /*lint !e956 Variable is only acce
 649:../freertos/timers.c **** 
 650:../freertos/timers.c **** 	xTimeNow = xTaskGetTickCount();
 651:../freertos/timers.c **** 
 652:../freertos/timers.c **** 	if( xTimeNow < xLastTime )
 653:../freertos/timers.c **** 	{
ARM GAS  /tmp/ccx8nc1r.s 			page 13


 654:../freertos/timers.c **** 		prvSwitchTimerLists();
 655:../freertos/timers.c **** 		*pxTimerListsWereSwitched = pdTRUE;
 656:../freertos/timers.c **** 	}
 657:../freertos/timers.c **** 	else
 658:../freertos/timers.c **** 	{
 659:../freertos/timers.c **** 		*pxTimerListsWereSwitched = pdFALSE;
 660:../freertos/timers.c **** 	}
 661:../freertos/timers.c **** 
 662:../freertos/timers.c **** 	xLastTime = xTimeNow;
 663:../freertos/timers.c **** 
 664:../freertos/timers.c **** 	return xTimeNow;
 665:../freertos/timers.c **** }
 666:../freertos/timers.c **** /*-----------------------------------------------------------*/
 667:../freertos/timers.c **** 
 668:../freertos/timers.c **** static BaseType_t prvInsertTimerInActiveList( Timer_t * const pxTimer, const TickType_t xNextExpiry
 669:../freertos/timers.c **** {
  32              		.loc 1 669 1 view -0
  33              		.cfi_startproc
  34              		@ args = 0, pretend = 0, frame = 0
  35              		@ frame_needed = 0, uses_anonymous_args = 0
 670:../freertos/timers.c **** BaseType_t xProcessTimerNow = pdFALSE;
  36              		.loc 1 670 1 view .LVU1
 671:../freertos/timers.c **** 
 672:../freertos/timers.c **** 	listSET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ), xNextExpiryTime );
  37              		.loc 1 672 2 view .LVU2
  38              	@ ../freertos/timers.c:675: 	if( xNextExpiryTime <= xTimeNow )
 673:../freertos/timers.c **** 	listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );
 674:../freertos/timers.c **** 
 675:../freertos/timers.c **** 	if( xNextExpiryTime <= xTimeNow )
  39              		.loc 1 675 4 is_stmt 0 view .LVU3
  40 0000 9142     		cmp	r1, r2	@ xNextExpiryTime, xTimeNow
  41              	@ ../freertos/timers.c:669: {
 669:../freertos/timers.c **** BaseType_t xProcessTimerNow = pdFALSE;
  42              		.loc 1 669 1 view .LVU4
  43 0002 08B5     		push	{r3, lr}	@
  44              	.LCFI0:
  45              		.cfi_def_cfa_offset 8
  46              		.cfi_offset 3, -8
  47              		.cfi_offset 14, -4
  48              	@ ../freertos/timers.c:672: 	listSET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ), xNextExpiryTime
 672:../freertos/timers.c **** 	listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );
  49              		.loc 1 672 2 view .LVU5
  50 0004 4160     		str	r1, [r0, #4]	@ xNextExpiryTime, pxTimer_10(D)->xTimerListItem.xItemValue
 673:../freertos/timers.c **** 	listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );
  51              		.loc 1 673 2 is_stmt 1 view .LVU6
  52 0006 0061     		str	r0, [r0, #16]	@ pxTimer, pxTimer_10(D)->xTimerListItem.pvOwner
  53              		.loc 1 675 2 view .LVU7
  54              	@ ../freertos/timers.c:675: 	if( xNextExpiryTime <= xTimeNow )
  55              		.loc 1 675 4 is_stmt 0 view .LVU8
  56 0008 0AD8     		bhi	.L2		@,
 676:../freertos/timers.c **** 	{
 677:../freertos/timers.c **** 		/* Has the expiry time elapsed between the command to start/reset a
 678:../freertos/timers.c **** 		timer was issued, and the time the command was processed? */
 679:../freertos/timers.c **** 		if( ( ( TickType_t ) ( xTimeNow - xCommandTime ) ) >= pxTimer->xTimerPeriodInTicks ) /*lint !e961
  57              		.loc 1 679 3 is_stmt 1 view .LVU9
  58              	@ ../freertos/timers.c:679: 		if( ( ( TickType_t ) ( xTimeNow - xCommandTime ) ) >= pxTimer->xTimer
  59              		.loc 1 679 35 is_stmt 0 view .LVU10
ARM GAS  /tmp/ccx8nc1r.s 			page 14


  60 000a D21A     		subs	r2, r2, r3	@ tmp125, xTimeNow, xCommandTime
  61              	.LVL1:
  62              	@ ../freertos/timers.c:679: 		if( ( ( TickType_t ) ( xTimeNow - xCommandTime ) ) >= pxTimer->xTimer
  63              		.loc 1 679 5 view .LVU11
  64 000c 8369     		ldr	r3, [r0, #24]	@ pxTimer_10(D)->xTimerPeriodInTicks, pxTimer_10(D)->xTimerPeriodInTicks
  65              	.LVL2:
  66              		.loc 1 679 5 view .LVU12
  67 000e 9A42     		cmp	r2, r3	@ tmp125, pxTimer_10(D)->xTimerPeriodInTicks
  68 0010 0ED2     		bcs	.L7		@,
 680:../freertos/timers.c **** 		{
 681:../freertos/timers.c **** 			/* The time between a command being issued and the command being
 682:../freertos/timers.c **** 			processed actually exceeds the timers period.  */
 683:../freertos/timers.c **** 			xProcessTimerNow = pdTRUE;
 684:../freertos/timers.c **** 		}
 685:../freertos/timers.c **** 		else
 686:../freertos/timers.c **** 		{
 687:../freertos/timers.c **** 			vListInsert( pxOverflowTimerList, &( pxTimer->xTimerListItem ) );
  69              		.loc 1 687 4 is_stmt 1 view .LVU13
  70 0012 084B     		ldr	r3, .L9	@ tmp128,
  71 0014 011D     		adds	r1, r0, #4	@, pxTimer,
  72              	.LVL3:
  73              		.loc 1 687 4 is_stmt 0 view .LVU14
  74 0016 1868     		ldr	r0, [r3]	@, pxOverflowTimerList
  75              	.LVL4:
  76              	.L8:
  77              	@ ../freertos/timers.c:701: 			vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 688:../freertos/timers.c **** 		}
 689:../freertos/timers.c **** 	}
 690:../freertos/timers.c **** 	else
 691:../freertos/timers.c **** 	{
 692:../freertos/timers.c **** 		if( ( xTimeNow < xCommandTime ) && ( xNextExpiryTime >= xCommandTime ) )
 693:../freertos/timers.c **** 		{
 694:../freertos/timers.c **** 			/* If, since the command was issued, the tick count has overflowed
 695:../freertos/timers.c **** 			but the expiry time has not, then the timer must have already passed
 696:../freertos/timers.c **** 			its expiry time and should be processed immediately. */
 697:../freertos/timers.c **** 			xProcessTimerNow = pdTRUE;
 698:../freertos/timers.c **** 		}
 699:../freertos/timers.c **** 		else
 700:../freertos/timers.c **** 		{
 701:../freertos/timers.c **** 			vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
  78              		.loc 1 701 4 view .LVU15
  79 0018 FFF7FEFF 		bl	vListInsert		@
  80              	.LVL5:
  81              	@ ../freertos/timers.c:670: BaseType_t xProcessTimerNow = pdFALSE;
 670:../freertos/timers.c **** 
  82              		.loc 1 670 12 view .LVU16
  83 001c 0020     		movs	r0, #0	@ <retval>,
  84              	.LVL6:
  85              	.L1:
  86              	@ ../freertos/timers.c:706: }
 702:../freertos/timers.c **** 		}
 703:../freertos/timers.c **** 	}
 704:../freertos/timers.c **** 
 705:../freertos/timers.c **** 	return xProcessTimerNow;
 706:../freertos/timers.c **** }
  87              		.loc 1 706 1 view .LVU17
  88 001e 08BD     		pop	{r3, pc}	@
ARM GAS  /tmp/ccx8nc1r.s 			page 15


  89              	.LVL7:
  90              	.L2:
 692:../freertos/timers.c **** 		{
  91              		.loc 1 692 3 is_stmt 1 view .LVU18
  92              	@ ../freertos/timers.c:692: 		if( ( xTimeNow < xCommandTime ) && ( xNextExpiryTime >= xCommandTime 
 692:../freertos/timers.c **** 		{
  93              		.loc 1 692 5 is_stmt 0 view .LVU19
  94 0020 9A42     		cmp	r2, r3	@ xTimeNow, xCommandTime
  95 0022 01D2     		bcs	.L5		@,
  96              	@ ../freertos/timers.c:692: 		if( ( xTimeNow < xCommandTime ) && ( xNextExpiryTime >= xCommandTime 
 692:../freertos/timers.c **** 		{
  97              		.loc 1 692 35 discriminator 1 view .LVU20
  98 0024 9942     		cmp	r1, r3	@ xNextExpiryTime, xCommandTime
  99 0026 03D2     		bcs	.L7		@,
 100              	.L5:
 701:../freertos/timers.c **** 		}
 101              		.loc 1 701 4 is_stmt 1 view .LVU21
 102 0028 024B     		ldr	r3, .L9	@ tmp130,
 103              	.LVL8:
 701:../freertos/timers.c **** 		}
 104              		.loc 1 701 4 is_stmt 0 view .LVU22
 105 002a 011D     		adds	r1, r0, #4	@, pxTimer,
 106              	.LVL9:
 701:../freertos/timers.c **** 		}
 107              		.loc 1 701 4 view .LVU23
 108 002c 5868     		ldr	r0, [r3, #4]	@, pxCurrentTimerList
 109              	.LVL10:
 701:../freertos/timers.c **** 		}
 110              		.loc 1 701 4 view .LVU24
 111 002e F3E7     		b	.L8		@
 112              	.LVL11:
 113              	.L7:
 114              	@ ../freertos/timers.c:697: 			xProcessTimerNow = pdTRUE;
 697:../freertos/timers.c **** 		}
 115              		.loc 1 697 21 view .LVU25
 116 0030 0120     		movs	r0, #1	@ <retval>,
 117              	.LVL12:
 705:../freertos/timers.c **** }
 118              		.loc 1 705 2 is_stmt 1 view .LVU26
 119              	@ ../freertos/timers.c:705: 	return xProcessTimerNow;
 705:../freertos/timers.c **** }
 120              		.loc 1 705 9 is_stmt 0 view .LVU27
 121 0032 F4E7     		b	.L1		@
 122              	.L10:
 123              		.align	2
 124              	.L9:
 125 0034 00000000 		.word	.LANCHOR0
 126              		.cfi_endproc
 127              	.LFE19:
 128              		.size	prvInsertTimerInActiveList, .-prvInsertTimerInActiveList
 129              		.align	1
 130              		.syntax unified
 131              		.thumb
 132              		.thumb_func
 133              		.type	prvCheckForValidListAndQueue, %function
 134              	prvCheckForValidListAndQueue:
 135              	.LFB22:
ARM GAS  /tmp/ccx8nc1r.s 			page 16


 707:../freertos/timers.c **** /*-----------------------------------------------------------*/
 708:../freertos/timers.c **** 
 709:../freertos/timers.c **** static void	prvProcessReceivedCommands( void )
 710:../freertos/timers.c **** {
 711:../freertos/timers.c **** DaemonTaskMessage_t xMessage;
 712:../freertos/timers.c **** Timer_t *pxTimer;
 713:../freertos/timers.c **** BaseType_t xTimerListsWereSwitched, xResult;
 714:../freertos/timers.c **** TickType_t xTimeNow;
 715:../freertos/timers.c **** 
 716:../freertos/timers.c **** 	while( xQueueReceive( xTimerQueue, &xMessage, tmrNO_DELAY ) != pdFAIL ) /*lint !e603 xMessage does
 717:../freertos/timers.c **** 	{
 718:../freertos/timers.c **** 		#if ( INCLUDE_xTimerPendFunctionCall == 1 )
 719:../freertos/timers.c **** 		{
 720:../freertos/timers.c **** 			/* Negative commands are pended function calls rather than timer
 721:../freertos/timers.c **** 			commands. */
 722:../freertos/timers.c **** 			if( xMessage.xMessageID < ( BaseType_t ) 0 )
 723:../freertos/timers.c **** 			{
 724:../freertos/timers.c **** 				const CallbackParameters_t * const pxCallback = &( xMessage.u.xCallbackParameters );
 725:../freertos/timers.c **** 
 726:../freertos/timers.c **** 				/* The timer uses the xCallbackParameters member to request a
 727:../freertos/timers.c **** 				callback be executed.  Check the callback is not NULL. */
 728:../freertos/timers.c **** 				configASSERT( pxCallback );
 729:../freertos/timers.c **** 
 730:../freertos/timers.c **** 				/* Call the function. */
 731:../freertos/timers.c **** 				pxCallback->pxCallbackFunction( pxCallback->pvParameter1, pxCallback->ulParameter2 );
 732:../freertos/timers.c **** 			}
 733:../freertos/timers.c **** 			else
 734:../freertos/timers.c **** 			{
 735:../freertos/timers.c **** 				mtCOVERAGE_TEST_MARKER();
 736:../freertos/timers.c **** 			}
 737:../freertos/timers.c **** 		}
 738:../freertos/timers.c **** 		#endif /* INCLUDE_xTimerPendFunctionCall */
 739:../freertos/timers.c **** 
 740:../freertos/timers.c **** 		/* Commands that are positive are timer commands rather than pended
 741:../freertos/timers.c **** 		function calls. */
 742:../freertos/timers.c **** 		if( xMessage.xMessageID >= ( BaseType_t ) 0 )
 743:../freertos/timers.c **** 		{
 744:../freertos/timers.c **** 			/* The messages uses the xTimerParameters member to work on a
 745:../freertos/timers.c **** 			software timer. */
 746:../freertos/timers.c **** 			pxTimer = xMessage.u.xTimerParameters.pxTimer;
 747:../freertos/timers.c **** 
 748:../freertos/timers.c **** 			if( listIS_CONTAINED_WITHIN( NULL, &( pxTimer->xTimerListItem ) ) == pdFALSE ) /*lint !e961. The
 749:../freertos/timers.c **** 			{
 750:../freertos/timers.c **** 				/* The timer is in a list, remove it. */
 751:../freertos/timers.c **** 				( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
 752:../freertos/timers.c **** 			}
 753:../freertos/timers.c **** 			else
 754:../freertos/timers.c **** 			{
 755:../freertos/timers.c **** 				mtCOVERAGE_TEST_MARKER();
 756:../freertos/timers.c **** 			}
 757:../freertos/timers.c **** 
 758:../freertos/timers.c **** 			traceTIMER_COMMAND_RECEIVED( pxTimer, xMessage.xMessageID, xMessage.u.xTimerParameters.xMessageV
 759:../freertos/timers.c **** 
 760:../freertos/timers.c **** 			/* In this case the xTimerListsWereSwitched parameter is not used, but
 761:../freertos/timers.c **** 			it must be present in the function call.  prvSampleTimeNow() must be
 762:../freertos/timers.c **** 			called after the message is received from xTimerQueue so there is no
 763:../freertos/timers.c **** 			possibility of a higher priority task adding a message to the message
ARM GAS  /tmp/ccx8nc1r.s 			page 17


 764:../freertos/timers.c **** 			queue with a time that is ahead of the timer daemon task (because it
 765:../freertos/timers.c **** 			pre-empted the timer daemon task after the xTimeNow value was set). */
 766:../freertos/timers.c **** 			xTimeNow = prvSampleTimeNow( &xTimerListsWereSwitched );
 767:../freertos/timers.c **** 
 768:../freertos/timers.c **** 			switch( xMessage.xMessageID )
 769:../freertos/timers.c **** 			{
 770:../freertos/timers.c **** 				case tmrCOMMAND_START :
 771:../freertos/timers.c **** 				case tmrCOMMAND_START_FROM_ISR :
 772:../freertos/timers.c **** 				case tmrCOMMAND_RESET :
 773:../freertos/timers.c **** 				case tmrCOMMAND_RESET_FROM_ISR :
 774:../freertos/timers.c **** 				case tmrCOMMAND_START_DONT_TRACE :
 775:../freertos/timers.c **** 					/* Start or restart a timer. */
 776:../freertos/timers.c **** 					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
 777:../freertos/timers.c **** 					if( prvInsertTimerInActiveList( pxTimer,  xMessage.u.xTimerParameters.xMessageValue + pxTimer-
 778:../freertos/timers.c **** 					{
 779:../freertos/timers.c **** 						/* The timer expired before it was added to the active
 780:../freertos/timers.c **** 						timer list.  Process it now. */
 781:../freertos/timers.c **** 						pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
 782:../freertos/timers.c **** 						traceTIMER_EXPIRED( pxTimer );
 783:../freertos/timers.c **** 
 784:../freertos/timers.c **** 						if( ( pxTimer->ucStatus & tmrSTATUS_IS_AUTORELOAD ) != 0 )
 785:../freertos/timers.c **** 						{
 786:../freertos/timers.c **** 							xResult = xTimerGenericCommand( pxTimer, tmrCOMMAND_START_DONT_TRACE, xMessage.u.xTimerParam
 787:../freertos/timers.c **** 							configASSERT( xResult );
 788:../freertos/timers.c **** 							( void ) xResult;
 789:../freertos/timers.c **** 						}
 790:../freertos/timers.c **** 						else
 791:../freertos/timers.c **** 						{
 792:../freertos/timers.c **** 							mtCOVERAGE_TEST_MARKER();
 793:../freertos/timers.c **** 						}
 794:../freertos/timers.c **** 					}
 795:../freertos/timers.c **** 					else
 796:../freertos/timers.c **** 					{
 797:../freertos/timers.c **** 						mtCOVERAGE_TEST_MARKER();
 798:../freertos/timers.c **** 					}
 799:../freertos/timers.c **** 					break;
 800:../freertos/timers.c **** 
 801:../freertos/timers.c **** 				case tmrCOMMAND_STOP :
 802:../freertos/timers.c **** 				case tmrCOMMAND_STOP_FROM_ISR :
 803:../freertos/timers.c **** 					/* The timer has already been removed from the active list. */
 804:../freertos/timers.c **** 					pxTimer->ucStatus &= ~tmrSTATUS_IS_ACTIVE;
 805:../freertos/timers.c **** 					break;
 806:../freertos/timers.c **** 
 807:../freertos/timers.c **** 				case tmrCOMMAND_CHANGE_PERIOD :
 808:../freertos/timers.c **** 				case tmrCOMMAND_CHANGE_PERIOD_FROM_ISR :
 809:../freertos/timers.c **** 					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
 810:../freertos/timers.c **** 					pxTimer->xTimerPeriodInTicks = xMessage.u.xTimerParameters.xMessageValue;
 811:../freertos/timers.c **** 					configASSERT( ( pxTimer->xTimerPeriodInTicks > 0 ) );
 812:../freertos/timers.c **** 
 813:../freertos/timers.c **** 					/* The new period does not really have a reference, and can
 814:../freertos/timers.c **** 					be longer or shorter than the old one.  The command time is
 815:../freertos/timers.c **** 					therefore set to the current time, and as the period cannot
 816:../freertos/timers.c **** 					be zero the next expiry time can only be in the future,
 817:../freertos/timers.c **** 					meaning (unlike for the xTimerStart() case above) there is
 818:../freertos/timers.c **** 					no fail case that needs to be handled here. */
 819:../freertos/timers.c **** 					( void ) prvInsertTimerInActiveList( pxTimer, ( xTimeNow + pxTimer->xTimerPeriodInTicks ), xTi
 820:../freertos/timers.c **** 					break;
ARM GAS  /tmp/ccx8nc1r.s 			page 18


 821:../freertos/timers.c **** 
 822:../freertos/timers.c **** 				case tmrCOMMAND_DELETE :
 823:../freertos/timers.c **** 					#if ( configSUPPORT_DYNAMIC_ALLOCATION == 1 )
 824:../freertos/timers.c **** 					{
 825:../freertos/timers.c **** 						/* The timer has already been removed from the active list,
 826:../freertos/timers.c **** 						just free up the memory if the memory was dynamically
 827:../freertos/timers.c **** 						allocated. */
 828:../freertos/timers.c **** 						if( ( pxTimer->ucStatus & tmrSTATUS_IS_STATICALLY_ALLOCATED ) == ( uint8_t ) 0 )
 829:../freertos/timers.c **** 						{
 830:../freertos/timers.c **** 							vPortFree( pxTimer );
 831:../freertos/timers.c **** 						}
 832:../freertos/timers.c **** 						else
 833:../freertos/timers.c **** 						{
 834:../freertos/timers.c **** 							pxTimer->ucStatus &= ~tmrSTATUS_IS_ACTIVE;
 835:../freertos/timers.c **** 						}
 836:../freertos/timers.c **** 					}
 837:../freertos/timers.c **** 					#else
 838:../freertos/timers.c **** 					{
 839:../freertos/timers.c **** 						/* If dynamic allocation is not enabled, the memory
 840:../freertos/timers.c **** 						could not have been dynamically allocated. So there is
 841:../freertos/timers.c **** 						no need to free the memory - just mark the timer as
 842:../freertos/timers.c **** 						"not active". */
 843:../freertos/timers.c **** 						pxTimer->ucStatus &= ~tmrSTATUS_IS_ACTIVE;
 844:../freertos/timers.c **** 					}
 845:../freertos/timers.c **** 					#endif /* configSUPPORT_DYNAMIC_ALLOCATION */
 846:../freertos/timers.c **** 					break;
 847:../freertos/timers.c **** 
 848:../freertos/timers.c **** 				default	:
 849:../freertos/timers.c **** 					/* Don't expect to get here. */
 850:../freertos/timers.c **** 					break;
 851:../freertos/timers.c **** 			}
 852:../freertos/timers.c **** 		}
 853:../freertos/timers.c **** 	}
 854:../freertos/timers.c **** }
 855:../freertos/timers.c **** /*-----------------------------------------------------------*/
 856:../freertos/timers.c **** 
 857:../freertos/timers.c **** static void prvSwitchTimerLists( void )
 858:../freertos/timers.c **** {
 859:../freertos/timers.c **** TickType_t xNextExpireTime, xReloadTime;
 860:../freertos/timers.c **** List_t *pxTemp;
 861:../freertos/timers.c **** Timer_t *pxTimer;
 862:../freertos/timers.c **** BaseType_t xResult;
 863:../freertos/timers.c **** 
 864:../freertos/timers.c **** 	/* The tick count has overflowed.  The timer lists must be switched.
 865:../freertos/timers.c **** 	If there are any timers still referenced from the current timer list
 866:../freertos/timers.c **** 	then they must have expired and should be processed before the lists
 867:../freertos/timers.c **** 	are switched. */
 868:../freertos/timers.c **** 	while( listLIST_IS_EMPTY( pxCurrentTimerList ) == pdFALSE )
 869:../freertos/timers.c **** 	{
 870:../freertos/timers.c **** 		xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
 871:../freertos/timers.c **** 
 872:../freertos/timers.c **** 		/* Remove the timer from the list. */
 873:../freertos/timers.c **** 		pxTimer = ( Timer_t * ) listGET_OWNER_OF_HEAD_ENTRY( pxCurrentTimerList ); /*lint !e9087 !e9079 v
 874:../freertos/timers.c **** 		( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
 875:../freertos/timers.c **** 		traceTIMER_EXPIRED( pxTimer );
 876:../freertos/timers.c **** 
 877:../freertos/timers.c **** 		/* Execute its callback, then send a command to restart the timer if
ARM GAS  /tmp/ccx8nc1r.s 			page 19


 878:../freertos/timers.c **** 		it is an auto-reload timer.  It cannot be restarted here as the lists
 879:../freertos/timers.c **** 		have not yet been switched. */
 880:../freertos/timers.c **** 		pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
 881:../freertos/timers.c **** 
 882:../freertos/timers.c **** 		if( ( pxTimer->ucStatus & tmrSTATUS_IS_AUTORELOAD ) != 0 )
 883:../freertos/timers.c **** 		{
 884:../freertos/timers.c **** 			/* Calculate the reload value, and if the reload value results in
 885:../freertos/timers.c **** 			the timer going into the same timer list then it has already expired
 886:../freertos/timers.c **** 			and the timer should be re-inserted into the current list so it is
 887:../freertos/timers.c **** 			processed again within this loop.  Otherwise a command should be sent
 888:../freertos/timers.c **** 			to restart the timer to ensure it is only inserted into a list after
 889:../freertos/timers.c **** 			the lists have been swapped. */
 890:../freertos/timers.c **** 			xReloadTime = ( xNextExpireTime + pxTimer->xTimerPeriodInTicks );
 891:../freertos/timers.c **** 			if( xReloadTime > xNextExpireTime )
 892:../freertos/timers.c **** 			{
 893:../freertos/timers.c **** 				listSET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ), xReloadTime );
 894:../freertos/timers.c **** 				listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );
 895:../freertos/timers.c **** 				vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 896:../freertos/timers.c **** 			}
 897:../freertos/timers.c **** 			else
 898:../freertos/timers.c **** 			{
 899:../freertos/timers.c **** 				xResult = xTimerGenericCommand( pxTimer, tmrCOMMAND_START_DONT_TRACE, xNextExpireTime, NULL, tm
 900:../freertos/timers.c **** 				configASSERT( xResult );
 901:../freertos/timers.c **** 				( void ) xResult;
 902:../freertos/timers.c **** 			}
 903:../freertos/timers.c **** 		}
 904:../freertos/timers.c **** 		else
 905:../freertos/timers.c **** 		{
 906:../freertos/timers.c **** 			mtCOVERAGE_TEST_MARKER();
 907:../freertos/timers.c **** 		}
 908:../freertos/timers.c **** 	}
 909:../freertos/timers.c **** 
 910:../freertos/timers.c **** 	pxTemp = pxCurrentTimerList;
 911:../freertos/timers.c **** 	pxCurrentTimerList = pxOverflowTimerList;
 912:../freertos/timers.c **** 	pxOverflowTimerList = pxTemp;
 913:../freertos/timers.c **** }
 914:../freertos/timers.c **** /*-----------------------------------------------------------*/
 915:../freertos/timers.c **** 
 916:../freertos/timers.c **** static void prvCheckForValidListAndQueue( void )
 917:../freertos/timers.c **** {
 136              		.loc 1 917 1 is_stmt 1 view -0
 137              		.cfi_startproc
 138              		@ args = 0, pretend = 0, frame = 0
 139              		@ frame_needed = 0, uses_anonymous_args = 0
 918:../freertos/timers.c **** 	/* Check that the list from which active timers are referenced, and the
 919:../freertos/timers.c **** 	queue used to communicate with the timer service, have been
 920:../freertos/timers.c **** 	initialised. */
 921:../freertos/timers.c **** 	taskENTER_CRITICAL();
 140              		.loc 1 921 2 view .LVU29
 141              	@ ../freertos/timers.c:917: {
 917:../freertos/timers.c **** 	/* Check that the list from which active timers are referenced, and the
 142              		.loc 1 917 1 is_stmt 0 view .LVU30
 143 0038 F8B5     		push	{r3, r4, r5, r6, r7, lr}	@
 144              	.LCFI1:
 145              		.cfi_def_cfa_offset 24
 146              		.cfi_offset 3, -24
 147              		.cfi_offset 4, -20
ARM GAS  /tmp/ccx8nc1r.s 			page 20


 148              		.cfi_offset 5, -16
 149              		.cfi_offset 6, -12
 150              		.cfi_offset 7, -8
 151              		.cfi_offset 14, -4
 152              	@ ../freertos/timers.c:923: 		if( xTimerQueue == NULL )
 922:../freertos/timers.c **** 	{
 923:../freertos/timers.c **** 		if( xTimerQueue == NULL )
 153              		.loc 1 923 19 view .LVU31
 154 003a 0D4C     		ldr	r4, .L13	@ tmp116,
 155              	@ ../freertos/timers.c:921: 	taskENTER_CRITICAL();
 921:../freertos/timers.c **** 	{
 156              		.loc 1 921 2 view .LVU32
 157 003c FFF7FEFF 		bl	vPortEnterCritical		@
 158              	.LVL13:
 159              		.loc 1 923 3 is_stmt 1 view .LVU33
 160              	@ ../freertos/timers.c:923: 		if( xTimerQueue == NULL )
 161              		.loc 1 923 5 is_stmt 0 view .LVU34
 162 0040 A568     		ldr	r5, [r4, #8]	@ xTimerQueue, xTimerQueue
 163 0042 8DB9     		cbnz	r5, .L12	@ xTimerQueue,
 924:../freertos/timers.c **** 		{
 925:../freertos/timers.c **** 			vListInitialise( &xActiveTimerList1 );
 164              		.loc 1 925 4 is_stmt 1 view .LVU35
 165 0044 04F10C07 		add	r7, r4, #12	@ tmp119, tmp116,
 166 0048 3846     		mov	r0, r7	@, tmp119
 167              	@ ../freertos/timers.c:926: 			vListInitialise( &xActiveTimerList2 );
 926:../freertos/timers.c **** 			vListInitialise( &xActiveTimerList2 );
 168              		.loc 1 926 4 is_stmt 0 view .LVU36
 169 004a 04F12006 		add	r6, r4, #32	@ tmp121, tmp116,
 170              	@ ../freertos/timers.c:925: 			vListInitialise( &xActiveTimerList1 );
 925:../freertos/timers.c **** 			vListInitialise( &xActiveTimerList2 );
 171              		.loc 1 925 4 view .LVU37
 172 004e FFF7FEFF 		bl	vListInitialise		@
 173              	.LVL14:
 174              		.loc 1 926 4 is_stmt 1 view .LVU38
 175 0052 3046     		mov	r0, r6	@, tmp121
 176 0054 FFF7FEFF 		bl	vListInitialise		@
 177              	.LVL15:
 927:../freertos/timers.c **** 			pxCurrentTimerList = &xActiveTimerList1;
 178              		.loc 1 927 4 view .LVU39
 179              	@ ../freertos/timers.c:941: 				xTimerQueue = xQueueCreate( ( UBaseType_t ) configTIMER_QUEUE_LENGT
 928:../freertos/timers.c **** 			pxOverflowTimerList = &xActiveTimerList2;
 929:../freertos/timers.c **** 
 930:../freertos/timers.c **** 			#if( configSUPPORT_STATIC_ALLOCATION == 1 )
 931:../freertos/timers.c **** 			{
 932:../freertos/timers.c **** 				/* The timer queue is allocated statically in case
 933:../freertos/timers.c **** 				configSUPPORT_DYNAMIC_ALLOCATION is 0. */
 934:../freertos/timers.c **** 				static StaticQueue_t xStaticTimerQueue; /*lint !e956 Ok to declare in this manner to prevent ad
 935:../freertos/timers.c **** 				static uint8_t ucStaticTimerQueueStorage[ ( size_t ) configTIMER_QUEUE_LENGTH * sizeof( DaemonT
 936:../freertos/timers.c **** 
 937:../freertos/timers.c **** 				xTimerQueue = xQueueCreateStatic( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, ( UBaseType_t ) siz
 938:../freertos/timers.c **** 			}
 939:../freertos/timers.c **** 			#else
 940:../freertos/timers.c **** 			{
 941:../freertos/timers.c **** 				xTimerQueue = xQueueCreate( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, sizeof( DaemonTaskMessage
 180              		.loc 1 941 19 is_stmt 0 view .LVU40
 181 0058 2A46     		mov	r2, r5	@, xTimerQueue
 182 005a 0C21     		movs	r1, #12	@,
ARM GAS  /tmp/ccx8nc1r.s 			page 21


 183 005c 0A20     		movs	r0, #10	@,
 184              	@ ../freertos/timers.c:928: 			pxOverflowTimerList = &xActiveTimerList2;
 928:../freertos/timers.c **** 			pxOverflowTimerList = &xActiveTimerList2;
 185              		.loc 1 928 24 view .LVU41
 186 005e C4E90067 		strd	r6, r7, [r4]	@ tmp121, tmp119, tmp116
 187              		.loc 1 941 5 is_stmt 1 view .LVU42
 188              	@ ../freertos/timers.c:941: 				xTimerQueue = xQueueCreate( ( UBaseType_t ) configTIMER_QUEUE_LENGT
 189              		.loc 1 941 19 is_stmt 0 view .LVU43
 190 0062 FFF7FEFF 		bl	xQueueGenericCreate		@
 191              	.LVL16:
 192              	@ ../freertos/timers.c:941: 				xTimerQueue = xQueueCreate( ( UBaseType_t ) configTIMER_QUEUE_LENGT
 193              		.loc 1 941 17 discriminator 1 view .LVU44
 194 0066 A060     		str	r0, [r4, #8]	@ tmp129, xTimerQueue
 195              	.L12:
 942:../freertos/timers.c **** 			}
 943:../freertos/timers.c **** 			#endif
 944:../freertos/timers.c **** 
 945:../freertos/timers.c **** 			#if ( configQUEUE_REGISTRY_SIZE > 0 )
 946:../freertos/timers.c **** 			{
 947:../freertos/timers.c **** 				if( xTimerQueue != NULL )
 948:../freertos/timers.c **** 				{
 949:../freertos/timers.c **** 					vQueueAddToRegistry( xTimerQueue, "TmrQ" );
 950:../freertos/timers.c **** 				}
 951:../freertos/timers.c **** 				else
 952:../freertos/timers.c **** 				{
 953:../freertos/timers.c **** 					mtCOVERAGE_TEST_MARKER();
 954:../freertos/timers.c **** 				}
 955:../freertos/timers.c **** 			}
 956:../freertos/timers.c **** 			#endif /* configQUEUE_REGISTRY_SIZE */
 957:../freertos/timers.c **** 		}
 958:../freertos/timers.c **** 		else
 959:../freertos/timers.c **** 		{
 960:../freertos/timers.c **** 			mtCOVERAGE_TEST_MARKER();
 196              		.loc 1 960 28 is_stmt 1 view .LVU45
 961:../freertos/timers.c **** 		}
 962:../freertos/timers.c **** 	}
 963:../freertos/timers.c **** 	taskEXIT_CRITICAL();
 197              		.loc 1 963 2 view .LVU46
 198              	@ ../freertos/timers.c:964: }
 964:../freertos/timers.c **** }
 199              		.loc 1 964 1 is_stmt 0 view .LVU47
 200 0068 BDE8F840 		pop	{r3, r4, r5, r6, r7, lr}	@
 201              	.LCFI2:
 202              		.cfi_restore 14
 203              		.cfi_restore 7
 204              		.cfi_restore 6
 205              		.cfi_restore 5
 206              		.cfi_restore 4
 207              		.cfi_restore 3
 208              		.cfi_def_cfa_offset 0
 209              	@ ../freertos/timers.c:963: 	taskEXIT_CRITICAL();
 963:../freertos/timers.c **** }
 210              		.loc 1 963 2 view .LVU48
 211 006c FFF7FEBF 		b	vPortExitCritical		@
 212              	.LVL17:
 213              	.L14:
 214              		.align	2
ARM GAS  /tmp/ccx8nc1r.s 			page 22


 215              	.L13:
 216 0070 00000000 		.word	.LANCHOR0
 217              		.cfi_endproc
 218              	.LFE22:
 219              		.size	prvCheckForValidListAndQueue, .-prvCheckForValidListAndQueue
 220              		.section	.rodata.str1.1,"aMS",%progbits,1
 221              	.LC0:
 222 0000 546D7220 		.ascii	"Tmr Svc\000"
 222      53766300 
 223              		.text
 224              		.align	1
 225              		.global	xTimerCreateTimerTask
 226              		.syntax unified
 227              		.thumb
 228              		.thumb_func
 229              		.type	xTimerCreateTimerTask, %function
 230              	xTimerCreateTimerTask:
 231              	.LFB5:
 228:../freertos/timers.c **** BaseType_t xReturn = pdFAIL;
 232              		.loc 1 228 1 is_stmt 1 view -0
 233              		.cfi_startproc
 234              		@ args = 0, pretend = 0, frame = 0
 235              		@ frame_needed = 0, uses_anonymous_args = 0
 229:../freertos/timers.c **** 
 236              		.loc 1 229 1 view .LVU50
 237              	.LVL18:
 235:../freertos/timers.c **** 
 238              		.loc 1 235 2 view .LVU51
 239              	@ ../freertos/timers.c:228: {
 228:../freertos/timers.c **** BaseType_t xReturn = pdFAIL;
 240              		.loc 1 228 1 is_stmt 0 view .LVU52
 241 0074 07B5     		push	{r0, r1, r2, lr}	@
 242              	.LCFI3:
 243              		.cfi_def_cfa_offset 16
 244              		.cfi_offset 14, -4
 245              	@ ../freertos/timers.c:235: 	prvCheckForValidListAndQueue();
 235:../freertos/timers.c **** 
 246              		.loc 1 235 2 view .LVU53
 247 0076 FFF7DFFF 		bl	prvCheckForValidListAndQueue		@
 248              	.LVL19:
 237:../freertos/timers.c **** 	{
 249              		.loc 1 237 2 is_stmt 1 view .LVU54
 250              	@ ../freertos/timers.c:237: 	if( xTimerQueue != NULL )
 237:../freertos/timers.c **** 	{
 251              		.loc 1 237 18 is_stmt 0 view .LVU55
 252 007a 084B     		ldr	r3, .L18	@ tmp116,
 253              	@ ../freertos/timers.c:237: 	if( xTimerQueue != NULL )
 237:../freertos/timers.c **** 	{
 254              		.loc 1 237 4 view .LVU56
 255 007c 9868     		ldr	r0, [r3, #8]	@ xTimerQueue, xTimerQueue
 256 007e 48B1     		cbz	r0, .L15	@ xTimerQueue,
 261:../freertos/timers.c **** 									configTIMER_SERVICE_TASK_NAME,
 257              		.loc 1 261 4 is_stmt 1 view .LVU57
 258              	@ ../freertos/timers.c:261: 			xReturn = xTaskCreate(	prvTimerTask,
 261:../freertos/timers.c **** 									configTIMER_SERVICE_TASK_NAME,
 259              		.loc 1 261 14 is_stmt 0 view .LVU58
 260 0080 3433     		adds	r3, r3, #52	@ tmp121, tmp116,
ARM GAS  /tmp/ccx8nc1r.s 			page 23


 261 0082 0193     		str	r3, [sp, #4]	@ tmp121,
 262 0084 0123     		movs	r3, #1	@ tmp122,
 263 0086 F022     		movs	r2, #240	@,
 264 0088 0093     		str	r3, [sp]	@ tmp122,
 265 008a 0549     		ldr	r1, .L18+4	@,
 266 008c 0023     		movs	r3, #0	@,
 267 008e 0548     		ldr	r0, .L18+8	@,
 268 0090 FFF7FEFF 		bl	xTaskCreate		@
 269              	.LVL20:
 270              	.L15:
 271              	@ ../freertos/timers.c:277: }
 277:../freertos/timers.c **** /*-----------------------------------------------------------*/
 272              		.loc 1 277 1 view .LVU59
 273 0094 03B0     		add	sp, sp, #12	@,,
 274              	.LCFI4:
 275              		.cfi_def_cfa_offset 4
 276              		@ sp needed	@
 277 0096 5DF804FB 		ldr	pc, [sp], #4	@
 278              	.L19:
 279 009a 00BF     		.align	2
 280              	.L18:
 281 009c 00000000 		.word	.LANCHOR0
 282 00a0 00000000 		.word	.LC0
 283 00a4 00000000 		.word	prvTimerTask
 284              		.cfi_endproc
 285              	.LFE5:
 286              		.size	xTimerCreateTimerTask, .-xTimerCreateTimerTask
 287              		.align	1
 288              		.global	xTimerCreate
 289              		.syntax unified
 290              		.thumb
 291              		.thumb_func
 292              		.type	xTimerCreate, %function
 293              	xTimerCreate:
 294              	.LVL21:
 295              	.LFB6:
 287:../freertos/timers.c **** 	Timer_t *pxNewTimer;
 296              		.loc 1 287 2 is_stmt 1 view -0
 297              		.cfi_startproc
 298              		@ args = 4, pretend = 0, frame = 0
 299              		@ frame_needed = 0, uses_anonymous_args = 0
 288:../freertos/timers.c **** 
 300              		.loc 1 288 2 view .LVU61
 290:../freertos/timers.c **** 
 301              		.loc 1 290 3 view .LVU62
 302              	@ ../freertos/timers.c:287: 	{
 287:../freertos/timers.c **** 	Timer_t *pxNewTimer;
 303              		.loc 1 287 2 is_stmt 0 view .LVU63
 304 00a8 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}	@
 305              	.LCFI5:
 306              		.cfi_def_cfa_offset 24
 307              		.cfi_offset 4, -24
 308              		.cfi_offset 5, -20
 309              		.cfi_offset 6, -16
 310              		.cfi_offset 7, -12
 311              		.cfi_offset 8, -8
 312              		.cfi_offset 14, -4
ARM GAS  /tmp/ccx8nc1r.s 			page 24


 313              	@ ../freertos/timers.c:287: 	{
 287:../freertos/timers.c **** 	Timer_t *pxNewTimer;
 314              		.loc 1 287 2 view .LVU64
 315 00ac 8046     		mov	r8, r0	@ pcTimerName, tmp131
 316              	@ ../freertos/timers.c:290: 		pxNewTimer = ( Timer_t * ) pvPortMalloc( sizeof( Timer_t ) ); /*lint 
 290:../freertos/timers.c **** 
 317              		.loc 1 290 30 view .LVU65
 318 00ae 2C20     		movs	r0, #44	@,
 319              	.LVL22:
 320              	@ ../freertos/timers.c:287: 	{
 287:../freertos/timers.c **** 	Timer_t *pxNewTimer;
 321              		.loc 1 287 2 view .LVU66
 322 00b0 0F46     		mov	r7, r1	@ xTimerPeriodInTicks, tmp132
 323 00b2 1546     		mov	r5, r2	@ uxAutoReload, tmp133
 324 00b4 1E46     		mov	r6, r3	@ pvTimerID, tmp134
 325              	@ ../freertos/timers.c:290: 		pxNewTimer = ( Timer_t * ) pvPortMalloc( sizeof( Timer_t ) ); /*lint 
 290:../freertos/timers.c **** 
 326              		.loc 1 290 30 view .LVU67
 327 00b6 FFF7FEFF 		bl	pvPortMalloc		@
 328              	.LVL23:
 292:../freertos/timers.c **** 		{
 329              		.loc 1 292 3 is_stmt 1 view .LVU68
 330              	@ ../freertos/timers.c:292: 		if( pxNewTimer != NULL )
 292:../freertos/timers.c **** 		{
 331              		.loc 1 292 5 is_stmt 0 view .LVU69
 332 00ba 0446     		mov	r4, r0	@ <retval>, tmp135
 333 00bc A0B1     		cbz	r0, .L20	@ <retval>,
 297:../freertos/timers.c **** 			prvInitialiseNewTimer( pcTimerName, xTimerPeriodInTicks, uxAutoReload, pvTimerID, pxCallbackFunc
 334              		.loc 1 297 4 is_stmt 1 view .LVU70
 335              	@ ../freertos/timers.c:297: 			pxNewTimer->ucStatus = 0x00;
 297:../freertos/timers.c **** 			prvInitialiseNewTimer( pcTimerName, xTimerPeriodInTicks, uxAutoReload, pvTimerID, pxCallbackFunc
 336              		.loc 1 297 25 is_stmt 0 view .LVU71
 337 00be 0023     		movs	r3, #0	@ tmp123,
 338 00c0 80F82830 		strb	r3, [r0, #40]	@ tmp123, pxNewTimer_4->ucStatus
 298:../freertos/timers.c **** 		}
 339              		.loc 1 298 4 is_stmt 1 view .LVU72
 340              	.LVL24:
 341              	.LBB4:
 342              	.LBI4:
 349:../freertos/timers.c **** 									const TickType_t xTimerPeriodInTicks,
 343              		.loc 1 349 13 view .LVU73
 344              	.LBB5:
 357:../freertos/timers.c **** 
 345              		.loc 1 357 45 view .LVU74
 359:../freertos/timers.c **** 	{
 346              		.loc 1 359 2 view .LVU75
 363:../freertos/timers.c **** 
 347              		.loc 1 363 3 view .LVU76
 348 00c4 FFF7B8FF 		bl	prvCheckForValidListAndQueue		@
 349              	.LVL25:
 367:../freertos/timers.c **** 		pxNewTimer->xTimerPeriodInTicks = xTimerPeriodInTicks;
 350              		.loc 1 367 3 view .LVU77
 351              	@ ../freertos/timers.c:370: 		pxNewTimer->pxCallbackFunction = pxCallbackFunction;
 370:../freertos/timers.c **** 		vListInitialiseItem( &( pxNewTimer->xTimerListItem ) );
 352              		.loc 1 370 34 is_stmt 0 view .LVU78
 353 00c8 069B     		ldr	r3, [sp, #24]	@ pxCallbackFunction, pxCallbackFunction
 354              	@ ../freertos/timers.c:369: 		pxNewTimer->pvTimerID = pvTimerID;
ARM GAS  /tmp/ccx8nc1r.s 			page 25


 369:../freertos/timers.c **** 		pxNewTimer->pxCallbackFunction = pxCallbackFunction;
 355              		.loc 1 369 25 view .LVU79
 356 00ca C4E90676 		strd	r7, r6, [r4, #24]	@ xTimerPeriodInTicks, pvTimerID, <retval>,
 357              	@ ../freertos/timers.c:367: 		pxNewTimer->pcTimerName = pcTimerName;
 367:../freertos/timers.c **** 		pxNewTimer->xTimerPeriodInTicks = xTimerPeriodInTicks;
 358              		.loc 1 367 27 view .LVU80
 359 00ce C4F80080 		str	r8, [r4]	@ pcTimerName, pxNewTimer_4->pcTimerName
 368:../freertos/timers.c **** 		pxNewTimer->pvTimerID = pvTimerID;
 360              		.loc 1 368 3 is_stmt 1 view .LVU81
 370:../freertos/timers.c **** 		vListInitialiseItem( &( pxNewTimer->xTimerListItem ) );
 361              		.loc 1 370 3 view .LVU82
 362              	@ ../freertos/timers.c:370: 		pxNewTimer->pxCallbackFunction = pxCallbackFunction;
 370:../freertos/timers.c **** 		vListInitialiseItem( &( pxNewTimer->xTimerListItem ) );
 363              		.loc 1 370 34 is_stmt 0 view .LVU83
 364 00d2 2362     		str	r3, [r4, #32]	@ pxCallbackFunction, pxNewTimer_4->pxCallbackFunction
 371:../freertos/timers.c **** 		if( uxAutoReload != pdFALSE )
 365              		.loc 1 371 3 is_stmt 1 view .LVU84
 366 00d4 201D     		adds	r0, r4, #4	@, <retval>,
 367 00d6 FFF7FEFF 		bl	vListInitialiseItem		@
 368              	.LVL26:
 372:../freertos/timers.c **** 		{
 369              		.loc 1 372 3 view .LVU85
 370              	@ ../freertos/timers.c:372: 		if( uxAutoReload != pdFALSE )
 372:../freertos/timers.c **** 		{
 371              		.loc 1 372 5 is_stmt 0 view .LVU86
 372 00da 2DB1     		cbz	r5, .L20	@ uxAutoReload,
 374:../freertos/timers.c **** 		}
 373              		.loc 1 374 4 is_stmt 1 view .LVU87
 374              	@ ../freertos/timers.c:374: 			pxNewTimer->ucStatus |= tmrSTATUS_IS_AUTORELOAD;
 374:../freertos/timers.c **** 		}
 375              		.loc 1 374 25 is_stmt 0 view .LVU88
 376 00dc 94F82830 		ldrb	r3, [r4, #40]	@ zero_extendqisi2	@ pxNewTimer_4->ucStatus, pxNewTimer_4->ucStatus
 377 00e0 43F00403 		orr	r3, r3, #4	@ tmp128, pxNewTimer_4->ucStatus,
 378 00e4 84F82830 		strb	r3, [r4, #40]	@ tmp128, pxNewTimer_4->ucStatus
 379              	.LVL27:
 374:../freertos/timers.c **** 		}
 380              		.loc 1 374 25 view .LVU89
 381              	.LBE5:
 382              	.LBE4:
 301:../freertos/timers.c **** 	}
 383              		.loc 1 301 3 is_stmt 1 view .LVU90
 384              	.L20:
 385              	@ ../freertos/timers.c:302: 	}
 302:../freertos/timers.c **** 
 386              		.loc 1 302 2 is_stmt 0 view .LVU91
 387 00e8 2046     		mov	r0, r4	@, <retval>
 388 00ea BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}	@
 302:../freertos/timers.c **** 
 389              		.loc 1 302 2 view .LVU92
 390              		.cfi_endproc
 391              	.LFE6:
 392              		.size	xTimerCreate, .-xTimerCreate
 393              		.align	1
 394              		.global	xTimerGenericCommand
 395              		.syntax unified
 396              		.thumb
 397              		.thumb_func
ARM GAS  /tmp/ccx8nc1r.s 			page 26


 398              		.type	xTimerGenericCommand, %function
 399              	xTimerGenericCommand:
 400              	.LVL28:
 401              	.LFB8:
 382:../freertos/timers.c **** BaseType_t xReturn = pdFAIL;
 402              		.loc 1 382 1 is_stmt 1 view -0
 403              		.cfi_startproc
 404              		@ args = 4, pretend = 0, frame = 16
 405              		@ frame_needed = 0, uses_anonymous_args = 0
 383:../freertos/timers.c **** DaemonTaskMessage_t xMessage;
 406              		.loc 1 383 1 view .LVU94
 384:../freertos/timers.c **** 
 407              		.loc 1 384 1 view .LVU95
 386:../freertos/timers.c **** 
 408              		.loc 1 386 24 view .LVU96
 390:../freertos/timers.c **** 	{
 409              		.loc 1 390 2 view .LVU97
 410              	@ ../freertos/timers.c:382: {
 382:../freertos/timers.c **** BaseType_t xReturn = pdFAIL;
 411              		.loc 1 382 1 is_stmt 0 view .LVU98
 412 00ee 7FB5     		push	{r0, r1, r2, r3, r4, r5, r6, lr}	@
 413              	.LCFI6:
 414              		.cfi_def_cfa_offset 32
 415              		.cfi_offset 4, -16
 416              		.cfi_offset 5, -12
 417              		.cfi_offset 6, -8
 418              		.cfi_offset 14, -4
 419              	@ ../freertos/timers.c:390: 	if( xTimerQueue != NULL )
 390:../freertos/timers.c **** 	{
 420              		.loc 1 390 18 view .LVU99
 421 00f0 0E4C     		ldr	r4, .L33	@ tmp124,
 422              	@ ../freertos/timers.c:382: {
 382:../freertos/timers.c **** BaseType_t xReturn = pdFAIL;
 423              		.loc 1 382 1 view .LVU100
 424 00f2 0546     		mov	r5, r0	@ xTimer, tmp132
 425              	@ ../freertos/timers.c:390: 	if( xTimerQueue != NULL )
 390:../freertos/timers.c **** 	{
 426              		.loc 1 390 18 view .LVU101
 427 00f4 A068     		ldr	r0, [r4, #8]	@ xTimerQueue.20_1, xTimerQueue
 428              	.LVL29:
 429              	@ ../freertos/timers.c:382: {
 382:../freertos/timers.c **** BaseType_t xReturn = pdFAIL;
 430              		.loc 1 382 1 view .LVU102
 431 00f6 1646     		mov	r6, r2	@ xOptionalValue, tmp134
 432 00f8 1A46     		mov	r2, r3	@ pxHigherPriorityTaskWoken, tmp135
 433              	.LVL30:
 434              	@ ../freertos/timers.c:390: 	if( xTimerQueue != NULL )
 390:../freertos/timers.c **** 	{
 435              		.loc 1 390 4 view .LVU103
 436 00fa 78B1     		cbz	r0, .L27	@ xTimerQueue.20_1,
 393:../freertos/timers.c **** 		xMessage.u.xTimerParameters.xMessageValue = xOptionalValue;
 437              		.loc 1 393 3 is_stmt 1 view .LVU104
 438              	@ ../freertos/timers.c:397: 		if( xCommandID < tmrFIRST_FROM_ISR_COMMAND )
 397:../freertos/timers.c **** 		{
 439              		.loc 1 397 5 is_stmt 0 view .LVU105
 440 00fc 0529     		cmp	r1, #5	@ xCommandID,
 441              	@ ../freertos/timers.c:394: 		xMessage.u.xTimerParameters.xMessageValue = xOptionalValue;
ARM GAS  /tmp/ccx8nc1r.s 			page 27


 394:../freertos/timers.c **** 		xMessage.u.xTimerParameters.pxTimer = xTimer;
 442              		.loc 1 394 45 view .LVU106
 443 00fe CDE90116 		strd	r1, r6, [sp, #4]	@ xCommandID, xOptionalValue,,
 395:../freertos/timers.c **** 
 444              		.loc 1 395 3 is_stmt 1 view .LVU107
 445              	@ ../freertos/timers.c:395: 		xMessage.u.xTimerParameters.pxTimer = xTimer;
 395:../freertos/timers.c **** 
 446              		.loc 1 395 39 is_stmt 0 view .LVU108
 447 0102 0395     		str	r5, [sp, #12]	@ xTimer, xMessage.u.xTimerParameters.pxTimer
 397:../freertos/timers.c **** 		{
 448              		.loc 1 397 3 is_stmt 1 view .LVU109
 449              	@ ../freertos/timers.c:397: 		if( xCommandID < tmrFIRST_FROM_ISR_COMMAND )
 397:../freertos/timers.c **** 		{
 450              		.loc 1 397 5 is_stmt 0 view .LVU110
 451 0104 0CDC     		bgt	.L29		@,
 399:../freertos/timers.c **** 			{
 452              		.loc 1 399 4 is_stmt 1 view .LVU111
 453              	@ ../freertos/timers.c:399: 			if( xTaskGetSchedulerState() == taskSCHEDULER_RUNNING )
 399:../freertos/timers.c **** 			{
 454              		.loc 1 399 8 is_stmt 0 view .LVU112
 455 0106 FFF7FEFF 		bl	xTaskGetSchedulerState		@
 456              	.LVL31:
 457              	@ ../freertos/timers.c:401: 				xReturn = xQueueSendToBack( xTimerQueue, &xMessage, xTicksToWait );
 401:../freertos/timers.c **** 			}
 458              		.loc 1 401 15 view .LVU113
 459 010a 0023     		movs	r3, #0	@,
 460              	@ ../freertos/timers.c:399: 			if( xTaskGetSchedulerState() == taskSCHEDULER_RUNNING )
 399:../freertos/timers.c **** 			{
 461              		.loc 1 399 6 discriminator 1 view .LVU114
 462 010c 0228     		cmp	r0, #2	@ tmp136,
 401:../freertos/timers.c **** 			}
 463              		.loc 1 401 5 is_stmt 1 view .LVU115
 464              	@ ../freertos/timers.c:405: 				xReturn = xQueueSendToBack( xTimerQueue, &xMessage, tmrNO_DELAY );
 405:../freertos/timers.c **** 			}
 465              		.loc 1 405 15 is_stmt 0 view .LVU116
 466 010e 14BF     		ite	ne
 467 0110 1A46     		movne	r2, r3	@,
 468              	@ ../freertos/timers.c:401: 				xReturn = xQueueSendToBack( xTimerQueue, &xMessage, xTicksToWait );
 401:../freertos/timers.c **** 			}
 469              		.loc 1 401 15 view .LVU117
 470 0112 089A     		ldreq	r2, [sp, #32]	@, xTicksToWait
 405:../freertos/timers.c **** 			}
 471              		.loc 1 405 5 is_stmt 1 view .LVU118
 472              	@ ../freertos/timers.c:405: 				xReturn = xQueueSendToBack( xTimerQueue, &xMessage, tmrNO_DELAY );
 405:../freertos/timers.c **** 			}
 473              		.loc 1 405 15 is_stmt 0 view .LVU119
 474 0114 A068     		ldr	r0, [r4, #8]	@, xTimerQueue
 475 0116 01A9     		add	r1, sp, #4	@ tmp142,,
 476 0118 FFF7FEFF 		bl	xQueueGenericSend		@
 477              	.LVL32:
 478              	.L27:
 479              	@ ../freertos/timers.c:421: }
 421:../freertos/timers.c **** /*-----------------------------------------------------------*/
 480              		.loc 1 421 1 view .LVU120
 481 011c 04B0     		add	sp, sp, #16	@,,
 482              	.LCFI7:
 483              		.cfi_remember_state
ARM GAS  /tmp/ccx8nc1r.s 			page 28


 484              		.cfi_def_cfa_offset 16
 485              		@ sp needed	@
 486 011e 70BD     		pop	{r4, r5, r6, pc}	@
 487              	.LVL33:
 488              	.L29:
 489              	.LCFI8:
 490              		.cfi_restore_state
 410:../freertos/timers.c **** 		}
 491              		.loc 1 410 4 is_stmt 1 view .LVU121
 492              	@ ../freertos/timers.c:410: 			xReturn = xQueueSendToBackFromISR( xTimerQueue, &xMessage, pxHigherP
 410:../freertos/timers.c **** 		}
 493              		.loc 1 410 14 is_stmt 0 view .LVU122
 494 0120 0023     		movs	r3, #0	@,
 495 0122 01A9     		add	r1, sp, #4	@ tmp143,,
 496              	.LVL34:
 410:../freertos/timers.c **** 		}
 497              		.loc 1 410 14 view .LVU123
 498 0124 FFF7FEFF 		bl	xQueueGenericSendFromISR		@
 499              	.LVL35:
 410:../freertos/timers.c **** 		}
 500              		.loc 1 410 14 view .LVU124
 501 0128 F8E7     		b	.L27		@
 502              	.L34:
 503 012a 00BF     		.align	2
 504              	.L33:
 505 012c 00000000 		.word	.LANCHOR0
 506              		.cfi_endproc
 507              	.LFE8:
 508              		.size	xTimerGenericCommand, .-xTimerGenericCommand
 509              		.align	1
 510              		.syntax unified
 511              		.thumb
 512              		.thumb_func
 513              		.type	prvSampleTimeNow, %function
 514              	prvSampleTimeNow:
 515              	.LVL36:
 516              	.LFB18:
 646:../freertos/timers.c **** TickType_t xTimeNow;
 517              		.loc 1 646 1 is_stmt 1 view -0
 518              		.cfi_startproc
 519              		@ args = 0, pretend = 0, frame = 0
 520              		@ frame_needed = 0, uses_anonymous_args = 0
 647:../freertos/timers.c **** PRIVILEGED_DATA static TickType_t xLastTime = ( TickType_t ) 0U; /*lint !e956 Variable is only acce
 521              		.loc 1 647 1 view .LVU126
 648:../freertos/timers.c **** 
 522              		.loc 1 648 17 view .LVU127
 650:../freertos/timers.c **** 
 523              		.loc 1 650 2 view .LVU128
 524              	@ ../freertos/timers.c:646: {
 646:../freertos/timers.c **** TickType_t xTimeNow;
 525              		.loc 1 646 1 is_stmt 0 view .LVU129
 526 0130 2DE9F743 		push	{r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}	@
 527              	.LCFI9:
 528              		.cfi_def_cfa_offset 40
 529              		.cfi_offset 4, -28
 530              		.cfi_offset 5, -24
 531              		.cfi_offset 6, -20
ARM GAS  /tmp/ccx8nc1r.s 			page 29


 532              		.cfi_offset 7, -16
 533              		.cfi_offset 8, -12
 534              		.cfi_offset 9, -8
 535              		.cfi_offset 14, -4
 536              	@ ../freertos/timers.c:646: {
 646:../freertos/timers.c **** TickType_t xTimeNow;
 537              		.loc 1 646 1 view .LVU130
 538 0134 0746     		mov	r7, r0	@ pxTimerListsWereSwitched, tmp150
 539              	@ ../freertos/timers.c:650: 	xTimeNow = xTaskGetTickCount();
 650:../freertos/timers.c **** 
 540              		.loc 1 650 13 view .LVU131
 541 0136 FFF7FEFF 		bl	xTaskGetTickCount		@
 542              	.LVL37:
 543              	@ ../freertos/timers.c:652: 	if( xTimeNow < xLastTime )
 652:../freertos/timers.c **** 	{
 544              		.loc 1 652 15 view .LVU132
 545 013a 1B4D     		ldr	r5, .L45	@ tmp131,
 546              	@ ../freertos/timers.c:650: 	xTimeNow = xTaskGetTickCount();
 650:../freertos/timers.c **** 
 547              		.loc 1 650 13 view .LVU133
 548 013c 0646     		mov	r6, r0	@ <retval>, tmp151
 549              	.LVL38:
 652:../freertos/timers.c **** 	{
 550              		.loc 1 652 2 is_stmt 1 view .LVU134
 551              	@ ../freertos/timers.c:652: 	if( xTimeNow < xLastTime )
 652:../freertos/timers.c **** 	{
 552              		.loc 1 652 4 is_stmt 0 view .LVU135
 553 013e AB6B     		ldr	r3, [r5, #56]	@ xLastTime, xLastTime
 554 0140 8342     		cmp	r3, r0	@ xLastTime, <retval>
 555 0142 20D8     		bhi	.L38		@,
 556 0144 0023     		movs	r3, #0	@ _27,
 557              	.LVL39:
 558              	.L37:
 559              	@ ../freertos/timers.c:665: }
 665:../freertos/timers.c **** /*-----------------------------------------------------------*/
 560              		.loc 1 665 1 view .LVU136
 561 0146 3046     		mov	r0, r6	@, <retval>
 562              	@ ../freertos/timers.c:655: 		*pxTimerListsWereSwitched = pdTRUE;
 655:../freertos/timers.c **** 	}
 563              		.loc 1 655 29 view .LVU137
 564 0148 3B60     		str	r3, [r7]	@ _27, *pxTimerListsWereSwitched_6(D)
 662:../freertos/timers.c **** 
 565              		.loc 1 662 2 is_stmt 1 view .LVU138
 566              	@ ../freertos/timers.c:662: 	xLastTime = xTimeNow;
 662:../freertos/timers.c **** 
 567              		.loc 1 662 12 is_stmt 0 view .LVU139
 568 014a AE63     		str	r6, [r5, #56]	@ <retval>, xLastTime
 664:../freertos/timers.c **** }
 569              		.loc 1 664 2 is_stmt 1 view .LVU140
 570              	@ ../freertos/timers.c:665: }
 665:../freertos/timers.c **** /*-----------------------------------------------------------*/
 571              		.loc 1 665 1 is_stmt 0 view .LVU141
 572 014c 03B0     		add	sp, sp, #12	@,,
 573              	.LCFI10:
 574              		.cfi_remember_state
 575              		.cfi_def_cfa_offset 28
 576              		@ sp needed	@
ARM GAS  /tmp/ccx8nc1r.s 			page 30


 577 014e BDE8F083 		pop	{r4, r5, r6, r7, r8, r9, pc}	@
 578              	.LVL40:
 579              	.L41:
 580              	.LCFI11:
 581              		.cfi_restore_state
 582              	.LBB8:
 583              	.LBB9:
 870:../freertos/timers.c **** 
 584              		.loc 1 870 3 is_stmt 1 view .LVU142
 585              	@ ../freertos/timers.c:870: 		xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerLis
 870:../freertos/timers.c **** 
 586              		.loc 1 870 21 is_stmt 0 view .LVU143
 587 0152 DB68     		ldr	r3, [r3, #12]	@ _12, pxCurrentTimerList.13_11->xListEnd.pxNext
 588              	@ ../freertos/timers.c:873: 		pxTimer = ( Timer_t * ) listGET_OWNER_OF_HEAD_ENTRY( pxCurrentTimerLi
 873:../freertos/timers.c **** 		( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
 589              		.loc 1 873 11 view .LVU144
 590 0154 DC68     		ldr	r4, [r3, #12]	@ pxTimer, _12->pvOwner
 591              	@ ../freertos/timers.c:870: 		xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerLis
 870:../freertos/timers.c **** 
 592              		.loc 1 870 19 view .LVU145
 593 0156 D3F80080 		ldr	r8, [r3]	@ xNextExpireTime, _12->xItemValue
 594              	.LVL41:
 873:../freertos/timers.c **** 		( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
 595              		.loc 1 873 3 is_stmt 1 view .LVU146
 874:../freertos/timers.c **** 		traceTIMER_EXPIRED( pxTimer );
 596              		.loc 1 874 3 view .LVU147
 597              	@ ../freertos/timers.c:874: 		( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
 874:../freertos/timers.c **** 		traceTIMER_EXPIRED( pxTimer );
 598              		.loc 1 874 12 is_stmt 0 view .LVU148
 599 015a 04F10409 		add	r9, r4, #4	@ _15, pxTimer,
 600 015e 4846     		mov	r0, r9	@, _15
 601 0160 FFF7FEFF 		bl	uxListRemove		@
 602              	.LVL42:
 875:../freertos/timers.c **** 
 603              		.loc 1 875 32 is_stmt 1 view .LVU149
 880:../freertos/timers.c **** 
 604              		.loc 1 880 3 view .LVU150
 605 0164 236A     		ldr	r3, [r4, #32]	@ pxTimer_14->pxCallbackFunction, pxTimer_14->pxCallbackFunction
 606 0166 2046     		mov	r0, r4	@, pxTimer
 607 0168 9847     		blx	r3		@ pxTimer_14->pxCallbackFunction
 608              	.LVL43:
 882:../freertos/timers.c **** 		{
 609              		.loc 1 882 3 view .LVU151
 610              	@ ../freertos/timers.c:882: 		if( ( pxTimer->ucStatus & tmrSTATUS_IS_AUTORELOAD ) != 0 )
 882:../freertos/timers.c **** 		{
 611              		.loc 1 882 5 is_stmt 0 view .LVU152
 612 016a 94F82830 		ldrb	r3, [r4, #40]	@ zero_extendqisi2	@ pxTimer_14->ucStatus, pxTimer_14->ucStatus
 613 016e 5B07     		lsls	r3, r3, #29	@, pxTimer_14->ucStatus,
 614 0170 09D5     		bpl	.L38		@,
 890:../freertos/timers.c **** 			if( xReloadTime > xNextExpireTime )
 615              		.loc 1 890 4 is_stmt 1 view .LVU153
 616              	@ ../freertos/timers.c:890: 			xReloadTime = ( xNextExpireTime + pxTimer->xTimerPeriodInTicks );
 890:../freertos/timers.c **** 			if( xReloadTime > xNextExpireTime )
 617              		.loc 1 890 16 is_stmt 0 view .LVU154
 618 0172 A369     		ldr	r3, [r4, #24]	@ pxTimer_14->xTimerPeriodInTicks, pxTimer_14->xTimerPeriodInTicks
 619 0174 4344     		add	r3, r3, r8	@ xReloadTime, xNextExpireTime
 620              	.LVL44:
ARM GAS  /tmp/ccx8nc1r.s 			page 31


 891:../freertos/timers.c **** 			{
 621              		.loc 1 891 4 is_stmt 1 view .LVU155
 622              	@ ../freertos/timers.c:891: 			if( xReloadTime > xNextExpireTime )
 891:../freertos/timers.c **** 			{
 623              		.loc 1 891 6 is_stmt 0 view .LVU156
 624 0176 9845     		cmp	r8, r3	@ xNextExpireTime, xReloadTime
 625 0178 0ED2     		bcs	.L39		@,
 893:../freertos/timers.c **** 				listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );
 626              		.loc 1 893 5 is_stmt 1 view .LVU157
 627              	@ ../freertos/timers.c:895: 				vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 895:../freertos/timers.c **** 			}
 628              		.loc 1 895 5 is_stmt 0 view .LVU158
 629 017a 4946     		mov	r1, r9	@, _15
 630 017c 6868     		ldr	r0, [r5, #4]	@, pxCurrentTimerList
 631              	@ ../freertos/timers.c:893: 				listSET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ), xReloadTime 
 893:../freertos/timers.c **** 				listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );
 632              		.loc 1 893 5 view .LVU159
 633 017e 6360     		str	r3, [r4, #4]	@ xReloadTime, pxTimer_14->xTimerListItem.xItemValue
 894:../freertos/timers.c **** 				vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 634              		.loc 1 894 5 is_stmt 1 view .LVU160
 635 0180 2461     		str	r4, [r4, #16]	@ pxTimer, pxTimer_14->xTimerListItem.pvOwner
 895:../freertos/timers.c **** 			}
 636              		.loc 1 895 5 view .LVU161
 637 0182 FFF7FEFF 		bl	vListInsert		@
 638              	.LVL45:
 639              	.L38:
 906:../freertos/timers.c **** 		}
 640              		.loc 1 906 28 view .LVU162
 868:../freertos/timers.c **** 	{
 641              		.loc 1 868 49 view .LVU163
 642              	@ ../freertos/timers.c:868: 	while( listLIST_IS_EMPTY( pxCurrentTimerList ) == pdFALSE )
 868:../freertos/timers.c **** 	{
 643              		.loc 1 868 9 is_stmt 0 view .LVU164
 644 0186 6B68     		ldr	r3, [r5, #4]	@ pxCurrentTimerList.13_11, pxCurrentTimerList
 645 0188 1A68     		ldr	r2, [r3]	@ _25, pxCurrentTimerList.13_11->uxNumberOfItems
 646              	@ ../freertos/timers.c:868: 	while( listLIST_IS_EMPTY( pxCurrentTimerList ) == pdFALSE )
 868:../freertos/timers.c **** 	{
 647              		.loc 1 868 49 view .LVU165
 648 018a 002A     		cmp	r2, #0	@ _25
 649 018c E1D1     		bne	.L41	@
 910:../freertos/timers.c **** 	pxCurrentTimerList = pxOverflowTimerList;
 650              		.loc 1 910 2 is_stmt 1 view .LVU166
 651              	.LVL46:
 911:../freertos/timers.c **** 	pxOverflowTimerList = pxTemp;
 652              		.loc 1 911 2 view .LVU167
 653              	@ ../freertos/timers.c:911: 	pxCurrentTimerList = pxOverflowTimerList;
 911:../freertos/timers.c **** 	pxOverflowTimerList = pxTemp;
 654              		.loc 1 911 21 is_stmt 0 view .LVU168
 655 018e 2A68     		ldr	r2, [r5]	@ pxOverflowTimerList, pxOverflowTimerList
 656              	@ ../freertos/timers.c:912: 	pxOverflowTimerList = pxTemp;
 912:../freertos/timers.c **** }
 657              		.loc 1 912 22 view .LVU169
 658 0190 C5E90032 		strd	r3, r2, [r5]	@ pxCurrentTimerList.13_11, pxOverflowTimerList, tmp131
 659              	.LBE9:
 660              	.LBE8:
 655:../freertos/timers.c **** 	}
 661              		.loc 1 655 3 is_stmt 1 view .LVU170
ARM GAS  /tmp/ccx8nc1r.s 			page 32


 662 0194 0123     		movs	r3, #1	@ _27,
 663              	.LVL47:
 655:../freertos/timers.c **** 	}
 664              		.loc 1 655 3 is_stmt 0 view .LVU171
 665 0196 D6E7     		b	.L37		@
 666              	.LVL48:
 667              	.L39:
 668              	.LBB11:
 669              	.LBB10:
 899:../freertos/timers.c **** 				configASSERT( xResult );
 670              		.loc 1 899 5 is_stmt 1 view .LVU172
 671              	@ ../freertos/timers.c:899: 				xResult = xTimerGenericCommand( pxTimer, tmrCOMMAND_START_DONT_TRAC
 899:../freertos/timers.c **** 				configASSERT( xResult );
 672              		.loc 1 899 15 is_stmt 0 view .LVU173
 673 0198 0023     		movs	r3, #0	@ tmp141,
 674              	.LVL49:
 899:../freertos/timers.c **** 				configASSERT( xResult );
 675              		.loc 1 899 15 view .LVU174
 676 019a 4246     		mov	r2, r8	@, xNextExpireTime
 677 019c 1946     		mov	r1, r3	@,
 678 019e 2046     		mov	r0, r4	@, pxTimer
 679 01a0 0093     		str	r3, [sp]	@ tmp141,
 680              	.LVL50:
 899:../freertos/timers.c **** 				configASSERT( xResult );
 681              		.loc 1 899 15 view .LVU175
 682 01a2 FFF7FEFF 		bl	xTimerGenericCommand		@
 683              	.LVL51:
 684 01a6 EEE7     		b	.L38		@
 685              	.L46:
 686              		.align	2
 687              	.L45:
 688 01a8 00000000 		.word	.LANCHOR0
 689              	.LBE10:
 690              	.LBE11:
 691              		.cfi_endproc
 692              	.LFE18:
 693              		.size	prvSampleTimeNow, .-prvSampleTimeNow
 694              		.align	1
 695              		.syntax unified
 696              		.thumb
 697              		.thumb_func
 698              		.type	prvTimerTask, %function
 699              	prvTimerTask:
 700              	.LVL52:
 701              	.LFB15:
 524:../freertos/timers.c **** TickType_t xNextExpireTime;
 702              		.loc 1 524 1 is_stmt 1 view -0
 703              		.cfi_startproc
 704              		@ args = 0, pretend = 0, frame = 16
 705              		@ frame_needed = 0, uses_anonymous_args = 0
 524:../freertos/timers.c **** TickType_t xNextExpireTime;
 706              		.loc 1 524 1 is_stmt 0 view .LVU177
 707 01ac 2DE9F043 		push	{r4, r5, r6, r7, r8, r9, lr}	@
 708              	.LCFI12:
 709              		.cfi_def_cfa_offset 28
 710              		.cfi_offset 4, -28
 711              		.cfi_offset 5, -24
ARM GAS  /tmp/ccx8nc1r.s 			page 33


 712              		.cfi_offset 6, -20
 713              		.cfi_offset 7, -16
 714              		.cfi_offset 8, -12
 715              		.cfi_offset 9, -8
 716              		.cfi_offset 14, -4
 717              	.LBB20:
 718              	.LBB21:
 719              	@ ../freertos/timers.c:630: 	*pxListWasEmpty = listLIST_IS_EMPTY( pxCurrentTimerList );
 630:../freertos/timers.c **** 	if( *pxListWasEmpty == pdFALSE )
 720              		.loc 1 630 20 discriminator 2 view .LVU178
 721 01b0 0026     		movs	r6, #0	@ xListWasEmpty,
 722              	@ ../freertos/timers.c:630: 	*pxListWasEmpty = listLIST_IS_EMPTY( pxCurrentTimerList );
 630:../freertos/timers.c **** 	if( *pxListWasEmpty == pdFALSE )
 723              		.loc 1 630 20 view .LVU179
 724 01b2 5A4D     		ldr	r5, .L83	@ tmp167,
 725              	.LBE21:
 726              	.LBE20:
 727              	@ ../freertos/timers.c:524: {
 524:../freertos/timers.c **** TickType_t xNextExpireTime;
 728              		.loc 1 524 1 view .LVU180
 729 01b4 87B0     		sub	sp, sp, #28	@,,
 730              	.LCFI13:
 731              		.cfi_def_cfa_offset 56
 732              	.LVL53:
 733              	.L69:
 525:../freertos/timers.c **** BaseType_t xListWasEmpty;
 734              		.loc 1 525 1 is_stmt 1 view .LVU181
 526:../freertos/timers.c **** 
 735              		.loc 1 526 1 view .LVU182
 529:../freertos/timers.c **** 
 736              		.loc 1 529 2 view .LVU183
 543:../freertos/timers.c **** 	{
 737              		.loc 1 543 2 view .LVU184
 547:../freertos/timers.c **** 
 738              		.loc 1 547 3 view .LVU185
 739              	.LBB24:
 740              	.LBI20:
 619:../freertos/timers.c **** {
 741              		.loc 1 619 19 view .LVU186
 742              	.LBB22:
 621:../freertos/timers.c **** 
 743              		.loc 1 621 1 view .LVU187
 630:../freertos/timers.c **** 	if( *pxListWasEmpty == pdFALSE )
 744              		.loc 1 630 2 view .LVU188
 745              	@ ../freertos/timers.c:630: 	*pxListWasEmpty = listLIST_IS_EMPTY( pxCurrentTimerList );
 630:../freertos/timers.c **** 	if( *pxListWasEmpty == pdFALSE )
 746              		.loc 1 630 20 is_stmt 0 view .LVU189
 747 01b6 6B68     		ldr	r3, [r5, #4]	@ pxCurrentTimerList.3_51, pxCurrentTimerList
 748 01b8 D3F80080 		ldr	r8, [r3]	@ xNextExpireTime, pxCurrentTimerList.3_51->uxNumberOfItems
 749 01bc B8F1000F 		cmp	r8, #0	@ xNextExpireTime
 750 01c0 4CD0     		beq	.L70	@
 751              	.LVL54:
 631:../freertos/timers.c **** 	{
 752              		.loc 1 631 2 is_stmt 1 view .LVU190
 633:../freertos/timers.c **** 	}
 753              		.loc 1 633 3 view .LVU191
 754              	@ ../freertos/timers.c:630: 	*pxListWasEmpty = listLIST_IS_EMPTY( pxCurrentTimerList );
ARM GAS  /tmp/ccx8nc1r.s 			page 34


 630:../freertos/timers.c **** 	if( *pxListWasEmpty == pdFALSE )
 755              		.loc 1 630 20 is_stmt 0 discriminator 2 view .LVU192
 756 01c2 0024     		movs	r4, #0	@ xListWasEmpty,
 757              	@ ../freertos/timers.c:633: 		xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerLis
 633:../freertos/timers.c **** 	}
 758              		.loc 1 633 19 view .LVU193
 759 01c4 DB68     		ldr	r3, [r3, #12]	@ pxCurrentTimerList.3_51->xListEnd.pxNext, pxCurrentTimerList.3_51->xListEnd.px
 760 01c6 D3F80080 		ldr	r8, [r3]	@ xNextExpireTime, _54->xItemValue
 761              	.LVL55:
 762              	.L48:
 641:../freertos/timers.c **** }
 763              		.loc 1 641 2 is_stmt 1 view .LVU194
 641:../freertos/timers.c **** }
 764              		.loc 1 641 2 is_stmt 0 view .LVU195
 765              	.LBE22:
 766              	.LBE24:
 551:../freertos/timers.c **** 
 767              		.loc 1 551 3 is_stmt 1 view .LVU196
 768              	.LBB25:
 769              	.LBI25:
 559:../freertos/timers.c **** {
 770              		.loc 1 559 13 view .LVU197
 771              	.LBB26:
 561:../freertos/timers.c **** BaseType_t xTimerListsWereSwitched;
 772              		.loc 1 561 1 view .LVU198
 562:../freertos/timers.c **** 
 773              		.loc 1 562 1 view .LVU199
 564:../freertos/timers.c **** 	{
 774              		.loc 1 564 2 view .LVU200
 775 01ca FFF7FEFF 		bl	vTaskSuspendAll		@
 776              	.LVL56:
 571:../freertos/timers.c **** 		if( xTimerListsWereSwitched == pdFALSE )
 777              		.loc 1 571 3 view .LVU201
 778              	@ ../freertos/timers.c:571: 		xTimeNow = prvSampleTimeNow( &xTimerListsWereSwitched );
 571:../freertos/timers.c **** 		if( xTimerListsWereSwitched == pdFALSE )
 779              		.loc 1 571 14 is_stmt 0 view .LVU202
 780 01ce 03A8     		add	r0, sp, #12	@ tmp240,,
 781 01d0 FFF7AEFF 		bl	prvSampleTimeNow		@
 782              	.LVL57:
 783              	@ ../freertos/timers.c:572: 		if( xTimerListsWereSwitched == pdFALSE )
 572:../freertos/timers.c **** 		{
 784              		.loc 1 572 5 view .LVU203
 785 01d4 039B     		ldr	r3, [sp, #12]	@ MEM[(long int *)_107], MEM[(long int *)_107]
 786              	@ ../freertos/timers.c:571: 		xTimeNow = prvSampleTimeNow( &xTimerListsWereSwitched );
 571:../freertos/timers.c **** 		if( xTimerListsWereSwitched == pdFALSE )
 787              		.loc 1 571 14 view .LVU204
 788 01d6 8146     		mov	r9, r0	@ xTimeNow, tmp232
 789              	.LVL58:
 572:../freertos/timers.c **** 		{
 790              		.loc 1 572 3 is_stmt 1 view .LVU205
 791              	@ ../freertos/timers.c:572: 		if( xTimerListsWereSwitched == pdFALSE )
 572:../freertos/timers.c **** 		{
 792              		.loc 1 572 5 is_stmt 0 view .LVU206
 793 01d8 002B     		cmp	r3, #0	@ MEM[(long int *)_107]
 794 01da 60D1     		bne	.L49	@
 575:../freertos/timers.c **** 			{
 795              		.loc 1 575 4 is_stmt 1 view .LVU207
ARM GAS  /tmp/ccx8nc1r.s 			page 35


 796              	@ ../freertos/timers.c:575: 			if( ( xListWasEmpty == pdFALSE ) && ( xNextExpireTime <= xTimeNow ) 
 575:../freertos/timers.c **** 			{
 797              		.loc 1 575 6 is_stmt 0 view .LVU208
 798 01dc 002C     		cmp	r4, #0	@ xListWasEmpty
 799 01de 44D1     		bne	.L50	@
 800              	@ ../freertos/timers.c:575: 			if( ( xListWasEmpty == pdFALSE ) && ( xNextExpireTime <= xTimeNow ) 
 575:../freertos/timers.c **** 			{
 801              		.loc 1 575 37 discriminator 1 view .LVU209
 802 01e0 4045     		cmp	r0, r8	@ xTimeNow, xNextExpireTime
 803 01e2 47D3     		bcc	.L51		@,
 577:../freertos/timers.c **** 				prvProcessExpiredTimer( xNextExpireTime, xTimeNow );
 804              		.loc 1 577 5 is_stmt 1 view .LVU210
 805              	@ ../freertos/timers.c:577: 				( void ) xTaskResumeAll();
 577:../freertos/timers.c **** 				prvProcessExpiredTimer( xNextExpireTime, xTimeNow );
 806              		.loc 1 577 14 is_stmt 0 view .LVU211
 807 01e4 FFF7FEFF 		bl	xTaskResumeAll		@
 808              	.LVL59:
 578:../freertos/timers.c **** 			}
 809              		.loc 1 578 5 is_stmt 1 view .LVU212
 810              	.LBB27:
 811              	.LBI27:
 482:../freertos/timers.c **** {
 812              		.loc 1 482 13 view .LVU213
 813              	.LBB28:
 484:../freertos/timers.c **** Timer_t * const pxTimer = ( Timer_t * ) listGET_OWNER_OF_HEAD_ENTRY( pxCurrentTimerList ); /*lint !
 814              		.loc 1 484 1 view .LVU214
 485:../freertos/timers.c **** 
 815              		.loc 1 485 1 view .LVU215
 816              	@ ../freertos/timers.c:485: Timer_t * const pxTimer = ( Timer_t * ) listGET_OWNER_OF_HEAD_ENTRY( px
 485:../freertos/timers.c **** 
 817              		.loc 1 485 41 is_stmt 0 view .LVU216
 818 01e8 6B68     		ldr	r3, [r5, #4]	@ pxCurrentTimerList, pxCurrentTimerList
 819              	@ ../freertos/timers.c:485: Timer_t * const pxTimer = ( Timer_t * ) listGET_OWNER_OF_HEAD_ENTRY( px
 485:../freertos/timers.c **** 
 820              		.loc 1 485 17 view .LVU217
 821 01ea DB68     		ldr	r3, [r3, #12]	@ pxCurrentTimerList.15_57->xListEnd.pxNext, pxCurrentTimerList.15_57->xListEnd.
 822 01ec DF68     		ldr	r7, [r3, #12]	@ pxTimer, _58->pvOwner
 823              	.LVL60:
 489:../freertos/timers.c **** 	traceTIMER_EXPIRED( pxTimer );
 824              		.loc 1 489 2 is_stmt 1 view .LVU218
 825              	@ ../freertos/timers.c:489: 	( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
 489:../freertos/timers.c **** 	traceTIMER_EXPIRED( pxTimer );
 826              		.loc 1 489 11 is_stmt 0 view .LVU219
 827 01ee 381D     		adds	r0, r7, #4	@, pxTimer,
 828 01f0 FFF7FEFF 		bl	uxListRemove		@
 829              	.LVL61:
 490:../freertos/timers.c **** 
 830              		.loc 1 490 31 is_stmt 1 view .LVU220
 494:../freertos/timers.c **** 	{
 831              		.loc 1 494 2 view .LVU221
 832              	@ ../freertos/timers.c:494: 	if( ( pxTimer->ucStatus & tmrSTATUS_IS_AUTORELOAD ) != 0 )
 494:../freertos/timers.c **** 	{
 833              		.loc 1 494 15 is_stmt 0 view .LVU222
 834 01f4 97F82830 		ldrb	r3, [r7, #40]	@ zero_extendqisi2	@ _61, pxTimer_59->ucStatus
 835              	@ ../freertos/timers.c:494: 	if( ( pxTimer->ucStatus & tmrSTATUS_IS_AUTORELOAD ) != 0 )
 494:../freertos/timers.c **** 	{
 836              		.loc 1 494 4 view .LVU223
ARM GAS  /tmp/ccx8nc1r.s 			page 36


 837 01f8 5807     		lsls	r0, r3, #29	@, _61,
 838 01fa 31D5     		bpl	.L52		@,
 499:../freertos/timers.c **** 		{
 839              		.loc 1 499 3 is_stmt 1 view .LVU224
 840              	@ ../freertos/timers.c:499: 		if( prvInsertTimerInActiveList( pxTimer, ( xNextExpireTime + pxTimer-
 499:../freertos/timers.c **** 		{
 841              		.loc 1 499 7 is_stmt 0 view .LVU225
 842 01fc B969     		ldr	r1, [r7, #24]	@ pxTimer_59->xTimerPeriodInTicks, pxTimer_59->xTimerPeriodInTicks
 843 01fe 4346     		mov	r3, r8	@, xNextExpireTime
 844 0200 4A46     		mov	r2, r9	@, xTimeNow
 845 0202 3846     		mov	r0, r7	@, pxTimer
 846 0204 4144     		add	r1, r1, r8	@, xNextExpireTime
 847 0206 FFF7FBFE 		bl	prvInsertTimerInActiveList		@
 848              	.LVL62:
 849              	@ ../freertos/timers.c:499: 		if( prvInsertTimerInActiveList( pxTimer, ( xNextExpireTime + pxTimer-
 499:../freertos/timers.c **** 		{
 850              		.loc 1 499 5 discriminator 1 view .LVU226
 851 020a 30B1     		cbz	r0, .L53	@ tmp233,
 503:../freertos/timers.c **** 			configASSERT( xResult );
 852              		.loc 1 503 4 is_stmt 1 view .LVU227
 853              	@ ../freertos/timers.c:503: 			xResult = xTimerGenericCommand( pxTimer, tmrCOMMAND_START_DONT_TRACE
 503:../freertos/timers.c **** 			configASSERT( xResult );
 854              		.loc 1 503 14 is_stmt 0 view .LVU228
 855 020c 2346     		mov	r3, r4	@, xListWasEmpty
 856 020e 4246     		mov	r2, r8	@, xNextExpireTime
 857 0210 2146     		mov	r1, r4	@, tmp3
 858 0212 3846     		mov	r0, r7	@, pxTimer
 859 0214 0094     		str	r4, [sp]	@ xListWasEmpty,
 860 0216 FFF7FEFF 		bl	xTimerGenericCommand		@
 861              	.LVL63:
 504:../freertos/timers.c **** 			( void ) xResult;
 862              		.loc 1 504 27 is_stmt 1 view .LVU229
 505:../freertos/timers.c **** 		}
 863              		.loc 1 505 4 view .LVU230
 864              	.L53:
 515:../freertos/timers.c **** 	}
 865              		.loc 1 515 27 view .LVU231
 519:../freertos/timers.c **** }
 866              		.loc 1 519 2 view .LVU232
 867 021a 3846     		mov	r0, r7	@, pxTimer
 868 021c 3B6A     		ldr	r3, [r7, #32]	@ pxTimer_59->pxCallbackFunction, pxTimer_59->pxCallbackFunction
 869 021e 9847     		blx	r3		@ pxTimer_59->pxCallbackFunction
 870              	.LVL64:
 871              	.L56:
 519:../freertos/timers.c **** }
 872              		.loc 1 519 2 is_stmt 0 view .LVU233
 873              	.LBE28:
 874              	.LBE27:
 875              	.LBE26:
 876              	.LBE25:
 877              	.LBB33:
 878              	.LBB34:
 716:../freertos/timers.c **** 	{
 879              		.loc 1 716 62 is_stmt 1 view .LVU234
 880              	@ ../freertos/timers.c:716: 	while( xQueueReceive( xTimerQueue, &xMessage, tmrNO_DELAY ) != pdFAIL 
 716:../freertos/timers.c **** 	{
 881              		.loc 1 716 9 is_stmt 0 view .LVU235
ARM GAS  /tmp/ccx8nc1r.s 			page 37


 882 0220 0022     		movs	r2, #0	@,
 883 0222 A868     		ldr	r0, [r5, #8]	@, xTimerQueue
 884 0224 03A9     		add	r1, sp, #12	@ tmp241,,
 885 0226 FFF7FEFF 		bl	xQueueReceive		@
 886              	.LVL65:
 887              	@ ../freertos/timers.c:716: 	while( xQueueReceive( xTimerQueue, &xMessage, tmrNO_DELAY ) != pdFAIL 
 716:../freertos/timers.c **** 	{
 888              		.loc 1 716 62 discriminator 1 view .LVU236
 889 022a 0028     		cmp	r0, #0	@ tmp237
 890 022c C3D0     		beq	.L69	@
 742:../freertos/timers.c **** 		{
 891              		.loc 1 742 3 is_stmt 1 view .LVU237
 892              	@ ../freertos/timers.c:742: 		if( xMessage.xMessageID >= ( BaseType_t ) 0 )
 742:../freertos/timers.c **** 		{
 893              		.loc 1 742 5 is_stmt 0 view .LVU238
 894 022e 039B     		ldr	r3, [sp, #12]	@ MEM[(struct tmrTimerQueueMessage *)_107].xMessageID, MEM[(struct tmrTimerQueue
 895 0230 002B     		cmp	r3, #0	@ MEM[(struct tmrTimerQueueMessage *)_107].xMessageID,
 896 0232 F5DB     		blt	.L56		@,
 746:../freertos/timers.c **** 
 897              		.loc 1 746 4 is_stmt 1 view .LVU239
 898              	@ ../freertos/timers.c:746: 			pxTimer = xMessage.u.xTimerParameters.pxTimer;
 746:../freertos/timers.c **** 
 899              		.loc 1 746 12 is_stmt 0 view .LVU240
 900 0234 059C     		ldr	r4, [sp, #20]	@ pxTimer, MEM[(struct tmrTimerQueueMessage *)_107].u.xTimerParameters.pxTimer
 901              	.LVL66:
 748:../freertos/timers.c **** 			{
 902              		.loc 1 748 4 is_stmt 1 view .LVU241
 903              	@ ../freertos/timers.c:748: 			if( listIS_CONTAINED_WITHIN( NULL, &( pxTimer->xTimerListItem ) ) ==
 748:../freertos/timers.c **** 			{
 904              		.loc 1 748 6 is_stmt 0 view .LVU242
 905 0236 6369     		ldr	r3, [r4, #20]	@ pxTimer_9->xTimerListItem.pvContainer, pxTimer_9->xTimerListItem.pvContainer
 906 0238 13B1     		cbz	r3, .L57	@ pxTimer_9->xTimerListItem.pvContainer,
 751:../freertos/timers.c **** 			}
 907              		.loc 1 751 5 is_stmt 1 view .LVU243
 908              	@ ../freertos/timers.c:751: 				( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
 751:../freertos/timers.c **** 			}
 909              		.loc 1 751 14 is_stmt 0 view .LVU244
 910 023a 201D     		adds	r0, r4, #4	@, pxTimer,
 911 023c FFF7FEFF 		bl	uxListRemove		@
 912              	.LVL67:
 913              	.L57:
 755:../freertos/timers.c **** 			}
 914              		.loc 1 755 29 is_stmt 1 view .LVU245
 758:../freertos/timers.c **** 
 915              		.loc 1 758 106 view .LVU246
 766:../freertos/timers.c **** 
 916              		.loc 1 766 4 view .LVU247
 917              	@ ../freertos/timers.c:766: 			xTimeNow = prvSampleTimeNow( &xTimerListsWereSwitched );
 766:../freertos/timers.c **** 
 918              		.loc 1 766 15 is_stmt 0 view .LVU248
 919 0240 02A8     		add	r0, sp, #8	@,,
 920 0242 FFF775FF 		bl	prvSampleTimeNow		@
 921              	.LVL68:
 922              	@ ../freertos/timers.c:768: 			switch( xMessage.xMessageID )
 768:../freertos/timers.c **** 			{
 923              		.loc 1 768 4 view .LVU249
 924 0246 039B     		ldr	r3, [sp, #12]	@ MEM[(struct tmrTimerQueueMessage *)_107].xMessageID, MEM[(struct tmrTimerQueue
ARM GAS  /tmp/ccx8nc1r.s 			page 38


 925              	@ ../freertos/timers.c:766: 			xTimeNow = prvSampleTimeNow( &xTimerListsWereSwitched );
 766:../freertos/timers.c **** 
 926              		.loc 1 766 15 view .LVU250
 927 0248 0246     		mov	r2, r0	@ xTimeNow, tmp235
 928              	.LVL69:
 768:../freertos/timers.c **** 			{
 929              		.loc 1 768 4 is_stmt 1 view .LVU251
 930 024a 092B     		cmp	r3, #9	@ MEM[(struct tmrTimerQueueMessage *)_107].xMessageID,
 931 024c E8D8     		bhi	.L56		@
 932 024e DFE803F0 		tbb	[pc, r3]	@ MEM[(struct tmrTimerQueueMessage *)_107].xMessageID
 933              	.L60:
 934 0252 29       		.byte	(.L62-.L60)/2
 935 0253 29       		.byte	(.L62-.L60)/2
 936 0254 29       		.byte	(.L62-.L60)/2
 937 0255 48       		.byte	(.L61-.L60)/2
 938 0256 4F       		.byte	(.L59-.L60)/2
 939 0257 5D       		.byte	(.L63-.L60)/2
 940 0258 29       		.byte	(.L62-.L60)/2
 941 0259 29       		.byte	(.L62-.L60)/2
 942 025a 48       		.byte	(.L61-.L60)/2
 943 025b 4F       		.byte	(.L59-.L60)/2
 944              	.LVL70:
 945              		.p2align 1
 946              	.L70:
 768:../freertos/timers.c **** 			{
 947              		.loc 1 768 4 is_stmt 0 view .LVU252
 948              	.LBE34:
 949              	.LBE33:
 950              	.LBB37:
 951              	.LBB23:
 952              	@ ../freertos/timers.c:630: 	*pxListWasEmpty = listLIST_IS_EMPTY( pxCurrentTimerList );
 630:../freertos/timers.c **** 	if( *pxListWasEmpty == pdFALSE )
 953              		.loc 1 630 20 discriminator 1 view .LVU253
 954 025c 0124     		movs	r4, #1	@ xListWasEmpty,
 955 025e B4E7     		b	.L48		@
 956              	.LVL71:
 957              	.L52:
 630:../freertos/timers.c **** 	if( *pxListWasEmpty == pdFALSE )
 958              		.loc 1 630 20 discriminator 1 view .LVU254
 959              	.LBE23:
 960              	.LBE37:
 961              	.LBB38:
 962              	.LBB31:
 963              	.LBB30:
 964              	.LBB29:
 514:../freertos/timers.c **** 		mtCOVERAGE_TEST_MARKER();
 965              		.loc 1 514 3 is_stmt 1 view .LVU255
 966              	@ ../freertos/timers.c:514: 		pxTimer->ucStatus &= ~tmrSTATUS_IS_ACTIVE;
 514:../freertos/timers.c **** 		mtCOVERAGE_TEST_MARKER();
 967              		.loc 1 514 21 is_stmt 0 view .LVU256
 968 0260 23F00103 		bic	r3, r3, #1	@ tmp181, _61,
 969 0264 87F82830 		strb	r3, [r7, #40]	@ tmp181, pxTimer_59->ucStatus
 970 0268 D7E7     		b	.L53		@
 971              	.LVL72:
 972              	.L50:
 514:../freertos/timers.c **** 		mtCOVERAGE_TEST_MARKER();
 973              		.loc 1 514 21 view .LVU257
ARM GAS  /tmp/ccx8nc1r.s 			page 39


 974              	.LBE29:
 975              	.LBE30:
 592:../freertos/timers.c **** 				}
 976              		.loc 1 592 6 is_stmt 1 view .LVU258
 977              	@ ../freertos/timers.c:592: 					xListWasEmpty = listLIST_IS_EMPTY( pxOverflowTimerList );
 592:../freertos/timers.c **** 				}
 978              		.loc 1 592 22 is_stmt 0 view .LVU259
 979 026a 2B68     		ldr	r3, [r5]	@ pxOverflowTimerList.7_45, pxOverflowTimerList
 980 026c 1C68     		ldr	r4, [r3]	@ _46, pxOverflowTimerList.7_45->uxNumberOfItems
 981              	.LVL73:
 592:../freertos/timers.c **** 				}
 982              		.loc 1 592 22 view .LVU260
 983 026e B4FA84F4 		clz	r4, r4	@ xListWasEmpty, _46
 984 0272 6409     		lsrs	r4, r4, #5	@ xListWasEmpty, xListWasEmpty,
 985              	.L51:
 986              	.LVL74:
 595:../freertos/timers.c **** 
 987              		.loc 1 595 5 is_stmt 1 view .LVU261
 988 0274 2246     		mov	r2, r4	@, xListWasEmpty
 989 0276 A868     		ldr	r0, [r5, #8]	@, xTimerQueue
 990              	.LVL75:
 595:../freertos/timers.c **** 
 991              		.loc 1 595 5 is_stmt 0 view .LVU262
 992 0278 A8EB0901 		sub	r1, r8, r9	@, xNextExpireTime, xTimeNow
 993 027c FFF7FEFF 		bl	vQueueWaitForMessageRestricted		@
 994              	.LVL76:
 597:../freertos/timers.c **** 				{
 995              		.loc 1 597 5 is_stmt 1 view .LVU263
 996              	@ ../freertos/timers.c:597: 				if( xTaskResumeAll() == pdFALSE )
 597:../freertos/timers.c **** 				{
 997              		.loc 1 597 9 is_stmt 0 view .LVU264
 998 0280 FFF7FEFF 		bl	xTaskResumeAll		@
 999              	.LVL77:
 1000              	@ ../freertos/timers.c:597: 				if( xTaskResumeAll() == pdFALSE )
 597:../freertos/timers.c **** 				{
 1001              		.loc 1 597 7 discriminator 1 view .LVU265
 1002 0284 0028     		cmp	r0, #0	@ tmp234
 1003 0286 CBD1     		bne	.L56	@
 603:../freertos/timers.c **** 				}
 1004              		.loc 1 603 6 is_stmt 1 view .LVU266
 1005 0288 4FF0E023 		mov	r3, #-536813568	@ tmp189,
 1006 028c 4FF08052 		mov	r2, #268435456	@ tmp190,
 1007 0290 C3F8042D 		str	r2, [r3, #3332]	@ tmp190, MEM[(volatile uint32_t *)3758157060B]
 603:../freertos/timers.c **** 				}
 1008              		.loc 1 603 6 view .LVU267
 1009              		.syntax unified
 1010              	@ 603 "../freertos/timers.c" 1
 1011 0294 BFF34F8F 		dsb	
 1012              	@ 0 "" 2
 603:../freertos/timers.c **** 				}
 1013              		.loc 1 603 6 view .LVU268
 1014              	@ 603 "../freertos/timers.c" 1
 1015 0298 BFF36F8F 		isb
 1016              	@ 0 "" 2
 603:../freertos/timers.c **** 				}
 1017              		.loc 1 603 28 view .LVU269
 1018              		.thumb
ARM GAS  /tmp/ccx8nc1r.s 			page 40


 1019              		.syntax unified
 1020 029c C0E7     		b	.L56		@
 1021              	.LVL78:
 1022              	.L49:
 613:../freertos/timers.c **** 		}
 1023              		.loc 1 613 4 view .LVU270
 1024              	@ ../freertos/timers.c:613: 			( void ) xTaskResumeAll();
 613:../freertos/timers.c **** 		}
 1025              		.loc 1 613 13 is_stmt 0 view .LVU271
 1026 029e FFF7FEFF 		bl	xTaskResumeAll		@
 1027              	.LVL79:
 613:../freertos/timers.c **** 		}
 1028              		.loc 1 613 13 view .LVU272
 1029              	.LBE31:
 1030              	.LBE38:
 554:../freertos/timers.c **** 	}
 1031              		.loc 1 554 3 is_stmt 1 discriminator 1 view .LVU273
 1032              	.LBB39:
 1033              	.LBI33:
 709:../freertos/timers.c **** {
 1034              		.loc 1 709 13 view .LVU274
 1035              	.LBB35:
 711:../freertos/timers.c **** Timer_t *pxTimer;
 1036              		.loc 1 711 1 view .LVU275
 712:../freertos/timers.c **** BaseType_t xTimerListsWereSwitched, xResult;
 1037              		.loc 1 712 1 view .LVU276
 713:../freertos/timers.c **** TickType_t xTimeNow;
 1038              		.loc 1 713 1 view .LVU277
 714:../freertos/timers.c **** 
 1039              		.loc 1 714 1 view .LVU278
 716:../freertos/timers.c **** 	{
 1040              		.loc 1 716 2 view .LVU279
 1041              	.LBE35:
 1042              	.LBE39:
 1043              	.LBB40:
 1044              	.LBB32:
 1045              	@ ../freertos/timers.c:616: }
 616:../freertos/timers.c **** /*-----------------------------------------------------------*/
 1046              		.loc 1 616 1 is_stmt 0 view .LVU280
 1047 02a2 BDE7     		b	.L56		@
 1048              	.LVL80:
 1049              	.L62:
 616:../freertos/timers.c **** /*-----------------------------------------------------------*/
 1050              		.loc 1 616 1 view .LVU281
 1051              	.LBE32:
 1052              	.LBE40:
 1053              	.LBB41:
 1054              	.LBB36:
 776:../freertos/timers.c **** 					if( prvInsertTimerInActiveList( pxTimer,  xMessage.u.xTimerParameters.xMessageValue + pxTimer-
 1055              		.loc 1 776 6 is_stmt 1 view .LVU282
 1056              	@ ../freertos/timers.c:776: 					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
 776:../freertos/timers.c **** 					if( prvInsertTimerInActiveList( pxTimer,  xMessage.u.xTimerParameters.xMessageValue + pxTimer-
 1057              		.loc 1 776 24 is_stmt 0 view .LVU283
 1058 02a4 94F82830 		ldrb	r3, [r4, #40]	@ zero_extendqisi2	@ pxTimer_9->ucStatus, pxTimer_9->ucStatus
 1059              	@ ../freertos/timers.c:777: 					if( prvInsertTimerInActiveList( pxTimer,  xMessage.u.xTimerParamet
 777:../freertos/timers.c **** 					{
 1060              		.loc 1 777 10 view .LVU284
ARM GAS  /tmp/ccx8nc1r.s 			page 41


 1061 02a8 A169     		ldr	r1, [r4, #24]	@ pxTimer_9->xTimerPeriodInTicks, pxTimer_9->xTimerPeriodInTicks
 1062              	@ ../freertos/timers.c:776: 					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
 776:../freertos/timers.c **** 					if( prvInsertTimerInActiveList( pxTimer,  xMessage.u.xTimerParameters.xMessageValue + pxTimer-
 1063              		.loc 1 776 24 view .LVU285
 1064 02aa 43F00103 		orr	r3, r3, #1	@ tmp198, pxTimer_9->ucStatus,
 1065 02ae 84F82830 		strb	r3, [r4, #40]	@ tmp198, pxTimer_9->ucStatus
 777:../freertos/timers.c **** 					{
 1066              		.loc 1 777 6 is_stmt 1 view .LVU286
 1067              	@ ../freertos/timers.c:777: 					if( prvInsertTimerInActiveList( pxTimer,  xMessage.u.xTimerParamet
 777:../freertos/timers.c **** 					{
 1068              		.loc 1 777 10 is_stmt 0 view .LVU287
 1069 02b2 049B     		ldr	r3, [sp, #16]	@, MEM[(struct tmrTimerQueueMessage *)_107].u.xTimerParameters.xMessageValue
 1070 02b4 2046     		mov	r0, r4	@, pxTimer
 1071              	.LVL81:
 777:../freertos/timers.c **** 					{
 1072              		.loc 1 777 10 view .LVU288
 1073 02b6 1944     		add	r1, r1, r3	@,
 1074 02b8 FFF7A2FE 		bl	prvInsertTimerInActiveList		@
 1075              	.LVL82:
 1076              	@ ../freertos/timers.c:777: 					if( prvInsertTimerInActiveList( pxTimer,  xMessage.u.xTimerParamet
 777:../freertos/timers.c **** 					{
 1077              		.loc 1 777 8 discriminator 1 view .LVU289
 1078 02bc 0028     		cmp	r0, #0	@ tmp236
 1079 02be AFD0     		beq	.L56	@
 781:../freertos/timers.c **** 						traceTIMER_EXPIRED( pxTimer );
 1080              		.loc 1 781 7 is_stmt 1 view .LVU290
 1081 02c0 236A     		ldr	r3, [r4, #32]	@ pxTimer_9->pxCallbackFunction, pxTimer_9->pxCallbackFunction
 1082 02c2 2046     		mov	r0, r4	@, pxTimer
 1083 02c4 9847     		blx	r3		@ pxTimer_9->pxCallbackFunction
 1084              	.LVL83:
 782:../freertos/timers.c **** 
 1085              		.loc 1 782 36 view .LVU291
 784:../freertos/timers.c **** 						{
 1086              		.loc 1 784 7 view .LVU292
 1087              	@ ../freertos/timers.c:784: 						if( ( pxTimer->ucStatus & tmrSTATUS_IS_AUTORELOAD ) != 0 )
 784:../freertos/timers.c **** 						{
 1088              		.loc 1 784 9 is_stmt 0 view .LVU293
 1089 02c6 94F82830 		ldrb	r3, [r4, #40]	@ zero_extendqisi2	@ pxTimer_9->ucStatus, pxTimer_9->ucStatus
 1090 02ca 5907     		lsls	r1, r3, #29	@, pxTimer_9->ucStatus,
 1091 02cc A8D5     		bpl	.L56		@,
 786:../freertos/timers.c **** 							configASSERT( xResult );
 1092              		.loc 1 786 8 is_stmt 1 view .LVU294
 1093              	@ ../freertos/timers.c:786: 							xResult = xTimerGenericCommand( pxTimer, tmrCOMMAND_START_DONT_T
 786:../freertos/timers.c **** 							configASSERT( xResult );
 1094              		.loc 1 786 18 is_stmt 0 view .LVU295
 1095 02ce 0023     		movs	r3, #0	@,
 1096 02d0 A269     		ldr	r2, [r4, #24]	@ pxTimer_9->xTimerPeriodInTicks, pxTimer_9->xTimerPeriodInTicks
 1097 02d2 0499     		ldr	r1, [sp, #16]	@ MEM[(struct tmrTimerQueueMessage *)_107].u.xTimerParameters.xMessageValue, MEM
 1098 02d4 2046     		mov	r0, r4	@, pxTimer
 1099 02d6 0A44     		add	r2, r2, r1	@, MEM[(struct tmrTimerQueueMessage *)_107].u.xTimerParameters.xMessageValue
 1100 02d8 0096     		str	r6, [sp]	@ xListWasEmpty,
 1101 02da 1946     		mov	r1, r3	@,
 1102 02dc FFF7FEFF 		bl	xTimerGenericCommand		@
 1103              	.LVL84:
 787:../freertos/timers.c **** 							( void ) xResult;
 1104              		.loc 1 787 31 is_stmt 1 view .LVU296
 788:../freertos/timers.c **** 						}
ARM GAS  /tmp/ccx8nc1r.s 			page 42


 1105              		.loc 1 788 8 view .LVU297
 1106 02e0 9EE7     		b	.L56		@
 1107              	.LVL85:
 1108              	.L61:
 804:../freertos/timers.c **** 					break;
 1109              		.loc 1 804 6 view .LVU298
 1110              	@ ../freertos/timers.c:804: 					pxTimer->ucStatus &= ~tmrSTATUS_IS_ACTIVE;
 804:../freertos/timers.c **** 					break;
 1111              		.loc 1 804 24 is_stmt 0 view .LVU299
 1112 02e2 94F82830 		ldrb	r3, [r4, #40]	@ zero_extendqisi2	@ pxTimer_9->ucStatus, pxTimer_9->ucStatus
 1113              	.L67:
 834:../freertos/timers.c **** 						}
 1114              		.loc 1 834 8 is_stmt 1 view .LVU300
 1115              	@ ../freertos/timers.c:834: 							pxTimer->ucStatus &= ~tmrSTATUS_IS_ACTIVE;
 834:../freertos/timers.c **** 						}
 1116              		.loc 1 834 26 is_stmt 0 view .LVU301
 1117 02e6 23F00103 		bic	r3, r3, #1	@ tmp224, _38,
 1118 02ea 84F82830 		strb	r3, [r4, #40]	@ tmp224, pxTimer_9->ucStatus
 1119 02ee 97E7     		b	.L56		@
 1120              	.L59:
 809:../freertos/timers.c **** 					pxTimer->xTimerPeriodInTicks = xMessage.u.xTimerParameters.xMessageValue;
 1121              		.loc 1 809 6 is_stmt 1 view .LVU302
 1122              	@ ../freertos/timers.c:809: 					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
 809:../freertos/timers.c **** 					pxTimer->xTimerPeriodInTicks = xMessage.u.xTimerParameters.xMessageValue;
 1123              		.loc 1 809 24 is_stmt 0 view .LVU303
 1124 02f0 94F82830 		ldrb	r3, [r4, #40]	@ zero_extendqisi2	@ pxTimer_9->ucStatus, pxTimer_9->ucStatus
 1125 02f4 43F00103 		orr	r3, r3, #1	@ tmp218, pxTimer_9->ucStatus,
 1126 02f8 84F82830 		strb	r3, [r4, #40]	@ tmp218, pxTimer_9->ucStatus
 810:../freertos/timers.c **** 					configASSERT( ( pxTimer->xTimerPeriodInTicks > 0 ) );
 1127              		.loc 1 810 6 is_stmt 1 view .LVU304
 1128              	@ ../freertos/timers.c:810: 					pxTimer->xTimerPeriodInTicks = xMessage.u.xTimerParameters.xMessag
 810:../freertos/timers.c **** 					configASSERT( ( pxTimer->xTimerPeriodInTicks > 0 ) );
 1129              		.loc 1 810 64 is_stmt 0 view .LVU305
 1130 02fc 0499     		ldr	r1, [sp, #16]	@ _34, MEM[(struct tmrTimerQueueMessage *)_107].u.xTimerParameters.xMessageValue
 1131              	@ ../freertos/timers.c:819: 					( void ) prvInsertTimerInActiveList( pxTimer, ( xTimeNow + pxTimer
 819:../freertos/timers.c **** 					break;
 1132              		.loc 1 819 15 view .LVU306
 1133 02fe 0346     		mov	r3, r0	@, xTimeNow
 1134              	@ ../freertos/timers.c:810: 					pxTimer->xTimerPeriodInTicks = xMessage.u.xTimerParameters.xMessag
 810:../freertos/timers.c **** 					configASSERT( ( pxTimer->xTimerPeriodInTicks > 0 ) );
 1135              		.loc 1 810 35 view .LVU307
 1136 0300 A161     		str	r1, [r4, #24]	@ _34, pxTimer_9->xTimerPeriodInTicks
 811:../freertos/timers.c **** 
 1137              		.loc 1 811 58 is_stmt 1 view .LVU308
 819:../freertos/timers.c **** 					break;
 1138              		.loc 1 819 6 view .LVU309
 1139              	@ ../freertos/timers.c:819: 					( void ) prvInsertTimerInActiveList( pxTimer, ( xTimeNow + pxTimer
 819:../freertos/timers.c **** 					break;
 1140              		.loc 1 819 15 is_stmt 0 view .LVU310
 1141 0302 0144     		add	r1, r1, r0	@, tmp3
 1142 0304 2046     		mov	r0, r4	@, pxTimer
 1143              	.LVL86:
 819:../freertos/timers.c **** 					break;
 1144              		.loc 1 819 15 view .LVU311
 1145 0306 FFF77BFE 		bl	prvInsertTimerInActiveList		@
 1146              	.LVL87:
 820:../freertos/timers.c **** 
ARM GAS  /tmp/ccx8nc1r.s 			page 43


 1147              		.loc 1 820 6 is_stmt 1 view .LVU312
 1148 030a 89E7     		b	.L56		@
 1149              	.LVL88:
 1150              	.L63:
 828:../freertos/timers.c **** 						{
 1151              		.loc 1 828 7 view .LVU313
 1152              	@ ../freertos/timers.c:828: 						if( ( pxTimer->ucStatus & tmrSTATUS_IS_STATICALLY_ALLOCATED ) == 
 828:../freertos/timers.c **** 						{
 1153              		.loc 1 828 20 is_stmt 0 view .LVU314
 1154 030c 94F82830 		ldrb	r3, [r4, #40]	@ zero_extendqisi2	@ _38, pxTimer_9->ucStatus
 1155              	@ ../freertos/timers.c:828: 						if( ( pxTimer->ucStatus & tmrSTATUS_IS_STATICALLY_ALLOCATED ) == 
 828:../freertos/timers.c **** 						{
 1156              		.loc 1 828 9 view .LVU315
 1157 0310 9A07     		lsls	r2, r3, #30	@, _38,
 1158 0312 E8D4     		bmi	.L67		@,
 830:../freertos/timers.c **** 						}
 1159              		.loc 1 830 8 is_stmt 1 view .LVU316
 1160 0314 2046     		mov	r0, r4	@, pxTimer
 1161              	.LVL89:
 830:../freertos/timers.c **** 						}
 1162              		.loc 1 830 8 is_stmt 0 view .LVU317
 1163 0316 FFF7FEFF 		bl	vPortFree		@
 1164              	.LVL90:
 1165 031a 81E7     		b	.L56		@
 1166              	.L84:
 1167              		.align	2
 1168              	.L83:
 1169 031c 00000000 		.word	.LANCHOR0
 1170              	.LBE36:
 1171              	.LBE41:
 1172              		.cfi_endproc
 1173              	.LFE15:
 1174              		.size	prvTimerTask, .-prvTimerTask
 1175              		.align	1
 1176              		.global	xTimerGetTimerDaemonTaskHandle
 1177              		.syntax unified
 1178              		.thumb
 1179              		.thumb_func
 1180              		.type	xTimerGetTimerDaemonTaskHandle, %function
 1181              	xTimerGetTimerDaemonTaskHandle:
 1182              	.LFB9:
 425:../freertos/timers.c **** 	/* If xTimerGetTimerDaemonTaskHandle() is called before the scheduler has been
 1183              		.loc 1 425 1 is_stmt 1 view -0
 1184              		.cfi_startproc
 1185              		@ args = 0, pretend = 0, frame = 0
 1186              		@ frame_needed = 0, uses_anonymous_args = 0
 1187              		@ link register save eliminated.
 428:../freertos/timers.c **** 	return xTimerTaskHandle;
 1188              		.loc 1 428 46 view .LVU319
 429:../freertos/timers.c **** }
 1189              		.loc 1 429 2 view .LVU320
 1190              	@ ../freertos/timers.c:430: }
 430:../freertos/timers.c **** /*-----------------------------------------------------------*/
 1191              		.loc 1 430 1 is_stmt 0 view .LVU321
 1192 0320 014B     		ldr	r3, .L86	@ tmp116,
 1193 0322 586B     		ldr	r0, [r3, #52]	@, xTimerTaskHandle
 1194 0324 7047     		bx	lr	@
ARM GAS  /tmp/ccx8nc1r.s 			page 44


 1195              	.L87:
 1196 0326 00BF     		.align	2
 1197              	.L86:
 1198 0328 00000000 		.word	.LANCHOR0
 1199              		.cfi_endproc
 1200              	.LFE9:
 1201              		.size	xTimerGetTimerDaemonTaskHandle, .-xTimerGetTimerDaemonTaskHandle
 1202              		.align	1
 1203              		.global	xTimerGetPeriod
 1204              		.syntax unified
 1205              		.thumb
 1206              		.thumb_func
 1207              		.type	xTimerGetPeriod, %function
 1208              	xTimerGetPeriod:
 1209              	.LVL91:
 1210              	.LFB10:
 434:../freertos/timers.c **** Timer_t *pxTimer = xTimer;
 1211              		.loc 1 434 1 is_stmt 1 view -0
 1212              		.cfi_startproc
 1213              		@ args = 0, pretend = 0, frame = 0
 1214              		@ frame_needed = 0, uses_anonymous_args = 0
 1215              		@ link register save eliminated.
 435:../freertos/timers.c **** 
 1216              		.loc 1 435 1 view .LVU323
 437:../freertos/timers.c **** 	return pxTimer->xTimerPeriodInTicks;
 1217              		.loc 1 437 24 view .LVU324
 438:../freertos/timers.c **** }
 1218              		.loc 1 438 2 view .LVU325
 1219              	@ ../freertos/timers.c:439: }
 439:../freertos/timers.c **** /*-----------------------------------------------------------*/
 1220              		.loc 1 439 1 is_stmt 0 view .LVU326
 1221 032c 8069     		ldr	r0, [r0, #24]	@, MEM[(struct Timer_t *)xTimer_1(D)].xTimerPeriodInTicks
 1222              	.LVL92:
 439:../freertos/timers.c **** /*-----------------------------------------------------------*/
 1223              		.loc 1 439 1 view .LVU327
 1224 032e 7047     		bx	lr	@
 1225              		.cfi_endproc
 1226              	.LFE10:
 1227              		.size	xTimerGetPeriod, .-xTimerGetPeriod
 1228              		.align	1
 1229              		.global	vTimerSetReloadMode
 1230              		.syntax unified
 1231              		.thumb
 1232              		.thumb_func
 1233              		.type	vTimerSetReloadMode, %function
 1234              	vTimerSetReloadMode:
 1235              	.LVL93:
 1236              	.LFB11:
 443:../freertos/timers.c **** Timer_t * pxTimer =  xTimer;
 1237              		.loc 1 443 1 is_stmt 1 view -0
 1238              		.cfi_startproc
 1239              		@ args = 0, pretend = 0, frame = 0
 1240              		@ frame_needed = 0, uses_anonymous_args = 0
 444:../freertos/timers.c **** 
 1241              		.loc 1 444 1 view .LVU329
 1242              	@ ../freertos/timers.c:443: {
 443:../freertos/timers.c **** Timer_t * pxTimer =  xTimer;
ARM GAS  /tmp/ccx8nc1r.s 			page 45


 1243              		.loc 1 443 1 is_stmt 0 view .LVU330
 1244 0330 38B5     		push	{r3, r4, r5, lr}	@
 1245              	.LCFI14:
 1246              		.cfi_def_cfa_offset 16
 1247              		.cfi_offset 3, -16
 1248              		.cfi_offset 4, -12
 1249              		.cfi_offset 5, -8
 1250              		.cfi_offset 14, -4
 1251              	@ ../freertos/timers.c:443: {
 443:../freertos/timers.c **** Timer_t * pxTimer =  xTimer;
 1252              		.loc 1 443 1 view .LVU331
 1253 0332 0446     		mov	r4, r0	@ xTimer, tmp127
 1254              	.LVL94:
 446:../freertos/timers.c **** 	taskENTER_CRITICAL();
 1255              		.loc 1 446 24 is_stmt 1 view .LVU332
 447:../freertos/timers.c **** 	{
 1256              		.loc 1 447 2 view .LVU333
 1257              	@ ../freertos/timers.c:443: {
 443:../freertos/timers.c **** Timer_t * pxTimer =  xTimer;
 1258              		.loc 1 443 1 is_stmt 0 view .LVU334
 1259 0334 0D46     		mov	r5, r1	@ uxAutoReload, tmp128
 1260              	@ ../freertos/timers.c:447: 	taskENTER_CRITICAL();
 447:../freertos/timers.c **** 	{
 1261              		.loc 1 447 2 view .LVU335
 1262 0336 FFF7FEFF 		bl	vPortEnterCritical		@
 1263              	.LVL95:
 449:../freertos/timers.c **** 		{
 1264              		.loc 1 449 3 is_stmt 1 view .LVU336
 1265 033a 94F82830 		ldrb	r3, [r4, #40]	@ zero_extendqisi2	@ MEM[(struct Timer_t *)xTimer_6(D)].ucStatus, MEM[(struct T
 1266              	@ ../freertos/timers.c:449: 		if( uxAutoReload != pdFALSE )
 449:../freertos/timers.c **** 		{
 1267              		.loc 1 449 5 is_stmt 0 view .LVU337
 1268 033e 3DB1     		cbz	r5, .L90	@ uxAutoReload,
 451:../freertos/timers.c **** 		}
 1269              		.loc 1 451 4 is_stmt 1 view .LVU338
 1270              	@ ../freertos/timers.c:451: 			pxTimer->ucStatus |= tmrSTATUS_IS_AUTORELOAD;
 451:../freertos/timers.c **** 		}
 1271              		.loc 1 451 22 is_stmt 0 view .LVU339
 1272 0340 43F00403 		orr	r3, r3, #4	@ cstore_13, MEM[(struct Timer_t *)xTimer_6(D)].ucStatus,
 1273              	.L91:
 1274 0344 84F82830 		strb	r3, [r4, #40]	@ cstore_13, MEM[(struct Timer_t *)xTimer_6(D)].ucStatus
 458:../freertos/timers.c **** }
 1275              		.loc 1 458 2 is_stmt 1 view .LVU340
 1276              	@ ../freertos/timers.c:459: }
 459:../freertos/timers.c **** /*-----------------------------------------------------------*/
 1277              		.loc 1 459 1 is_stmt 0 view .LVU341
 1278 0348 BDE83840 		pop	{r3, r4, r5, lr}	@
 1279              	.LCFI15:
 1280              		.cfi_remember_state
 1281              		.cfi_restore 14
 1282              		.cfi_restore 5
 1283              		.cfi_restore 4
 1284              		.cfi_restore 3
 1285              		.cfi_def_cfa_offset 0
 1286              	.LVL96:
 1287              	@ ../freertos/timers.c:458: 	taskEXIT_CRITICAL();
 458:../freertos/timers.c **** }
ARM GAS  /tmp/ccx8nc1r.s 			page 46


 1288              		.loc 1 458 2 view .LVU342
 1289 034c FFF7FEBF 		b	vPortExitCritical		@
 1290              	.LVL97:
 1291              	.L90:
 1292              	.LCFI16:
 1293              		.cfi_restore_state
 455:../freertos/timers.c **** 		}
 1294              		.loc 1 455 4 is_stmt 1 view .LVU343
 1295              	@ ../freertos/timers.c:455: 			pxTimer->ucStatus &= ~tmrSTATUS_IS_AUTORELOAD;
 455:../freertos/timers.c **** 		}
 1296              		.loc 1 455 22 is_stmt 0 view .LVU344
 1297 0350 03F0FB03 		and	r3, r3, #251	@ cstore_13, MEM[(struct Timer_t *)xTimer_6(D)].ucStatus,
 1298 0354 F6E7     		b	.L91		@
 1299              		.cfi_endproc
 1300              	.LFE11:
 1301              		.size	vTimerSetReloadMode, .-vTimerSetReloadMode
 1302              		.align	1
 1303              		.global	xTimerGetExpiryTime
 1304              		.syntax unified
 1305              		.thumb
 1306              		.thumb_func
 1307              		.type	xTimerGetExpiryTime, %function
 1308              	xTimerGetExpiryTime:
 1309              	.LVL98:
 1310              	.LFB12:
 463:../freertos/timers.c **** Timer_t * pxTimer =  xTimer;
 1311              		.loc 1 463 1 is_stmt 1 view -0
 1312              		.cfi_startproc
 1313              		@ args = 0, pretend = 0, frame = 0
 1314              		@ frame_needed = 0, uses_anonymous_args = 0
 1315              		@ link register save eliminated.
 464:../freertos/timers.c **** TickType_t xReturn;
 1316              		.loc 1 464 1 view .LVU346
 465:../freertos/timers.c **** 
 1317              		.loc 1 465 1 view .LVU347
 467:../freertos/timers.c **** 	xReturn = listGET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ) );
 1318              		.loc 1 467 24 view .LVU348
 468:../freertos/timers.c **** 	return xReturn;
 1319              		.loc 1 468 2 view .LVU349
 469:../freertos/timers.c **** }
 1320              		.loc 1 469 2 view .LVU350
 1321              	@ ../freertos/timers.c:470: }
 470:../freertos/timers.c **** /*-----------------------------------------------------------*/
 1322              		.loc 1 470 1 is_stmt 0 view .LVU351
 1323 0356 4068     		ldr	r0, [r0, #4]	@, MEM[(struct Timer_t *)xTimer_1(D)].xTimerListItem.xItemValue
 1324              	.LVL99:
 470:../freertos/timers.c **** /*-----------------------------------------------------------*/
 1325              		.loc 1 470 1 view .LVU352
 1326 0358 7047     		bx	lr	@
 1327              		.cfi_endproc
 1328              	.LFE12:
 1329              		.size	xTimerGetExpiryTime, .-xTimerGetExpiryTime
 1330              		.align	1
 1331              		.global	pcTimerGetName
 1332              		.syntax unified
 1333              		.thumb
 1334              		.thumb_func
ARM GAS  /tmp/ccx8nc1r.s 			page 47


 1335              		.type	pcTimerGetName, %function
 1336              	pcTimerGetName:
 1337              	.LVL100:
 1338              	.LFB13:
 474:../freertos/timers.c **** Timer_t *pxTimer = xTimer;
 1339              		.loc 1 474 1 is_stmt 1 view -0
 1340              		.cfi_startproc
 1341              		@ args = 0, pretend = 0, frame = 0
 1342              		@ frame_needed = 0, uses_anonymous_args = 0
 1343              		@ link register save eliminated.
 475:../freertos/timers.c **** 
 1344              		.loc 1 475 1 view .LVU354
 477:../freertos/timers.c **** 	return pxTimer->pcTimerName;
 1345              		.loc 1 477 24 view .LVU355
 478:../freertos/timers.c **** }
 1346              		.loc 1 478 2 view .LVU356
 1347              	@ ../freertos/timers.c:479: }
 479:../freertos/timers.c **** /*-----------------------------------------------------------*/
 1348              		.loc 1 479 1 is_stmt 0 view .LVU357
 1349 035a 0068     		ldr	r0, [r0]	@, MEM[(struct Timer_t *)xTimer_1(D)].pcTimerName
 1350              	.LVL101:
 479:../freertos/timers.c **** /*-----------------------------------------------------------*/
 1351              		.loc 1 479 1 view .LVU358
 1352 035c 7047     		bx	lr	@
 1353              		.cfi_endproc
 1354              	.LFE13:
 1355              		.size	pcTimerGetName, .-pcTimerGetName
 1356              		.align	1
 1357              		.global	xTimerIsTimerActive
 1358              		.syntax unified
 1359              		.thumb
 1360              		.thumb_func
 1361              		.type	xTimerIsTimerActive, %function
 1362              	xTimerIsTimerActive:
 1363              	.LVL102:
 1364              	.LFB23:
 965:../freertos/timers.c **** /*-----------------------------------------------------------*/
 966:../freertos/timers.c **** 
 967:../freertos/timers.c **** BaseType_t xTimerIsTimerActive( TimerHandle_t xTimer )
 968:../freertos/timers.c **** {
 1365              		.loc 1 968 1 is_stmt 1 view -0
 1366              		.cfi_startproc
 1367              		@ args = 0, pretend = 0, frame = 0
 1368              		@ frame_needed = 0, uses_anonymous_args = 0
 969:../freertos/timers.c **** BaseType_t xReturn;
 1369              		.loc 1 969 1 view .LVU360
 970:../freertos/timers.c **** Timer_t *pxTimer = xTimer;
 1370              		.loc 1 970 1 view .LVU361
 1371              	@ ../freertos/timers.c:968: {
 968:../freertos/timers.c **** BaseType_t xReturn;
 1372              		.loc 1 968 1 is_stmt 0 view .LVU362
 1373 035e 10B5     		push	{r4, lr}	@
 1374              	.LCFI17:
 1375              		.cfi_def_cfa_offset 8
 1376              		.cfi_offset 4, -8
 1377              		.cfi_offset 14, -4
 1378              	@ ../freertos/timers.c:968: {
ARM GAS  /tmp/ccx8nc1r.s 			page 48


 968:../freertos/timers.c **** BaseType_t xReturn;
 1379              		.loc 1 968 1 view .LVU363
 1380 0360 0446     		mov	r4, r0	@ xTimer, tmp122
 1381              	.LVL103:
 971:../freertos/timers.c **** 
 972:../freertos/timers.c **** 	configASSERT( xTimer );
 1382              		.loc 1 972 24 is_stmt 1 view .LVU364
 973:../freertos/timers.c **** 
 974:../freertos/timers.c **** 	/* Is the timer in the list of active timers? */
 975:../freertos/timers.c **** 	taskENTER_CRITICAL();
 1383              		.loc 1 975 2 view .LVU365
 1384 0362 FFF7FEFF 		bl	vPortEnterCritical		@
 1385              	.LVL104:
 976:../freertos/timers.c **** 	{
 977:../freertos/timers.c **** 		if( ( pxTimer->ucStatus & tmrSTATUS_IS_ACTIVE ) == 0 )
 1386              		.loc 1 977 3 view .LVU366
 1387 0366 94F82840 		ldrb	r4, [r4, #40]	@ zero_extendqisi2	@ MEM[(struct Timer_t *)xTimer_3(D)].ucStatus, MEM[(struct T
 1388              	.LVL105:
 1389              	@ ../freertos/timers.c:986: 	taskEXIT_CRITICAL();
 978:../freertos/timers.c **** 		{
 979:../freertos/timers.c **** 			xReturn = pdFALSE;
 980:../freertos/timers.c **** 		}
 981:../freertos/timers.c **** 		else
 982:../freertos/timers.c **** 		{
 983:../freertos/timers.c **** 			xReturn = pdTRUE;
 984:../freertos/timers.c **** 		}
 985:../freertos/timers.c **** 	}
 986:../freertos/timers.c **** 	taskEXIT_CRITICAL();
 1390              		.loc 1 986 2 is_stmt 0 view .LVU367
 1391 036a FFF7FEFF 		bl	vPortExitCritical		@
 1392              	.LVL106:
 1393 036e 04F00104 		and	r4, r4, #1	@ <retval>, MEM[(struct Timer_t *)xTimer_3(D)].ucStatus,
 1394              	.LVL107:
 1395              		.loc 1 986 2 is_stmt 1 view .LVU368
 987:../freertos/timers.c **** 
 988:../freertos/timers.c **** 	return xReturn;
 1396              		.loc 1 988 2 view .LVU369
 1397              	@ ../freertos/timers.c:989: } /*lint !e818 Can't be pointer to const due to the typedef. */
 989:../freertos/timers.c **** } /*lint !e818 Can't be pointer to const due to the typedef. */
 1398              		.loc 1 989 1 is_stmt 0 view .LVU370
 1399 0372 2046     		mov	r0, r4	@, <retval>
 1400 0374 10BD     		pop	{r4, pc}	@
 1401              		.loc 1 989 1 view .LVU371
 1402              		.cfi_endproc
 1403              	.LFE23:
 1404              		.size	xTimerIsTimerActive, .-xTimerIsTimerActive
 1405              		.align	1
 1406              		.global	pvTimerGetTimerID
 1407              		.syntax unified
 1408              		.thumb
 1409              		.thumb_func
 1410              		.type	pvTimerGetTimerID, %function
 1411              	pvTimerGetTimerID:
 1412              	.LVL108:
 1413              	.LFB24:
 990:../freertos/timers.c **** /*-----------------------------------------------------------*/
 991:../freertos/timers.c **** 
ARM GAS  /tmp/ccx8nc1r.s 			page 49


 992:../freertos/timers.c **** void *pvTimerGetTimerID( const TimerHandle_t xTimer )
 993:../freertos/timers.c **** {
 1414              		.loc 1 993 1 is_stmt 1 view -0
 1415              		.cfi_startproc
 1416              		@ args = 0, pretend = 0, frame = 0
 1417              		@ frame_needed = 0, uses_anonymous_args = 0
 994:../freertos/timers.c **** Timer_t * const pxTimer = xTimer;
 1418              		.loc 1 994 1 view .LVU373
 1419              	@ ../freertos/timers.c:993: {
 993:../freertos/timers.c **** Timer_t * const pxTimer = xTimer;
 1420              		.loc 1 993 1 is_stmt 0 view .LVU374
 1421 0376 10B5     		push	{r4, lr}	@
 1422              	.LCFI18:
 1423              		.cfi_def_cfa_offset 8
 1424              		.cfi_offset 4, -8
 1425              		.cfi_offset 14, -4
 1426              	@ ../freertos/timers.c:993: {
 993:../freertos/timers.c **** Timer_t * const pxTimer = xTimer;
 1427              		.loc 1 993 1 view .LVU375
 1428 0378 0446     		mov	r4, r0	@ xTimer, tmp117
 1429              	.LVL109:
 995:../freertos/timers.c **** void *pvReturn;
 1430              		.loc 1 995 1 is_stmt 1 view .LVU376
 996:../freertos/timers.c **** 
 997:../freertos/timers.c **** 	configASSERT( xTimer );
 1431              		.loc 1 997 24 view .LVU377
 998:../freertos/timers.c **** 
 999:../freertos/timers.c **** 	taskENTER_CRITICAL();
 1432              		.loc 1 999 2 view .LVU378
 1433 037a FFF7FEFF 		bl	vPortEnterCritical		@
 1434              	.LVL110:
1000:../freertos/timers.c **** 	{
1001:../freertos/timers.c **** 		pvReturn = pxTimer->pvTimerID;
 1435              		.loc 1 1001 3 view .LVU379
 1436              	@ ../freertos/timers.c:1001: 		pvReturn = pxTimer->pvTimerID;
 1437              		.loc 1 1001 12 is_stmt 0 view .LVU380
 1438 037e E469     		ldr	r4, [r4, #28]	@ <retval>, MEM[(struct Timer_t *)xTimer_1(D)].pvTimerID
 1439              	.LVL111:
1002:../freertos/timers.c **** 	}
1003:../freertos/timers.c **** 	taskEXIT_CRITICAL();
 1440              		.loc 1 1003 2 is_stmt 1 view .LVU381
 1441 0380 FFF7FEFF 		bl	vPortExitCritical		@
 1442              	.LVL112:
1004:../freertos/timers.c **** 
1005:../freertos/timers.c **** 	return pvReturn;
 1443              		.loc 1 1005 2 view .LVU382
 1444              	@ ../freertos/timers.c:1006: }
1006:../freertos/timers.c **** }
 1445              		.loc 1 1006 1 is_stmt 0 view .LVU383
 1446 0384 2046     		mov	r0, r4	@, <retval>
 1447 0386 10BD     		pop	{r4, pc}	@
 1448              		.loc 1 1006 1 view .LVU384
 1449              		.cfi_endproc
 1450              	.LFE24:
 1451              		.size	pvTimerGetTimerID, .-pvTimerGetTimerID
 1452              		.align	1
 1453              		.global	vTimerSetTimerID
ARM GAS  /tmp/ccx8nc1r.s 			page 50


 1454              		.syntax unified
 1455              		.thumb
 1456              		.thumb_func
 1457              		.type	vTimerSetTimerID, %function
 1458              	vTimerSetTimerID:
 1459              	.LVL113:
 1460              	.LFB25:
1007:../freertos/timers.c **** /*-----------------------------------------------------------*/
1008:../freertos/timers.c **** 
1009:../freertos/timers.c **** void vTimerSetTimerID( TimerHandle_t xTimer, void *pvNewID )
1010:../freertos/timers.c **** {
 1461              		.loc 1 1010 1 is_stmt 1 view -0
 1462              		.cfi_startproc
 1463              		@ args = 0, pretend = 0, frame = 0
 1464              		@ frame_needed = 0, uses_anonymous_args = 0
1011:../freertos/timers.c **** Timer_t * const pxTimer = xTimer;
 1465              		.loc 1 1011 1 view .LVU386
 1466              	@ ../freertos/timers.c:1010: {
1010:../freertos/timers.c **** Timer_t * const pxTimer = xTimer;
 1467              		.loc 1 1010 1 is_stmt 0 view .LVU387
 1468 0388 38B5     		push	{r3, r4, r5, lr}	@
 1469              	.LCFI19:
 1470              		.cfi_def_cfa_offset 16
 1471              		.cfi_offset 3, -16
 1472              		.cfi_offset 4, -12
 1473              		.cfi_offset 5, -8
 1474              		.cfi_offset 14, -4
 1475              	@ ../freertos/timers.c:1010: {
1010:../freertos/timers.c **** Timer_t * const pxTimer = xTimer;
 1476              		.loc 1 1010 1 view .LVU388
 1477 038a 0446     		mov	r4, r0	@ xTimer, tmp116
 1478              	.LVL114:
1012:../freertos/timers.c **** 
1013:../freertos/timers.c **** 	configASSERT( xTimer );
 1479              		.loc 1 1013 24 is_stmt 1 view .LVU389
1014:../freertos/timers.c **** 
1015:../freertos/timers.c **** 	taskENTER_CRITICAL();
 1480              		.loc 1 1015 2 view .LVU390
 1481              	@ ../freertos/timers.c:1010: {
1010:../freertos/timers.c **** Timer_t * const pxTimer = xTimer;
 1482              		.loc 1 1010 1 is_stmt 0 view .LVU391
 1483 038c 0D46     		mov	r5, r1	@ pvNewID, tmp117
 1484              	@ ../freertos/timers.c:1015: 	taskENTER_CRITICAL();
 1485              		.loc 1 1015 2 view .LVU392
 1486 038e FFF7FEFF 		bl	vPortEnterCritical		@
 1487              	.LVL115:
1016:../freertos/timers.c **** 	{
1017:../freertos/timers.c **** 		pxTimer->pvTimerID = pvNewID;
 1488              		.loc 1 1017 3 is_stmt 1 view .LVU393
 1489              	@ ../freertos/timers.c:1017: 		pxTimer->pvTimerID = pvNewID;
 1490              		.loc 1 1017 22 is_stmt 0 view .LVU394
 1491 0392 E561     		str	r5, [r4, #28]	@ pvNewID, MEM[(struct Timer_t *)xTimer_1(D)].pvTimerID
1018:../freertos/timers.c **** 	}
1019:../freertos/timers.c **** 	taskEXIT_CRITICAL();
 1492              		.loc 1 1019 2 is_stmt 1 view .LVU395
 1493              	@ ../freertos/timers.c:1020: }
1020:../freertos/timers.c **** }
ARM GAS  /tmp/ccx8nc1r.s 			page 51


 1494              		.loc 1 1020 1 is_stmt 0 view .LVU396
 1495 0394 BDE83840 		pop	{r3, r4, r5, lr}	@
 1496              	.LCFI20:
 1497              		.cfi_restore 14
 1498              		.cfi_restore 5
 1499              		.cfi_restore 4
 1500              		.cfi_restore 3
 1501              		.cfi_def_cfa_offset 0
 1502              	.LVL116:
 1503              	@ ../freertos/timers.c:1019: 	taskEXIT_CRITICAL();
1019:../freertos/timers.c **** }
 1504              		.loc 1 1019 2 view .LVU397
 1505 0398 FFF7FEBF 		b	vPortExitCritical		@
 1506              	.LVL117:
1019:../freertos/timers.c **** }
 1507              		.loc 1 1019 2 view .LVU398
 1508              		.cfi_endproc
 1509              	.LFE25:
 1510              		.size	vTimerSetTimerID, .-vTimerSetTimerID
 1511              		.align	1
 1512              		.global	uxTimerGetTimerNumber
 1513              		.syntax unified
 1514              		.thumb
 1515              		.thumb_func
 1516              		.type	uxTimerGetTimerNumber, %function
 1517              	uxTimerGetTimerNumber:
 1518              	.LVL118:
 1519              	.LFB26:
1021:../freertos/timers.c **** /*-----------------------------------------------------------*/
1022:../freertos/timers.c **** 
1023:../freertos/timers.c **** #if( INCLUDE_xTimerPendFunctionCall == 1 )
1024:../freertos/timers.c **** 
1025:../freertos/timers.c **** 	BaseType_t xTimerPendFunctionCallFromISR( PendedFunction_t xFunctionToPend, void *pvParameter1, ui
1026:../freertos/timers.c **** 	{
1027:../freertos/timers.c **** 	DaemonTaskMessage_t xMessage;
1028:../freertos/timers.c **** 	BaseType_t xReturn;
1029:../freertos/timers.c **** 
1030:../freertos/timers.c **** 		/* Complete the message with the function parameters and post it to the
1031:../freertos/timers.c **** 		daemon task. */
1032:../freertos/timers.c **** 		xMessage.xMessageID = tmrCOMMAND_EXECUTE_CALLBACK_FROM_ISR;
1033:../freertos/timers.c **** 		xMessage.u.xCallbackParameters.pxCallbackFunction = xFunctionToPend;
1034:../freertos/timers.c **** 		xMessage.u.xCallbackParameters.pvParameter1 = pvParameter1;
1035:../freertos/timers.c **** 		xMessage.u.xCallbackParameters.ulParameter2 = ulParameter2;
1036:../freertos/timers.c **** 
1037:../freertos/timers.c **** 		xReturn = xQueueSendFromISR( xTimerQueue, &xMessage, pxHigherPriorityTaskWoken );
1038:../freertos/timers.c **** 
1039:../freertos/timers.c **** 		tracePEND_FUNC_CALL_FROM_ISR( xFunctionToPend, pvParameter1, ulParameter2, xReturn );
1040:../freertos/timers.c **** 
1041:../freertos/timers.c **** 		return xReturn;
1042:../freertos/timers.c **** 	}
1043:../freertos/timers.c **** 
1044:../freertos/timers.c **** #endif /* INCLUDE_xTimerPendFunctionCall */
1045:../freertos/timers.c **** /*-----------------------------------------------------------*/
1046:../freertos/timers.c **** 
1047:../freertos/timers.c **** #if( INCLUDE_xTimerPendFunctionCall == 1 )
1048:../freertos/timers.c **** 
1049:../freertos/timers.c **** 	BaseType_t xTimerPendFunctionCall( PendedFunction_t xFunctionToPend, void *pvParameter1, uint32_t 
ARM GAS  /tmp/ccx8nc1r.s 			page 52


1050:../freertos/timers.c **** 	{
1051:../freertos/timers.c **** 	DaemonTaskMessage_t xMessage;
1052:../freertos/timers.c **** 	BaseType_t xReturn;
1053:../freertos/timers.c **** 
1054:../freertos/timers.c **** 		/* This function can only be called after a timer has been created or
1055:../freertos/timers.c **** 		after the scheduler has been started because, until then, the timer
1056:../freertos/timers.c **** 		queue does not exist. */
1057:../freertos/timers.c **** 		configASSERT( xTimerQueue );
1058:../freertos/timers.c **** 
1059:../freertos/timers.c **** 		/* Complete the message with the function parameters and post it to the
1060:../freertos/timers.c **** 		daemon task. */
1061:../freertos/timers.c **** 		xMessage.xMessageID = tmrCOMMAND_EXECUTE_CALLBACK;
1062:../freertos/timers.c **** 		xMessage.u.xCallbackParameters.pxCallbackFunction = xFunctionToPend;
1063:../freertos/timers.c **** 		xMessage.u.xCallbackParameters.pvParameter1 = pvParameter1;
1064:../freertos/timers.c **** 		xMessage.u.xCallbackParameters.ulParameter2 = ulParameter2;
1065:../freertos/timers.c **** 
1066:../freertos/timers.c **** 		xReturn = xQueueSendToBack( xTimerQueue, &xMessage, xTicksToWait );
1067:../freertos/timers.c **** 
1068:../freertos/timers.c **** 		tracePEND_FUNC_CALL( xFunctionToPend, pvParameter1, ulParameter2, xReturn );
1069:../freertos/timers.c **** 
1070:../freertos/timers.c **** 		return xReturn;
1071:../freertos/timers.c **** 	}
1072:../freertos/timers.c **** 
1073:../freertos/timers.c **** #endif /* INCLUDE_xTimerPendFunctionCall */
1074:../freertos/timers.c **** /*-----------------------------------------------------------*/
1075:../freertos/timers.c **** 
1076:../freertos/timers.c **** #if ( configUSE_TRACE_FACILITY == 1 )
1077:../freertos/timers.c **** 
1078:../freertos/timers.c **** 	UBaseType_t uxTimerGetTimerNumber( TimerHandle_t xTimer )
1079:../freertos/timers.c **** 	{
 1520              		.loc 1 1079 2 is_stmt 1 view -0
 1521              		.cfi_startproc
 1522              		@ args = 0, pretend = 0, frame = 0
 1523              		@ frame_needed = 0, uses_anonymous_args = 0
 1524              		@ link register save eliminated.
1080:../freertos/timers.c **** 		return ( ( Timer_t * ) xTimer )->uxTimerNumber;
 1525              		.loc 1 1080 3 view .LVU400
 1526              	@ ../freertos/timers.c:1081: 	}
1081:../freertos/timers.c **** 	}
 1527              		.loc 1 1081 2 is_stmt 0 view .LVU401
 1528 039c 406A     		ldr	r0, [r0, #36]	@, MEM[(struct Timer_t *)xTimer_2(D)].uxTimerNumber
 1529              	.LVL119:
 1530              		.loc 1 1081 2 view .LVU402
 1531 039e 7047     		bx	lr	@
 1532              		.cfi_endproc
 1533              	.LFE26:
 1534              		.size	uxTimerGetTimerNumber, .-uxTimerGetTimerNumber
 1535              		.align	1
 1536              		.global	vTimerSetTimerNumber
 1537              		.syntax unified
 1538              		.thumb
 1539              		.thumb_func
 1540              		.type	vTimerSetTimerNumber, %function
 1541              	vTimerSetTimerNumber:
 1542              	.LVL120:
 1543              	.LFB27:
1082:../freertos/timers.c **** 
ARM GAS  /tmp/ccx8nc1r.s 			page 53


1083:../freertos/timers.c **** #endif /* configUSE_TRACE_FACILITY */
1084:../freertos/timers.c **** /*-----------------------------------------------------------*/
1085:../freertos/timers.c **** 
1086:../freertos/timers.c **** #if ( configUSE_TRACE_FACILITY == 1 )
1087:../freertos/timers.c **** 
1088:../freertos/timers.c **** 	void vTimerSetTimerNumber( TimerHandle_t xTimer, UBaseType_t uxTimerNumber )
1089:../freertos/timers.c **** 	{
 1544              		.loc 1 1089 2 is_stmt 1 view -0
 1545              		.cfi_startproc
 1546              		@ args = 0, pretend = 0, frame = 0
 1547              		@ frame_needed = 0, uses_anonymous_args = 0
 1548              		@ link register save eliminated.
1090:../freertos/timers.c **** 		( ( Timer_t * ) xTimer )->uxTimerNumber = uxTimerNumber;
 1549              		.loc 1 1090 3 view .LVU404
 1550              	@ ../freertos/timers.c:1090: 		( ( Timer_t * ) xTimer )->uxTimerNumber = uxTimerNumber;
 1551              		.loc 1 1090 43 is_stmt 0 view .LVU405
 1552 03a0 4162     		str	r1, [r0, #36]	@ tmp117, MEM[(struct Timer_t *)xTimer_2(D)].uxTimerNumber
 1553              	@ ../freertos/timers.c:1091: 	}
1091:../freertos/timers.c **** 	}
 1554              		.loc 1 1091 2 view .LVU406
 1555 03a2 7047     		bx	lr	@
 1556              		.cfi_endproc
 1557              	.LFE27:
 1558              		.size	vTimerSetTimerNumber, .-vTimerSetTimerNumber
 1559              		.bss
 1560              		.align	2
 1561              		.set	.LANCHOR0,. + 0
 1562              		.type	pxOverflowTimerList, %object
 1563              		.size	pxOverflowTimerList, 4
 1564              	pxOverflowTimerList:
 1565 0000 00000000 		.space	4
 1566              		.type	pxCurrentTimerList, %object
 1567              		.size	pxCurrentTimerList, 4
 1568              	pxCurrentTimerList:
 1569 0004 00000000 		.space	4
 1570              		.type	xTimerQueue, %object
 1571              		.size	xTimerQueue, 4
 1572              	xTimerQueue:
 1573 0008 00000000 		.space	4
 1574              		.type	xActiveTimerList1, %object
 1575              		.size	xActiveTimerList1, 20
 1576              	xActiveTimerList1:
 1577 000c 00000000 		.space	20
 1577      00000000 
 1577      00000000 
 1577      00000000 
 1577      00000000 
 1578              		.type	xActiveTimerList2, %object
 1579              		.size	xActiveTimerList2, 20
 1580              	xActiveTimerList2:
 1581 0020 00000000 		.space	20
 1581      00000000 
 1581      00000000 
 1581      00000000 
 1581      00000000 
 1582              		.type	xTimerTaskHandle, %object
 1583              		.size	xTimerTaskHandle, 4
ARM GAS  /tmp/ccx8nc1r.s 			page 54


 1584              	xTimerTaskHandle:
 1585 0034 00000000 		.space	4
 1586              		.type	xLastTime.0, %object
 1587              		.size	xLastTime.0, 4
 1588              	xLastTime.0:
 1589 0038 00000000 		.space	4
 1590              		.text
 1591              	.Letext0:
 1592              		.file 2 "/usr/lib/gcc/arm-none-eabi/13.2.0/include/stddef.h"
 1593              		.file 3 "/usr/arm-none-eabi/include/machine/_default_types.h"
 1594              		.file 4 "/usr/arm-none-eabi/include/sys/_stdint.h"
 1595              		.file 5 "../freertos/include/projdefs.h"
 1596              		.file 6 "../freertos/portable/GCC/ARM_CM3/portmacro.h"
 1597              		.file 7 "../freertos/include/list.h"
 1598              		.file 8 "../freertos/include/task.h"
 1599              		.file 9 "../freertos/include/queue.h"
 1600              		.file 10 "../freertos/include/timers.h"
 1601              		.file 11 "../freertos/include/portable.h"
 1602              		.section	.debug_info,"",%progbits
 1603              	.Ldebug_info0:
 1604 0000 AA120000 		.4byte	0x12aa
 1605 0004 0200     		.2byte	0x2
 1606 0006 00000000 		.4byte	.Ldebug_abbrev0
 1607 000a 04       		.byte	0x4
 1608 000b 01       		.uleb128 0x1
 1609 000c 3B020000 		.4byte	.LASF129
 1610 0010 0C       		.byte	0xc
 1611 0011 3E010000 		.4byte	.LASF130
 1612 0015 F6020000 		.4byte	.LASF131
 1613 0019 00000000 		.4byte	.Ltext0
 1614 001d A4030000 		.4byte	.Letext0
 1615 0021 00000000 		.4byte	.Ldebug_line0
 1616 0025 02       		.uleb128 0x2
 1617 0026 08       		.byte	0x8
 1618 0027 07       		.byte	0x7
 1619 0028 24020000 		.4byte	.LASF0
 1620 002c 02       		.uleb128 0x2
 1621 002d 04       		.byte	0x4
 1622 002e 07       		.byte	0x7
 1623 002f 12010000 		.4byte	.LASF1
 1624 0033 03       		.uleb128 0x3
 1625 0034 59030000 		.4byte	.LASF5
 1626 0038 02       		.byte	0x2
 1627 0039 D6       		.byte	0xd6
 1628 003a 17       		.byte	0x17
 1629 003b 2C000000 		.4byte	0x2c
 1630 003f 04       		.uleb128 0x4
 1631 0040 04       		.byte	0x4
 1632 0041 05       		.byte	0x5
 1633 0042 696E7400 		.ascii	"int\000"
 1634 0046 02       		.uleb128 0x2
 1635 0047 08       		.byte	0x8
 1636 0048 05       		.byte	0x5
 1637 0049 04050000 		.4byte	.LASF2
 1638 004d 02       		.uleb128 0x2
 1639 004e 08       		.byte	0x8
 1640 004f 04       		.byte	0x4
ARM GAS  /tmp/ccx8nc1r.s 			page 55


 1641 0050 7D050000 		.4byte	.LASF3
 1642 0054 02       		.uleb128 0x2
 1643 0055 01       		.byte	0x1
 1644 0056 06       		.byte	0x6
 1645 0057 FD070000 		.4byte	.LASF4
 1646 005b 03       		.uleb128 0x3
 1647 005c BA060000 		.4byte	.LASF6
 1648 0060 03       		.byte	0x3
 1649 0061 2B       		.byte	0x2b
 1650 0062 18       		.byte	0x18
 1651 0063 67000000 		.4byte	0x67
 1652 0067 02       		.uleb128 0x2
 1653 0068 01       		.byte	0x1
 1654 0069 08       		.byte	0x8
 1655 006a 46070000 		.4byte	.LASF7
 1656 006e 02       		.uleb128 0x2
 1657 006f 02       		.byte	0x2
 1658 0070 05       		.byte	0x5
 1659 0071 00060000 		.4byte	.LASF8
 1660 0075 03       		.uleb128 0x3
 1661 0076 BE020000 		.4byte	.LASF9
 1662 007a 03       		.byte	0x3
 1663 007b 39       		.byte	0x39
 1664 007c 19       		.byte	0x19
 1665 007d 81000000 		.4byte	0x81
 1666 0081 02       		.uleb128 0x2
 1667 0082 02       		.byte	0x2
 1668 0083 07       		.byte	0x7
 1669 0084 19080000 		.4byte	.LASF10
 1670 0088 02       		.uleb128 0x2
 1671 0089 04       		.byte	0x4
 1672 008a 05       		.byte	0x5
 1673 008b 4D060000 		.4byte	.LASF11
 1674 008f 03       		.uleb128 0x3
 1675 0090 62070000 		.4byte	.LASF12
 1676 0094 03       		.byte	0x3
 1677 0095 4F       		.byte	0x4f
 1678 0096 19       		.byte	0x19
 1679 0097 9B000000 		.4byte	0x9b
 1680 009b 02       		.uleb128 0x2
 1681 009c 04       		.byte	0x4
 1682 009d 07       		.byte	0x7
 1683 009e 14070000 		.4byte	.LASF13
 1684 00a2 05       		.uleb128 0x5
 1685 00a3 04       		.byte	0x4
 1686 00a4 06       		.uleb128 0x6
 1687 00a5 A2000000 		.4byte	0xa2
 1688 00a9 02       		.uleb128 0x2
 1689 00aa 01       		.byte	0x1
 1690 00ab 08       		.byte	0x8
 1691 00ac 2D040000 		.4byte	.LASF14
 1692 00b0 06       		.uleb128 0x6
 1693 00b1 A9000000 		.4byte	0xa9
 1694 00b5 07       		.uleb128 0x7
 1695 00b6 04       		.byte	0x4
 1696 00b7 B0000000 		.4byte	0xb0
 1697 00bb 06       		.uleb128 0x6
ARM GAS  /tmp/ccx8nc1r.s 			page 56


 1698 00bc B5000000 		.4byte	0xb5
 1699 00c0 07       		.uleb128 0x7
 1700 00c1 04       		.byte	0x4
 1701 00c2 CB000000 		.4byte	0xcb
 1702 00c6 06       		.uleb128 0x6
 1703 00c7 C0000000 		.4byte	0xc0
 1704 00cb 08       		.uleb128 0x8
 1705 00cc 03       		.uleb128 0x3
 1706 00cd AD040000 		.4byte	.LASF15
 1707 00d1 04       		.byte	0x4
 1708 00d2 18       		.byte	0x18
 1709 00d3 13       		.byte	0x13
 1710 00d4 5B000000 		.4byte	0x5b
 1711 00d8 06       		.uleb128 0x6
 1712 00d9 CC000000 		.4byte	0xcc
 1713 00dd 03       		.uleb128 0x3
 1714 00de 89050000 		.4byte	.LASF16
 1715 00e2 04       		.byte	0x4
 1716 00e3 24       		.byte	0x24
 1717 00e4 14       		.byte	0x14
 1718 00e5 75000000 		.4byte	0x75
 1719 00e9 06       		.uleb128 0x6
 1720 00ea DD000000 		.4byte	0xdd
 1721 00ee 03       		.uleb128 0x3
 1722 00ef DA010000 		.4byte	.LASF17
 1723 00f3 04       		.byte	0x4
 1724 00f4 30       		.byte	0x30
 1725 00f5 14       		.byte	0x14
 1726 00f6 8F000000 		.4byte	0x8f
 1727 00fa 03       		.uleb128 0x3
 1728 00fb 39050000 		.4byte	.LASF18
 1729 00ff 05       		.byte	0x5
 1730 0100 23       		.byte	0x23
 1731 0101 10       		.byte	0x10
 1732 0102 06010000 		.4byte	0x106
 1733 0106 07       		.uleb128 0x7
 1734 0107 04       		.byte	0x4
 1735 0108 0C010000 		.4byte	0x10c
 1736 010c 09       		.uleb128 0x9
 1737 010d 01       		.byte	0x1
 1738 010e 18010000 		.4byte	0x118
 1739 0112 0A       		.uleb128 0xa
 1740 0113 A2000000 		.4byte	0xa2
 1741 0117 00       		.byte	0
 1742 0118 03       		.uleb128 0x3
 1743 0119 1A050000 		.4byte	.LASF19
 1744 011d 06       		.byte	0x6
 1745 011e 38       		.byte	0x38
 1746 011f 0E       		.byte	0xe
 1747 0120 88000000 		.4byte	0x88
 1748 0124 06       		.uleb128 0x6
 1749 0125 18010000 		.4byte	0x118
 1750 0129 03       		.uleb128 0x3
 1751 012a 3D040000 		.4byte	.LASF20
 1752 012e 06       		.byte	0x6
 1753 012f 39       		.byte	0x39
 1754 0130 17       		.byte	0x17
ARM GAS  /tmp/ccx8nc1r.s 			page 57


 1755 0131 9B000000 		.4byte	0x9b
 1756 0135 0B       		.uleb128 0xb
 1757 0136 29010000 		.4byte	0x129
 1758 013a 06       		.uleb128 0x6
 1759 013b 29010000 		.4byte	0x129
 1760 013f 03       		.uleb128 0x3
 1761 0140 63050000 		.4byte	.LASF21
 1762 0144 06       		.byte	0x6
 1763 0145 3F       		.byte	0x3f
 1764 0146 13       		.byte	0x13
 1765 0147 EE000000 		.4byte	0xee
 1766 014b 06       		.uleb128 0x6
 1767 014c 3F010000 		.4byte	0x13f
 1768 0150 0C       		.uleb128 0xc
 1769 0151 33010000 		.4byte	.LASF27
 1770 0155 14       		.byte	0x14
 1771 0156 07       		.byte	0x7
 1772 0157 8C       		.byte	0x8c
 1773 0158 08       		.byte	0x8
 1774 0159 A9010000 		.4byte	0x1a9
 1775 015d 0D       		.uleb128 0xd
 1776 015e 27060000 		.4byte	.LASF22
 1777 0162 07       		.byte	0x7
 1778 0163 8F       		.byte	0x8f
 1779 0164 21       		.byte	0x21
 1780 0165 3F010000 		.4byte	0x13f
 1781 0169 02       		.byte	0x2
 1782 016a 23       		.byte	0x23
 1783 016b 00       		.uleb128 0
 1784 016c 0D       		.uleb128 0xd
 1785 016d 48050000 		.4byte	.LASF23
 1786 0171 07       		.byte	0x7
 1787 0172 90       		.byte	0x90
 1788 0173 2A       		.byte	0x2a
 1789 0174 A9010000 		.4byte	0x1a9
 1790 0178 02       		.byte	0x2
 1791 0179 23       		.byte	0x23
 1792 017a 04       		.uleb128 0x4
 1793 017b 0D       		.uleb128 0xd
 1794 017c B3020000 		.4byte	.LASF24
 1795 0180 07       		.byte	0x7
 1796 0181 91       		.byte	0x91
 1797 0182 2A       		.byte	0x2a
 1798 0183 A9010000 		.4byte	0x1a9
 1799 0187 02       		.byte	0x2
 1800 0188 23       		.byte	0x23
 1801 0189 08       		.uleb128 0x8
 1802 018a 0D       		.uleb128 0xd
 1803 018b C6070000 		.4byte	.LASF25
 1804 018f 07       		.byte	0x7
 1805 0190 92       		.byte	0x92
 1806 0191 09       		.byte	0x9
 1807 0192 A2000000 		.4byte	0xa2
 1808 0196 02       		.byte	0x2
 1809 0197 23       		.byte	0x23
 1810 0198 0C       		.uleb128 0xc
 1811 0199 0D       		.uleb128 0xd
ARM GAS  /tmp/ccx8nc1r.s 			page 58


 1812 019a A7050000 		.4byte	.LASF26
 1813 019e 07       		.byte	0x7
 1814 019f 93       		.byte	0x93
 1815 01a0 25       		.byte	0x25
 1816 01a1 EA010000 		.4byte	0x1ea
 1817 01a5 02       		.byte	0x2
 1818 01a6 23       		.byte	0x23
 1819 01a7 10       		.uleb128 0x10
 1820 01a8 00       		.byte	0
 1821 01a9 07       		.uleb128 0x7
 1822 01aa 04       		.byte	0x4
 1823 01ab 50010000 		.4byte	0x150
 1824 01af 0C       		.uleb128 0xc
 1825 01b0 84030000 		.4byte	.LASF28
 1826 01b4 14       		.byte	0x14
 1827 01b5 07       		.byte	0x7
 1828 01b6 A4       		.byte	0xa4
 1829 01b7 10       		.byte	0x10
 1830 01b8 EA010000 		.4byte	0x1ea
 1831 01bc 0D       		.uleb128 0xd
 1832 01bd 30000000 		.4byte	.LASF29
 1833 01c1 07       		.byte	0x7
 1834 01c2 A7       		.byte	0xa7
 1835 01c3 17       		.byte	0x17
 1836 01c4 35010000 		.4byte	0x135
 1837 01c8 02       		.byte	0x2
 1838 01c9 23       		.byte	0x23
 1839 01ca 00       		.uleb128 0
 1840 01cb 0D       		.uleb128 0xd
 1841 01cc 1F010000 		.4byte	.LASF30
 1842 01d0 07       		.byte	0x7
 1843 01d1 A8       		.byte	0xa8
 1844 01d2 23       		.byte	0x23
 1845 01d3 43020000 		.4byte	0x243
 1846 01d7 02       		.byte	0x2
 1847 01d8 23       		.byte	0x23
 1848 01d9 04       		.uleb128 0x4
 1849 01da 0D       		.uleb128 0xd
 1850 01db 89040000 		.4byte	.LASF31
 1851 01df 07       		.byte	0x7
 1852 01e0 A9       		.byte	0xa9
 1853 01e1 11       		.byte	0x11
 1854 01e2 37020000 		.4byte	0x237
 1855 01e6 02       		.byte	0x2
 1856 01e7 23       		.byte	0x23
 1857 01e8 08       		.uleb128 0x8
 1858 01e9 00       		.byte	0
 1859 01ea 07       		.uleb128 0x7
 1860 01eb 04       		.byte	0x4
 1861 01ec AF010000 		.4byte	0x1af
 1862 01f0 03       		.uleb128 0x3
 1863 01f1 32040000 		.4byte	.LASF32
 1864 01f5 07       		.byte	0x7
 1865 01f6 96       		.byte	0x96
 1866 01f7 1B       		.byte	0x1b
 1867 01f8 50010000 		.4byte	0x150
 1868 01fc 0C       		.uleb128 0xc
ARM GAS  /tmp/ccx8nc1r.s 			page 59


 1869 01fd 60030000 		.4byte	.LASF33
 1870 0201 0C       		.byte	0xc
 1871 0202 07       		.byte	0x7
 1872 0203 98       		.byte	0x98
 1873 0204 08       		.byte	0x8
 1874 0205 37020000 		.4byte	0x237
 1875 0209 0D       		.uleb128 0xd
 1876 020a 27060000 		.4byte	.LASF22
 1877 020e 07       		.byte	0x7
 1878 020f 9B       		.byte	0x9b
 1879 0210 21       		.byte	0x21
 1880 0211 3F010000 		.4byte	0x13f
 1881 0215 02       		.byte	0x2
 1882 0216 23       		.byte	0x23
 1883 0217 00       		.uleb128 0
 1884 0218 0D       		.uleb128 0xd
 1885 0219 48050000 		.4byte	.LASF23
 1886 021d 07       		.byte	0x7
 1887 021e 9C       		.byte	0x9c
 1888 021f 2A       		.byte	0x2a
 1889 0220 A9010000 		.4byte	0x1a9
 1890 0224 02       		.byte	0x2
 1891 0225 23       		.byte	0x23
 1892 0226 04       		.uleb128 0x4
 1893 0227 0D       		.uleb128 0xd
 1894 0228 B3020000 		.4byte	.LASF24
 1895 022c 07       		.byte	0x7
 1896 022d 9D       		.byte	0x9d
 1897 022e 2A       		.byte	0x2a
 1898 022f A9010000 		.4byte	0x1a9
 1899 0233 02       		.byte	0x2
 1900 0234 23       		.byte	0x23
 1901 0235 08       		.uleb128 0x8
 1902 0236 00       		.byte	0
 1903 0237 03       		.uleb128 0x3
 1904 0238 92040000 		.4byte	.LASF34
 1905 023c 07       		.byte	0x7
 1906 023d 9F       		.byte	0x9f
 1907 023e 20       		.byte	0x20
 1908 023f FC010000 		.4byte	0x1fc
 1909 0243 07       		.uleb128 0x7
 1910 0244 04       		.byte	0x4
 1911 0245 F0010000 		.4byte	0x1f0
 1912 0249 06       		.uleb128 0x6
 1913 024a 43020000 		.4byte	0x243
 1914 024e 03       		.uleb128 0x3
 1915 024f 5C050000 		.4byte	.LASF35
 1916 0253 07       		.byte	0x7
 1917 0254 AB       		.byte	0xab
 1918 0255 03       		.byte	0x3
 1919 0256 AF010000 		.4byte	0x1af
 1920 025a 03       		.uleb128 0x3
 1921 025b 4F050000 		.4byte	.LASF36
 1922 025f 08       		.byte	0x8
 1923 0260 46       		.byte	0x46
 1924 0261 25       		.byte	0x25
 1925 0262 66020000 		.4byte	0x266
ARM GAS  /tmp/ccx8nc1r.s 			page 60


 1926 0266 07       		.uleb128 0x7
 1927 0267 04       		.byte	0x4
 1928 0268 6C020000 		.4byte	0x26c
 1929 026c 0E       		.uleb128 0xe
 1930 026d 9F000000 		.4byte	.LASF38
 1931 0271 01       		.byte	0x1
 1932 0272 03       		.uleb128 0x3
 1933 0273 5D040000 		.4byte	.LASF37
 1934 0277 09       		.byte	0x9
 1935 0278 30       		.byte	0x30
 1936 0279 22       		.byte	0x22
 1937 027a 7E020000 		.4byte	0x27e
 1938 027e 07       		.uleb128 0x7
 1939 027f 04       		.byte	0x4
 1940 0280 84020000 		.4byte	0x284
 1941 0284 0E       		.uleb128 0xe
 1942 0285 FE010000 		.4byte	.LASF39
 1943 0289 01       		.byte	0x1
 1944 028a 03       		.uleb128 0x3
 1945 028b F0010000 		.4byte	.LASF40
 1946 028f 0A       		.byte	0xa
 1947 0290 4D       		.byte	0x4d
 1948 0291 22       		.byte	0x22
 1949 0292 9B020000 		.4byte	0x29b
 1950 0296 06       		.uleb128 0x6
 1951 0297 8A020000 		.4byte	0x28a
 1952 029b 07       		.uleb128 0x7
 1953 029c 04       		.byte	0x4
 1954 029d A1020000 		.4byte	0x2a1
 1955 02a1 0C       		.uleb128 0xc
 1956 02a2 9A070000 		.4byte	.LASF41
 1957 02a6 2C       		.byte	0x2c
 1958 02a7 01       		.byte	0x1
 1959 02a8 49       		.byte	0x49
 1960 02a9 10       		.byte	0x10
 1961 02aa 18030000 		.4byte	0x318
 1962 02ae 0D       		.uleb128 0xd
 1963 02af 27010000 		.4byte	.LASF42
 1964 02b3 01       		.byte	0x1
 1965 02b4 4B       		.byte	0x4b
 1966 02b5 11       		.byte	0x11
 1967 02b6 B5000000 		.4byte	0xb5
 1968 02ba 02       		.byte	0x2
 1969 02bb 23       		.byte	0x23
 1970 02bc 00       		.uleb128 0
 1971 02bd 0D       		.uleb128 0xd
 1972 02be 6E050000 		.4byte	.LASF43
 1973 02c2 01       		.byte	0x1
 1974 02c3 4C       		.byte	0x4c
 1975 02c4 10       		.byte	0x10
 1976 02c5 F0010000 		.4byte	0x1f0
 1977 02c9 02       		.byte	0x2
 1978 02ca 23       		.byte	0x23
 1979 02cb 04       		.uleb128 0x4
 1980 02cc 0D       		.uleb128 0xd
 1981 02cd 40000000 		.4byte	.LASF44
 1982 02d1 01       		.byte	0x1
ARM GAS  /tmp/ccx8nc1r.s 			page 61


 1983 02d2 4D       		.byte	0x4d
 1984 02d3 10       		.byte	0x10
 1985 02d4 3F010000 		.4byte	0x13f
 1986 02d8 02       		.byte	0x2
 1987 02d9 23       		.byte	0x23
 1988 02da 18       		.uleb128 0x18
 1989 02db 0D       		.uleb128 0xd
 1990 02dc A3060000 		.4byte	.LASF45
 1991 02e0 01       		.byte	0x1
 1992 02e1 4E       		.byte	0x4e
 1993 02e2 0D       		.byte	0xd
 1994 02e3 A2000000 		.4byte	0xa2
 1995 02e7 02       		.byte	0x2
 1996 02e8 23       		.byte	0x23
 1997 02e9 1C       		.uleb128 0x1c
 1998 02ea 0D       		.uleb128 0xd
 1999 02eb 66000000 		.4byte	.LASF46
 2000 02ef 01       		.byte	0x1
 2001 02f0 4F       		.byte	0x4f
 2002 02f1 1A       		.byte	0x1a
 2003 02f2 18030000 		.4byte	0x318
 2004 02f6 02       		.byte	0x2
 2005 02f7 23       		.byte	0x23
 2006 02f8 20       		.uleb128 0x20
 2007 02f9 0D       		.uleb128 0xd
 2008 02fa 88000000 		.4byte	.LASF47
 2009 02fe 01       		.byte	0x1
 2010 02ff 51       		.byte	0x51
 2011 0300 11       		.byte	0x11
 2012 0301 29010000 		.4byte	0x129
 2013 0305 02       		.byte	0x2
 2014 0306 23       		.byte	0x23
 2015 0307 24       		.uleb128 0x24
 2016 0308 0D       		.uleb128 0xd
 2017 0309 1E060000 		.4byte	.LASF48
 2018 030d 01       		.byte	0x1
 2019 030e 53       		.byte	0x53
 2020 030f 0E       		.byte	0xe
 2021 0310 CC000000 		.4byte	0xcc
 2022 0314 02       		.byte	0x2
 2023 0315 23       		.byte	0x23
 2024 0316 28       		.uleb128 0x28
 2025 0317 00       		.byte	0
 2026 0318 03       		.uleb128 0x3
 2027 0319 90010000 		.4byte	.LASF49
 2028 031d 0A       		.byte	0xa
 2029 031e 52       		.byte	0x52
 2030 031f 10       		.byte	0x10
 2031 0320 24030000 		.4byte	0x324
 2032 0324 07       		.uleb128 0x7
 2033 0325 04       		.byte	0x4
 2034 0326 2A030000 		.4byte	0x32a
 2035 032a 09       		.uleb128 0x9
 2036 032b 01       		.byte	0x1
 2037 032c 36030000 		.4byte	0x336
 2038 0330 0A       		.uleb128 0xa
 2039 0331 8A020000 		.4byte	0x28a
ARM GAS  /tmp/ccx8nc1r.s 			page 62


 2040 0335 00       		.byte	0
 2041 0336 03       		.uleb128 0x3
 2042 0337 E7030000 		.4byte	.LASF50
 2043 033b 01       		.byte	0x1
 2044 033c 54       		.byte	0x54
 2045 033d 03       		.byte	0x3
 2046 033e A1020000 		.4byte	0x2a1
 2047 0342 03       		.uleb128 0x3
 2048 0343 C4060000 		.4byte	.LASF51
 2049 0347 01       		.byte	0x1
 2050 0348 58       		.byte	0x58
 2051 0349 10       		.byte	0x10
 2052 034a 36030000 		.4byte	0x336
 2053 034e 0C       		.uleb128 0xc
 2054 034f 2C080000 		.4byte	.LASF52
 2055 0353 08       		.byte	0x8
 2056 0354 01       		.byte	0x1
 2057 0355 5F       		.byte	0x5f
 2058 0356 10       		.byte	0x10
 2059 0357 7A030000 		.4byte	0x37a
 2060 035b 0D       		.uleb128 0xd
 2061 035c 54070000 		.4byte	.LASF53
 2062 0360 01       		.byte	0x1
 2063 0361 61       		.byte	0x61
 2064 0362 0F       		.byte	0xf
 2065 0363 3F010000 		.4byte	0x13f
 2066 0367 02       		.byte	0x2
 2067 0368 23       		.byte	0x23
 2068 0369 00       		.uleb128 0
 2069 036a 0D       		.uleb128 0xd
 2070 036b 3E070000 		.4byte	.LASF54
 2071 036f 01       		.byte	0x1
 2072 0370 62       		.byte	0x62
 2073 0371 0E       		.byte	0xe
 2074 0372 7A030000 		.4byte	0x37a
 2075 0376 02       		.byte	0x2
 2076 0377 23       		.byte	0x23
 2077 0378 04       		.uleb128 0x4
 2078 0379 00       		.byte	0
 2079 037a 07       		.uleb128 0x7
 2080 037b 04       		.byte	0x4
 2081 037c 42030000 		.4byte	0x342
 2082 0380 06       		.uleb128 0x6
 2083 0381 7A030000 		.4byte	0x37a
 2084 0385 03       		.uleb128 0x3
 2085 0386 60010000 		.4byte	.LASF55
 2086 038a 01       		.byte	0x1
 2087 038b 63       		.byte	0x63
 2088 038c 03       		.byte	0x3
 2089 038d 4E030000 		.4byte	0x34e
 2090 0391 0F       		.uleb128 0xf
 2091 0392 08       		.byte	0x8
 2092 0393 01       		.byte	0x1
 2093 0394 72       		.byte	0x72
 2094 0395 02       		.byte	0x2
 2095 0396 A7030000 		.4byte	0x3a7
 2096 039a 10       		.uleb128 0x10
ARM GAS  /tmp/ccx8nc1r.s 			page 63


 2097 039b B3000000 		.4byte	.LASF132
 2098 039f 01       		.byte	0x1
 2099 03a0 74       		.byte	0x74
 2100 03a1 14       		.byte	0x14
 2101 03a2 85030000 		.4byte	0x385
 2102 03a6 00       		.byte	0
 2103 03a7 0C       		.uleb128 0xc
 2104 03a8 B9030000 		.4byte	.LASF56
 2105 03ac 0C       		.byte	0xc
 2106 03ad 01       		.byte	0x1
 2107 03ae 6F       		.byte	0x6f
 2108 03af 10       		.byte	0x10
 2109 03b0 D1030000 		.4byte	0x3d1
 2110 03b4 0D       		.uleb128 0xd
 2111 03b5 CC060000 		.4byte	.LASF57
 2112 03b9 01       		.byte	0x1
 2113 03ba 71       		.byte	0x71
 2114 03bb 0F       		.byte	0xf
 2115 03bc 18010000 		.4byte	0x118
 2116 03c0 02       		.byte	0x2
 2117 03c1 23       		.byte	0x23
 2118 03c2 00       		.uleb128 0
 2119 03c3 11       		.uleb128 0x11
 2120 03c4 7500     		.ascii	"u\000"
 2121 03c6 01       		.byte	0x1
 2122 03c7 7B       		.byte	0x7b
 2123 03c8 04       		.byte	0x4
 2124 03c9 91030000 		.4byte	0x391
 2125 03cd 02       		.byte	0x2
 2126 03ce 23       		.byte	0x23
 2127 03cf 04       		.uleb128 0x4
 2128 03d0 00       		.byte	0
 2129 03d1 03       		.uleb128 0x3
 2130 03d2 D7060000 		.4byte	.LASF58
 2131 03d6 01       		.byte	0x1
 2132 03d7 7C       		.byte	0x7c
 2133 03d8 03       		.byte	0x3
 2134 03d9 A7030000 		.4byte	0x3a7
 2135 03dd 12       		.uleb128 0x12
 2136 03de EE030000 		.4byte	.LASF59
 2137 03e2 01       		.byte	0x1
 2138 03e3 87       		.byte	0x87
 2139 03e4 1F       		.byte	0x1f
 2140 03e5 4E020000 		.4byte	0x24e
 2141 03e9 05       		.byte	0x5
 2142 03ea 03       		.byte	0x3
 2143 03eb 0C000000 		.4byte	xActiveTimerList1
 2144 03ef 12       		.uleb128 0x12
 2145 03f0 00040000 		.4byte	.LASF60
 2146 03f4 01       		.byte	0x1
 2147 03f5 88       		.byte	0x88
 2148 03f6 1F       		.byte	0x1f
 2149 03f7 4E020000 		.4byte	0x24e
 2150 03fb 05       		.byte	0x5
 2151 03fc 03       		.byte	0x3
 2152 03fd 20000000 		.4byte	xActiveTimerList2
 2153 0401 12       		.uleb128 0x12
ARM GAS  /tmp/ccx8nc1r.s 			page 64


 2154 0402 6F060000 		.4byte	.LASF61
 2155 0406 01       		.byte	0x1
 2156 0407 89       		.byte	0x89
 2157 0408 20       		.byte	0x20
 2158 0409 13040000 		.4byte	0x413
 2159 040d 05       		.byte	0x5
 2160 040e 03       		.byte	0x3
 2161 040f 04000000 		.4byte	pxCurrentTimerList
 2162 0413 07       		.uleb128 0x7
 2163 0414 04       		.byte	0x4
 2164 0415 4E020000 		.4byte	0x24e
 2165 0419 06       		.uleb128 0x6
 2166 041a 13040000 		.4byte	0x413
 2167 041e 12       		.uleb128 0x12
 2168 041f 70030000 		.4byte	.LASF62
 2169 0423 01       		.byte	0x1
 2170 0424 8A       		.byte	0x8a
 2171 0425 20       		.byte	0x20
 2172 0426 13040000 		.4byte	0x413
 2173 042a 05       		.byte	0x5
 2174 042b 03       		.byte	0x3
 2175 042c 00000000 		.4byte	pxOverflowTimerList
 2176 0430 12       		.uleb128 0x12
 2177 0431 71010000 		.4byte	.LASF63
 2178 0435 01       		.byte	0x1
 2179 0436 8D       		.byte	0x8d
 2180 0437 26       		.byte	0x26
 2181 0438 72020000 		.4byte	0x272
 2182 043c 05       		.byte	0x5
 2183 043d 03       		.byte	0x3
 2184 043e 08000000 		.4byte	xTimerQueue
 2185 0442 12       		.uleb128 0x12
 2186 0443 B3050000 		.4byte	.LASF64
 2187 0447 01       		.byte	0x1
 2188 0448 8E       		.byte	0x8e
 2189 0449 25       		.byte	0x25
 2190 044a 5A020000 		.4byte	0x25a
 2191 044e 05       		.byte	0x5
 2192 044f 03       		.byte	0x3
 2193 0450 34000000 		.4byte	xTimerTaskHandle
 2194 0454 13       		.uleb128 0x13
 2195 0455 01       		.byte	0x1
 2196 0456 8A030000 		.4byte	.LASF65
 2197 045a 09       		.byte	0x9
 2198 045b 0F05     		.2byte	0x50f
 2199 045d 0C       		.byte	0xc
 2200 045e 01       		.byte	0x1
 2201 045f 18010000 		.4byte	0x118
 2202 0463 01       		.byte	0x1
 2203 0464 7D040000 		.4byte	0x47d
 2204 0468 0A       		.uleb128 0xa
 2205 0469 72020000 		.4byte	0x272
 2206 046d 0A       		.uleb128 0xa
 2207 046e C6000000 		.4byte	0xc6
 2208 0472 0A       		.uleb128 0xa
 2209 0473 83040000 		.4byte	0x483
 2210 0477 0A       		.uleb128 0xa
ARM GAS  /tmp/ccx8nc1r.s 			page 65


 2211 0478 24010000 		.4byte	0x124
 2212 047c 00       		.byte	0
 2213 047d 07       		.uleb128 0x7
 2214 047e 04       		.byte	0x4
 2215 047f 18010000 		.4byte	0x118
 2216 0483 06       		.uleb128 0x6
 2217 0484 7D040000 		.4byte	0x47d
 2218 0488 13       		.uleb128 0x13
 2219 0489 01       		.byte	0x1
 2220 048a CE030000 		.4byte	.LASF66
 2221 048e 09       		.byte	0x9
 2222 048f 8A02     		.2byte	0x28a
 2223 0491 0C       		.byte	0xc
 2224 0492 01       		.byte	0x1
 2225 0493 18010000 		.4byte	0x118
 2226 0497 01       		.byte	0x1
 2227 0498 B1040000 		.4byte	0x4b1
 2228 049c 0A       		.uleb128 0xa
 2229 049d 72020000 		.4byte	0x272
 2230 04a1 0A       		.uleb128 0xa
 2231 04a2 C6000000 		.4byte	0xc6
 2232 04a6 0A       		.uleb128 0xa
 2233 04a7 3F010000 		.4byte	0x13f
 2234 04ab 0A       		.uleb128 0xa
 2235 04ac 24010000 		.4byte	0x124
 2236 04b0 00       		.byte	0
 2237 04b1 14       		.uleb128 0x14
 2238 04b2 01       		.byte	0x1
 2239 04b3 E1000000 		.4byte	.LASF77
 2240 04b7 08       		.byte	0x8
 2241 04b8 2509     		.2byte	0x925
 2242 04ba 0C       		.byte	0xc
 2243 04bb 01       		.byte	0x1
 2244 04bc 18010000 		.4byte	0x118
 2245 04c0 01       		.byte	0x1
 2246 04c1 15       		.uleb128 0x15
 2247 04c2 01       		.byte	0x1
 2248 04c3 0A060000 		.4byte	.LASF69
 2249 04c7 07       		.byte	0x7
 2250 04c8 6401     		.2byte	0x164
 2251 04ca 06       		.byte	0x6
 2252 04cb 01       		.byte	0x1
 2253 04cc 01       		.byte	0x1
 2254 04cd D7040000 		.4byte	0x4d7
 2255 04d1 0A       		.uleb128 0xa
 2256 04d2 49020000 		.4byte	0x249
 2257 04d6 00       		.byte	0
 2258 04d7 16       		.uleb128 0x16
 2259 04d8 01       		.byte	0x1
 2260 04d9 D9020000 		.4byte	.LASF67
 2261 04dd 0B       		.byte	0xb
 2262 04de 91       		.byte	0x91
 2263 04df 07       		.byte	0x7
 2264 04e0 01       		.byte	0x1
 2265 04e1 A2000000 		.4byte	0xa2
 2266 04e5 01       		.byte	0x1
 2267 04e6 F0040000 		.4byte	0x4f0
ARM GAS  /tmp/ccx8nc1r.s 			page 66


 2268 04ea 0A       		.uleb128 0xa
 2269 04eb 33000000 		.4byte	0x33
 2270 04ef 00       		.byte	0
 2271 04f0 17       		.uleb128 0x17
 2272 04f1 01       		.byte	0x1
 2273 04f2 54000000 		.4byte	.LASF71
 2274 04f6 06       		.byte	0x6
 2275 04f7 62       		.byte	0x62
 2276 04f8 0D       		.byte	0xd
 2277 04f9 01       		.byte	0x1
 2278 04fa 01       		.byte	0x1
 2279 04fb 13       		.uleb128 0x13
 2280 04fc 01       		.byte	0x1
 2281 04fd DE040000 		.4byte	.LASF68
 2282 0501 09       		.byte	0x9
 2283 0502 D805     		.2byte	0x5d8
 2284 0504 10       		.byte	0x10
 2285 0505 01       		.byte	0x1
 2286 0506 72020000 		.4byte	0x272
 2287 050a 01       		.byte	0x1
 2288 050b 1F050000 		.4byte	0x51f
 2289 050f 0A       		.uleb128 0xa
 2290 0510 3A010000 		.4byte	0x13a
 2291 0514 0A       		.uleb128 0xa
 2292 0515 3A010000 		.4byte	0x13a
 2293 0519 0A       		.uleb128 0xa
 2294 051a D8000000 		.4byte	0xd8
 2295 051e 00       		.byte	0
 2296 051f 15       		.uleb128 0x15
 2297 0520 01       		.byte	0x1
 2298 0521 8A070000 		.4byte	.LASF70
 2299 0525 07       		.byte	0x7
 2300 0526 5901     		.2byte	0x159
 2301 0528 06       		.byte	0x6
 2302 0529 01       		.byte	0x1
 2303 052a 01       		.byte	0x1
 2304 052b 35050000 		.4byte	0x535
 2305 052f 0A       		.uleb128 0xa
 2306 0530 19040000 		.4byte	0x419
 2307 0534 00       		.byte	0
 2308 0535 17       		.uleb128 0x17
 2309 0536 01       		.byte	0x1
 2310 0537 7D010000 		.4byte	.LASF72
 2311 053b 06       		.byte	0x6
 2312 053c 61       		.byte	0x61
 2313 053d 0D       		.byte	0xd
 2314 053e 01       		.byte	0x1
 2315 053f 01       		.byte	0x1
 2316 0540 13       		.uleb128 0x13
 2317 0541 01       		.byte	0x1
 2318 0542 D3000000 		.4byte	.LASF73
 2319 0546 09       		.byte	0x9
 2320 0547 6403     		.2byte	0x364
 2321 0549 0C       		.byte	0xc
 2322 054a 01       		.byte	0x1
 2323 054b 18010000 		.4byte	0x118
 2324 054f 01       		.byte	0x1
ARM GAS  /tmp/ccx8nc1r.s 			page 67


 2325 0550 64050000 		.4byte	0x564
 2326 0554 0A       		.uleb128 0xa
 2327 0555 72020000 		.4byte	0x272
 2328 0559 0A       		.uleb128 0xa
 2329 055a A4000000 		.4byte	0xa4
 2330 055e 0A       		.uleb128 0xa
 2331 055f 3F010000 		.4byte	0x13f
 2332 0563 00       		.byte	0
 2333 0564 18       		.uleb128 0x18
 2334 0565 01       		.byte	0x1
 2335 0566 8B060000 		.4byte	.LASF74
 2336 056a 0B       		.byte	0xb
 2337 056b 92       		.byte	0x92
 2338 056c 06       		.byte	0x6
 2339 056d 01       		.byte	0x1
 2340 056e 01       		.byte	0x1
 2341 056f 79050000 		.4byte	0x579
 2342 0573 0A       		.uleb128 0xa
 2343 0574 A2000000 		.4byte	0xa2
 2344 0578 00       		.byte	0
 2345 0579 15       		.uleb128 0x15
 2346 057a 01       		.byte	0x1
 2347 057b 00000000 		.4byte	.LASF75
 2348 057f 07       		.byte	0x7
 2349 0580 7101     		.2byte	0x171
 2350 0582 06       		.byte	0x6
 2351 0583 01       		.byte	0x1
 2352 0584 01       		.byte	0x1
 2353 0585 94050000 		.4byte	0x594
 2354 0589 0A       		.uleb128 0xa
 2355 058a 19040000 		.4byte	0x419
 2356 058e 0A       		.uleb128 0xa
 2357 058f 49020000 		.4byte	0x249
 2358 0593 00       		.byte	0
 2359 0594 13       		.uleb128 0x13
 2360 0595 01       		.byte	0x1
 2361 0596 E3010000 		.4byte	.LASF76
 2362 059a 07       		.byte	0x7
 2363 059b 9501     		.2byte	0x195
 2364 059d 0D       		.byte	0xd
 2365 059e 01       		.byte	0x1
 2366 059f 29010000 		.4byte	0x129
 2367 05a3 01       		.byte	0x1
 2368 05a4 AE050000 		.4byte	0x5ae
 2369 05a8 0A       		.uleb128 0xa
 2370 05a9 49020000 		.4byte	0x249
 2371 05ad 00       		.byte	0
 2372 05ae 14       		.uleb128 0x14
 2373 05af 01       		.byte	0x1
 2374 05b0 F2040000 		.4byte	.LASF78
 2375 05b4 08       		.byte	0x8
 2376 05b5 4705     		.2byte	0x547
 2377 05b7 0C       		.byte	0xc
 2378 05b8 01       		.byte	0x1
 2379 05b9 3F010000 		.4byte	0x13f
 2380 05bd 01       		.byte	0x1
 2381 05be 15       		.uleb128 0x15
ARM GAS  /tmp/ccx8nc1r.s 			page 68


 2382 05bf 01       		.byte	0x1
 2383 05c0 E1050000 		.4byte	.LASF79
 2384 05c4 09       		.byte	0x9
 2385 05c5 6B06     		.2byte	0x66b
 2386 05c7 06       		.byte	0x6
 2387 05c8 01       		.byte	0x1
 2388 05c9 01       		.byte	0x1
 2389 05ca DE050000 		.4byte	0x5de
 2390 05ce 0A       		.uleb128 0xa
 2391 05cf 72020000 		.4byte	0x272
 2392 05d3 0A       		.uleb128 0xa
 2393 05d4 3F010000 		.4byte	0x13f
 2394 05d8 0A       		.uleb128 0xa
 2395 05d9 24010000 		.4byte	0x124
 2396 05dd 00       		.byte	0
 2397 05de 14       		.uleb128 0x14
 2398 05df 01       		.byte	0x1
 2399 05e0 60060000 		.4byte	.LASF80
 2400 05e4 08       		.byte	0x8
 2401 05e5 3805     		.2byte	0x538
 2402 05e7 0C       		.byte	0xc
 2403 05e8 01       		.byte	0x1
 2404 05e9 18010000 		.4byte	0x118
 2405 05ed 01       		.byte	0x1
 2406 05ee 19       		.uleb128 0x19
 2407 05ef 01       		.byte	0x1
 2408 05f0 E6020000 		.4byte	.LASF81
 2409 05f4 08       		.byte	0x8
 2410 05f5 0205     		.2byte	0x502
 2411 05f7 06       		.byte	0x6
 2412 05f8 01       		.byte	0x1
 2413 05f9 01       		.byte	0x1
 2414 05fa 13       		.uleb128 0x13
 2415 05fb 01       		.byte	0x1
 2416 05fc A1040000 		.4byte	.LASF82
 2417 0600 08       		.byte	0x8
 2418 0601 4A01     		.2byte	0x14a
 2419 0603 0D       		.byte	0xd
 2420 0604 01       		.byte	0x1
 2421 0605 18010000 		.4byte	0x118
 2422 0609 01       		.byte	0x1
 2423 060a 2D060000 		.4byte	0x62d
 2424 060e 0A       		.uleb128 0xa
 2425 060f FA000000 		.4byte	0xfa
 2426 0613 0A       		.uleb128 0xa
 2427 0614 BB000000 		.4byte	0xbb
 2428 0618 0A       		.uleb128 0xa
 2429 0619 E9000000 		.4byte	0xe9
 2430 061d 0A       		.uleb128 0xa
 2431 061e A4000000 		.4byte	0xa4
 2432 0622 0A       		.uleb128 0xa
 2433 0623 29010000 		.4byte	0x129
 2434 0627 0A       		.uleb128 0xa
 2435 0628 33060000 		.4byte	0x633
 2436 062c 00       		.byte	0
 2437 062d 07       		.uleb128 0x7
 2438 062e 04       		.byte	0x4
ARM GAS  /tmp/ccx8nc1r.s 			page 69


 2439 062f 5A020000 		.4byte	0x25a
 2440 0633 06       		.uleb128 0x6
 2441 0634 2D060000 		.4byte	0x62d
 2442 0638 1A       		.uleb128 0x1a
 2443 0639 01       		.byte	0x1
 2444 063a FF060000 		.4byte	.LASF84
 2445 063e 01       		.byte	0x1
 2446 063f 4004     		.2byte	0x440
 2447 0641 07       		.byte	0x7
 2448 0642 01       		.byte	0x1
 2449 0643 A0030000 		.4byte	.LFB27
 2450 0647 A4030000 		.4byte	.LFE27
 2451 064b 02       		.byte	0x2
 2452 064c 7D       		.byte	0x7d
 2453 064d 00       		.sleb128 0
 2454 064e 01       		.byte	0x1
 2455 064f 72060000 		.4byte	0x672
 2456 0653 1B       		.uleb128 0x1b
 2457 0654 E0030000 		.4byte	.LASF83
 2458 0658 01       		.byte	0x1
 2459 0659 4004     		.2byte	0x440
 2460 065b 2B       		.byte	0x2b
 2461 065c 8A020000 		.4byte	0x28a
 2462 0660 01       		.byte	0x1
 2463 0661 50       		.byte	0x50
 2464 0662 1B       		.uleb128 0x1b
 2465 0663 88000000 		.4byte	.LASF47
 2466 0667 01       		.byte	0x1
 2467 0668 4004     		.2byte	0x440
 2468 066a 3F       		.byte	0x3f
 2469 066b 29010000 		.4byte	0x129
 2470 066f 01       		.byte	0x1
 2471 0670 51       		.byte	0x51
 2472 0671 00       		.byte	0
 2473 0672 1C       		.uleb128 0x1c
 2474 0673 01       		.byte	0x1
 2475 0674 0E020000 		.4byte	.LASF87
 2476 0678 01       		.byte	0x1
 2477 0679 3604     		.2byte	0x436
 2478 067b 0E       		.byte	0xe
 2479 067c 01       		.byte	0x1
 2480 067d 29010000 		.4byte	0x129
 2481 0681 9C030000 		.4byte	.LFB26
 2482 0685 A0030000 		.4byte	.LFE26
 2483 0689 02       		.byte	0x2
 2484 068a 7D       		.byte	0x7d
 2485 068b 00       		.sleb128 0
 2486 068c 01       		.byte	0x1
 2487 068d A7060000 		.4byte	0x6a7
 2488 0691 1D       		.uleb128 0x1d
 2489 0692 E0030000 		.4byte	.LASF83
 2490 0696 01       		.byte	0x1
 2491 0697 3604     		.2byte	0x436
 2492 0699 33       		.byte	0x33
 2493 069a 8A020000 		.4byte	0x28a
 2494 069e 04000000 		.4byte	.LLST72
 2495 06a2 00000000 		.4byte	.LVUS72
ARM GAS  /tmp/ccx8nc1r.s 			page 70


 2496 06a6 00       		.byte	0
 2497 06a7 1E       		.uleb128 0x1e
 2498 06a8 01       		.byte	0x1
 2499 06a9 B5040000 		.4byte	.LASF85
 2500 06ad 01       		.byte	0x1
 2501 06ae F103     		.2byte	0x3f1
 2502 06b0 06       		.byte	0x6
 2503 06b1 01       		.byte	0x1
 2504 06b2 88030000 		.4byte	.LFB25
 2505 06b6 9C030000 		.4byte	.LFE25
 2506 06ba 2B000000 		.4byte	.LLST68
 2507 06be 01       		.byte	0x1
 2508 06bf 16070000 		.4byte	0x716
 2509 06c3 1D       		.uleb128 0x1d
 2510 06c4 E0030000 		.4byte	.LASF83
 2511 06c8 01       		.byte	0x1
 2512 06c9 F103     		.2byte	0x3f1
 2513 06cb 26       		.byte	0x26
 2514 06cc 8A020000 		.4byte	0x28a
 2515 06d0 5D000000 		.4byte	.LLST69
 2516 06d4 57000000 		.4byte	.LVUS69
 2517 06d8 1D       		.uleb128 0x1d
 2518 06d9 12050000 		.4byte	.LASF86
 2519 06dd 01       		.byte	0x1
 2520 06de F103     		.2byte	0x3f1
 2521 06e0 34       		.byte	0x34
 2522 06e1 A2000000 		.4byte	0xa2
 2523 06e5 97000000 		.4byte	.LLST70
 2524 06e9 8F000000 		.4byte	.LVUS70
 2525 06ed 1F       		.uleb128 0x1f
 2526 06ee 3E070000 		.4byte	.LASF54
 2527 06f2 01       		.byte	0x1
 2528 06f3 F303     		.2byte	0x3f3
 2529 06f5 11       		.byte	0x11
 2530 06f6 80030000 		.4byte	0x380
 2531 06fa E4000000 		.4byte	.LLST71
 2532 06fe DE000000 		.4byte	.LVUS71
 2533 0702 20       		.uleb128 0x20
 2534 0703 92030000 		.4byte	.LVL115
 2535 0707 35050000 		.4byte	0x535
 2536 070b 21       		.uleb128 0x21
 2537 070c 9C030000 		.4byte	.LVL117
 2538 0710 01       		.byte	0x1
 2539 0711 F0040000 		.4byte	0x4f0
 2540 0715 00       		.byte	0
 2541 0716 22       		.uleb128 0x22
 2542 0717 01       		.byte	0x1
 2543 0718 47030000 		.4byte	.LASF88
 2544 071c 01       		.byte	0x1
 2545 071d E003     		.2byte	0x3e0
 2546 071f 07       		.byte	0x7
 2547 0720 01       		.byte	0x1
 2548 0721 A2000000 		.4byte	0xa2
 2549 0725 76030000 		.4byte	.LFB24
 2550 0729 88030000 		.4byte	.LFE24
 2551 072d 16010000 		.4byte	.LLST64
 2552 0731 01       		.byte	0x1
ARM GAS  /tmp/ccx8nc1r.s 			page 71


 2553 0732 88070000 		.4byte	0x788
 2554 0736 1D       		.uleb128 0x1d
 2555 0737 E0030000 		.4byte	.LASF83
 2556 073b 01       		.byte	0x1
 2557 073c E003     		.2byte	0x3e0
 2558 073e 2E       		.byte	0x2e
 2559 073f 96020000 		.4byte	0x296
 2560 0743 3C010000 		.4byte	.LLST65
 2561 0747 36010000 		.4byte	.LVUS65
 2562 074b 1F       		.uleb128 0x1f
 2563 074c 3E070000 		.4byte	.LASF54
 2564 0750 01       		.byte	0x1
 2565 0751 E203     		.2byte	0x3e2
 2566 0753 11       		.byte	0x11
 2567 0754 80030000 		.4byte	0x380
 2568 0758 74010000 		.4byte	.LLST66
 2569 075c 6E010000 		.4byte	.LVUS66
 2570 0760 1F       		.uleb128 0x1f
 2571 0761 C9020000 		.4byte	.LASF89
 2572 0765 01       		.byte	0x1
 2573 0766 E303     		.2byte	0x3e3
 2574 0768 07       		.byte	0x7
 2575 0769 A2000000 		.4byte	0xa2
 2576 076d A8010000 		.4byte	.LLST67
 2577 0771 A6010000 		.4byte	.LVUS67
 2578 0775 20       		.uleb128 0x20
 2579 0776 7E030000 		.4byte	.LVL110
 2580 077a 35050000 		.4byte	0x535
 2581 077e 20       		.uleb128 0x20
 2582 077f 84030000 		.4byte	.LVL112
 2583 0783 F0040000 		.4byte	0x4f0
 2584 0787 00       		.byte	0
 2585 0788 22       		.uleb128 0x22
 2586 0789 01       		.byte	0x1
 2587 078a 33030000 		.4byte	.LASF90
 2588 078e 01       		.byte	0x1
 2589 078f C703     		.2byte	0x3c7
 2590 0791 0C       		.byte	0xc
 2591 0792 01       		.byte	0x1
 2592 0793 18010000 		.4byte	0x118
 2593 0797 5E030000 		.4byte	.LFB23
 2594 079b 76030000 		.4byte	.LFE23
 2595 079f BB010000 		.4byte	.LLST60
 2596 07a3 01       		.byte	0x1
 2597 07a4 FA070000 		.4byte	0x7fa
 2598 07a8 1D       		.uleb128 0x1d
 2599 07a9 E0030000 		.4byte	.LASF83
 2600 07ad 01       		.byte	0x1
 2601 07ae C703     		.2byte	0x3c7
 2602 07b0 2F       		.byte	0x2f
 2603 07b1 8A020000 		.4byte	0x28a
 2604 07b5 E1010000 		.4byte	.LLST61
 2605 07b9 DB010000 		.4byte	.LVUS61
 2606 07bd 1F       		.uleb128 0x1f
 2607 07be F7060000 		.4byte	.LASF91
 2608 07c2 01       		.byte	0x1
 2609 07c3 C903     		.2byte	0x3c9
ARM GAS  /tmp/ccx8nc1r.s 			page 72


 2610 07c5 0C       		.byte	0xc
 2611 07c6 18010000 		.4byte	0x118
 2612 07ca 15020000 		.4byte	.LLST62
 2613 07ce 13020000 		.4byte	.LVUS62
 2614 07d2 1F       		.uleb128 0x1f
 2615 07d3 3E070000 		.4byte	.LASF54
 2616 07d7 01       		.byte	0x1
 2617 07d8 CA03     		.2byte	0x3ca
 2618 07da 0A       		.byte	0xa
 2619 07db 7A030000 		.4byte	0x37a
 2620 07df 2E020000 		.4byte	.LLST63
 2621 07e3 28020000 		.4byte	.LVUS63
 2622 07e7 20       		.uleb128 0x20
 2623 07e8 66030000 		.4byte	.LVL104
 2624 07ec 35050000 		.4byte	0x535
 2625 07f0 20       		.uleb128 0x20
 2626 07f1 6E030000 		.4byte	.LVL106
 2627 07f5 F0040000 		.4byte	0x4f0
 2628 07f9 00       		.byte	0
 2629 07fa 23       		.uleb128 0x23
 2630 07fb 6D070000 		.4byte	.LASF111
 2631 07ff 01       		.byte	0x1
 2632 0800 9403     		.2byte	0x394
 2633 0802 0D       		.byte	0xd
 2634 0803 01       		.byte	0x1
 2635 0804 38000000 		.4byte	.LFB22
 2636 0808 74000000 		.4byte	.LFE22
 2637 080c 60020000 		.4byte	.LLST6
 2638 0810 01       		.byte	0x1
 2639 0811 6F080000 		.4byte	0x86f
 2640 0815 20       		.uleb128 0x20
 2641 0816 40000000 		.4byte	.LVL13
 2642 081a 35050000 		.4byte	0x535
 2643 081e 24       		.uleb128 0x24
 2644 081f 52000000 		.4byte	.LVL14
 2645 0823 1F050000 		.4byte	0x51f
 2646 0827 32080000 		.4byte	0x832
 2647 082b 25       		.uleb128 0x25
 2648 082c 01       		.byte	0x1
 2649 082d 50       		.byte	0x50
 2650 082e 02       		.byte	0x2
 2651 082f 77       		.byte	0x77
 2652 0830 00       		.sleb128 0
 2653 0831 00       		.byte	0
 2654 0832 24       		.uleb128 0x24
 2655 0833 58000000 		.4byte	.LVL15
 2656 0837 1F050000 		.4byte	0x51f
 2657 083b 46080000 		.4byte	0x846
 2658 083f 25       		.uleb128 0x25
 2659 0840 01       		.byte	0x1
 2660 0841 50       		.byte	0x50
 2661 0842 02       		.byte	0x2
 2662 0843 76       		.byte	0x76
 2663 0844 00       		.sleb128 0
 2664 0845 00       		.byte	0
 2665 0846 24       		.uleb128 0x24
 2666 0847 66000000 		.4byte	.LVL16
ARM GAS  /tmp/ccx8nc1r.s 			page 73


 2667 084b FB040000 		.4byte	0x4fb
 2668 084f 64080000 		.4byte	0x864
 2669 0853 25       		.uleb128 0x25
 2670 0854 01       		.byte	0x1
 2671 0855 50       		.byte	0x50
 2672 0856 01       		.byte	0x1
 2673 0857 3A       		.byte	0x3a
 2674 0858 25       		.uleb128 0x25
 2675 0859 01       		.byte	0x1
 2676 085a 51       		.byte	0x51
 2677 085b 01       		.byte	0x1
 2678 085c 3C       		.byte	0x3c
 2679 085d 25       		.uleb128 0x25
 2680 085e 01       		.byte	0x1
 2681 085f 52       		.byte	0x52
 2682 0860 02       		.byte	0x2
 2683 0861 75       		.byte	0x75
 2684 0862 00       		.sleb128 0
 2685 0863 00       		.byte	0
 2686 0864 21       		.uleb128 0x21
 2687 0865 70000000 		.4byte	.LVL17
 2688 0869 01       		.byte	0x1
 2689 086a F0040000 		.4byte	0x4f0
 2690 086e 00       		.byte	0
 2691 086f 26       		.uleb128 0x26
 2692 0870 25050000 		.4byte	.LASF96
 2693 0874 01       		.byte	0x1
 2694 0875 5903     		.2byte	0x359
 2695 0877 0D       		.byte	0xd
 2696 0878 01       		.byte	0x1
 2697 0879 01       		.byte	0x1
 2698 087a C0080000 		.4byte	0x8c0
 2699 087e 27       		.uleb128 0x27
 2700 087f D1050000 		.4byte	.LASF92
 2701 0883 01       		.byte	0x1
 2702 0884 5B03     		.2byte	0x35b
 2703 0886 0C       		.byte	0xc
 2704 0887 3F010000 		.4byte	0x13f
 2705 088b 27       		.uleb128 0x27
 2706 088c EB060000 		.4byte	.LASF93
 2707 0890 01       		.byte	0x1
 2708 0891 5B03     		.2byte	0x35b
 2709 0893 1D       		.byte	0x1d
 2710 0894 3F010000 		.4byte	0x13f
 2711 0898 27       		.uleb128 0x27
 2712 0899 D2020000 		.4byte	.LASF94
 2713 089d 01       		.byte	0x1
 2714 089e 5C03     		.2byte	0x35c
 2715 08a0 09       		.byte	0x9
 2716 08a1 13040000 		.4byte	0x413
 2717 08a5 27       		.uleb128 0x27
 2718 08a6 3E070000 		.4byte	.LASF54
 2719 08aa 01       		.byte	0x1
 2720 08ab 5D03     		.2byte	0x35d
 2721 08ad 0A       		.byte	0xa
 2722 08ae 7A030000 		.4byte	0x37a
 2723 08b2 27       		.uleb128 0x27
ARM GAS  /tmp/ccx8nc1r.s 			page 74


 2724 08b3 26070000 		.4byte	.LASF95
 2725 08b7 01       		.byte	0x1
 2726 08b8 5E03     		.2byte	0x35e
 2727 08ba 0C       		.byte	0xc
 2728 08bb 18010000 		.4byte	0x118
 2729 08bf 00       		.byte	0
 2730 08c0 26       		.uleb128 0x26
 2731 08c1 32060000 		.4byte	.LASF97
 2732 08c5 01       		.byte	0x1
 2733 08c6 C502     		.2byte	0x2c5
 2734 08c8 0D       		.byte	0xd
 2735 08c9 01       		.byte	0x1
 2736 08ca 01       		.byte	0x1
 2737 08cb 11090000 		.4byte	0x911
 2738 08cf 27       		.uleb128 0x27
 2739 08d0 82060000 		.4byte	.LASF98
 2740 08d4 01       		.byte	0x1
 2741 08d5 C702     		.2byte	0x2c7
 2742 08d7 15       		.byte	0x15
 2743 08d8 D1030000 		.4byte	0x3d1
 2744 08dc 27       		.uleb128 0x27
 2745 08dd 3E070000 		.4byte	.LASF54
 2746 08e1 01       		.byte	0x1
 2747 08e2 C802     		.2byte	0x2c8
 2748 08e4 0A       		.byte	0xa
 2749 08e5 7A030000 		.4byte	0x37a
 2750 08e9 27       		.uleb128 0x27
 2751 08ea C6040000 		.4byte	.LASF99
 2752 08ee 01       		.byte	0x1
 2753 08ef C902     		.2byte	0x2c9
 2754 08f1 0C       		.byte	0xc
 2755 08f2 18010000 		.4byte	0x118
 2756 08f6 27       		.uleb128 0x27
 2757 08f7 26070000 		.4byte	.LASF95
 2758 08fb 01       		.byte	0x1
 2759 08fc C902     		.2byte	0x2c9
 2760 08fe 25       		.byte	0x25
 2761 08ff 18010000 		.4byte	0x118
 2762 0903 27       		.uleb128 0x27
 2763 0904 96000000 		.4byte	.LASF100
 2764 0908 01       		.byte	0x1
 2765 0909 CA02     		.2byte	0x2ca
 2766 090b 0C       		.byte	0xc
 2767 090c 3F010000 		.4byte	0x13f
 2768 0910 00       		.byte	0
 2769 0911 28       		.uleb128 0x28
 2770 0912 12040000 		.4byte	.LASF104
 2771 0916 01       		.byte	0x1
 2772 0917 9C02     		.2byte	0x29c
 2773 0919 13       		.byte	0x13
 2774 091a 01       		.byte	0x1
 2775 091b 18010000 		.4byte	0x118
 2776 091f 00000000 		.4byte	.LFB19
 2777 0923 38000000 		.4byte	.LFE19
 2778 0927 8C020000 		.4byte	.LLST0
 2779 092b 01       		.byte	0x1
 2780 092c A3090000 		.4byte	0x9a3
ARM GAS  /tmp/ccx8nc1r.s 			page 75


 2781 0930 1D       		.uleb128 0x1d
 2782 0931 3E070000 		.4byte	.LASF54
 2783 0935 01       		.byte	0x1
 2784 0936 9C02     		.2byte	0x29c
 2785 0938 3F       		.byte	0x3f
 2786 0939 80030000 		.4byte	0x380
 2787 093d B8020000 		.4byte	.LLST1
 2788 0941 AC020000 		.4byte	.LVUS1
 2789 0945 1D       		.uleb128 0x1d
 2790 0946 09080000 		.4byte	.LASF101
 2791 094a 01       		.byte	0x1
 2792 094b 9C02     		.2byte	0x29c
 2793 094d 59       		.byte	0x59
 2794 094e 4B010000 		.4byte	0x14b
 2795 0952 26030000 		.4byte	.LLST2
 2796 0956 16030000 		.4byte	.LVUS2
 2797 095a 1D       		.uleb128 0x1d
 2798 095b 96000000 		.4byte	.LASF100
 2799 095f 01       		.byte	0x1
 2800 0960 9C02     		.2byte	0x29c
 2801 0962 7B       		.byte	0x7b
 2802 0963 4B010000 		.4byte	0x14b
 2803 0967 A4030000 		.4byte	.LLST3
 2804 096b 9C030000 		.4byte	.LVUS3
 2805 096f 1D       		.uleb128 0x1d
 2806 0970 23000000 		.4byte	.LASF102
 2807 0974 01       		.byte	0x1
 2808 0975 9C02     		.2byte	0x29c
 2809 0977 96       		.byte	0x96
 2810 0978 4B010000 		.4byte	0x14b
 2811 097c F2030000 		.4byte	.LLST4
 2812 0980 EA030000 		.4byte	.LVUS4
 2813 0984 1F       		.uleb128 0x1f
 2814 0985 C9010000 		.4byte	.LASF103
 2815 0989 01       		.byte	0x1
 2816 098a 9E02     		.2byte	0x29e
 2817 098c 0C       		.byte	0xc
 2818 098d 18010000 		.4byte	0x118
 2819 0991 3E040000 		.4byte	.LLST5
 2820 0995 38040000 		.4byte	.LVUS5
 2821 0999 20       		.uleb128 0x20
 2822 099a 1C000000 		.4byte	.LVL5
 2823 099e 79050000 		.4byte	0x579
 2824 09a2 00       		.byte	0
 2825 09a3 28       		.uleb128 0x28
 2826 09a4 78040000 		.4byte	.LASF105
 2827 09a8 01       		.byte	0x1
 2828 09a9 8502     		.2byte	0x285
 2829 09ab 13       		.byte	0x13
 2830 09ac 01       		.byte	0x1
 2831 09ad 3F010000 		.4byte	0x13f
 2832 09b1 30010000 		.4byte	.LFB18
 2833 09b5 AC010000 		.4byte	.LFE18
 2834 09b9 6A040000 		.4byte	.LLST28
 2835 09bd 01       		.byte	0x1
 2836 09be B80A0000 		.4byte	0xab8
 2837 09c2 1D       		.uleb128 0x1d
ARM GAS  /tmp/ccx8nc1r.s 			page 76


 2838 09c3 73080000 		.4byte	.LASF106
 2839 09c7 01       		.byte	0x1
 2840 09c8 8502     		.2byte	0x285
 2841 09ca 38       		.byte	0x38
 2842 09cb 83040000 		.4byte	0x483
 2843 09cf A6040000 		.4byte	.LLST29
 2844 09d3 A2040000 		.4byte	.LVUS29
 2845 09d7 1F       		.uleb128 0x1f
 2846 09d8 96000000 		.4byte	.LASF100
 2847 09dc 01       		.byte	0x1
 2848 09dd 8702     		.2byte	0x287
 2849 09df 0C       		.byte	0xc
 2850 09e0 3F010000 		.4byte	0x13f
 2851 09e4 C8040000 		.4byte	.LLST30
 2852 09e8 C4040000 		.4byte	.LVUS30
 2853 09ec 29       		.uleb128 0x29
 2854 09ed 56060000 		.4byte	.LASF107
 2855 09f1 01       		.byte	0x1
 2856 09f2 8802     		.2byte	0x288
 2857 09f4 23       		.byte	0x23
 2858 09f5 3F010000 		.4byte	0x13f
 2859 09f9 05       		.byte	0x5
 2860 09fa 03       		.byte	0x3
 2861 09fb 38000000 		.4byte	xLastTime.0
 2862 09ff 2A       		.uleb128 0x2a
 2863 0a00 6F080000 		.4byte	0x86f
 2864 0a04 00000000 		.4byte	.Ldebug_ranges0+0
 2865 0a08 01       		.byte	0x1
 2866 0a09 8E02     		.2byte	0x28e
 2867 0a0b 03       		.byte	0x3
 2868 0a0c AE0A0000 		.4byte	0xaae
 2869 0a10 2B       		.uleb128 0x2b
 2870 0a11 00000000 		.4byte	.Ldebug_ranges0+0
 2871 0a15 2C       		.uleb128 0x2c
 2872 0a16 7E080000 		.4byte	0x87e
 2873 0a1a EA040000 		.4byte	.LLST31
 2874 0a1e E6040000 		.4byte	.LVUS31
 2875 0a22 2C       		.uleb128 0x2c
 2876 0a23 8B080000 		.4byte	0x88b
 2877 0a27 0E050000 		.4byte	.LLST32
 2878 0a2b 08050000 		.4byte	.LVUS32
 2879 0a2f 2C       		.uleb128 0x2c
 2880 0a30 98080000 		.4byte	0x898
 2881 0a34 41050000 		.4byte	.LLST33
 2882 0a38 3D050000 		.4byte	.LVUS33
 2883 0a3c 2C       		.uleb128 0x2c
 2884 0a3d A5080000 		.4byte	0x8a5
 2885 0a41 67050000 		.4byte	.LLST34
 2886 0a45 63050000 		.4byte	.LVUS34
 2887 0a49 2D       		.uleb128 0x2d
 2888 0a4a B2080000 		.4byte	0x8b2
 2889 0a4e 24       		.uleb128 0x24
 2890 0a4f 64010000 		.4byte	.LVL42
 2891 0a53 94050000 		.4byte	0x594
 2892 0a57 620A0000 		.4byte	0xa62
 2893 0a5b 25       		.uleb128 0x25
 2894 0a5c 01       		.byte	0x1
ARM GAS  /tmp/ccx8nc1r.s 			page 77


 2895 0a5d 50       		.byte	0x50
 2896 0a5e 02       		.byte	0x2
 2897 0a5f 79       		.byte	0x79
 2898 0a60 00       		.sleb128 0
 2899 0a61 00       		.byte	0
 2900 0a62 2E       		.uleb128 0x2e
 2901 0a63 6A010000 		.4byte	.LVL43
 2902 0a67 720A0000 		.4byte	0xa72
 2903 0a6b 25       		.uleb128 0x25
 2904 0a6c 01       		.byte	0x1
 2905 0a6d 50       		.byte	0x50
 2906 0a6e 02       		.byte	0x2
 2907 0a6f 74       		.byte	0x74
 2908 0a70 00       		.sleb128 0
 2909 0a71 00       		.byte	0
 2910 0a72 24       		.uleb128 0x24
 2911 0a73 86010000 		.4byte	.LVL45
 2912 0a77 79050000 		.4byte	0x579
 2913 0a7b 860A0000 		.4byte	0xa86
 2914 0a7f 25       		.uleb128 0x25
 2915 0a80 01       		.byte	0x1
 2916 0a81 51       		.byte	0x51
 2917 0a82 02       		.byte	0x2
 2918 0a83 79       		.byte	0x79
 2919 0a84 00       		.sleb128 0
 2920 0a85 00       		.byte	0
 2921 0a86 2F       		.uleb128 0x2f
 2922 0a87 A6010000 		.4byte	.LVL51
 2923 0a8b CD0F0000 		.4byte	0xfcd
 2924 0a8f 25       		.uleb128 0x25
 2925 0a90 01       		.byte	0x1
 2926 0a91 50       		.byte	0x50
 2927 0a92 02       		.byte	0x2
 2928 0a93 74       		.byte	0x74
 2929 0a94 00       		.sleb128 0
 2930 0a95 25       		.uleb128 0x25
 2931 0a96 01       		.byte	0x1
 2932 0a97 51       		.byte	0x51
 2933 0a98 01       		.byte	0x1
 2934 0a99 30       		.byte	0x30
 2935 0a9a 25       		.uleb128 0x25
 2936 0a9b 01       		.byte	0x1
 2937 0a9c 52       		.byte	0x52
 2938 0a9d 02       		.byte	0x2
 2939 0a9e 78       		.byte	0x78
 2940 0a9f 00       		.sleb128 0
 2941 0aa0 25       		.uleb128 0x25
 2942 0aa1 01       		.byte	0x1
 2943 0aa2 53       		.byte	0x53
 2944 0aa3 01       		.byte	0x1
 2945 0aa4 30       		.byte	0x30
 2946 0aa5 25       		.uleb128 0x25
 2947 0aa6 02       		.byte	0x2
 2948 0aa7 7D       		.byte	0x7d
 2949 0aa8 00       		.sleb128 0
 2950 0aa9 01       		.byte	0x1
 2951 0aaa 30       		.byte	0x30
ARM GAS  /tmp/ccx8nc1r.s 			page 78


 2952 0aab 00       		.byte	0
 2953 0aac 00       		.byte	0
 2954 0aad 00       		.byte	0
 2955 0aae 20       		.uleb128 0x20
 2956 0aaf 3A010000 		.4byte	.LVL37
 2957 0ab3 AE050000 		.4byte	0x5ae
 2958 0ab7 00       		.byte	0
 2959 0ab8 30       		.uleb128 0x30
 2960 0ab9 5E080000 		.4byte	.LASF133
 2961 0abd 01       		.byte	0x1
 2962 0abe 6B02     		.2byte	0x26b
 2963 0ac0 13       		.byte	0x13
 2964 0ac1 01       		.byte	0x1
 2965 0ac2 3F010000 		.4byte	0x13f
 2966 0ac6 01       		.byte	0x1
 2967 0ac7 E60A0000 		.4byte	0xae6
 2968 0acb 31       		.uleb128 0x31
 2969 0acc 79000000 		.4byte	.LASF109
 2970 0ad0 01       		.byte	0x1
 2971 0ad1 6B02     		.2byte	0x26b
 2972 0ad3 3C       		.byte	0x3c
 2973 0ad4 83040000 		.4byte	0x483
 2974 0ad8 27       		.uleb128 0x27
 2975 0ad9 D1050000 		.4byte	.LASF92
 2976 0add 01       		.byte	0x1
 2977 0ade 6D02     		.2byte	0x26d
 2978 0ae0 0C       		.byte	0xc
 2979 0ae1 3F010000 		.4byte	0x13f
 2980 0ae5 00       		.byte	0
 2981 0ae6 26       		.uleb128 0x26
 2982 0ae7 CE070000 		.4byte	.LASF108
 2983 0aeb 01       		.byte	0x1
 2984 0aec 2F02     		.2byte	0x22f
 2985 0aee 0D       		.byte	0xd
 2986 0aef 01       		.byte	0x1
 2987 0af0 01       		.byte	0x1
 2988 0af1 2A0B0000 		.4byte	0xb2a
 2989 0af5 31       		.uleb128 0x31
 2990 0af6 D1050000 		.4byte	.LASF92
 2991 0afa 01       		.byte	0x1
 2992 0afb 2F02     		.2byte	0x22f
 2993 0afd 3A       		.byte	0x3a
 2994 0afe 4B010000 		.4byte	0x14b
 2995 0b02 31       		.uleb128 0x31
 2996 0b03 95060000 		.4byte	.LASF110
 2997 0b07 01       		.byte	0x1
 2998 0b08 2F02     		.2byte	0x22f
 2999 0b0a 56       		.byte	0x56
 3000 0b0b 18010000 		.4byte	0x118
 3001 0b0f 27       		.uleb128 0x27
 3002 0b10 96000000 		.4byte	.LASF100
 3003 0b14 01       		.byte	0x1
 3004 0b15 3102     		.2byte	0x231
 3005 0b17 0C       		.byte	0xc
 3006 0b18 3F010000 		.4byte	0x13f
 3007 0b1c 27       		.uleb128 0x27
 3008 0b1d C6040000 		.4byte	.LASF99
ARM GAS  /tmp/ccx8nc1r.s 			page 79


 3009 0b21 01       		.byte	0x1
 3010 0b22 3202     		.2byte	0x232
 3011 0b24 0C       		.byte	0xc
 3012 0b25 18010000 		.4byte	0x118
 3013 0b29 00       		.byte	0
 3014 0b2a 23       		.uleb128 0x23
 3015 0b2b C4050000 		.4byte	.LASF112
 3016 0b2f 01       		.byte	0x1
 3017 0b30 0B02     		.2byte	0x20b
 3018 0b32 08       		.byte	0x8
 3019 0b33 01       		.byte	0x1
 3020 0b34 AC010000 		.4byte	.LFB15
 3021 0b38 20030000 		.4byte	.LFE15
 3022 0b3c 85050000 		.4byte	.LLST35
 3023 0b40 01       		.byte	0x1
 3024 0b41 0C0E0000 		.4byte	0xe0c
 3025 0b45 1D       		.uleb128 0x1d
 3026 0b46 53010000 		.4byte	.LASF113
 3027 0b4a 01       		.byte	0x1
 3028 0b4b 0B02     		.2byte	0x20b
 3029 0b4d 08       		.byte	0x8
 3030 0b4e A2000000 		.4byte	0xa2
 3031 0b52 B5050000 		.4byte	.LLST36
 3032 0b56 B1050000 		.4byte	.LVUS36
 3033 0b5a 1F       		.uleb128 0x1f
 3034 0b5b D1050000 		.4byte	.LASF92
 3035 0b5f 01       		.byte	0x1
 3036 0b60 0D02     		.2byte	0x20d
 3037 0b62 0C       		.byte	0xc
 3038 0b63 3F010000 		.4byte	0x13f
 3039 0b67 E0050000 		.4byte	.LLST37
 3040 0b6b DC050000 		.4byte	.LVUS37
 3041 0b6f 1F       		.uleb128 0x1f
 3042 0b70 95060000 		.4byte	.LASF110
 3043 0b74 01       		.byte	0x1
 3044 0b75 0E02     		.2byte	0x20e
 3045 0b77 0C       		.byte	0xc
 3046 0b78 18010000 		.4byte	0x118
 3047 0b7c 00060000 		.4byte	.LLST38
 3048 0b80 FE050000 		.4byte	.LVUS38
 3049 0b84 32       		.uleb128 0x32
 3050 0b85 B80A0000 		.4byte	0xab8
 3051 0b89 B6010000 		.4byte	.LBI20
 3052 0b8d 05       		.byte	.LVU186
 3053 0b8e 18000000 		.4byte	.Ldebug_ranges0+0x18
 3054 0b92 01       		.byte	0x1
 3055 0b93 2302     		.2byte	0x223
 3056 0b95 15       		.byte	0x15
 3057 0b96 BB0B0000 		.4byte	0xbbb
 3058 0b9a 33       		.uleb128 0x33
 3059 0b9b CB0A0000 		.4byte	0xacb
 3060 0b9f 18060000 		.4byte	.LLST39
 3061 0ba3 14060000 		.4byte	.LVUS39
 3062 0ba7 2B       		.uleb128 0x2b
 3063 0ba8 18000000 		.4byte	.Ldebug_ranges0+0x18
 3064 0bac 2C       		.uleb128 0x2c
 3065 0bad D80A0000 		.4byte	0xad8
ARM GAS  /tmp/ccx8nc1r.s 			page 80


 3066 0bb1 42060000 		.4byte	.LLST40
 3067 0bb5 40060000 		.4byte	.LVUS40
 3068 0bb9 00       		.byte	0
 3069 0bba 00       		.byte	0
 3070 0bbb 32       		.uleb128 0x32
 3071 0bbc E60A0000 		.4byte	0xae6
 3072 0bc0 CA010000 		.4byte	.LBI25
 3073 0bc4 03       		.byte	.LVU197
 3074 0bc5 38000000 		.4byte	.Ldebug_ranges0+0x38
 3075 0bc9 01       		.byte	0x1
 3076 0bca 2702     		.2byte	0x227
 3077 0bcc 03       		.byte	0x3
 3078 0bcd 120D0000 		.4byte	0xd12
 3079 0bd1 33       		.uleb128 0x33
 3080 0bd2 020B0000 		.4byte	0xb02
 3081 0bd6 5B060000 		.4byte	.LLST41
 3082 0bda 55060000 		.4byte	.LVUS41
 3083 0bde 33       		.uleb128 0x33
 3084 0bdf F50A0000 		.4byte	0xaf5
 3085 0be3 88060000 		.4byte	.LLST42
 3086 0be7 84060000 		.4byte	.LVUS42
 3087 0beb 2B       		.uleb128 0x2b
 3088 0bec 38000000 		.4byte	.Ldebug_ranges0+0x38
 3089 0bf0 2C       		.uleb128 0x2c
 3090 0bf1 0F0B0000 		.4byte	0xb0f
 3091 0bf5 B4060000 		.4byte	.LLST43
 3092 0bf9 A6060000 		.4byte	.LVUS43
 3093 0bfd 34       		.uleb128 0x34
 3094 0bfe 1C0B0000 		.4byte	0xb1c
 3095 0c02 02       		.byte	0x2
 3096 0c03 91       		.byte	0x91
 3097 0c04 54       		.sleb128 -44
 3098 0c05 32       		.uleb128 0x32
 3099 0c06 0C0E0000 		.4byte	0xe0c
 3100 0c0a E8010000 		.4byte	.LBI27
 3101 0c0e 01       		.byte	.LVU213
 3102 0c0f 58000000 		.4byte	.Ldebug_ranges0+0x58
 3103 0c13 01       		.byte	0x1
 3104 0c14 4202     		.2byte	0x242
 3105 0c16 05       		.byte	0x5
 3106 0c17 BB0C0000 		.4byte	0xcbb
 3107 0c1b 33       		.uleb128 0x33
 3108 0c1c 280E0000 		.4byte	0xe28
 3109 0c20 0D070000 		.4byte	.LLST44
 3110 0c24 09070000 		.4byte	.LVUS44
 3111 0c28 33       		.uleb128 0x33
 3112 0c29 1B0E0000 		.4byte	0xe1b
 3113 0c2d 2F070000 		.4byte	.LLST45
 3114 0c31 2B070000 		.4byte	.LVUS45
 3115 0c35 2B       		.uleb128 0x2b
 3116 0c36 58000000 		.4byte	.Ldebug_ranges0+0x58
 3117 0c3a 2D       		.uleb128 0x2d
 3118 0c3b 350E0000 		.4byte	0xe35
 3119 0c3f 2C       		.uleb128 0x2c
 3120 0c40 420E0000 		.4byte	0xe42
 3121 0c44 51070000 		.4byte	.LLST46
 3122 0c48 4D070000 		.4byte	.LVUS46
ARM GAS  /tmp/ccx8nc1r.s 			page 81


 3123 0c4c 24       		.uleb128 0x24
 3124 0c4d F4010000 		.4byte	.LVL61
 3125 0c51 94050000 		.4byte	0x594
 3126 0c55 600C0000 		.4byte	0xc60
 3127 0c59 25       		.uleb128 0x25
 3128 0c5a 01       		.byte	0x1
 3129 0c5b 50       		.byte	0x50
 3130 0c5c 02       		.byte	0x2
 3131 0c5d 77       		.byte	0x77
 3132 0c5e 04       		.sleb128 4
 3133 0c5f 00       		.byte	0
 3134 0c60 24       		.uleb128 0x24
 3135 0c61 0A020000 		.4byte	.LVL62
 3136 0c65 11090000 		.4byte	0x911
 3137 0c69 800C0000 		.4byte	0xc80
 3138 0c6d 25       		.uleb128 0x25
 3139 0c6e 01       		.byte	0x1
 3140 0c6f 50       		.byte	0x50
 3141 0c70 02       		.byte	0x2
 3142 0c71 77       		.byte	0x77
 3143 0c72 00       		.sleb128 0
 3144 0c73 25       		.uleb128 0x25
 3145 0c74 01       		.byte	0x1
 3146 0c75 52       		.byte	0x52
 3147 0c76 02       		.byte	0x2
 3148 0c77 79       		.byte	0x79
 3149 0c78 00       		.sleb128 0
 3150 0c79 25       		.uleb128 0x25
 3151 0c7a 01       		.byte	0x1
 3152 0c7b 53       		.byte	0x53
 3153 0c7c 02       		.byte	0x2
 3154 0c7d 78       		.byte	0x78
 3155 0c7e 00       		.sleb128 0
 3156 0c7f 00       		.byte	0
 3157 0c80 24       		.uleb128 0x24
 3158 0c81 1A020000 		.4byte	.LVL63
 3159 0c85 CD0F0000 		.4byte	0xfcd
 3160 0c89 AD0C0000 		.4byte	0xcad
 3161 0c8d 25       		.uleb128 0x25
 3162 0c8e 01       		.byte	0x1
 3163 0c8f 50       		.byte	0x50
 3164 0c90 02       		.byte	0x2
 3165 0c91 77       		.byte	0x77
 3166 0c92 00       		.sleb128 0
 3167 0c93 25       		.uleb128 0x25
 3168 0c94 01       		.byte	0x1
 3169 0c95 51       		.byte	0x51
 3170 0c96 02       		.byte	0x2
 3171 0c97 74       		.byte	0x74
 3172 0c98 00       		.sleb128 0
 3173 0c99 25       		.uleb128 0x25
 3174 0c9a 01       		.byte	0x1
 3175 0c9b 52       		.byte	0x52
 3176 0c9c 02       		.byte	0x2
 3177 0c9d 78       		.byte	0x78
 3178 0c9e 00       		.sleb128 0
 3179 0c9f 25       		.uleb128 0x25
ARM GAS  /tmp/ccx8nc1r.s 			page 82


 3180 0ca0 01       		.byte	0x1
 3181 0ca1 53       		.byte	0x53
 3182 0ca2 02       		.byte	0x2
 3183 0ca3 74       		.byte	0x74
 3184 0ca4 00       		.sleb128 0
 3185 0ca5 25       		.uleb128 0x25
 3186 0ca6 02       		.byte	0x2
 3187 0ca7 7D       		.byte	0x7d
 3188 0ca8 00       		.sleb128 0
 3189 0ca9 02       		.byte	0x2
 3190 0caa 74       		.byte	0x74
 3191 0cab 00       		.sleb128 0
 3192 0cac 00       		.byte	0
 3193 0cad 35       		.uleb128 0x35
 3194 0cae 20020000 		.4byte	.LVL64
 3195 0cb2 25       		.uleb128 0x25
 3196 0cb3 01       		.byte	0x1
 3197 0cb4 50       		.byte	0x50
 3198 0cb5 02       		.byte	0x2
 3199 0cb6 77       		.byte	0x77
 3200 0cb7 00       		.sleb128 0
 3201 0cb8 00       		.byte	0
 3202 0cb9 00       		.byte	0
 3203 0cba 00       		.byte	0
 3204 0cbb 20       		.uleb128 0x20
 3205 0cbc CE010000 		.4byte	.LVL56
 3206 0cc0 EE050000 		.4byte	0x5ee
 3207 0cc4 24       		.uleb128 0x24
 3208 0cc5 D4010000 		.4byte	.LVL57
 3209 0cc9 A3090000 		.4byte	0x9a3
 3210 0ccd D80C0000 		.4byte	0xcd8
 3211 0cd1 25       		.uleb128 0x25
 3212 0cd2 01       		.byte	0x1
 3213 0cd3 50       		.byte	0x50
 3214 0cd4 02       		.byte	0x2
 3215 0cd5 91       		.byte	0x91
 3216 0cd6 54       		.sleb128 -44
 3217 0cd7 00       		.byte	0
 3218 0cd8 20       		.uleb128 0x20
 3219 0cd9 E8010000 		.4byte	.LVL59
 3220 0cdd DE050000 		.4byte	0x5de
 3221 0ce1 24       		.uleb128 0x24
 3222 0ce2 80020000 		.4byte	.LVL76
 3223 0ce6 BE050000 		.4byte	0x5be
 3224 0cea FE0C0000 		.4byte	0xcfe
 3225 0cee 25       		.uleb128 0x25
 3226 0cef 01       		.byte	0x1
 3227 0cf0 51       		.byte	0x51
 3228 0cf1 05       		.byte	0x5
 3229 0cf2 78       		.byte	0x78
 3230 0cf3 00       		.sleb128 0
 3231 0cf4 79       		.byte	0x79
 3232 0cf5 00       		.sleb128 0
 3233 0cf6 1C       		.byte	0x1c
 3234 0cf7 25       		.uleb128 0x25
 3235 0cf8 01       		.byte	0x1
 3236 0cf9 52       		.byte	0x52
ARM GAS  /tmp/ccx8nc1r.s 			page 83


 3237 0cfa 02       		.byte	0x2
 3238 0cfb 74       		.byte	0x74
 3239 0cfc 00       		.sleb128 0
 3240 0cfd 00       		.byte	0
 3241 0cfe 20       		.uleb128 0x20
 3242 0cff 84020000 		.4byte	.LVL77
 3243 0d03 DE050000 		.4byte	0x5de
 3244 0d07 20       		.uleb128 0x20
 3245 0d08 A2020000 		.4byte	.LVL79
 3246 0d0c DE050000 		.4byte	0x5de
 3247 0d10 00       		.byte	0
 3248 0d11 00       		.byte	0
 3249 0d12 36       		.uleb128 0x36
 3250 0d13 C0080000 		.4byte	0x8c0
 3251 0d17 A2020000 		.4byte	.LBI33
 3252 0d1b 02       		.byte	.LVU274
 3253 0d1c 70000000 		.4byte	.Ldebug_ranges0+0x70
 3254 0d20 01       		.byte	0x1
 3255 0d21 2A02     		.2byte	0x22a
 3256 0d23 03       		.byte	0x3
 3257 0d24 2B       		.uleb128 0x2b
 3258 0d25 70000000 		.4byte	.Ldebug_ranges0+0x70
 3259 0d29 34       		.uleb128 0x34
 3260 0d2a CF080000 		.4byte	0x8cf
 3261 0d2e 02       		.byte	0x2
 3262 0d2f 91       		.byte	0x91
 3263 0d30 54       		.sleb128 -44
 3264 0d31 2C       		.uleb128 0x2c
 3265 0d32 DC080000 		.4byte	0x8dc
 3266 0d36 73070000 		.4byte	.LLST47
 3267 0d3a 6F070000 		.4byte	.LVUS47
 3268 0d3e 34       		.uleb128 0x34
 3269 0d3f E9080000 		.4byte	0x8e9
 3270 0d43 02       		.byte	0x2
 3271 0d44 91       		.byte	0x91
 3272 0d45 50       		.sleb128 -48
 3273 0d46 2D       		.uleb128 0x2d
 3274 0d47 F6080000 		.4byte	0x8f6
 3275 0d4b 2C       		.uleb128 0x2c
 3276 0d4c 03090000 		.4byte	0x903
 3277 0d50 9D070000 		.4byte	.LLST48
 3278 0d54 91070000 		.4byte	.LVUS48
 3279 0d58 24       		.uleb128 0x24
 3280 0d59 2A020000 		.4byte	.LVL65
 3281 0d5d 40050000 		.4byte	0x540
 3282 0d61 720D0000 		.4byte	0xd72
 3283 0d65 25       		.uleb128 0x25
 3284 0d66 01       		.byte	0x1
 3285 0d67 51       		.byte	0x51
 3286 0d68 02       		.byte	0x2
 3287 0d69 91       		.byte	0x91
 3288 0d6a 54       		.sleb128 -44
 3289 0d6b 25       		.uleb128 0x25
 3290 0d6c 01       		.byte	0x1
 3291 0d6d 52       		.byte	0x52
 3292 0d6e 02       		.byte	0x2
 3293 0d6f 76       		.byte	0x76
ARM GAS  /tmp/ccx8nc1r.s 			page 84


 3294 0d70 00       		.sleb128 0
 3295 0d71 00       		.byte	0
 3296 0d72 24       		.uleb128 0x24
 3297 0d73 40020000 		.4byte	.LVL67
 3298 0d77 94050000 		.4byte	0x594
 3299 0d7b 860D0000 		.4byte	0xd86
 3300 0d7f 25       		.uleb128 0x25
 3301 0d80 01       		.byte	0x1
 3302 0d81 50       		.byte	0x50
 3303 0d82 02       		.byte	0x2
 3304 0d83 74       		.byte	0x74
 3305 0d84 04       		.sleb128 4
 3306 0d85 00       		.byte	0
 3307 0d86 24       		.uleb128 0x24
 3308 0d87 46020000 		.4byte	.LVL68
 3309 0d8b A3090000 		.4byte	0x9a3
 3310 0d8f 9A0D0000 		.4byte	0xd9a
 3311 0d93 25       		.uleb128 0x25
 3312 0d94 01       		.byte	0x1
 3313 0d95 50       		.byte	0x50
 3314 0d96 02       		.byte	0x2
 3315 0d97 91       		.byte	0x91
 3316 0d98 50       		.sleb128 -48
 3317 0d99 00       		.byte	0
 3318 0d9a 24       		.uleb128 0x24
 3319 0d9b BC020000 		.4byte	.LVL82
 3320 0d9f 11090000 		.4byte	0x911
 3321 0da3 AE0D0000 		.4byte	0xdae
 3322 0da7 25       		.uleb128 0x25
 3323 0da8 01       		.byte	0x1
 3324 0da9 50       		.byte	0x50
 3325 0daa 02       		.byte	0x2
 3326 0dab 74       		.byte	0x74
 3327 0dac 00       		.sleb128 0
 3328 0dad 00       		.byte	0
 3329 0dae 2E       		.uleb128 0x2e
 3330 0daf C6020000 		.4byte	.LVL83
 3331 0db3 BE0D0000 		.4byte	0xdbe
 3332 0db7 25       		.uleb128 0x25
 3333 0db8 01       		.byte	0x1
 3334 0db9 50       		.byte	0x50
 3335 0dba 02       		.byte	0x2
 3336 0dbb 74       		.byte	0x74
 3337 0dbc 00       		.sleb128 0
 3338 0dbd 00       		.byte	0
 3339 0dbe 24       		.uleb128 0x24
 3340 0dbf E0020000 		.4byte	.LVL84
 3341 0dc3 CD0F0000 		.4byte	0xfcd
 3342 0dc7 E50D0000 		.4byte	0xde5
 3343 0dcb 25       		.uleb128 0x25
 3344 0dcc 01       		.byte	0x1
 3345 0dcd 50       		.byte	0x50
 3346 0dce 02       		.byte	0x2
 3347 0dcf 74       		.byte	0x74
 3348 0dd0 00       		.sleb128 0
 3349 0dd1 25       		.uleb128 0x25
 3350 0dd2 01       		.byte	0x1
ARM GAS  /tmp/ccx8nc1r.s 			page 85


 3351 0dd3 51       		.byte	0x51
 3352 0dd4 02       		.byte	0x2
 3353 0dd5 76       		.byte	0x76
 3354 0dd6 00       		.sleb128 0
 3355 0dd7 25       		.uleb128 0x25
 3356 0dd8 01       		.byte	0x1
 3357 0dd9 53       		.byte	0x53
 3358 0dda 02       		.byte	0x2
 3359 0ddb 76       		.byte	0x76
 3360 0ddc 00       		.sleb128 0
 3361 0ddd 25       		.uleb128 0x25
 3362 0dde 02       		.byte	0x2
 3363 0ddf 7D       		.byte	0x7d
 3364 0de0 00       		.sleb128 0
 3365 0de1 02       		.byte	0x2
 3366 0de2 76       		.byte	0x76
 3367 0de3 00       		.sleb128 0
 3368 0de4 00       		.byte	0
 3369 0de5 24       		.uleb128 0x24
 3370 0de6 0A030000 		.4byte	.LVL87
 3371 0dea 11090000 		.4byte	0x911
 3372 0dee F90D0000 		.4byte	0xdf9
 3373 0df2 25       		.uleb128 0x25
 3374 0df3 01       		.byte	0x1
 3375 0df4 50       		.byte	0x50
 3376 0df5 02       		.byte	0x2
 3377 0df6 74       		.byte	0x74
 3378 0df7 00       		.sleb128 0
 3379 0df8 00       		.byte	0
 3380 0df9 2F       		.uleb128 0x2f
 3381 0dfa 1A030000 		.4byte	.LVL90
 3382 0dfe 64050000 		.4byte	0x564
 3383 0e02 25       		.uleb128 0x25
 3384 0e03 01       		.byte	0x1
 3385 0e04 50       		.byte	0x50
 3386 0e05 02       		.byte	0x2
 3387 0e06 74       		.byte	0x74
 3388 0e07 00       		.sleb128 0
 3389 0e08 00       		.byte	0
 3390 0e09 00       		.byte	0
 3391 0e0a 00       		.byte	0
 3392 0e0b 00       		.byte	0
 3393 0e0c 26       		.uleb128 0x26
 3394 0e0d 0C000000 		.4byte	.LASF114
 3395 0e11 01       		.byte	0x1
 3396 0e12 E201     		.2byte	0x1e2
 3397 0e14 0D       		.byte	0xd
 3398 0e15 01       		.byte	0x1
 3399 0e16 01       		.byte	0x1
 3400 0e17 500E0000 		.4byte	0xe50
 3401 0e1b 31       		.uleb128 0x31
 3402 0e1c D1050000 		.4byte	.LASF92
 3403 0e20 01       		.byte	0x1
 3404 0e21 E201     		.2byte	0x1e2
 3405 0e23 36       		.byte	0x36
 3406 0e24 4B010000 		.4byte	0x14b
 3407 0e28 31       		.uleb128 0x31
ARM GAS  /tmp/ccx8nc1r.s 			page 86


 3408 0e29 96000000 		.4byte	.LASF100
 3409 0e2d 01       		.byte	0x1
 3410 0e2e E201     		.2byte	0x1e2
 3411 0e30 58       		.byte	0x58
 3412 0e31 4B010000 		.4byte	0x14b
 3413 0e35 27       		.uleb128 0x27
 3414 0e36 26070000 		.4byte	.LASF95
 3415 0e3a 01       		.byte	0x1
 3416 0e3b E401     		.2byte	0x1e4
 3417 0e3d 0C       		.byte	0xc
 3418 0e3e 18010000 		.4byte	0x118
 3419 0e42 27       		.uleb128 0x27
 3420 0e43 3E070000 		.4byte	.LASF54
 3421 0e47 01       		.byte	0x1
 3422 0e48 E501     		.2byte	0x1e5
 3423 0e4a 11       		.byte	0x11
 3424 0e4b 80030000 		.4byte	0x380
 3425 0e4f 00       		.byte	0
 3426 0e50 1C       		.uleb128 0x1c
 3427 0e51 01       		.byte	0x1
 3428 0e52 AA070000 		.4byte	.LASF115
 3429 0e56 01       		.byte	0x1
 3430 0e57 D901     		.2byte	0x1d9
 3431 0e59 0E       		.byte	0xe
 3432 0e5a 01       		.byte	0x1
 3433 0e5b B5000000 		.4byte	0xb5
 3434 0e5f 5A030000 		.4byte	.LFB13
 3435 0e63 5E030000 		.4byte	.LFE13
 3436 0e67 02       		.byte	0x2
 3437 0e68 7D       		.byte	0x7d
 3438 0e69 00       		.sleb128 0
 3439 0e6a 01       		.byte	0x1
 3440 0e6b 9A0E0000 		.4byte	0xe9a
 3441 0e6f 1D       		.uleb128 0x1d
 3442 0e70 E0030000 		.4byte	.LASF83
 3443 0e74 01       		.byte	0x1
 3444 0e75 D901     		.2byte	0x1d9
 3445 0e77 2C       		.byte	0x2c
 3446 0e78 8A020000 		.4byte	0x28a
 3447 0e7c EB070000 		.4byte	.LLST58
 3448 0e80 E7070000 		.4byte	.LVUS58
 3449 0e84 1F       		.uleb128 0x1f
 3450 0e85 3E070000 		.4byte	.LASF54
 3451 0e89 01       		.byte	0x1
 3452 0e8a DB01     		.2byte	0x1db
 3453 0e8c 0A       		.byte	0xa
 3454 0e8d 7A030000 		.4byte	0x37a
 3455 0e91 16080000 		.4byte	.LLST59
 3456 0e95 12080000 		.4byte	.LVUS59
 3457 0e99 00       		.byte	0
 3458 0e9a 1C       		.uleb128 0x1c
 3459 0e9b 01       		.byte	0x1
 3460 0e9c 49040000 		.4byte	.LASF116
 3461 0ea0 01       		.byte	0x1
 3462 0ea1 CE01     		.2byte	0x1ce
 3463 0ea3 0C       		.byte	0xc
 3464 0ea4 01       		.byte	0x1
ARM GAS  /tmp/ccx8nc1r.s 			page 87


 3465 0ea5 3F010000 		.4byte	0x13f
 3466 0ea9 56030000 		.4byte	.LFB12
 3467 0ead 5A030000 		.4byte	.LFE12
 3468 0eb1 02       		.byte	0x2
 3469 0eb2 7D       		.byte	0x7d
 3470 0eb3 00       		.sleb128 0
 3471 0eb4 01       		.byte	0x1
 3472 0eb5 F90E0000 		.4byte	0xef9
 3473 0eb9 1D       		.uleb128 0x1d
 3474 0eba E0030000 		.4byte	.LASF83
 3475 0ebe 01       		.byte	0x1
 3476 0ebf CE01     		.2byte	0x1ce
 3477 0ec1 2F       		.byte	0x2f
 3478 0ec2 8A020000 		.4byte	0x28a
 3479 0ec6 41080000 		.4byte	.LLST55
 3480 0eca 3D080000 		.4byte	.LVUS55
 3481 0ece 1F       		.uleb128 0x1f
 3482 0ecf 3E070000 		.4byte	.LASF54
 3483 0ed3 01       		.byte	0x1
 3484 0ed4 D001     		.2byte	0x1d0
 3485 0ed6 0B       		.byte	0xb
 3486 0ed7 7A030000 		.4byte	0x37a
 3487 0edb 6C080000 		.4byte	.LLST56
 3488 0edf 68080000 		.4byte	.LVUS56
 3489 0ee3 1F       		.uleb128 0x1f
 3490 0ee4 F7060000 		.4byte	.LASF91
 3491 0ee8 01       		.byte	0x1
 3492 0ee9 D101     		.2byte	0x1d1
 3493 0eeb 0C       		.byte	0xc
 3494 0eec 3F010000 		.4byte	0x13f
 3495 0ef0 97080000 		.4byte	.LLST57
 3496 0ef4 93080000 		.4byte	.LVUS57
 3497 0ef8 00       		.byte	0
 3498 0ef9 1E       		.uleb128 0x1e
 3499 0efa 01       		.byte	0x1
 3500 0efb E9070000 		.4byte	.LASF117
 3501 0eff 01       		.byte	0x1
 3502 0f00 BA01     		.2byte	0x1ba
 3503 0f02 06       		.byte	0x6
 3504 0f03 01       		.byte	0x1
 3505 0f04 30030000 		.4byte	.LFB11
 3506 0f08 56030000 		.4byte	.LFE11
 3507 0f0c B6080000 		.4byte	.LLST51
 3508 0f10 01       		.byte	0x1
 3509 0f11 680F0000 		.4byte	0xf68
 3510 0f15 1D       		.uleb128 0x1d
 3511 0f16 E0030000 		.4byte	.LASF83
 3512 0f1a 01       		.byte	0x1
 3513 0f1b BA01     		.2byte	0x1ba
 3514 0f1d 29       		.byte	0x29
 3515 0f1e 8A020000 		.4byte	0x28a
 3516 0f22 F6080000 		.4byte	.LLST52
 3517 0f26 EE080000 		.4byte	.LVUS52
 3518 0f2a 1D       		.uleb128 0x1d
 3519 0f2b AD060000 		.4byte	.LASF118
 3520 0f2f 01       		.byte	0x1
 3521 0f30 BA01     		.2byte	0x1ba
ARM GAS  /tmp/ccx8nc1r.s 			page 88


 3522 0f32 43       		.byte	0x43
 3523 0f33 3A010000 		.4byte	0x13a
 3524 0f37 3B090000 		.4byte	.LLST53
 3525 0f3b 33090000 		.4byte	.LVUS53
 3526 0f3f 1F       		.uleb128 0x1f
 3527 0f40 3E070000 		.4byte	.LASF54
 3528 0f44 01       		.byte	0x1
 3529 0f45 BC01     		.2byte	0x1bc
 3530 0f47 0B       		.byte	0xb
 3531 0f48 7A030000 		.4byte	0x37a
 3532 0f4c 80090000 		.4byte	.LLST54
 3533 0f50 78090000 		.4byte	.LVUS54
 3534 0f54 20       		.uleb128 0x20
 3535 0f55 3A030000 		.4byte	.LVL95
 3536 0f59 35050000 		.4byte	0x535
 3537 0f5d 21       		.uleb128 0x21
 3538 0f5e 50030000 		.4byte	.LVL97
 3539 0f62 01       		.byte	0x1
 3540 0f63 F0040000 		.4byte	0x4f0
 3541 0f67 00       		.byte	0
 3542 0f68 1C       		.uleb128 0x1c
 3543 0f69 01       		.byte	0x1
 3544 0f6a 2E070000 		.4byte	.LASF119
 3545 0f6e 01       		.byte	0x1
 3546 0f6f B101     		.2byte	0x1b1
 3547 0f71 0C       		.byte	0xc
 3548 0f72 01       		.byte	0x1
 3549 0f73 3F010000 		.4byte	0x13f
 3550 0f77 2C030000 		.4byte	.LFB10
 3551 0f7b 30030000 		.4byte	.LFE10
 3552 0f7f 02       		.byte	0x2
 3553 0f80 7D       		.byte	0x7d
 3554 0f81 00       		.sleb128 0
 3555 0f82 01       		.byte	0x1
 3556 0f83 B20F0000 		.4byte	0xfb2
 3557 0f87 1D       		.uleb128 0x1d
 3558 0f88 E0030000 		.4byte	.LASF83
 3559 0f8c 01       		.byte	0x1
 3560 0f8d B101     		.2byte	0x1b1
 3561 0f8f 2B       		.byte	0x2b
 3562 0f90 8A020000 		.4byte	0x28a
 3563 0f94 C1090000 		.4byte	.LLST49
 3564 0f98 BD090000 		.4byte	.LVUS49
 3565 0f9c 1F       		.uleb128 0x1f
 3566 0f9d 3E070000 		.4byte	.LASF54
 3567 0fa1 01       		.byte	0x1
 3568 0fa2 B301     		.2byte	0x1b3
 3569 0fa4 0A       		.byte	0xa
 3570 0fa5 7A030000 		.4byte	0x37a
 3571 0fa9 EC090000 		.4byte	.LLST50
 3572 0fad E8090000 		.4byte	.LVUS50
 3573 0fb1 00       		.byte	0
 3574 0fb2 37       		.uleb128 0x37
 3575 0fb3 01       		.byte	0x1
 3576 0fb4 3F080000 		.4byte	.LASF134
 3577 0fb8 01       		.byte	0x1
 3578 0fb9 A801     		.2byte	0x1a8
ARM GAS  /tmp/ccx8nc1r.s 			page 89


 3579 0fbb 0E       		.byte	0xe
 3580 0fbc 01       		.byte	0x1
 3581 0fbd 5A020000 		.4byte	0x25a
 3582 0fc1 20030000 		.4byte	.LFB9
 3583 0fc5 2C030000 		.4byte	.LFE9
 3584 0fc9 02       		.byte	0x2
 3585 0fca 7D       		.byte	0x7d
 3586 0fcb 00       		.sleb128 0
 3587 0fcc 01       		.byte	0x1
 3588 0fcd 22       		.uleb128 0x22
 3589 0fce 01       		.byte	0x1
 3590 0fcf 92050000 		.4byte	.LASF120
 3591 0fd3 01       		.byte	0x1
 3592 0fd4 7D01     		.2byte	0x17d
 3593 0fd6 0C       		.byte	0xc
 3594 0fd7 01       		.byte	0x1
 3595 0fd8 18010000 		.4byte	0x118
 3596 0fdc EE000000 		.4byte	.LFB8
 3597 0fe0 30010000 		.4byte	.LFE8
 3598 0fe4 130A0000 		.4byte	.LLST21
 3599 0fe8 01       		.byte	0x1
 3600 0fe9 B3100000 		.4byte	0x10b3
 3601 0fed 1D       		.uleb128 0x1d
 3602 0fee E0030000 		.4byte	.LASF83
 3603 0ff2 01       		.byte	0x1
 3604 0ff3 7D01     		.2byte	0x17d
 3605 0ff5 30       		.byte	0x30
 3606 0ff6 8A020000 		.4byte	0x28a
 3607 0ffa 4F0A0000 		.4byte	.LLST22
 3608 0ffe 4B0A0000 		.4byte	.LVUS22
 3609 1002 1D       		.uleb128 0x1d
 3610 1003 A8010000 		.4byte	.LASF121
 3611 1007 01       		.byte	0x1
 3612 1008 7D01     		.2byte	0x17d
 3613 100a 49       		.byte	0x49
 3614 100b 24010000 		.4byte	0x124
 3615 100f 770A0000 		.4byte	.LLST23
 3616 1013 6D0A0000 		.4byte	.LVUS23
 3617 1017 1D       		.uleb128 0x1d
 3618 1018 C4000000 		.4byte	.LASF122
 3619 101c 01       		.byte	0x1
 3620 101d 7D01     		.2byte	0x17d
 3621 101f 66       		.byte	0x66
 3622 1020 4B010000 		.4byte	0x14b
 3623 1024 CD0A0000 		.4byte	.LLST24
 3624 1028 C90A0000 		.4byte	.LVUS24
 3625 102c 1D       		.uleb128 0x1d
 3626 102d F8000000 		.4byte	.LASF123
 3627 1031 01       		.byte	0x1
 3628 1032 7D01     		.2byte	0x17d
 3629 1034 89       		.byte	0x89
 3630 1035 83040000 		.4byte	0x483
 3631 1039 F30A0000 		.4byte	.LLST25
 3632 103d EB0A0000 		.4byte	.LVUS25
 3633 1041 1D       		.uleb128 0x1d
 3634 1042 B9070000 		.4byte	.LASF124
 3635 1046 01       		.byte	0x1
ARM GAS  /tmp/ccx8nc1r.s 			page 90


 3636 1047 7D01     		.2byte	0x17d
 3637 1049 B5       		.byte	0xb5
 3638 104a 4B010000 		.4byte	0x14b
 3639 104e 3D0B0000 		.4byte	.LLST26
 3640 1052 390B0000 		.4byte	.LVUS26
 3641 1056 1F       		.uleb128 0x1f
 3642 1057 F7060000 		.4byte	.LASF91
 3643 105b 01       		.byte	0x1
 3644 105c 7F01     		.2byte	0x17f
 3645 105e 0C       		.byte	0xc
 3646 105f 18010000 		.4byte	0x118
 3647 1063 630B0000 		.4byte	.LLST27
 3648 1067 5D0B0000 		.4byte	.LVUS27
 3649 106b 29       		.uleb128 0x29
 3650 106c 82060000 		.4byte	.LASF98
 3651 1070 01       		.byte	0x1
 3652 1071 8001     		.2byte	0x180
 3653 1073 15       		.byte	0x15
 3654 1074 D1030000 		.4byte	0x3d1
 3655 1078 02       		.byte	0x2
 3656 1079 91       		.byte	0x91
 3657 107a 64       		.sleb128 -28
 3658 107b 20       		.uleb128 0x20
 3659 107c 0A010000 		.4byte	.LVL31
 3660 1080 B1040000 		.4byte	0x4b1
 3661 1084 24       		.uleb128 0x24
 3662 1085 1C010000 		.4byte	.LVL32
 3663 1089 88040000 		.4byte	0x488
 3664 108d 9D100000 		.4byte	0x109d
 3665 1091 25       		.uleb128 0x25
 3666 1092 01       		.byte	0x1
 3667 1093 51       		.byte	0x51
 3668 1094 02       		.byte	0x2
 3669 1095 91       		.byte	0x91
 3670 1096 64       		.sleb128 -28
 3671 1097 25       		.uleb128 0x25
 3672 1098 01       		.byte	0x1
 3673 1099 53       		.byte	0x53
 3674 109a 01       		.byte	0x1
 3675 109b 30       		.byte	0x30
 3676 109c 00       		.byte	0
 3677 109d 2F       		.uleb128 0x2f
 3678 109e 28010000 		.4byte	.LVL35
 3679 10a2 54040000 		.4byte	0x454
 3680 10a6 25       		.uleb128 0x25
 3681 10a7 01       		.byte	0x1
 3682 10a8 51       		.byte	0x51
 3683 10a9 02       		.byte	0x2
 3684 10aa 91       		.byte	0x91
 3685 10ab 64       		.sleb128 -28
 3686 10ac 25       		.uleb128 0x25
 3687 10ad 01       		.byte	0x1
 3688 10ae 53       		.byte	0x53
 3689 10af 01       		.byte	0x1
 3690 10b0 30       		.byte	0x30
 3691 10b1 00       		.byte	0
 3692 10b2 00       		.byte	0
ARM GAS  /tmp/ccx8nc1r.s 			page 91


 3693 10b3 26       		.uleb128 0x26
 3694 10b4 A3030000 		.4byte	.LASF125
 3695 10b8 01       		.byte	0x1
 3696 10b9 5D01     		.2byte	0x15d
 3697 10bb 0D       		.byte	0xd
 3698 10bc 01       		.byte	0x1
 3699 10bd 01       		.byte	0x1
 3700 10be 11110000 		.4byte	0x1111
 3701 10c2 31       		.uleb128 0x31
 3702 10c3 27010000 		.4byte	.LASF42
 3703 10c7 01       		.byte	0x1
 3704 10c8 5D01     		.2byte	0x15d
 3705 10ca 37       		.byte	0x37
 3706 10cb BB000000 		.4byte	0xbb
 3707 10cf 31       		.uleb128 0x31
 3708 10d0 40000000 		.4byte	.LASF44
 3709 10d4 01       		.byte	0x1
 3710 10d5 5E01     		.2byte	0x15e
 3711 10d7 1B       		.byte	0x1b
 3712 10d8 4B010000 		.4byte	0x14b
 3713 10dc 31       		.uleb128 0x31
 3714 10dd AD060000 		.4byte	.LASF118
 3715 10e1 01       		.byte	0x1
 3716 10e2 5F01     		.2byte	0x15f
 3717 10e4 1C       		.byte	0x1c
 3718 10e5 3A010000 		.4byte	0x13a
 3719 10e9 31       		.uleb128 0x31
 3720 10ea A3060000 		.4byte	.LASF45
 3721 10ee 01       		.byte	0x1
 3722 10ef 6001     		.2byte	0x160
 3723 10f1 17       		.byte	0x17
 3724 10f2 A4000000 		.4byte	0xa4
 3725 10f6 31       		.uleb128 0x31
 3726 10f7 66000000 		.4byte	.LASF46
 3727 10fb 01       		.byte	0x1
 3728 10fc 6101     		.2byte	0x161
 3729 10fe 22       		.byte	0x22
 3730 10ff 18030000 		.4byte	0x318
 3731 1103 31       		.uleb128 0x31
 3732 1104 A8020000 		.4byte	.LASF126
 3733 1108 01       		.byte	0x1
 3734 1109 6201     		.2byte	0x162
 3735 110b 13       		.byte	0x13
 3736 110c 7A030000 		.4byte	0x37a
 3737 1110 00       		.byte	0
 3738 1111 22       		.uleb128 0x22
 3739 1112 01       		.byte	0x1
 3740 1113 6B040000 		.4byte	.LASF127
 3741 1117 01       		.byte	0x1
 3742 1118 1A01     		.2byte	0x11a
 3743 111a 10       		.byte	0x10
 3744 111b 01       		.byte	0x1
 3745 111c 8A020000 		.4byte	0x28a
 3746 1120 A8000000 		.4byte	.LFB6
 3747 1124 EE000000 		.4byte	.LFE6
 3748 1128 8E0B0000 		.4byte	.LLST9
 3749 112c 01       		.byte	0x1
ARM GAS  /tmp/ccx8nc1r.s 			page 92


 3750 112d 3D120000 		.4byte	0x123d
 3751 1131 1D       		.uleb128 0x1d
 3752 1132 27010000 		.4byte	.LASF42
 3753 1136 01       		.byte	0x1
 3754 1137 1A01     		.2byte	0x11a
 3755 1139 31       		.byte	0x31
 3756 113a BB000000 		.4byte	0xbb
 3757 113e B20B0000 		.4byte	.LLST10
 3758 1142 AE0B0000 		.4byte	.LVUS10
 3759 1146 1D       		.uleb128 0x1d
 3760 1147 40000000 		.4byte	.LASF44
 3761 114b 01       		.byte	0x1
 3762 114c 1B01     		.2byte	0x11b
 3763 114e 1A       		.byte	0x1a
 3764 114f 4B010000 		.4byte	0x14b
 3765 1153 D40B0000 		.4byte	.LLST11
 3766 1157 D00B0000 		.4byte	.LVUS11
 3767 115b 1D       		.uleb128 0x1d
 3768 115c AD060000 		.4byte	.LASF118
 3769 1160 01       		.byte	0x1
 3770 1161 1C01     		.2byte	0x11c
 3771 1163 1B       		.byte	0x1b
 3772 1164 3A010000 		.4byte	0x13a
 3773 1168 F60B0000 		.4byte	.LLST12
 3774 116c F20B0000 		.4byte	.LVUS12
 3775 1170 1D       		.uleb128 0x1d
 3776 1171 A3060000 		.4byte	.LASF45
 3777 1175 01       		.byte	0x1
 3778 1176 1D01     		.2byte	0x11d
 3779 1178 16       		.byte	0x16
 3780 1179 A4000000 		.4byte	0xa4
 3781 117d 180C0000 		.4byte	.LLST13
 3782 1181 140C0000 		.4byte	.LVUS13
 3783 1185 1B       		.uleb128 0x1b
 3784 1186 66000000 		.4byte	.LASF46
 3785 118a 01       		.byte	0x1
 3786 118b 1E01     		.2byte	0x11e
 3787 118d 21       		.byte	0x21
 3788 118e 18030000 		.4byte	0x318
 3789 1192 02       		.byte	0x2
 3790 1193 91       		.byte	0x91
 3791 1194 00       		.sleb128 0
 3792 1195 1F       		.uleb128 0x1f
 3793 1196 A8020000 		.4byte	.LASF126
 3794 119a 01       		.byte	0x1
 3795 119b 2001     		.2byte	0x120
 3796 119d 0B       		.byte	0xb
 3797 119e 7A030000 		.4byte	0x37a
 3798 11a2 3A0C0000 		.4byte	.LLST14
 3799 11a6 360C0000 		.4byte	.LVUS14
 3800 11aa 38       		.uleb128 0x38
 3801 11ab B3100000 		.4byte	0x10b3
 3802 11af C4000000 		.4byte	.LBI4
 3803 11b3 01       		.byte	.LVU73
 3804 11b4 C4000000 		.4byte	.LBB4
 3805 11b8 E8000000 		.4byte	.LBE4
 3806 11bc 01       		.byte	0x1
ARM GAS  /tmp/ccx8nc1r.s 			page 93


 3807 11bd 2A01     		.2byte	0x12a
 3808 11bf 04       		.byte	0x4
 3809 11c0 2C120000 		.4byte	0x122c
 3810 11c4 33       		.uleb128 0x33
 3811 11c5 03110000 		.4byte	0x1103
 3812 11c9 5C0C0000 		.4byte	.LLST15
 3813 11cd 580C0000 		.4byte	.LVUS15
 3814 11d1 33       		.uleb128 0x33
 3815 11d2 F6100000 		.4byte	0x10f6
 3816 11d6 7C0C0000 		.4byte	.LLST16
 3817 11da 7A0C0000 		.4byte	.LVUS16
 3818 11de 33       		.uleb128 0x33
 3819 11df E9100000 		.4byte	0x10e9
 3820 11e3 920C0000 		.4byte	.LLST17
 3821 11e7 900C0000 		.4byte	.LVUS17
 3822 11eb 33       		.uleb128 0x33
 3823 11ec DC100000 		.4byte	0x10dc
 3824 11f0 A70C0000 		.4byte	.LLST18
 3825 11f4 A50C0000 		.4byte	.LVUS18
 3826 11f8 33       		.uleb128 0x33
 3827 11f9 CF100000 		.4byte	0x10cf
 3828 11fd BC0C0000 		.4byte	.LLST19
 3829 1201 BA0C0000 		.4byte	.LVUS19
 3830 1205 33       		.uleb128 0x33
 3831 1206 C2100000 		.4byte	0x10c2
 3832 120a D10C0000 		.4byte	.LLST20
 3833 120e CF0C0000 		.4byte	.LVUS20
 3834 1212 20       		.uleb128 0x20
 3835 1213 C8000000 		.4byte	.LVL25
 3836 1217 FA070000 		.4byte	0x7fa
 3837 121b 2F       		.uleb128 0x2f
 3838 121c DA000000 		.4byte	.LVL26
 3839 1220 C1040000 		.4byte	0x4c1
 3840 1224 25       		.uleb128 0x25
 3841 1225 01       		.byte	0x1
 3842 1226 50       		.byte	0x50
 3843 1227 02       		.byte	0x2
 3844 1228 74       		.byte	0x74
 3845 1229 04       		.sleb128 4
 3846 122a 00       		.byte	0
 3847 122b 00       		.byte	0
 3848 122c 2F       		.uleb128 0x2f
 3849 122d BA000000 		.4byte	.LVL23
 3850 1231 D7040000 		.4byte	0x4d7
 3851 1235 25       		.uleb128 0x25
 3852 1236 01       		.byte	0x1
 3853 1237 50       		.byte	0x50
 3854 1238 02       		.byte	0x2
 3855 1239 08       		.byte	0x8
 3856 123a 2C       		.byte	0x2c
 3857 123b 00       		.byte	0
 3858 123c 00       		.byte	0
 3859 123d 39       		.uleb128 0x39
 3860 123e 01       		.byte	0x1
 3861 123f B3010000 		.4byte	.LASF128
 3862 1243 01       		.byte	0x1
 3863 1244 E3       		.byte	0xe3
ARM GAS  /tmp/ccx8nc1r.s 			page 94


 3864 1245 0C       		.byte	0xc
 3865 1246 01       		.byte	0x1
 3866 1247 18010000 		.4byte	0x118
 3867 124b 74000000 		.4byte	.LFB5
 3868 124f A8000000 		.4byte	.LFE5
 3869 1253 E40C0000 		.4byte	.LLST7
 3870 1257 01       		.byte	0x1
 3871 1258 3A       		.uleb128 0x3a
 3872 1259 F7060000 		.4byte	.LASF91
 3873 125d 01       		.byte	0x1
 3874 125e E5       		.byte	0xe5
 3875 125f 0C       		.byte	0xc
 3876 1260 18010000 		.4byte	0x118
 3877 1264 120D0000 		.4byte	.LLST8
 3878 1268 100D0000 		.4byte	.LVUS8
 3879 126c 20       		.uleb128 0x20
 3880 126d 7A000000 		.4byte	.LVL19
 3881 1271 FA070000 		.4byte	0x7fa
 3882 1275 2F       		.uleb128 0x2f
 3883 1276 94000000 		.4byte	.LVL20
 3884 127a FA050000 		.4byte	0x5fa
 3885 127e 25       		.uleb128 0x25
 3886 127f 01       		.byte	0x1
 3887 1280 50       		.byte	0x50
 3888 1281 05       		.byte	0x5
 3889 1282 03       		.byte	0x3
 3890 1283 00000000 		.4byte	prvTimerTask
 3891 1287 25       		.uleb128 0x25
 3892 1288 01       		.byte	0x1
 3893 1289 51       		.byte	0x51
 3894 128a 05       		.byte	0x5
 3895 128b 03       		.byte	0x3
 3896 128c 00000000 		.4byte	.LC0
 3897 1290 25       		.uleb128 0x25
 3898 1291 01       		.byte	0x1
 3899 1292 52       		.byte	0x52
 3900 1293 02       		.byte	0x2
 3901 1294 08       		.byte	0x8
 3902 1295 F0       		.byte	0xf0
 3903 1296 25       		.uleb128 0x25
 3904 1297 01       		.byte	0x1
 3905 1298 53       		.byte	0x53
 3906 1299 01       		.byte	0x1
 3907 129a 30       		.byte	0x30
 3908 129b 25       		.uleb128 0x25
 3909 129c 02       		.byte	0x2
 3910 129d 7D       		.byte	0x7d
 3911 129e 00       		.sleb128 0
 3912 129f 01       		.byte	0x1
 3913 12a0 31       		.byte	0x31
 3914 12a1 25       		.uleb128 0x25
 3915 12a2 02       		.byte	0x2
 3916 12a3 7D       		.byte	0x7d
 3917 12a4 04       		.sleb128 4
 3918 12a5 05       		.byte	0x5
 3919 12a6 03       		.byte	0x3
 3920 12a7 34000000 		.4byte	.LANCHOR0+52
ARM GAS  /tmp/ccx8nc1r.s 			page 95


 3921 12ab 00       		.byte	0
 3922 12ac 00       		.byte	0
 3923 12ad 00       		.byte	0
 3924              		.section	.debug_abbrev,"",%progbits
 3925              	.Ldebug_abbrev0:
 3926 0000 01       		.uleb128 0x1
 3927 0001 11       		.uleb128 0x11
 3928 0002 01       		.byte	0x1
 3929 0003 25       		.uleb128 0x25
 3930 0004 0E       		.uleb128 0xe
 3931 0005 13       		.uleb128 0x13
 3932 0006 0B       		.uleb128 0xb
 3933 0007 03       		.uleb128 0x3
 3934 0008 0E       		.uleb128 0xe
 3935 0009 1B       		.uleb128 0x1b
 3936 000a 0E       		.uleb128 0xe
 3937 000b 11       		.uleb128 0x11
 3938 000c 01       		.uleb128 0x1
 3939 000d 12       		.uleb128 0x12
 3940 000e 01       		.uleb128 0x1
 3941 000f 10       		.uleb128 0x10
 3942 0010 06       		.uleb128 0x6
 3943 0011 00       		.byte	0
 3944 0012 00       		.byte	0
 3945 0013 02       		.uleb128 0x2
 3946 0014 24       		.uleb128 0x24
 3947 0015 00       		.byte	0
 3948 0016 0B       		.uleb128 0xb
 3949 0017 0B       		.uleb128 0xb
 3950 0018 3E       		.uleb128 0x3e
 3951 0019 0B       		.uleb128 0xb
 3952 001a 03       		.uleb128 0x3
 3953 001b 0E       		.uleb128 0xe
 3954 001c 00       		.byte	0
 3955 001d 00       		.byte	0
 3956 001e 03       		.uleb128 0x3
 3957 001f 16       		.uleb128 0x16
 3958 0020 00       		.byte	0
 3959 0021 03       		.uleb128 0x3
 3960 0022 0E       		.uleb128 0xe
 3961 0023 3A       		.uleb128 0x3a
 3962 0024 0B       		.uleb128 0xb
 3963 0025 3B       		.uleb128 0x3b
 3964 0026 0B       		.uleb128 0xb
 3965 0027 39       		.uleb128 0x39
 3966 0028 0B       		.uleb128 0xb
 3967 0029 49       		.uleb128 0x49
 3968 002a 13       		.uleb128 0x13
 3969 002b 00       		.byte	0
 3970 002c 00       		.byte	0
 3971 002d 04       		.uleb128 0x4
 3972 002e 24       		.uleb128 0x24
 3973 002f 00       		.byte	0
 3974 0030 0B       		.uleb128 0xb
 3975 0031 0B       		.uleb128 0xb
 3976 0032 3E       		.uleb128 0x3e
 3977 0033 0B       		.uleb128 0xb
ARM GAS  /tmp/ccx8nc1r.s 			page 96


 3978 0034 03       		.uleb128 0x3
 3979 0035 08       		.uleb128 0x8
 3980 0036 00       		.byte	0
 3981 0037 00       		.byte	0
 3982 0038 05       		.uleb128 0x5
 3983 0039 0F       		.uleb128 0xf
 3984 003a 00       		.byte	0
 3985 003b 0B       		.uleb128 0xb
 3986 003c 0B       		.uleb128 0xb
 3987 003d 00       		.byte	0
 3988 003e 00       		.byte	0
 3989 003f 06       		.uleb128 0x6
 3990 0040 26       		.uleb128 0x26
 3991 0041 00       		.byte	0
 3992 0042 49       		.uleb128 0x49
 3993 0043 13       		.uleb128 0x13
 3994 0044 00       		.byte	0
 3995 0045 00       		.byte	0
 3996 0046 07       		.uleb128 0x7
 3997 0047 0F       		.uleb128 0xf
 3998 0048 00       		.byte	0
 3999 0049 0B       		.uleb128 0xb
 4000 004a 0B       		.uleb128 0xb
 4001 004b 49       		.uleb128 0x49
 4002 004c 13       		.uleb128 0x13
 4003 004d 00       		.byte	0
 4004 004e 00       		.byte	0
 4005 004f 08       		.uleb128 0x8
 4006 0050 26       		.uleb128 0x26
 4007 0051 00       		.byte	0
 4008 0052 00       		.byte	0
 4009 0053 00       		.byte	0
 4010 0054 09       		.uleb128 0x9
 4011 0055 15       		.uleb128 0x15
 4012 0056 01       		.byte	0x1
 4013 0057 27       		.uleb128 0x27
 4014 0058 0C       		.uleb128 0xc
 4015 0059 01       		.uleb128 0x1
 4016 005a 13       		.uleb128 0x13
 4017 005b 00       		.byte	0
 4018 005c 00       		.byte	0
 4019 005d 0A       		.uleb128 0xa
 4020 005e 05       		.uleb128 0x5
 4021 005f 00       		.byte	0
 4022 0060 49       		.uleb128 0x49
 4023 0061 13       		.uleb128 0x13
 4024 0062 00       		.byte	0
 4025 0063 00       		.byte	0
 4026 0064 0B       		.uleb128 0xb
 4027 0065 35       		.uleb128 0x35
 4028 0066 00       		.byte	0
 4029 0067 49       		.uleb128 0x49
 4030 0068 13       		.uleb128 0x13
 4031 0069 00       		.byte	0
 4032 006a 00       		.byte	0
 4033 006b 0C       		.uleb128 0xc
 4034 006c 13       		.uleb128 0x13
ARM GAS  /tmp/ccx8nc1r.s 			page 97


 4035 006d 01       		.byte	0x1
 4036 006e 03       		.uleb128 0x3
 4037 006f 0E       		.uleb128 0xe
 4038 0070 0B       		.uleb128 0xb
 4039 0071 0B       		.uleb128 0xb
 4040 0072 3A       		.uleb128 0x3a
 4041 0073 0B       		.uleb128 0xb
 4042 0074 3B       		.uleb128 0x3b
 4043 0075 0B       		.uleb128 0xb
 4044 0076 39       		.uleb128 0x39
 4045 0077 0B       		.uleb128 0xb
 4046 0078 01       		.uleb128 0x1
 4047 0079 13       		.uleb128 0x13
 4048 007a 00       		.byte	0
 4049 007b 00       		.byte	0
 4050 007c 0D       		.uleb128 0xd
 4051 007d 0D       		.uleb128 0xd
 4052 007e 00       		.byte	0
 4053 007f 03       		.uleb128 0x3
 4054 0080 0E       		.uleb128 0xe
 4055 0081 3A       		.uleb128 0x3a
 4056 0082 0B       		.uleb128 0xb
 4057 0083 3B       		.uleb128 0x3b
 4058 0084 0B       		.uleb128 0xb
 4059 0085 39       		.uleb128 0x39
 4060 0086 0B       		.uleb128 0xb
 4061 0087 49       		.uleb128 0x49
 4062 0088 13       		.uleb128 0x13
 4063 0089 38       		.uleb128 0x38
 4064 008a 0A       		.uleb128 0xa
 4065 008b 00       		.byte	0
 4066 008c 00       		.byte	0
 4067 008d 0E       		.uleb128 0xe
 4068 008e 13       		.uleb128 0x13
 4069 008f 00       		.byte	0
 4070 0090 03       		.uleb128 0x3
 4071 0091 0E       		.uleb128 0xe
 4072 0092 3C       		.uleb128 0x3c
 4073 0093 0C       		.uleb128 0xc
 4074 0094 00       		.byte	0
 4075 0095 00       		.byte	0
 4076 0096 0F       		.uleb128 0xf
 4077 0097 17       		.uleb128 0x17
 4078 0098 01       		.byte	0x1
 4079 0099 0B       		.uleb128 0xb
 4080 009a 0B       		.uleb128 0xb
 4081 009b 3A       		.uleb128 0x3a
 4082 009c 0B       		.uleb128 0xb
 4083 009d 3B       		.uleb128 0x3b
 4084 009e 0B       		.uleb128 0xb
 4085 009f 39       		.uleb128 0x39
 4086 00a0 0B       		.uleb128 0xb
 4087 00a1 01       		.uleb128 0x1
 4088 00a2 13       		.uleb128 0x13
 4089 00a3 00       		.byte	0
 4090 00a4 00       		.byte	0
 4091 00a5 10       		.uleb128 0x10
ARM GAS  /tmp/ccx8nc1r.s 			page 98


 4092 00a6 0D       		.uleb128 0xd
 4093 00a7 00       		.byte	0
 4094 00a8 03       		.uleb128 0x3
 4095 00a9 0E       		.uleb128 0xe
 4096 00aa 3A       		.uleb128 0x3a
 4097 00ab 0B       		.uleb128 0xb
 4098 00ac 3B       		.uleb128 0x3b
 4099 00ad 0B       		.uleb128 0xb
 4100 00ae 39       		.uleb128 0x39
 4101 00af 0B       		.uleb128 0xb
 4102 00b0 49       		.uleb128 0x49
 4103 00b1 13       		.uleb128 0x13
 4104 00b2 00       		.byte	0
 4105 00b3 00       		.byte	0
 4106 00b4 11       		.uleb128 0x11
 4107 00b5 0D       		.uleb128 0xd
 4108 00b6 00       		.byte	0
 4109 00b7 03       		.uleb128 0x3
 4110 00b8 08       		.uleb128 0x8
 4111 00b9 3A       		.uleb128 0x3a
 4112 00ba 0B       		.uleb128 0xb
 4113 00bb 3B       		.uleb128 0x3b
 4114 00bc 0B       		.uleb128 0xb
 4115 00bd 39       		.uleb128 0x39
 4116 00be 0B       		.uleb128 0xb
 4117 00bf 49       		.uleb128 0x49
 4118 00c0 13       		.uleb128 0x13
 4119 00c1 38       		.uleb128 0x38
 4120 00c2 0A       		.uleb128 0xa
 4121 00c3 00       		.byte	0
 4122 00c4 00       		.byte	0
 4123 00c5 12       		.uleb128 0x12
 4124 00c6 34       		.uleb128 0x34
 4125 00c7 00       		.byte	0
 4126 00c8 03       		.uleb128 0x3
 4127 00c9 0E       		.uleb128 0xe
 4128 00ca 3A       		.uleb128 0x3a
 4129 00cb 0B       		.uleb128 0xb
 4130 00cc 3B       		.uleb128 0x3b
 4131 00cd 0B       		.uleb128 0xb
 4132 00ce 39       		.uleb128 0x39
 4133 00cf 0B       		.uleb128 0xb
 4134 00d0 49       		.uleb128 0x49
 4135 00d1 13       		.uleb128 0x13
 4136 00d2 02       		.uleb128 0x2
 4137 00d3 0A       		.uleb128 0xa
 4138 00d4 00       		.byte	0
 4139 00d5 00       		.byte	0
 4140 00d6 13       		.uleb128 0x13
 4141 00d7 2E       		.uleb128 0x2e
 4142 00d8 01       		.byte	0x1
 4143 00d9 3F       		.uleb128 0x3f
 4144 00da 0C       		.uleb128 0xc
 4145 00db 03       		.uleb128 0x3
 4146 00dc 0E       		.uleb128 0xe
 4147 00dd 3A       		.uleb128 0x3a
 4148 00de 0B       		.uleb128 0xb
ARM GAS  /tmp/ccx8nc1r.s 			page 99


 4149 00df 3B       		.uleb128 0x3b
 4150 00e0 05       		.uleb128 0x5
 4151 00e1 39       		.uleb128 0x39
 4152 00e2 0B       		.uleb128 0xb
 4153 00e3 27       		.uleb128 0x27
 4154 00e4 0C       		.uleb128 0xc
 4155 00e5 49       		.uleb128 0x49
 4156 00e6 13       		.uleb128 0x13
 4157 00e7 3C       		.uleb128 0x3c
 4158 00e8 0C       		.uleb128 0xc
 4159 00e9 01       		.uleb128 0x1
 4160 00ea 13       		.uleb128 0x13
 4161 00eb 00       		.byte	0
 4162 00ec 00       		.byte	0
 4163 00ed 14       		.uleb128 0x14
 4164 00ee 2E       		.uleb128 0x2e
 4165 00ef 00       		.byte	0
 4166 00f0 3F       		.uleb128 0x3f
 4167 00f1 0C       		.uleb128 0xc
 4168 00f2 03       		.uleb128 0x3
 4169 00f3 0E       		.uleb128 0xe
 4170 00f4 3A       		.uleb128 0x3a
 4171 00f5 0B       		.uleb128 0xb
 4172 00f6 3B       		.uleb128 0x3b
 4173 00f7 05       		.uleb128 0x5
 4174 00f8 39       		.uleb128 0x39
 4175 00f9 0B       		.uleb128 0xb
 4176 00fa 27       		.uleb128 0x27
 4177 00fb 0C       		.uleb128 0xc
 4178 00fc 49       		.uleb128 0x49
 4179 00fd 13       		.uleb128 0x13
 4180 00fe 3C       		.uleb128 0x3c
 4181 00ff 0C       		.uleb128 0xc
 4182 0100 00       		.byte	0
 4183 0101 00       		.byte	0
 4184 0102 15       		.uleb128 0x15
 4185 0103 2E       		.uleb128 0x2e
 4186 0104 01       		.byte	0x1
 4187 0105 3F       		.uleb128 0x3f
 4188 0106 0C       		.uleb128 0xc
 4189 0107 03       		.uleb128 0x3
 4190 0108 0E       		.uleb128 0xe
 4191 0109 3A       		.uleb128 0x3a
 4192 010a 0B       		.uleb128 0xb
 4193 010b 3B       		.uleb128 0x3b
 4194 010c 05       		.uleb128 0x5
 4195 010d 39       		.uleb128 0x39
 4196 010e 0B       		.uleb128 0xb
 4197 010f 27       		.uleb128 0x27
 4198 0110 0C       		.uleb128 0xc
 4199 0111 3C       		.uleb128 0x3c
 4200 0112 0C       		.uleb128 0xc
 4201 0113 01       		.uleb128 0x1
 4202 0114 13       		.uleb128 0x13
 4203 0115 00       		.byte	0
 4204 0116 00       		.byte	0
 4205 0117 16       		.uleb128 0x16
ARM GAS  /tmp/ccx8nc1r.s 			page 100


 4206 0118 2E       		.uleb128 0x2e
 4207 0119 01       		.byte	0x1
 4208 011a 3F       		.uleb128 0x3f
 4209 011b 0C       		.uleb128 0xc
 4210 011c 03       		.uleb128 0x3
 4211 011d 0E       		.uleb128 0xe
 4212 011e 3A       		.uleb128 0x3a
 4213 011f 0B       		.uleb128 0xb
 4214 0120 3B       		.uleb128 0x3b
 4215 0121 0B       		.uleb128 0xb
 4216 0122 39       		.uleb128 0x39
 4217 0123 0B       		.uleb128 0xb
 4218 0124 27       		.uleb128 0x27
 4219 0125 0C       		.uleb128 0xc
 4220 0126 49       		.uleb128 0x49
 4221 0127 13       		.uleb128 0x13
 4222 0128 3C       		.uleb128 0x3c
 4223 0129 0C       		.uleb128 0xc
 4224 012a 01       		.uleb128 0x1
 4225 012b 13       		.uleb128 0x13
 4226 012c 00       		.byte	0
 4227 012d 00       		.byte	0
 4228 012e 17       		.uleb128 0x17
 4229 012f 2E       		.uleb128 0x2e
 4230 0130 00       		.byte	0
 4231 0131 3F       		.uleb128 0x3f
 4232 0132 0C       		.uleb128 0xc
 4233 0133 03       		.uleb128 0x3
 4234 0134 0E       		.uleb128 0xe
 4235 0135 3A       		.uleb128 0x3a
 4236 0136 0B       		.uleb128 0xb
 4237 0137 3B       		.uleb128 0x3b
 4238 0138 0B       		.uleb128 0xb
 4239 0139 39       		.uleb128 0x39
 4240 013a 0B       		.uleb128 0xb
 4241 013b 27       		.uleb128 0x27
 4242 013c 0C       		.uleb128 0xc
 4243 013d 3C       		.uleb128 0x3c
 4244 013e 0C       		.uleb128 0xc
 4245 013f 00       		.byte	0
 4246 0140 00       		.byte	0
 4247 0141 18       		.uleb128 0x18
 4248 0142 2E       		.uleb128 0x2e
 4249 0143 01       		.byte	0x1
 4250 0144 3F       		.uleb128 0x3f
 4251 0145 0C       		.uleb128 0xc
 4252 0146 03       		.uleb128 0x3
 4253 0147 0E       		.uleb128 0xe
 4254 0148 3A       		.uleb128 0x3a
 4255 0149 0B       		.uleb128 0xb
 4256 014a 3B       		.uleb128 0x3b
 4257 014b 0B       		.uleb128 0xb
 4258 014c 39       		.uleb128 0x39
 4259 014d 0B       		.uleb128 0xb
 4260 014e 27       		.uleb128 0x27
 4261 014f 0C       		.uleb128 0xc
 4262 0150 3C       		.uleb128 0x3c
ARM GAS  /tmp/ccx8nc1r.s 			page 101


 4263 0151 0C       		.uleb128 0xc
 4264 0152 01       		.uleb128 0x1
 4265 0153 13       		.uleb128 0x13
 4266 0154 00       		.byte	0
 4267 0155 00       		.byte	0
 4268 0156 19       		.uleb128 0x19
 4269 0157 2E       		.uleb128 0x2e
 4270 0158 00       		.byte	0
 4271 0159 3F       		.uleb128 0x3f
 4272 015a 0C       		.uleb128 0xc
 4273 015b 03       		.uleb128 0x3
 4274 015c 0E       		.uleb128 0xe
 4275 015d 3A       		.uleb128 0x3a
 4276 015e 0B       		.uleb128 0xb
 4277 015f 3B       		.uleb128 0x3b
 4278 0160 05       		.uleb128 0x5
 4279 0161 39       		.uleb128 0x39
 4280 0162 0B       		.uleb128 0xb
 4281 0163 27       		.uleb128 0x27
 4282 0164 0C       		.uleb128 0xc
 4283 0165 3C       		.uleb128 0x3c
 4284 0166 0C       		.uleb128 0xc
 4285 0167 00       		.byte	0
 4286 0168 00       		.byte	0
 4287 0169 1A       		.uleb128 0x1a
 4288 016a 2E       		.uleb128 0x2e
 4289 016b 01       		.byte	0x1
 4290 016c 3F       		.uleb128 0x3f
 4291 016d 0C       		.uleb128 0xc
 4292 016e 03       		.uleb128 0x3
 4293 016f 0E       		.uleb128 0xe
 4294 0170 3A       		.uleb128 0x3a
 4295 0171 0B       		.uleb128 0xb
 4296 0172 3B       		.uleb128 0x3b
 4297 0173 05       		.uleb128 0x5
 4298 0174 39       		.uleb128 0x39
 4299 0175 0B       		.uleb128 0xb
 4300 0176 27       		.uleb128 0x27
 4301 0177 0C       		.uleb128 0xc
 4302 0178 11       		.uleb128 0x11
 4303 0179 01       		.uleb128 0x1
 4304 017a 12       		.uleb128 0x12
 4305 017b 01       		.uleb128 0x1
 4306 017c 40       		.uleb128 0x40
 4307 017d 0A       		.uleb128 0xa
 4308 017e 9742     		.uleb128 0x2117
 4309 0180 0C       		.uleb128 0xc
 4310 0181 01       		.uleb128 0x1
 4311 0182 13       		.uleb128 0x13
 4312 0183 00       		.byte	0
 4313 0184 00       		.byte	0
 4314 0185 1B       		.uleb128 0x1b
 4315 0186 05       		.uleb128 0x5
 4316 0187 00       		.byte	0
 4317 0188 03       		.uleb128 0x3
 4318 0189 0E       		.uleb128 0xe
 4319 018a 3A       		.uleb128 0x3a
ARM GAS  /tmp/ccx8nc1r.s 			page 102


 4320 018b 0B       		.uleb128 0xb
 4321 018c 3B       		.uleb128 0x3b
 4322 018d 05       		.uleb128 0x5
 4323 018e 39       		.uleb128 0x39
 4324 018f 0B       		.uleb128 0xb
 4325 0190 49       		.uleb128 0x49
 4326 0191 13       		.uleb128 0x13
 4327 0192 02       		.uleb128 0x2
 4328 0193 0A       		.uleb128 0xa
 4329 0194 00       		.byte	0
 4330 0195 00       		.byte	0
 4331 0196 1C       		.uleb128 0x1c
 4332 0197 2E       		.uleb128 0x2e
 4333 0198 01       		.byte	0x1
 4334 0199 3F       		.uleb128 0x3f
 4335 019a 0C       		.uleb128 0xc
 4336 019b 03       		.uleb128 0x3
 4337 019c 0E       		.uleb128 0xe
 4338 019d 3A       		.uleb128 0x3a
 4339 019e 0B       		.uleb128 0xb
 4340 019f 3B       		.uleb128 0x3b
 4341 01a0 05       		.uleb128 0x5
 4342 01a1 39       		.uleb128 0x39
 4343 01a2 0B       		.uleb128 0xb
 4344 01a3 27       		.uleb128 0x27
 4345 01a4 0C       		.uleb128 0xc
 4346 01a5 49       		.uleb128 0x49
 4347 01a6 13       		.uleb128 0x13
 4348 01a7 11       		.uleb128 0x11
 4349 01a8 01       		.uleb128 0x1
 4350 01a9 12       		.uleb128 0x12
 4351 01aa 01       		.uleb128 0x1
 4352 01ab 40       		.uleb128 0x40
 4353 01ac 0A       		.uleb128 0xa
 4354 01ad 9742     		.uleb128 0x2117
 4355 01af 0C       		.uleb128 0xc
 4356 01b0 01       		.uleb128 0x1
 4357 01b1 13       		.uleb128 0x13
 4358 01b2 00       		.byte	0
 4359 01b3 00       		.byte	0
 4360 01b4 1D       		.uleb128 0x1d
 4361 01b5 05       		.uleb128 0x5
 4362 01b6 00       		.byte	0
 4363 01b7 03       		.uleb128 0x3
 4364 01b8 0E       		.uleb128 0xe
 4365 01b9 3A       		.uleb128 0x3a
 4366 01ba 0B       		.uleb128 0xb
 4367 01bb 3B       		.uleb128 0x3b
 4368 01bc 05       		.uleb128 0x5
 4369 01bd 39       		.uleb128 0x39
 4370 01be 0B       		.uleb128 0xb
 4371 01bf 49       		.uleb128 0x49
 4372 01c0 13       		.uleb128 0x13
 4373 01c1 02       		.uleb128 0x2
 4374 01c2 06       		.uleb128 0x6
 4375 01c3 B742     		.uleb128 0x2137
 4376 01c5 06       		.uleb128 0x6
ARM GAS  /tmp/ccx8nc1r.s 			page 103


 4377 01c6 00       		.byte	0
 4378 01c7 00       		.byte	0
 4379 01c8 1E       		.uleb128 0x1e
 4380 01c9 2E       		.uleb128 0x2e
 4381 01ca 01       		.byte	0x1
 4382 01cb 3F       		.uleb128 0x3f
 4383 01cc 0C       		.uleb128 0xc
 4384 01cd 03       		.uleb128 0x3
 4385 01ce 0E       		.uleb128 0xe
 4386 01cf 3A       		.uleb128 0x3a
 4387 01d0 0B       		.uleb128 0xb
 4388 01d1 3B       		.uleb128 0x3b
 4389 01d2 05       		.uleb128 0x5
 4390 01d3 39       		.uleb128 0x39
 4391 01d4 0B       		.uleb128 0xb
 4392 01d5 27       		.uleb128 0x27
 4393 01d6 0C       		.uleb128 0xc
 4394 01d7 11       		.uleb128 0x11
 4395 01d8 01       		.uleb128 0x1
 4396 01d9 12       		.uleb128 0x12
 4397 01da 01       		.uleb128 0x1
 4398 01db 40       		.uleb128 0x40
 4399 01dc 06       		.uleb128 0x6
 4400 01dd 9742     		.uleb128 0x2117
 4401 01df 0C       		.uleb128 0xc
 4402 01e0 01       		.uleb128 0x1
 4403 01e1 13       		.uleb128 0x13
 4404 01e2 00       		.byte	0
 4405 01e3 00       		.byte	0
 4406 01e4 1F       		.uleb128 0x1f
 4407 01e5 34       		.uleb128 0x34
 4408 01e6 00       		.byte	0
 4409 01e7 03       		.uleb128 0x3
 4410 01e8 0E       		.uleb128 0xe
 4411 01e9 3A       		.uleb128 0x3a
 4412 01ea 0B       		.uleb128 0xb
 4413 01eb 3B       		.uleb128 0x3b
 4414 01ec 05       		.uleb128 0x5
 4415 01ed 39       		.uleb128 0x39
 4416 01ee 0B       		.uleb128 0xb
 4417 01ef 49       		.uleb128 0x49
 4418 01f0 13       		.uleb128 0x13
 4419 01f1 02       		.uleb128 0x2
 4420 01f2 06       		.uleb128 0x6
 4421 01f3 B742     		.uleb128 0x2137
 4422 01f5 06       		.uleb128 0x6
 4423 01f6 00       		.byte	0
 4424 01f7 00       		.byte	0
 4425 01f8 20       		.uleb128 0x20
 4426 01f9 898201   		.uleb128 0x4109
 4427 01fc 00       		.byte	0
 4428 01fd 11       		.uleb128 0x11
 4429 01fe 01       		.uleb128 0x1
 4430 01ff 31       		.uleb128 0x31
 4431 0200 13       		.uleb128 0x13
 4432 0201 00       		.byte	0
 4433 0202 00       		.byte	0
ARM GAS  /tmp/ccx8nc1r.s 			page 104


 4434 0203 21       		.uleb128 0x21
 4435 0204 898201   		.uleb128 0x4109
 4436 0207 00       		.byte	0
 4437 0208 11       		.uleb128 0x11
 4438 0209 01       		.uleb128 0x1
 4439 020a 9542     		.uleb128 0x2115
 4440 020c 0C       		.uleb128 0xc
 4441 020d 31       		.uleb128 0x31
 4442 020e 13       		.uleb128 0x13
 4443 020f 00       		.byte	0
 4444 0210 00       		.byte	0
 4445 0211 22       		.uleb128 0x22
 4446 0212 2E       		.uleb128 0x2e
 4447 0213 01       		.byte	0x1
 4448 0214 3F       		.uleb128 0x3f
 4449 0215 0C       		.uleb128 0xc
 4450 0216 03       		.uleb128 0x3
 4451 0217 0E       		.uleb128 0xe
 4452 0218 3A       		.uleb128 0x3a
 4453 0219 0B       		.uleb128 0xb
 4454 021a 3B       		.uleb128 0x3b
 4455 021b 05       		.uleb128 0x5
 4456 021c 39       		.uleb128 0x39
 4457 021d 0B       		.uleb128 0xb
 4458 021e 27       		.uleb128 0x27
 4459 021f 0C       		.uleb128 0xc
 4460 0220 49       		.uleb128 0x49
 4461 0221 13       		.uleb128 0x13
 4462 0222 11       		.uleb128 0x11
 4463 0223 01       		.uleb128 0x1
 4464 0224 12       		.uleb128 0x12
 4465 0225 01       		.uleb128 0x1
 4466 0226 40       		.uleb128 0x40
 4467 0227 06       		.uleb128 0x6
 4468 0228 9742     		.uleb128 0x2117
 4469 022a 0C       		.uleb128 0xc
 4470 022b 01       		.uleb128 0x1
 4471 022c 13       		.uleb128 0x13
 4472 022d 00       		.byte	0
 4473 022e 00       		.byte	0
 4474 022f 23       		.uleb128 0x23
 4475 0230 2E       		.uleb128 0x2e
 4476 0231 01       		.byte	0x1
 4477 0232 03       		.uleb128 0x3
 4478 0233 0E       		.uleb128 0xe
 4479 0234 3A       		.uleb128 0x3a
 4480 0235 0B       		.uleb128 0xb
 4481 0236 3B       		.uleb128 0x3b
 4482 0237 05       		.uleb128 0x5
 4483 0238 39       		.uleb128 0x39
 4484 0239 0B       		.uleb128 0xb
 4485 023a 27       		.uleb128 0x27
 4486 023b 0C       		.uleb128 0xc
 4487 023c 11       		.uleb128 0x11
 4488 023d 01       		.uleb128 0x1
 4489 023e 12       		.uleb128 0x12
 4490 023f 01       		.uleb128 0x1
ARM GAS  /tmp/ccx8nc1r.s 			page 105


 4491 0240 40       		.uleb128 0x40
 4492 0241 06       		.uleb128 0x6
 4493 0242 9742     		.uleb128 0x2117
 4494 0244 0C       		.uleb128 0xc
 4495 0245 01       		.uleb128 0x1
 4496 0246 13       		.uleb128 0x13
 4497 0247 00       		.byte	0
 4498 0248 00       		.byte	0
 4499 0249 24       		.uleb128 0x24
 4500 024a 898201   		.uleb128 0x4109
 4501 024d 01       		.byte	0x1
 4502 024e 11       		.uleb128 0x11
 4503 024f 01       		.uleb128 0x1
 4504 0250 31       		.uleb128 0x31
 4505 0251 13       		.uleb128 0x13
 4506 0252 01       		.uleb128 0x1
 4507 0253 13       		.uleb128 0x13
 4508 0254 00       		.byte	0
 4509 0255 00       		.byte	0
 4510 0256 25       		.uleb128 0x25
 4511 0257 8A8201   		.uleb128 0x410a
 4512 025a 00       		.byte	0
 4513 025b 02       		.uleb128 0x2
 4514 025c 0A       		.uleb128 0xa
 4515 025d 9142     		.uleb128 0x2111
 4516 025f 0A       		.uleb128 0xa
 4517 0260 00       		.byte	0
 4518 0261 00       		.byte	0
 4519 0262 26       		.uleb128 0x26
 4520 0263 2E       		.uleb128 0x2e
 4521 0264 01       		.byte	0x1
 4522 0265 03       		.uleb128 0x3
 4523 0266 0E       		.uleb128 0xe
 4524 0267 3A       		.uleb128 0x3a
 4525 0268 0B       		.uleb128 0xb
 4526 0269 3B       		.uleb128 0x3b
 4527 026a 05       		.uleb128 0x5
 4528 026b 39       		.uleb128 0x39
 4529 026c 0B       		.uleb128 0xb
 4530 026d 27       		.uleb128 0x27
 4531 026e 0C       		.uleb128 0xc
 4532 026f 20       		.uleb128 0x20
 4533 0270 0B       		.uleb128 0xb
 4534 0271 01       		.uleb128 0x1
 4535 0272 13       		.uleb128 0x13
 4536 0273 00       		.byte	0
 4537 0274 00       		.byte	0
 4538 0275 27       		.uleb128 0x27
 4539 0276 34       		.uleb128 0x34
 4540 0277 00       		.byte	0
 4541 0278 03       		.uleb128 0x3
 4542 0279 0E       		.uleb128 0xe
 4543 027a 3A       		.uleb128 0x3a
 4544 027b 0B       		.uleb128 0xb
 4545 027c 3B       		.uleb128 0x3b
 4546 027d 05       		.uleb128 0x5
 4547 027e 39       		.uleb128 0x39
ARM GAS  /tmp/ccx8nc1r.s 			page 106


 4548 027f 0B       		.uleb128 0xb
 4549 0280 49       		.uleb128 0x49
 4550 0281 13       		.uleb128 0x13
 4551 0282 00       		.byte	0
 4552 0283 00       		.byte	0
 4553 0284 28       		.uleb128 0x28
 4554 0285 2E       		.uleb128 0x2e
 4555 0286 01       		.byte	0x1
 4556 0287 03       		.uleb128 0x3
 4557 0288 0E       		.uleb128 0xe
 4558 0289 3A       		.uleb128 0x3a
 4559 028a 0B       		.uleb128 0xb
 4560 028b 3B       		.uleb128 0x3b
 4561 028c 05       		.uleb128 0x5
 4562 028d 39       		.uleb128 0x39
 4563 028e 0B       		.uleb128 0xb
 4564 028f 27       		.uleb128 0x27
 4565 0290 0C       		.uleb128 0xc
 4566 0291 49       		.uleb128 0x49
 4567 0292 13       		.uleb128 0x13
 4568 0293 11       		.uleb128 0x11
 4569 0294 01       		.uleb128 0x1
 4570 0295 12       		.uleb128 0x12
 4571 0296 01       		.uleb128 0x1
 4572 0297 40       		.uleb128 0x40
 4573 0298 06       		.uleb128 0x6
 4574 0299 9742     		.uleb128 0x2117
 4575 029b 0C       		.uleb128 0xc
 4576 029c 01       		.uleb128 0x1
 4577 029d 13       		.uleb128 0x13
 4578 029e 00       		.byte	0
 4579 029f 00       		.byte	0
 4580 02a0 29       		.uleb128 0x29
 4581 02a1 34       		.uleb128 0x34
 4582 02a2 00       		.byte	0
 4583 02a3 03       		.uleb128 0x3
 4584 02a4 0E       		.uleb128 0xe
 4585 02a5 3A       		.uleb128 0x3a
 4586 02a6 0B       		.uleb128 0xb
 4587 02a7 3B       		.uleb128 0x3b
 4588 02a8 05       		.uleb128 0x5
 4589 02a9 39       		.uleb128 0x39
 4590 02aa 0B       		.uleb128 0xb
 4591 02ab 49       		.uleb128 0x49
 4592 02ac 13       		.uleb128 0x13
 4593 02ad 02       		.uleb128 0x2
 4594 02ae 0A       		.uleb128 0xa
 4595 02af 00       		.byte	0
 4596 02b0 00       		.byte	0
 4597 02b1 2A       		.uleb128 0x2a
 4598 02b2 1D       		.uleb128 0x1d
 4599 02b3 01       		.byte	0x1
 4600 02b4 31       		.uleb128 0x31
 4601 02b5 13       		.uleb128 0x13
 4602 02b6 55       		.uleb128 0x55
 4603 02b7 06       		.uleb128 0x6
 4604 02b8 58       		.uleb128 0x58
ARM GAS  /tmp/ccx8nc1r.s 			page 107


 4605 02b9 0B       		.uleb128 0xb
 4606 02ba 59       		.uleb128 0x59
 4607 02bb 05       		.uleb128 0x5
 4608 02bc 57       		.uleb128 0x57
 4609 02bd 0B       		.uleb128 0xb
 4610 02be 01       		.uleb128 0x1
 4611 02bf 13       		.uleb128 0x13
 4612 02c0 00       		.byte	0
 4613 02c1 00       		.byte	0
 4614 02c2 2B       		.uleb128 0x2b
 4615 02c3 0B       		.uleb128 0xb
 4616 02c4 01       		.byte	0x1
 4617 02c5 55       		.uleb128 0x55
 4618 02c6 06       		.uleb128 0x6
 4619 02c7 00       		.byte	0
 4620 02c8 00       		.byte	0
 4621 02c9 2C       		.uleb128 0x2c
 4622 02ca 34       		.uleb128 0x34
 4623 02cb 00       		.byte	0
 4624 02cc 31       		.uleb128 0x31
 4625 02cd 13       		.uleb128 0x13
 4626 02ce 02       		.uleb128 0x2
 4627 02cf 06       		.uleb128 0x6
 4628 02d0 B742     		.uleb128 0x2137
 4629 02d2 06       		.uleb128 0x6
 4630 02d3 00       		.byte	0
 4631 02d4 00       		.byte	0
 4632 02d5 2D       		.uleb128 0x2d
 4633 02d6 34       		.uleb128 0x34
 4634 02d7 00       		.byte	0
 4635 02d8 31       		.uleb128 0x31
 4636 02d9 13       		.uleb128 0x13
 4637 02da 00       		.byte	0
 4638 02db 00       		.byte	0
 4639 02dc 2E       		.uleb128 0x2e
 4640 02dd 898201   		.uleb128 0x4109
 4641 02e0 01       		.byte	0x1
 4642 02e1 11       		.uleb128 0x11
 4643 02e2 01       		.uleb128 0x1
 4644 02e3 01       		.uleb128 0x1
 4645 02e4 13       		.uleb128 0x13
 4646 02e5 00       		.byte	0
 4647 02e6 00       		.byte	0
 4648 02e7 2F       		.uleb128 0x2f
 4649 02e8 898201   		.uleb128 0x4109
 4650 02eb 01       		.byte	0x1
 4651 02ec 11       		.uleb128 0x11
 4652 02ed 01       		.uleb128 0x1
 4653 02ee 31       		.uleb128 0x31
 4654 02ef 13       		.uleb128 0x13
 4655 02f0 00       		.byte	0
 4656 02f1 00       		.byte	0
 4657 02f2 30       		.uleb128 0x30
 4658 02f3 2E       		.uleb128 0x2e
 4659 02f4 01       		.byte	0x1
 4660 02f5 03       		.uleb128 0x3
 4661 02f6 0E       		.uleb128 0xe
ARM GAS  /tmp/ccx8nc1r.s 			page 108


 4662 02f7 3A       		.uleb128 0x3a
 4663 02f8 0B       		.uleb128 0xb
 4664 02f9 3B       		.uleb128 0x3b
 4665 02fa 05       		.uleb128 0x5
 4666 02fb 39       		.uleb128 0x39
 4667 02fc 0B       		.uleb128 0xb
 4668 02fd 27       		.uleb128 0x27
 4669 02fe 0C       		.uleb128 0xc
 4670 02ff 49       		.uleb128 0x49
 4671 0300 13       		.uleb128 0x13
 4672 0301 20       		.uleb128 0x20
 4673 0302 0B       		.uleb128 0xb
 4674 0303 01       		.uleb128 0x1
 4675 0304 13       		.uleb128 0x13
 4676 0305 00       		.byte	0
 4677 0306 00       		.byte	0
 4678 0307 31       		.uleb128 0x31
 4679 0308 05       		.uleb128 0x5
 4680 0309 00       		.byte	0
 4681 030a 03       		.uleb128 0x3
 4682 030b 0E       		.uleb128 0xe
 4683 030c 3A       		.uleb128 0x3a
 4684 030d 0B       		.uleb128 0xb
 4685 030e 3B       		.uleb128 0x3b
 4686 030f 05       		.uleb128 0x5
 4687 0310 39       		.uleb128 0x39
 4688 0311 0B       		.uleb128 0xb
 4689 0312 49       		.uleb128 0x49
 4690 0313 13       		.uleb128 0x13
 4691 0314 00       		.byte	0
 4692 0315 00       		.byte	0
 4693 0316 32       		.uleb128 0x32
 4694 0317 1D       		.uleb128 0x1d
 4695 0318 01       		.byte	0x1
 4696 0319 31       		.uleb128 0x31
 4697 031a 13       		.uleb128 0x13
 4698 031b 52       		.uleb128 0x52
 4699 031c 01       		.uleb128 0x1
 4700 031d B842     		.uleb128 0x2138
 4701 031f 0B       		.uleb128 0xb
 4702 0320 55       		.uleb128 0x55
 4703 0321 06       		.uleb128 0x6
 4704 0322 58       		.uleb128 0x58
 4705 0323 0B       		.uleb128 0xb
 4706 0324 59       		.uleb128 0x59
 4707 0325 05       		.uleb128 0x5
 4708 0326 57       		.uleb128 0x57
 4709 0327 0B       		.uleb128 0xb
 4710 0328 01       		.uleb128 0x1
 4711 0329 13       		.uleb128 0x13
 4712 032a 00       		.byte	0
 4713 032b 00       		.byte	0
 4714 032c 33       		.uleb128 0x33
 4715 032d 05       		.uleb128 0x5
 4716 032e 00       		.byte	0
 4717 032f 31       		.uleb128 0x31
 4718 0330 13       		.uleb128 0x13
ARM GAS  /tmp/ccx8nc1r.s 			page 109


 4719 0331 02       		.uleb128 0x2
 4720 0332 06       		.uleb128 0x6
 4721 0333 B742     		.uleb128 0x2137
 4722 0335 06       		.uleb128 0x6
 4723 0336 00       		.byte	0
 4724 0337 00       		.byte	0
 4725 0338 34       		.uleb128 0x34
 4726 0339 34       		.uleb128 0x34
 4727 033a 00       		.byte	0
 4728 033b 31       		.uleb128 0x31
 4729 033c 13       		.uleb128 0x13
 4730 033d 02       		.uleb128 0x2
 4731 033e 0A       		.uleb128 0xa
 4732 033f 00       		.byte	0
 4733 0340 00       		.byte	0
 4734 0341 35       		.uleb128 0x35
 4735 0342 898201   		.uleb128 0x4109
 4736 0345 01       		.byte	0x1
 4737 0346 11       		.uleb128 0x11
 4738 0347 01       		.uleb128 0x1
 4739 0348 00       		.byte	0
 4740 0349 00       		.byte	0
 4741 034a 36       		.uleb128 0x36
 4742 034b 1D       		.uleb128 0x1d
 4743 034c 01       		.byte	0x1
 4744 034d 31       		.uleb128 0x31
 4745 034e 13       		.uleb128 0x13
 4746 034f 52       		.uleb128 0x52
 4747 0350 01       		.uleb128 0x1
 4748 0351 B842     		.uleb128 0x2138
 4749 0353 0B       		.uleb128 0xb
 4750 0354 55       		.uleb128 0x55
 4751 0355 06       		.uleb128 0x6
 4752 0356 58       		.uleb128 0x58
 4753 0357 0B       		.uleb128 0xb
 4754 0358 59       		.uleb128 0x59
 4755 0359 05       		.uleb128 0x5
 4756 035a 57       		.uleb128 0x57
 4757 035b 0B       		.uleb128 0xb
 4758 035c 00       		.byte	0
 4759 035d 00       		.byte	0
 4760 035e 37       		.uleb128 0x37
 4761 035f 2E       		.uleb128 0x2e
 4762 0360 00       		.byte	0
 4763 0361 3F       		.uleb128 0x3f
 4764 0362 0C       		.uleb128 0xc
 4765 0363 03       		.uleb128 0x3
 4766 0364 0E       		.uleb128 0xe
 4767 0365 3A       		.uleb128 0x3a
 4768 0366 0B       		.uleb128 0xb
 4769 0367 3B       		.uleb128 0x3b
 4770 0368 05       		.uleb128 0x5
 4771 0369 39       		.uleb128 0x39
 4772 036a 0B       		.uleb128 0xb
 4773 036b 27       		.uleb128 0x27
 4774 036c 0C       		.uleb128 0xc
 4775 036d 49       		.uleb128 0x49
ARM GAS  /tmp/ccx8nc1r.s 			page 110


 4776 036e 13       		.uleb128 0x13
 4777 036f 11       		.uleb128 0x11
 4778 0370 01       		.uleb128 0x1
 4779 0371 12       		.uleb128 0x12
 4780 0372 01       		.uleb128 0x1
 4781 0373 40       		.uleb128 0x40
 4782 0374 0A       		.uleb128 0xa
 4783 0375 9742     		.uleb128 0x2117
 4784 0377 0C       		.uleb128 0xc
 4785 0378 00       		.byte	0
 4786 0379 00       		.byte	0
 4787 037a 38       		.uleb128 0x38
 4788 037b 1D       		.uleb128 0x1d
 4789 037c 01       		.byte	0x1
 4790 037d 31       		.uleb128 0x31
 4791 037e 13       		.uleb128 0x13
 4792 037f 52       		.uleb128 0x52
 4793 0380 01       		.uleb128 0x1
 4794 0381 B842     		.uleb128 0x2138
 4795 0383 0B       		.uleb128 0xb
 4796 0384 11       		.uleb128 0x11
 4797 0385 01       		.uleb128 0x1
 4798 0386 12       		.uleb128 0x12
 4799 0387 01       		.uleb128 0x1
 4800 0388 58       		.uleb128 0x58
 4801 0389 0B       		.uleb128 0xb
 4802 038a 59       		.uleb128 0x59
 4803 038b 05       		.uleb128 0x5
 4804 038c 57       		.uleb128 0x57
 4805 038d 0B       		.uleb128 0xb
 4806 038e 01       		.uleb128 0x1
 4807 038f 13       		.uleb128 0x13
 4808 0390 00       		.byte	0
 4809 0391 00       		.byte	0
 4810 0392 39       		.uleb128 0x39
 4811 0393 2E       		.uleb128 0x2e
 4812 0394 01       		.byte	0x1
 4813 0395 3F       		.uleb128 0x3f
 4814 0396 0C       		.uleb128 0xc
 4815 0397 03       		.uleb128 0x3
 4816 0398 0E       		.uleb128 0xe
 4817 0399 3A       		.uleb128 0x3a
 4818 039a 0B       		.uleb128 0xb
 4819 039b 3B       		.uleb128 0x3b
 4820 039c 0B       		.uleb128 0xb
 4821 039d 39       		.uleb128 0x39
 4822 039e 0B       		.uleb128 0xb
 4823 039f 27       		.uleb128 0x27
 4824 03a0 0C       		.uleb128 0xc
 4825 03a1 49       		.uleb128 0x49
 4826 03a2 13       		.uleb128 0x13
 4827 03a3 11       		.uleb128 0x11
 4828 03a4 01       		.uleb128 0x1
 4829 03a5 12       		.uleb128 0x12
 4830 03a6 01       		.uleb128 0x1
 4831 03a7 40       		.uleb128 0x40
 4832 03a8 06       		.uleb128 0x6
ARM GAS  /tmp/ccx8nc1r.s 			page 111


 4833 03a9 9742     		.uleb128 0x2117
 4834 03ab 0C       		.uleb128 0xc
 4835 03ac 00       		.byte	0
 4836 03ad 00       		.byte	0
 4837 03ae 3A       		.uleb128 0x3a
 4838 03af 34       		.uleb128 0x34
 4839 03b0 00       		.byte	0
 4840 03b1 03       		.uleb128 0x3
 4841 03b2 0E       		.uleb128 0xe
 4842 03b3 3A       		.uleb128 0x3a
 4843 03b4 0B       		.uleb128 0xb
 4844 03b5 3B       		.uleb128 0x3b
 4845 03b6 0B       		.uleb128 0xb
 4846 03b7 39       		.uleb128 0x39
 4847 03b8 0B       		.uleb128 0xb
 4848 03b9 49       		.uleb128 0x49
 4849 03ba 13       		.uleb128 0x13
 4850 03bb 02       		.uleb128 0x2
 4851 03bc 06       		.uleb128 0x6
 4852 03bd B742     		.uleb128 0x2137
 4853 03bf 06       		.uleb128 0x6
 4854 03c0 00       		.byte	0
 4855 03c1 00       		.byte	0
 4856 03c2 00       		.byte	0
 4857              		.section	.debug_loc,"",%progbits
 4858              	.Ldebug_loc0:
 4859              	.LVUS72:
 4860 0000 00       		.uleb128 0
 4861 0001 00       		.uleb128 .LVU402
 4862 0002 00       		.uleb128 .LVU402
 4863 0003 00       		.uleb128 0
 4864              	.LLST72:
 4865 0004 9C030000 		.4byte	.LVL118-.Ltext0
 4866 0008 9E030000 		.4byte	.LVL119-.Ltext0
 4867 000c 0100     		.2byte	0x1
 4868 000e 50       		.byte	0x50
 4869 000f 9E030000 		.4byte	.LVL119-.Ltext0
 4870 0013 A0030000 		.4byte	.LFE26-.Ltext0
 4871 0017 0A00     		.2byte	0xa
 4872 0019 F3       		.byte	0xf3
 4873 001a 03       		.uleb128 0x3
 4874 001b F5       		.byte	0xf5
 4875 001c 00       		.uleb128 0
 4876 001d 25       		.uleb128 0x25
 4877 001e F7       		.byte	0xf7
 4878 001f 2C       		.uleb128 0x2c
 4879 0020 F7       		.byte	0xf7
 4880 0021 00       		.uleb128 0
 4881 0022 9F       		.byte	0x9f
 4882 0023 00000000 		.4byte	0
 4883 0027 00000000 		.4byte	0
 4884              	.LLST68:
 4885 002b 88030000 		.4byte	.LFB25-.Ltext0
 4886 002f 8A030000 		.4byte	.LCFI19-.Ltext0
 4887 0033 0200     		.2byte	0x2
 4888 0035 7D       		.byte	0x7d
 4889 0036 00       		.sleb128 0
ARM GAS  /tmp/ccx8nc1r.s 			page 112


 4890 0037 8A030000 		.4byte	.LCFI19-.Ltext0
 4891 003b 98030000 		.4byte	.LCFI20-.Ltext0
 4892 003f 0200     		.2byte	0x2
 4893 0041 7D       		.byte	0x7d
 4894 0042 10       		.sleb128 16
 4895 0043 98030000 		.4byte	.LCFI20-.Ltext0
 4896 0047 9C030000 		.4byte	.LFE25-.Ltext0
 4897 004b 0200     		.2byte	0x2
 4898 004d 7D       		.byte	0x7d
 4899 004e 00       		.sleb128 0
 4900 004f 00000000 		.4byte	0
 4901 0053 00000000 		.4byte	0
 4902              	.LVUS69:
 4903 0057 00       		.uleb128 0
 4904 0058 00       		.uleb128 .LVU393
 4905 0059 00       		.uleb128 .LVU393
 4906 005a 00       		.uleb128 .LVU397
 4907 005b 00       		.uleb128 .LVU397
 4908 005c 00       		.uleb128 0
 4909              	.LLST69:
 4910 005d 88030000 		.4byte	.LVL113-.Ltext0
 4911 0061 91030000 		.4byte	.LVL115-1-.Ltext0
 4912 0065 0100     		.2byte	0x1
 4913 0067 50       		.byte	0x50
 4914 0068 91030000 		.4byte	.LVL115-1-.Ltext0
 4915 006c 98030000 		.4byte	.LVL116-.Ltext0
 4916 0070 0100     		.2byte	0x1
 4917 0072 54       		.byte	0x54
 4918 0073 98030000 		.4byte	.LVL116-.Ltext0
 4919 0077 9C030000 		.4byte	.LFE25-.Ltext0
 4920 007b 0A00     		.2byte	0xa
 4921 007d F3       		.byte	0xf3
 4922 007e 03       		.uleb128 0x3
 4923 007f F5       		.byte	0xf5
 4924 0080 00       		.uleb128 0
 4925 0081 25       		.uleb128 0x25
 4926 0082 F7       		.byte	0xf7
 4927 0083 2C       		.uleb128 0x2c
 4928 0084 F7       		.byte	0xf7
 4929 0085 00       		.uleb128 0
 4930 0086 9F       		.byte	0x9f
 4931 0087 00000000 		.4byte	0
 4932 008b 00000000 		.4byte	0
 4933              	.LVUS70:
 4934 008f 00       		.uleb128 0
 4935 0090 00       		.uleb128 .LVU393
 4936 0091 00       		.uleb128 .LVU393
 4937 0092 00       		.uleb128 .LVU397
 4938 0093 00       		.uleb128 .LVU397
 4939 0094 00       		.uleb128 .LVU398
 4940 0095 00       		.uleb128 .LVU398
 4941 0096 00       		.uleb128 0
 4942              	.LLST70:
 4943 0097 88030000 		.4byte	.LVL113-.Ltext0
 4944 009b 91030000 		.4byte	.LVL115-1-.Ltext0
 4945 009f 0100     		.2byte	0x1
 4946 00a1 51       		.byte	0x51
ARM GAS  /tmp/ccx8nc1r.s 			page 113


 4947 00a2 91030000 		.4byte	.LVL115-1-.Ltext0
 4948 00a6 98030000 		.4byte	.LVL116-.Ltext0
 4949 00aa 0100     		.2byte	0x1
 4950 00ac 55       		.byte	0x55
 4951 00ad 98030000 		.4byte	.LVL116-.Ltext0
 4952 00b1 9B030000 		.4byte	.LVL117-1-.Ltext0
 4953 00b5 0B00     		.2byte	0xb
 4954 00b7 F3       		.byte	0xf3
 4955 00b8 03       		.uleb128 0x3
 4956 00b9 F5       		.byte	0xf5
 4957 00ba 00       		.uleb128 0
 4958 00bb 25       		.uleb128 0x25
 4959 00bc F7       		.byte	0xf7
 4960 00bd 2C       		.uleb128 0x2c
 4961 00be F7       		.byte	0xf7
 4962 00bf 00       		.uleb128 0
 4963 00c0 23       		.byte	0x23
 4964 00c1 1C       		.uleb128 0x1c
 4965 00c2 9B030000 		.4byte	.LVL117-1-.Ltext0
 4966 00c6 9C030000 		.4byte	.LFE25-.Ltext0
 4967 00ca 0A00     		.2byte	0xa
 4968 00cc F3       		.byte	0xf3
 4969 00cd 03       		.uleb128 0x3
 4970 00ce F5       		.byte	0xf5
 4971 00cf 01       		.uleb128 0x1
 4972 00d0 25       		.uleb128 0x25
 4973 00d1 F7       		.byte	0xf7
 4974 00d2 2C       		.uleb128 0x2c
 4975 00d3 F7       		.byte	0xf7
 4976 00d4 00       		.uleb128 0
 4977 00d5 9F       		.byte	0x9f
 4978 00d6 00000000 		.4byte	0
 4979 00da 00000000 		.4byte	0
 4980              	.LVUS71:
 4981 00de 00       		.uleb128 .LVU389
 4982 00df 00       		.uleb128 .LVU393
 4983 00e0 00       		.uleb128 .LVU393
 4984 00e1 00       		.uleb128 .LVU397
 4985 00e2 00       		.uleb128 .LVU397
 4986 00e3 00       		.uleb128 0
 4987              	.LLST71:
 4988 00e4 8C030000 		.4byte	.LVL114-.Ltext0
 4989 00e8 91030000 		.4byte	.LVL115-1-.Ltext0
 4990 00ec 0100     		.2byte	0x1
 4991 00ee 50       		.byte	0x50
 4992 00ef 91030000 		.4byte	.LVL115-1-.Ltext0
 4993 00f3 98030000 		.4byte	.LVL116-.Ltext0
 4994 00f7 0100     		.2byte	0x1
 4995 00f9 54       		.byte	0x54
 4996 00fa 98030000 		.4byte	.LVL116-.Ltext0
 4997 00fe 9C030000 		.4byte	.LFE25-.Ltext0
 4998 0102 0A00     		.2byte	0xa
 4999 0104 F3       		.byte	0xf3
 5000 0105 03       		.uleb128 0x3
 5001 0106 F5       		.byte	0xf5
 5002 0107 00       		.uleb128 0
 5003 0108 25       		.uleb128 0x25
ARM GAS  /tmp/ccx8nc1r.s 			page 114


 5004 0109 F7       		.byte	0xf7
 5005 010a 2C       		.uleb128 0x2c
 5006 010b F7       		.byte	0xf7
 5007 010c 00       		.uleb128 0
 5008 010d 9F       		.byte	0x9f
 5009 010e 00000000 		.4byte	0
 5010 0112 00000000 		.4byte	0
 5011              	.LLST64:
 5012 0116 76030000 		.4byte	.LFB24-.Ltext0
 5013 011a 78030000 		.4byte	.LCFI18-.Ltext0
 5014 011e 0200     		.2byte	0x2
 5015 0120 7D       		.byte	0x7d
 5016 0121 00       		.sleb128 0
 5017 0122 78030000 		.4byte	.LCFI18-.Ltext0
 5018 0126 88030000 		.4byte	.LFE24-.Ltext0
 5019 012a 0200     		.2byte	0x2
 5020 012c 7D       		.byte	0x7d
 5021 012d 08       		.sleb128 8
 5022 012e 00000000 		.4byte	0
 5023 0132 00000000 		.4byte	0
 5024              	.LVUS65:
 5025 0136 00       		.uleb128 0
 5026 0137 00       		.uleb128 .LVU379
 5027 0138 00       		.uleb128 .LVU379
 5028 0139 00       		.uleb128 .LVU381
 5029 013a 00       		.uleb128 .LVU381
 5030 013b 00       		.uleb128 0
 5031              	.LLST65:
 5032 013c 76030000 		.4byte	.LVL108-.Ltext0
 5033 0140 7D030000 		.4byte	.LVL110-1-.Ltext0
 5034 0144 0100     		.2byte	0x1
 5035 0146 50       		.byte	0x50
 5036 0147 7D030000 		.4byte	.LVL110-1-.Ltext0
 5037 014b 80030000 		.4byte	.LVL111-.Ltext0
 5038 014f 0100     		.2byte	0x1
 5039 0151 54       		.byte	0x54
 5040 0152 80030000 		.4byte	.LVL111-.Ltext0
 5041 0156 88030000 		.4byte	.LFE24-.Ltext0
 5042 015a 0A00     		.2byte	0xa
 5043 015c F3       		.byte	0xf3
 5044 015d 03       		.uleb128 0x3
 5045 015e F5       		.byte	0xf5
 5046 015f 00       		.uleb128 0
 5047 0160 25       		.uleb128 0x25
 5048 0161 F7       		.byte	0xf7
 5049 0162 2C       		.uleb128 0x2c
 5050 0163 F7       		.byte	0xf7
 5051 0164 00       		.uleb128 0
 5052 0165 9F       		.byte	0x9f
 5053 0166 00000000 		.4byte	0
 5054 016a 00000000 		.4byte	0
 5055              	.LVUS66:
 5056 016e 00       		.uleb128 .LVU376
 5057 016f 00       		.uleb128 .LVU379
 5058 0170 00       		.uleb128 .LVU379
 5059 0171 00       		.uleb128 .LVU381
 5060 0172 00       		.uleb128 .LVU381
ARM GAS  /tmp/ccx8nc1r.s 			page 115


 5061 0173 00       		.uleb128 0
 5062              	.LLST66:
 5063 0174 7A030000 		.4byte	.LVL109-.Ltext0
 5064 0178 7D030000 		.4byte	.LVL110-1-.Ltext0
 5065 017c 0100     		.2byte	0x1
 5066 017e 50       		.byte	0x50
 5067 017f 7D030000 		.4byte	.LVL110-1-.Ltext0
 5068 0183 80030000 		.4byte	.LVL111-.Ltext0
 5069 0187 0100     		.2byte	0x1
 5070 0189 54       		.byte	0x54
 5071 018a 80030000 		.4byte	.LVL111-.Ltext0
 5072 018e 88030000 		.4byte	.LFE24-.Ltext0
 5073 0192 0A00     		.2byte	0xa
 5074 0194 F3       		.byte	0xf3
 5075 0195 03       		.uleb128 0x3
 5076 0196 F5       		.byte	0xf5
 5077 0197 00       		.uleb128 0
 5078 0198 25       		.uleb128 0x25
 5079 0199 F7       		.byte	0xf7
 5080 019a 2C       		.uleb128 0x2c
 5081 019b F7       		.byte	0xf7
 5082 019c 00       		.uleb128 0
 5083 019d 9F       		.byte	0x9f
 5084 019e 00000000 		.4byte	0
 5085 01a2 00000000 		.4byte	0
 5086              	.LVUS67:
 5087 01a6 00       		.uleb128 .LVU381
 5088 01a7 00       		.uleb128 0
 5089              	.LLST67:
 5090 01a8 80030000 		.4byte	.LVL111-.Ltext0
 5091 01ac 88030000 		.4byte	.LFE24-.Ltext0
 5092 01b0 0100     		.2byte	0x1
 5093 01b2 54       		.byte	0x54
 5094 01b3 00000000 		.4byte	0
 5095 01b7 00000000 		.4byte	0
 5096              	.LLST60:
 5097 01bb 5E030000 		.4byte	.LFB23-.Ltext0
 5098 01bf 60030000 		.4byte	.LCFI17-.Ltext0
 5099 01c3 0200     		.2byte	0x2
 5100 01c5 7D       		.byte	0x7d
 5101 01c6 00       		.sleb128 0
 5102 01c7 60030000 		.4byte	.LCFI17-.Ltext0
 5103 01cb 76030000 		.4byte	.LFE23-.Ltext0
 5104 01cf 0200     		.2byte	0x2
 5105 01d1 7D       		.byte	0x7d
 5106 01d2 08       		.sleb128 8
 5107 01d3 00000000 		.4byte	0
 5108 01d7 00000000 		.4byte	0
 5109              	.LVUS61:
 5110 01db 00       		.uleb128 0
 5111 01dc 00       		.uleb128 .LVU366
 5112 01dd 00       		.uleb128 .LVU366
 5113 01de 00       		.uleb128 .LVU367
 5114 01df 00       		.uleb128 .LVU367
 5115 01e0 00       		.uleb128 0
 5116              	.LLST61:
 5117 01e1 5E030000 		.4byte	.LVL102-.Ltext0
ARM GAS  /tmp/ccx8nc1r.s 			page 116


 5118 01e5 65030000 		.4byte	.LVL104-1-.Ltext0
 5119 01e9 0100     		.2byte	0x1
 5120 01eb 50       		.byte	0x50
 5121 01ec 65030000 		.4byte	.LVL104-1-.Ltext0
 5122 01f0 6A030000 		.4byte	.LVL105-.Ltext0
 5123 01f4 0100     		.2byte	0x1
 5124 01f6 54       		.byte	0x54
 5125 01f7 6A030000 		.4byte	.LVL105-.Ltext0
 5126 01fb 76030000 		.4byte	.LFE23-.Ltext0
 5127 01ff 0A00     		.2byte	0xa
 5128 0201 F3       		.byte	0xf3
 5129 0202 03       		.uleb128 0x3
 5130 0203 F5       		.byte	0xf5
 5131 0204 00       		.uleb128 0
 5132 0205 25       		.uleb128 0x25
 5133 0206 F7       		.byte	0xf7
 5134 0207 2C       		.uleb128 0x2c
 5135 0208 F7       		.byte	0xf7
 5136 0209 00       		.uleb128 0
 5137 020a 9F       		.byte	0x9f
 5138 020b 00000000 		.4byte	0
 5139 020f 00000000 		.4byte	0
 5140              	.LVUS62:
 5141 0213 00       		.uleb128 .LVU368
 5142 0214 00       		.uleb128 0
 5143              	.LLST62:
 5144 0215 72030000 		.4byte	.LVL107-.Ltext0
 5145 0219 76030000 		.4byte	.LFE23-.Ltext0
 5146 021d 0100     		.2byte	0x1
 5147 021f 54       		.byte	0x54
 5148 0220 00000000 		.4byte	0
 5149 0224 00000000 		.4byte	0
 5150              	.LVUS63:
 5151 0228 00       		.uleb128 .LVU364
 5152 0229 00       		.uleb128 .LVU366
 5153 022a 00       		.uleb128 .LVU366
 5154 022b 00       		.uleb128 .LVU367
 5155 022c 00       		.uleb128 .LVU367
 5156 022d 00       		.uleb128 0
 5157              	.LLST63:
 5158 022e 62030000 		.4byte	.LVL103-.Ltext0
 5159 0232 65030000 		.4byte	.LVL104-1-.Ltext0
 5160 0236 0100     		.2byte	0x1
 5161 0238 50       		.byte	0x50
 5162 0239 65030000 		.4byte	.LVL104-1-.Ltext0
 5163 023d 6A030000 		.4byte	.LVL105-.Ltext0
 5164 0241 0100     		.2byte	0x1
 5165 0243 54       		.byte	0x54
 5166 0244 6A030000 		.4byte	.LVL105-.Ltext0
 5167 0248 76030000 		.4byte	.LFE23-.Ltext0
 5168 024c 0A00     		.2byte	0xa
 5169 024e F3       		.byte	0xf3
 5170 024f 03       		.uleb128 0x3
 5171 0250 F5       		.byte	0xf5
 5172 0251 00       		.uleb128 0
 5173 0252 25       		.uleb128 0x25
 5174 0253 F7       		.byte	0xf7
ARM GAS  /tmp/ccx8nc1r.s 			page 117


 5175 0254 2C       		.uleb128 0x2c
 5176 0255 F7       		.byte	0xf7
 5177 0256 00       		.uleb128 0
 5178 0257 9F       		.byte	0x9f
 5179 0258 00000000 		.4byte	0
 5180 025c 00000000 		.4byte	0
 5181              	.LLST6:
 5182 0260 38000000 		.4byte	.LFB22-.Ltext0
 5183 0264 3A000000 		.4byte	.LCFI1-.Ltext0
 5184 0268 0200     		.2byte	0x2
 5185 026a 7D       		.byte	0x7d
 5186 026b 00       		.sleb128 0
 5187 026c 3A000000 		.4byte	.LCFI1-.Ltext0
 5188 0270 6C000000 		.4byte	.LCFI2-.Ltext0
 5189 0274 0200     		.2byte	0x2
 5190 0276 7D       		.byte	0x7d
 5191 0277 18       		.sleb128 24
 5192 0278 6C000000 		.4byte	.LCFI2-.Ltext0
 5193 027c 74000000 		.4byte	.LFE22-.Ltext0
 5194 0280 0200     		.2byte	0x2
 5195 0282 7D       		.byte	0x7d
 5196 0283 00       		.sleb128 0
 5197 0284 00000000 		.4byte	0
 5198 0288 00000000 		.4byte	0
 5199              	.LLST0:
 5200 028c 00000000 		.4byte	.LFB19-.Ltext0
 5201 0290 04000000 		.4byte	.LCFI0-.Ltext0
 5202 0294 0200     		.2byte	0x2
 5203 0296 7D       		.byte	0x7d
 5204 0297 00       		.sleb128 0
 5205 0298 04000000 		.4byte	.LCFI0-.Ltext0
 5206 029c 38000000 		.4byte	.LFE19-.Ltext0
 5207 02a0 0200     		.2byte	0x2
 5208 02a2 7D       		.byte	0x7d
 5209 02a3 08       		.sleb128 8
 5210 02a4 00000000 		.4byte	0
 5211 02a8 00000000 		.4byte	0
 5212              	.LVUS1:
 5213 02ac 00       		.uleb128 0
 5214 02ad 00       		.uleb128 .LVU15
 5215 02ae 00       		.uleb128 .LVU15
 5216 02af 00       		.uleb128 .LVU18
 5217 02b0 00       		.uleb128 .LVU18
 5218 02b1 00       		.uleb128 .LVU24
 5219 02b2 00       		.uleb128 .LVU24
 5220 02b3 00       		.uleb128 .LVU25
 5221 02b4 00       		.uleb128 .LVU25
 5222 02b5 00       		.uleb128 .LVU26
 5223 02b6 00       		.uleb128 .LVU26
 5224 02b7 00       		.uleb128 0
 5225              	.LLST1:
 5226 02b8 00000000 		.4byte	.LVL0-.Ltext0
 5227 02bc 18000000 		.4byte	.LVL4-.Ltext0
 5228 02c0 0100     		.2byte	0x1
 5229 02c2 50       		.byte	0x50
 5230 02c3 18000000 		.4byte	.LVL4-.Ltext0
 5231 02c7 20000000 		.4byte	.LVL7-.Ltext0
ARM GAS  /tmp/ccx8nc1r.s 			page 118


 5232 02cb 0A00     		.2byte	0xa
 5233 02cd F3       		.byte	0xf3
 5234 02ce 03       		.uleb128 0x3
 5235 02cf F5       		.byte	0xf5
 5236 02d0 00       		.uleb128 0
 5237 02d1 25       		.uleb128 0x25
 5238 02d2 F7       		.byte	0xf7
 5239 02d3 2C       		.uleb128 0x2c
 5240 02d4 F7       		.byte	0xf7
 5241 02d5 00       		.uleb128 0
 5242 02d6 9F       		.byte	0x9f
 5243 02d7 20000000 		.4byte	.LVL7-.Ltext0
 5244 02db 2E000000 		.4byte	.LVL10-.Ltext0
 5245 02df 0100     		.2byte	0x1
 5246 02e1 50       		.byte	0x50
 5247 02e2 2E000000 		.4byte	.LVL10-.Ltext0
 5248 02e6 30000000 		.4byte	.LVL11-.Ltext0
 5249 02ea 0300     		.2byte	0x3
 5250 02ec 71       		.byte	0x71
 5251 02ed 7C       		.sleb128 -4
 5252 02ee 9F       		.byte	0x9f
 5253 02ef 30000000 		.4byte	.LVL11-.Ltext0
 5254 02f3 32000000 		.4byte	.LVL12-.Ltext0
 5255 02f7 0100     		.2byte	0x1
 5256 02f9 50       		.byte	0x50
 5257 02fa 32000000 		.4byte	.LVL12-.Ltext0
 5258 02fe 38000000 		.4byte	.LFE19-.Ltext0
 5259 0302 0A00     		.2byte	0xa
 5260 0304 F3       		.byte	0xf3
 5261 0305 03       		.uleb128 0x3
 5262 0306 F5       		.byte	0xf5
 5263 0307 00       		.uleb128 0
 5264 0308 25       		.uleb128 0x25
 5265 0309 F7       		.byte	0xf7
 5266 030a 2C       		.uleb128 0x2c
 5267 030b F7       		.byte	0xf7
 5268 030c 00       		.uleb128 0
 5269 030d 9F       		.byte	0x9f
 5270 030e 00000000 		.4byte	0
 5271 0312 00000000 		.4byte	0
 5272              	.LVUS2:
 5273 0316 00       		.uleb128 0
 5274 0317 00       		.uleb128 .LVU14
 5275 0318 00       		.uleb128 .LVU14
 5276 0319 00       		.uleb128 .LVU15
 5277 031a 00       		.uleb128 .LVU15
 5278 031b 00       		.uleb128 .LVU16
 5279 031c 00       		.uleb128 .LVU16
 5280 031d 00       		.uleb128 .LVU18
 5281 031e 00       		.uleb128 .LVU18
 5282 031f 00       		.uleb128 .LVU23
 5283 0320 00       		.uleb128 .LVU23
 5284 0321 00       		.uleb128 .LVU24
 5285 0322 00       		.uleb128 .LVU24
 5286 0323 00       		.uleb128 .LVU25
 5287 0324 00       		.uleb128 .LVU25
 5288 0325 00       		.uleb128 0
ARM GAS  /tmp/ccx8nc1r.s 			page 119


 5289              	.LLST2:
 5290 0326 00000000 		.4byte	.LVL0-.Ltext0
 5291 032a 16000000 		.4byte	.LVL3-.Ltext0
 5292 032e 0100     		.2byte	0x1
 5293 0330 51       		.byte	0x51
 5294 0331 16000000 		.4byte	.LVL3-.Ltext0
 5295 0335 18000000 		.4byte	.LVL4-.Ltext0
 5296 0339 0200     		.2byte	0x2
 5297 033b 71       		.byte	0x71
 5298 033c 00       		.sleb128 0
 5299 033d 18000000 		.4byte	.LVL4-.Ltext0
 5300 0341 1B000000 		.4byte	.LVL5-1-.Ltext0
 5301 0345 0B00     		.2byte	0xb
 5302 0347 F3       		.byte	0xf3
 5303 0348 03       		.uleb128 0x3
 5304 0349 F5       		.byte	0xf5
 5305 034a 00       		.uleb128 0
 5306 034b 25       		.uleb128 0x25
 5307 034c F7       		.byte	0xf7
 5308 034d 2C       		.uleb128 0x2c
 5309 034e F7       		.byte	0xf7
 5310 034f 00       		.uleb128 0
 5311 0350 23       		.byte	0x23
 5312 0351 04       		.uleb128 0x4
 5313 0352 1B000000 		.4byte	.LVL5-1-.Ltext0
 5314 0356 20000000 		.4byte	.LVL7-.Ltext0
 5315 035a 0A00     		.2byte	0xa
 5316 035c F3       		.byte	0xf3
 5317 035d 03       		.uleb128 0x3
 5318 035e F5       		.byte	0xf5
 5319 035f 01       		.uleb128 0x1
 5320 0360 25       		.uleb128 0x25
 5321 0361 F7       		.byte	0xf7
 5322 0362 2C       		.uleb128 0x2c
 5323 0363 F7       		.byte	0xf7
 5324 0364 00       		.uleb128 0
 5325 0365 9F       		.byte	0x9f
 5326 0366 20000000 		.4byte	.LVL7-.Ltext0
 5327 036a 2C000000 		.4byte	.LVL9-.Ltext0
 5328 036e 0100     		.2byte	0x1
 5329 0370 51       		.byte	0x51
 5330 0371 2C000000 		.4byte	.LVL9-.Ltext0
 5331 0375 2E000000 		.4byte	.LVL10-.Ltext0
 5332 0379 0200     		.2byte	0x2
 5333 037b 70       		.byte	0x70
 5334 037c 04       		.sleb128 4
 5335 037d 2E000000 		.4byte	.LVL10-.Ltext0
 5336 0381 30000000 		.4byte	.LVL11-.Ltext0
 5337 0385 0200     		.2byte	0x2
 5338 0387 71       		.byte	0x71
 5339 0388 00       		.sleb128 0
 5340 0389 30000000 		.4byte	.LVL11-.Ltext0
 5341 038d 38000000 		.4byte	.LFE19-.Ltext0
 5342 0391 0100     		.2byte	0x1
 5343 0393 51       		.byte	0x51
 5344 0394 00000000 		.4byte	0
 5345 0398 00000000 		.4byte	0
ARM GAS  /tmp/ccx8nc1r.s 			page 120


 5346              	.LVUS3:
 5347 039c 00       		.uleb128 0
 5348 039d 00       		.uleb128 .LVU11
 5349 039e 00       		.uleb128 .LVU11
 5350 039f 00       		.uleb128 .LVU18
 5351 03a0 00       		.uleb128 .LVU18
 5352 03a1 00       		.uleb128 .LVU25
 5353 03a2 00       		.uleb128 .LVU25
 5354 03a3 00       		.uleb128 0
 5355              	.LLST3:
 5356 03a4 00000000 		.4byte	.LVL0-.Ltext0
 5357 03a8 0C000000 		.4byte	.LVL1-.Ltext0
 5358 03ac 0100     		.2byte	0x1
 5359 03ae 52       		.byte	0x52
 5360 03af 0C000000 		.4byte	.LVL1-.Ltext0
 5361 03b3 20000000 		.4byte	.LVL7-.Ltext0
 5362 03b7 0A00     		.2byte	0xa
 5363 03b9 F3       		.byte	0xf3
 5364 03ba 03       		.uleb128 0x3
 5365 03bb F5       		.byte	0xf5
 5366 03bc 02       		.uleb128 0x2
 5367 03bd 25       		.uleb128 0x25
 5368 03be F7       		.byte	0xf7
 5369 03bf 2C       		.uleb128 0x2c
 5370 03c0 F7       		.byte	0xf7
 5371 03c1 00       		.uleb128 0
 5372 03c2 9F       		.byte	0x9f
 5373 03c3 20000000 		.4byte	.LVL7-.Ltext0
 5374 03c7 30000000 		.4byte	.LVL11-.Ltext0
 5375 03cb 0100     		.2byte	0x1
 5376 03cd 52       		.byte	0x52
 5377 03ce 30000000 		.4byte	.LVL11-.Ltext0
 5378 03d2 38000000 		.4byte	.LFE19-.Ltext0
 5379 03d6 0A00     		.2byte	0xa
 5380 03d8 F3       		.byte	0xf3
 5381 03d9 03       		.uleb128 0x3
 5382 03da F5       		.byte	0xf5
 5383 03db 02       		.uleb128 0x2
 5384 03dc 25       		.uleb128 0x25
 5385 03dd F7       		.byte	0xf7
 5386 03de 2C       		.uleb128 0x2c
 5387 03df F7       		.byte	0xf7
 5388 03e0 00       		.uleb128 0
 5389 03e1 9F       		.byte	0x9f
 5390 03e2 00000000 		.4byte	0
 5391 03e6 00000000 		.4byte	0
 5392              	.LVUS4:
 5393 03ea 00       		.uleb128 0
 5394 03eb 00       		.uleb128 .LVU12
 5395 03ec 00       		.uleb128 .LVU12
 5396 03ed 00       		.uleb128 .LVU18
 5397 03ee 00       		.uleb128 .LVU18
 5398 03ef 00       		.uleb128 .LVU22
 5399 03f0 00       		.uleb128 .LVU22
 5400 03f1 00       		.uleb128 0
 5401              	.LLST4:
 5402 03f2 00000000 		.4byte	.LVL0-.Ltext0
ARM GAS  /tmp/ccx8nc1r.s 			page 121


 5403 03f6 0E000000 		.4byte	.LVL2-.Ltext0
 5404 03fa 0100     		.2byte	0x1
 5405 03fc 53       		.byte	0x53
 5406 03fd 0E000000 		.4byte	.LVL2-.Ltext0
 5407 0401 20000000 		.4byte	.LVL7-.Ltext0
 5408 0405 0A00     		.2byte	0xa
 5409 0407 F3       		.byte	0xf3
 5410 0408 03       		.uleb128 0x3
 5411 0409 F5       		.byte	0xf5
 5412 040a 03       		.uleb128 0x3
 5413 040b 25       		.uleb128 0x25
 5414 040c F7       		.byte	0xf7
 5415 040d 2C       		.uleb128 0x2c
 5416 040e F7       		.byte	0xf7
 5417 040f 00       		.uleb128 0
 5418 0410 9F       		.byte	0x9f
 5419 0411 20000000 		.4byte	.LVL7-.Ltext0
 5420 0415 2A000000 		.4byte	.LVL8-.Ltext0
 5421 0419 0100     		.2byte	0x1
 5422 041b 53       		.byte	0x53
 5423 041c 2A000000 		.4byte	.LVL8-.Ltext0
 5424 0420 38000000 		.4byte	.LFE19-.Ltext0
 5425 0424 0A00     		.2byte	0xa
 5426 0426 F3       		.byte	0xf3
 5427 0427 03       		.uleb128 0x3
 5428 0428 F5       		.byte	0xf5
 5429 0429 03       		.uleb128 0x3
 5430 042a 25       		.uleb128 0x25
 5431 042b F7       		.byte	0xf7
 5432 042c 2C       		.uleb128 0x2c
 5433 042d F7       		.byte	0xf7
 5434 042e 00       		.uleb128 0
 5435 042f 9F       		.byte	0x9f
 5436 0430 00000000 		.4byte	0
 5437 0434 00000000 		.4byte	0
 5438              	.LVUS5:
 5439 0438 02       		.uleb128 .LVU2
 5440 0439 00       		.uleb128 .LVU17
 5441 043a 00       		.uleb128 .LVU18
 5442 043b 00       		.uleb128 .LVU26
 5443 043c 00       		.uleb128 .LVU26
 5444 043d 00       		.uleb128 0
 5445              	.LLST5:
 5446 043e 00000000 		.4byte	.LVL0-.Ltext0
 5447 0442 1E000000 		.4byte	.LVL6-.Ltext0
 5448 0446 0200     		.2byte	0x2
 5449 0448 30       		.byte	0x30
 5450 0449 9F       		.byte	0x9f
 5451 044a 20000000 		.4byte	.LVL7-.Ltext0
 5452 044e 32000000 		.4byte	.LVL12-.Ltext0
 5453 0452 0200     		.2byte	0x2
 5454 0454 30       		.byte	0x30
 5455 0455 9F       		.byte	0x9f
 5456 0456 32000000 		.4byte	.LVL12-.Ltext0
 5457 045a 38000000 		.4byte	.LFE19-.Ltext0
 5458 045e 0200     		.2byte	0x2
 5459 0460 31       		.byte	0x31
ARM GAS  /tmp/ccx8nc1r.s 			page 122


 5460 0461 9F       		.byte	0x9f
 5461 0462 00000000 		.4byte	0
 5462 0466 00000000 		.4byte	0
 5463              	.LLST28:
 5464 046a 30010000 		.4byte	.LFB18-.Ltext0
 5465 046e 34010000 		.4byte	.LCFI9-.Ltext0
 5466 0472 0200     		.2byte	0x2
 5467 0474 7D       		.byte	0x7d
 5468 0475 00       		.sleb128 0
 5469 0476 34010000 		.4byte	.LCFI9-.Ltext0
 5470 047a 4E010000 		.4byte	.LCFI10-.Ltext0
 5471 047e 0200     		.2byte	0x2
 5472 0480 7D       		.byte	0x7d
 5473 0481 28       		.sleb128 40
 5474 0482 4E010000 		.4byte	.LCFI10-.Ltext0
 5475 0486 52010000 		.4byte	.LCFI11-.Ltext0
 5476 048a 0200     		.2byte	0x2
 5477 048c 7D       		.byte	0x7d
 5478 048d 1C       		.sleb128 28
 5479 048e 52010000 		.4byte	.LCFI11-.Ltext0
 5480 0492 AC010000 		.4byte	.LFE18-.Ltext0
 5481 0496 0200     		.2byte	0x2
 5482 0498 7D       		.byte	0x7d
 5483 0499 28       		.sleb128 40
 5484 049a 00000000 		.4byte	0
 5485 049e 00000000 		.4byte	0
 5486              	.LVUS29:
 5487 04a2 00       		.uleb128 0
 5488 04a3 00       		.uleb128 .LVU132
 5489 04a4 00       		.uleb128 .LVU132
 5490 04a5 00       		.uleb128 0
 5491              	.LLST29:
 5492 04a6 30010000 		.4byte	.LVL36-.Ltext0
 5493 04aa 39010000 		.4byte	.LVL37-1-.Ltext0
 5494 04ae 0100     		.2byte	0x1
 5495 04b0 50       		.byte	0x50
 5496 04b1 39010000 		.4byte	.LVL37-1-.Ltext0
 5497 04b5 AC010000 		.4byte	.LFE18-.Ltext0
 5498 04b9 0100     		.2byte	0x1
 5499 04bb 57       		.byte	0x57
 5500 04bc 00000000 		.4byte	0
 5501 04c0 00000000 		.4byte	0
 5502              	.LVUS30:
 5503 04c4 00       		.uleb128 .LVU134
 5504 04c5 00       		.uleb128 .LVU136
 5505 04c6 00       		.uleb128 .LVU136
 5506 04c7 00       		.uleb128 0
 5507              	.LLST30:
 5508 04c8 3E010000 		.4byte	.LVL38-.Ltext0
 5509 04cc 46010000 		.4byte	.LVL39-.Ltext0
 5510 04d0 0100     		.2byte	0x1
 5511 04d2 50       		.byte	0x50
 5512 04d3 46010000 		.4byte	.LVL39-.Ltext0
 5513 04d7 AC010000 		.4byte	.LFE18-.Ltext0
 5514 04db 0100     		.2byte	0x1
 5515 04dd 56       		.byte	0x56
 5516 04de 00000000 		.4byte	0
ARM GAS  /tmp/ccx8nc1r.s 			page 123


 5517 04e2 00000000 		.4byte	0
 5518              	.LVUS31:
 5519 04e6 00       		.uleb128 .LVU146
 5520 04e7 00       		.uleb128 .LVU162
 5521 04e8 00       		.uleb128 .LVU172
 5522 04e9 00       		.uleb128 0
 5523              	.LLST31:
 5524 04ea 5A010000 		.4byte	.LVL41-.Ltext0
 5525 04ee 86010000 		.4byte	.LVL45-.Ltext0
 5526 04f2 0100     		.2byte	0x1
 5527 04f4 58       		.byte	0x58
 5528 04f5 98010000 		.4byte	.LVL48-.Ltext0
 5529 04f9 AC010000 		.4byte	.LFE18-.Ltext0
 5530 04fd 0100     		.2byte	0x1
 5531 04ff 58       		.byte	0x58
 5532 0500 00000000 		.4byte	0
 5533 0504 00000000 		.4byte	0
 5534              	.LVUS32:
 5535 0508 00       		.uleb128 .LVU155
 5536 0509 00       		.uleb128 .LVU162
 5537 050a 00       		.uleb128 .LVU172
 5538 050b 00       		.uleb128 .LVU174
 5539 050c 00       		.uleb128 .LVU174
 5540 050d 00       		.uleb128 .LVU175
 5541              	.LLST32:
 5542 050e 76010000 		.4byte	.LVL44-.Ltext0
 5543 0512 85010000 		.4byte	.LVL45-1-.Ltext0
 5544 0516 0100     		.2byte	0x1
 5545 0518 53       		.byte	0x53
 5546 0519 98010000 		.4byte	.LVL48-.Ltext0
 5547 051d 9A010000 		.4byte	.LVL49-.Ltext0
 5548 0521 0100     		.2byte	0x1
 5549 0523 53       		.byte	0x53
 5550 0524 9A010000 		.4byte	.LVL49-.Ltext0
 5551 0528 A2010000 		.4byte	.LVL50-.Ltext0
 5552 052c 0700     		.2byte	0x7
 5553 052e 74       		.byte	0x74
 5554 052f 18       		.sleb128 24
 5555 0530 06       		.byte	0x6
 5556 0531 78       		.byte	0x78
 5557 0532 00       		.sleb128 0
 5558 0533 22       		.byte	0x22
 5559 0534 9F       		.byte	0x9f
 5560 0535 00000000 		.4byte	0
 5561 0539 00000000 		.4byte	0
 5562              	.LVUS33:
 5563 053d 01       		.uleb128 .LVU167
 5564 053e 00       		.uleb128 .LVU171
 5565 053f 00       		.uleb128 .LVU171
 5566 0540 00       		.uleb128 .LVU172
 5567              	.LLST33:
 5568 0541 8E010000 		.4byte	.LVL46-.Ltext0
 5569 0545 96010000 		.4byte	.LVL47-.Ltext0
 5570 0549 0100     		.2byte	0x1
 5571 054b 53       		.byte	0x53
 5572 054c 96010000 		.4byte	.LVL47-.Ltext0
 5573 0550 98010000 		.4byte	.LVL48-.Ltext0
ARM GAS  /tmp/ccx8nc1r.s 			page 124


 5574 0554 0500     		.2byte	0x5
 5575 0556 03       		.byte	0x3
 5576 0557 00000000 		.4byte	pxOverflowTimerList
 5577 055b 00000000 		.4byte	0
 5578 055f 00000000 		.4byte	0
 5579              	.LVUS34:
 5580 0563 01       		.uleb128 .LVU147
 5581 0564 00       		.uleb128 .LVU162
 5582 0565 00       		.uleb128 .LVU172
 5583 0566 00       		.uleb128 0
 5584              	.LLST34:
 5585 0567 5A010000 		.4byte	.LVL41-.Ltext0
 5586 056b 86010000 		.4byte	.LVL45-.Ltext0
 5587 056f 0100     		.2byte	0x1
 5588 0571 54       		.byte	0x54
 5589 0572 98010000 		.4byte	.LVL48-.Ltext0
 5590 0576 AC010000 		.4byte	.LFE18-.Ltext0
 5591 057a 0100     		.2byte	0x1
 5592 057c 54       		.byte	0x54
 5593 057d 00000000 		.4byte	0
 5594 0581 00000000 		.4byte	0
 5595              	.LLST35:
 5596 0585 AC010000 		.4byte	.LFB15-.Ltext0
 5597 0589 B0010000 		.4byte	.LCFI12-.Ltext0
 5598 058d 0200     		.2byte	0x2
 5599 058f 7D       		.byte	0x7d
 5600 0590 00       		.sleb128 0
 5601 0591 B0010000 		.4byte	.LCFI12-.Ltext0
 5602 0595 B6010000 		.4byte	.LCFI13-.Ltext0
 5603 0599 0200     		.2byte	0x2
 5604 059b 7D       		.byte	0x7d
 5605 059c 1C       		.sleb128 28
 5606 059d B6010000 		.4byte	.LCFI13-.Ltext0
 5607 05a1 20030000 		.4byte	.LFE15-.Ltext0
 5608 05a5 0200     		.2byte	0x2
 5609 05a7 7D       		.byte	0x7d
 5610 05a8 38       		.sleb128 56
 5611 05a9 00000000 		.4byte	0
 5612 05ad 00000000 		.4byte	0
 5613              	.LVUS36:
 5614 05b1 00       		.uleb128 0
 5615 05b2 00       		.uleb128 .LVU181
 5616 05b3 00       		.uleb128 .LVU181
 5617 05b4 00       		.uleb128 0
 5618              	.LLST36:
 5619 05b5 AC010000 		.4byte	.LVL52-.Ltext0
 5620 05b9 B6010000 		.4byte	.LVL53-.Ltext0
 5621 05bd 0100     		.2byte	0x1
 5622 05bf 50       		.byte	0x50
 5623 05c0 B6010000 		.4byte	.LVL53-.Ltext0
 5624 05c4 20030000 		.4byte	.LFE15-.Ltext0
 5625 05c8 0A00     		.2byte	0xa
 5626 05ca F3       		.byte	0xf3
 5627 05cb 03       		.uleb128 0x3
 5628 05cc F5       		.byte	0xf5
 5629 05cd 00       		.uleb128 0
 5630 05ce 25       		.uleb128 0x25
ARM GAS  /tmp/ccx8nc1r.s 			page 125


 5631 05cf F7       		.byte	0xf7
 5632 05d0 2C       		.uleb128 0x2c
 5633 05d1 F7       		.byte	0xf7
 5634 05d2 00       		.uleb128 0
 5635 05d3 9F       		.byte	0x9f
 5636 05d4 00000000 		.4byte	0
 5637 05d8 00000000 		.4byte	0
 5638              	.LVUS37:
 5639 05dc 01       		.uleb128 .LVU195
 5640 05dd 00       		.uleb128 .LVU252
 5641 05de 00       		.uleb128 .LVU254
 5642 05df 00       		.uleb128 0
 5643              	.LLST37:
 5644 05e0 CA010000 		.4byte	.LVL55-.Ltext0
 5645 05e4 5C020000 		.4byte	.LVL70-.Ltext0
 5646 05e8 0100     		.2byte	0x1
 5647 05ea 58       		.byte	0x58
 5648 05eb 60020000 		.4byte	.LVL71-.Ltext0
 5649 05ef 20030000 		.4byte	.LFE15-.Ltext0
 5650 05f3 0100     		.2byte	0x1
 5651 05f5 58       		.byte	0x58
 5652 05f6 00000000 		.4byte	0
 5653 05fa 00000000 		.4byte	0
 5654              	.LVUS38:
 5655 05fe 00       		.uleb128 .LVU190
 5656 05ff 00       		.uleb128 .LVU194
 5657              	.LLST38:
 5658 0600 C2010000 		.4byte	.LVL54-.Ltext0
 5659 0604 CA010000 		.4byte	.LVL55-.Ltext0
 5660 0608 0200     		.2byte	0x2
 5661 060a 30       		.byte	0x30
 5662 060b 9F       		.byte	0x9f
 5663 060c 00000000 		.4byte	0
 5664 0610 00000000 		.4byte	0
 5665              	.LVUS39:
 5666 0614 05       		.uleb128 .LVU186
 5667 0615 01       		.uleb128 .LVU195
 5668 0616 00       		.uleb128 .LVU252
 5669 0617 00       		.uleb128 .LVU254
 5670              	.LLST39:
 5671 0618 B6010000 		.4byte	.LVL53-.Ltext0
 5672 061c CA010000 		.4byte	.LVL55-.Ltext0
 5673 0620 0600     		.2byte	0x6
 5674 0622 F2       		.byte	0xf2
 5675 0623 6F0B0000 		.4byte	.Ldebug_info0+2927
 5676 0627 00       		.sleb128 0
 5677 0628 5C020000 		.4byte	.LVL70-.Ltext0
 5678 062c 60020000 		.4byte	.LVL71-.Ltext0
 5679 0630 0600     		.2byte	0x6
 5680 0632 F2       		.byte	0xf2
 5681 0633 6F0B0000 		.4byte	.Ldebug_info0+2927
 5682 0637 00       		.sleb128 0
 5683 0638 00000000 		.4byte	0
 5684 063c 00000000 		.4byte	0
 5685              	.LVUS40:
 5686 0640 00       		.uleb128 .LVU194
 5687 0641 01       		.uleb128 .LVU195
ARM GAS  /tmp/ccx8nc1r.s 			page 126


 5688              	.LLST40:
 5689 0642 CA010000 		.4byte	.LVL55-.Ltext0
 5690 0646 CA010000 		.4byte	.LVL55-.Ltext0
 5691 064a 0100     		.2byte	0x1
 5692 064c 58       		.byte	0x58
 5693 064d 00000000 		.4byte	0
 5694 0651 00000000 		.4byte	0
 5695              	.LVUS41:
 5696 0655 03       		.uleb128 .LVU197
 5697 0656 00       		.uleb128 .LVU233
 5698 0657 00       		.uleb128 .LVU254
 5699 0658 00       		.uleb128 .LVU260
 5700 0659 00       		.uleb128 .LVU261
 5701 065a 00       		.uleb128 .LVU272
 5702              	.LLST41:
 5703 065b CA010000 		.4byte	.LVL55-.Ltext0
 5704 065f 20020000 		.4byte	.LVL64-.Ltext0
 5705 0663 0100     		.2byte	0x1
 5706 0665 54       		.byte	0x54
 5707 0666 60020000 		.4byte	.LVL71-.Ltext0
 5708 066a 6E020000 		.4byte	.LVL73-.Ltext0
 5709 066e 0100     		.2byte	0x1
 5710 0670 54       		.byte	0x54
 5711 0671 74020000 		.4byte	.LVL74-.Ltext0
 5712 0675 A2020000 		.4byte	.LVL79-.Ltext0
 5713 0679 0100     		.2byte	0x1
 5714 067b 54       		.byte	0x54
 5715 067c 00000000 		.4byte	0
 5716 0680 00000000 		.4byte	0
 5717              	.LVUS42:
 5718 0684 03       		.uleb128 .LVU197
 5719 0685 00       		.uleb128 .LVU233
 5720 0686 00       		.uleb128 .LVU254
 5721 0687 00       		.uleb128 .LVU272
 5722              	.LLST42:
 5723 0688 CA010000 		.4byte	.LVL55-.Ltext0
 5724 068c 20020000 		.4byte	.LVL64-.Ltext0
 5725 0690 0100     		.2byte	0x1
 5726 0692 58       		.byte	0x58
 5727 0693 60020000 		.4byte	.LVL71-.Ltext0
 5728 0697 A2020000 		.4byte	.LVL79-.Ltext0
 5729 069b 0100     		.2byte	0x1
 5730 069d 58       		.byte	0x58
 5731 069e 00000000 		.4byte	0
 5732 06a2 00000000 		.4byte	0
 5733              	.LVUS43:
 5734 06a6 00       		.uleb128 .LVU205
 5735 06a7 00       		.uleb128 .LVU212
 5736 06a8 00       		.uleb128 .LVU212
 5737 06a9 00       		.uleb128 .LVU233
 5738 06aa 00       		.uleb128 .LVU254
 5739 06ab 00       		.uleb128 .LVU257
 5740 06ac 00       		.uleb128 .LVU257
 5741 06ad 00       		.uleb128 .LVU262
 5742 06ae 00       		.uleb128 .LVU262
 5743 06af 00       		.uleb128 .LVU270
 5744 06b0 00       		.uleb128 .LVU270
ARM GAS  /tmp/ccx8nc1r.s 			page 127


 5745 06b1 00       		.uleb128 .LVU272
 5746 06b2 00       		.uleb128 .LVU272
 5747 06b3 00       		.uleb128 .LVU272
 5748              	.LLST43:
 5749 06b4 D8010000 		.4byte	.LVL58-.Ltext0
 5750 06b8 E7010000 		.4byte	.LVL59-1-.Ltext0
 5751 06bc 0100     		.2byte	0x1
 5752 06be 50       		.byte	0x50
 5753 06bf E7010000 		.4byte	.LVL59-1-.Ltext0
 5754 06c3 20020000 		.4byte	.LVL64-.Ltext0
 5755 06c7 0100     		.2byte	0x1
 5756 06c9 59       		.byte	0x59
 5757 06ca 60020000 		.4byte	.LVL71-.Ltext0
 5758 06ce 6A020000 		.4byte	.LVL72-.Ltext0
 5759 06d2 0100     		.2byte	0x1
 5760 06d4 59       		.byte	0x59
 5761 06d5 6A020000 		.4byte	.LVL72-.Ltext0
 5762 06d9 78020000 		.4byte	.LVL75-.Ltext0
 5763 06dd 0100     		.2byte	0x1
 5764 06df 50       		.byte	0x50
 5765 06e0 78020000 		.4byte	.LVL75-.Ltext0
 5766 06e4 9E020000 		.4byte	.LVL78-.Ltext0
 5767 06e8 0100     		.2byte	0x1
 5768 06ea 59       		.byte	0x59
 5769 06eb 9E020000 		.4byte	.LVL78-.Ltext0
 5770 06ef A1020000 		.4byte	.LVL79-1-.Ltext0
 5771 06f3 0100     		.2byte	0x1
 5772 06f5 50       		.byte	0x50
 5773 06f6 A1020000 		.4byte	.LVL79-1-.Ltext0
 5774 06fa A2020000 		.4byte	.LVL79-.Ltext0
 5775 06fe 0100     		.2byte	0x1
 5776 0700 59       		.byte	0x59
 5777 0701 00000000 		.4byte	0
 5778 0705 00000000 		.4byte	0
 5779              	.LVUS44:
 5780 0709 01       		.uleb128 .LVU213
 5781 070a 00       		.uleb128 .LVU233
 5782 070b 00       		.uleb128 .LVU254
 5783 070c 00       		.uleb128 .LVU257
 5784              	.LLST44:
 5785 070d E8010000 		.4byte	.LVL59-.Ltext0
 5786 0711 20020000 		.4byte	.LVL64-.Ltext0
 5787 0715 0100     		.2byte	0x1
 5788 0717 59       		.byte	0x59
 5789 0718 60020000 		.4byte	.LVL71-.Ltext0
 5790 071c 6A020000 		.4byte	.LVL72-.Ltext0
 5791 0720 0100     		.2byte	0x1
 5792 0722 59       		.byte	0x59
 5793 0723 00000000 		.4byte	0
 5794 0727 00000000 		.4byte	0
 5795              	.LVUS45:
 5796 072b 01       		.uleb128 .LVU213
 5797 072c 00       		.uleb128 .LVU233
 5798 072d 00       		.uleb128 .LVU254
 5799 072e 00       		.uleb128 .LVU257
 5800              	.LLST45:
 5801 072f E8010000 		.4byte	.LVL59-.Ltext0
ARM GAS  /tmp/ccx8nc1r.s 			page 128


 5802 0733 20020000 		.4byte	.LVL64-.Ltext0
 5803 0737 0100     		.2byte	0x1
 5804 0739 58       		.byte	0x58
 5805 073a 60020000 		.4byte	.LVL71-.Ltext0
 5806 073e 6A020000 		.4byte	.LVL72-.Ltext0
 5807 0742 0100     		.2byte	0x1
 5808 0744 58       		.byte	0x58
 5809 0745 00000000 		.4byte	0
 5810 0749 00000000 		.4byte	0
 5811              	.LVUS46:
 5812 074d 00       		.uleb128 .LVU218
 5813 074e 00       		.uleb128 .LVU233
 5814 074f 00       		.uleb128 .LVU254
 5815 0750 00       		.uleb128 .LVU257
 5816              	.LLST46:
 5817 0751 EE010000 		.4byte	.LVL60-.Ltext0
 5818 0755 20020000 		.4byte	.LVL64-.Ltext0
 5819 0759 0100     		.2byte	0x1
 5820 075b 57       		.byte	0x57
 5821 075c 60020000 		.4byte	.LVL71-.Ltext0
 5822 0760 6A020000 		.4byte	.LVL72-.Ltext0
 5823 0764 0100     		.2byte	0x1
 5824 0766 57       		.byte	0x57
 5825 0767 00000000 		.4byte	0
 5826 076b 00000000 		.4byte	0
 5827              	.LVUS47:
 5828 076f 00       		.uleb128 .LVU241
 5829 0770 00       		.uleb128 .LVU252
 5830 0771 00       		.uleb128 .LVU281
 5831 0772 00       		.uleb128 0
 5832              	.LLST47:
 5833 0773 36020000 		.4byte	.LVL66-.Ltext0
 5834 0777 5C020000 		.4byte	.LVL70-.Ltext0
 5835 077b 0100     		.2byte	0x1
 5836 077d 54       		.byte	0x54
 5837 077e A4020000 		.4byte	.LVL80-.Ltext0
 5838 0782 20030000 		.4byte	.LFE15-.Ltext0
 5839 0786 0100     		.2byte	0x1
 5840 0788 54       		.byte	0x54
 5841 0789 00000000 		.4byte	0
 5842 078d 00000000 		.4byte	0
 5843              	.LVUS48:
 5844 0791 00       		.uleb128 .LVU251
 5845 0792 00       		.uleb128 .LVU252
 5846 0793 00       		.uleb128 .LVU281
 5847 0794 00       		.uleb128 .LVU288
 5848 0795 00       		.uleb128 .LVU288
 5849 0796 00       		.uleb128 .LVU289
 5850 0797 00       		.uleb128 .LVU298
 5851 0798 00       		.uleb128 .LVU311
 5852 0799 00       		.uleb128 .LVU311
 5853 079a 00       		.uleb128 .LVU312
 5854 079b 00       		.uleb128 .LVU313
 5855 079c 00       		.uleb128 .LVU317
 5856              	.LLST48:
 5857 079d 4A020000 		.4byte	.LVL69-.Ltext0
 5858 07a1 5C020000 		.4byte	.LVL70-.Ltext0
ARM GAS  /tmp/ccx8nc1r.s 			page 129


 5859 07a5 0100     		.2byte	0x1
 5860 07a7 50       		.byte	0x50
 5861 07a8 A4020000 		.4byte	.LVL80-.Ltext0
 5862 07ac B6020000 		.4byte	.LVL81-.Ltext0
 5863 07b0 0100     		.2byte	0x1
 5864 07b2 50       		.byte	0x50
 5865 07b3 B6020000 		.4byte	.LVL81-.Ltext0
 5866 07b7 BB020000 		.4byte	.LVL82-1-.Ltext0
 5867 07bb 0100     		.2byte	0x1
 5868 07bd 52       		.byte	0x52
 5869 07be E2020000 		.4byte	.LVL85-.Ltext0
 5870 07c2 06030000 		.4byte	.LVL86-.Ltext0
 5871 07c6 0100     		.2byte	0x1
 5872 07c8 50       		.byte	0x50
 5873 07c9 06030000 		.4byte	.LVL86-.Ltext0
 5874 07cd 09030000 		.4byte	.LVL87-1-.Ltext0
 5875 07d1 0100     		.2byte	0x1
 5876 07d3 52       		.byte	0x52
 5877 07d4 0C030000 		.4byte	.LVL88-.Ltext0
 5878 07d8 16030000 		.4byte	.LVL89-.Ltext0
 5879 07dc 0100     		.2byte	0x1
 5880 07de 50       		.byte	0x50
 5881 07df 00000000 		.4byte	0
 5882 07e3 00000000 		.4byte	0
 5883              	.LVUS58:
 5884 07e7 00       		.uleb128 0
 5885 07e8 00       		.uleb128 .LVU358
 5886 07e9 00       		.uleb128 .LVU358
 5887 07ea 00       		.uleb128 0
 5888              	.LLST58:
 5889 07eb 5A030000 		.4byte	.LVL100-.Ltext0
 5890 07ef 5C030000 		.4byte	.LVL101-.Ltext0
 5891 07f3 0100     		.2byte	0x1
 5892 07f5 50       		.byte	0x50
 5893 07f6 5C030000 		.4byte	.LVL101-.Ltext0
 5894 07fa 5E030000 		.4byte	.LFE13-.Ltext0
 5895 07fe 0A00     		.2byte	0xa
 5896 0800 F3       		.byte	0xf3
 5897 0801 03       		.uleb128 0x3
 5898 0802 F5       		.byte	0xf5
 5899 0803 00       		.uleb128 0
 5900 0804 25       		.uleb128 0x25
 5901 0805 F7       		.byte	0xf7
 5902 0806 2C       		.uleb128 0x2c
 5903 0807 F7       		.byte	0xf7
 5904 0808 00       		.uleb128 0
 5905 0809 9F       		.byte	0x9f
 5906 080a 00000000 		.4byte	0
 5907 080e 00000000 		.4byte	0
 5908              	.LVUS59:
 5909 0812 02       		.uleb128 .LVU355
 5910 0813 00       		.uleb128 .LVU358
 5911 0814 00       		.uleb128 .LVU358
 5912 0815 00       		.uleb128 0
 5913              	.LLST59:
 5914 0816 5A030000 		.4byte	.LVL100-.Ltext0
 5915 081a 5C030000 		.4byte	.LVL101-.Ltext0
ARM GAS  /tmp/ccx8nc1r.s 			page 130


 5916 081e 0100     		.2byte	0x1
 5917 0820 50       		.byte	0x50
 5918 0821 5C030000 		.4byte	.LVL101-.Ltext0
 5919 0825 5E030000 		.4byte	.LFE13-.Ltext0
 5920 0829 0A00     		.2byte	0xa
 5921 082b F3       		.byte	0xf3
 5922 082c 03       		.uleb128 0x3
 5923 082d F5       		.byte	0xf5
 5924 082e 00       		.uleb128 0
 5925 082f 25       		.uleb128 0x25
 5926 0830 F7       		.byte	0xf7
 5927 0831 2C       		.uleb128 0x2c
 5928 0832 F7       		.byte	0xf7
 5929 0833 00       		.uleb128 0
 5930 0834 9F       		.byte	0x9f
 5931 0835 00000000 		.4byte	0
 5932 0839 00000000 		.4byte	0
 5933              	.LVUS55:
 5934 083d 00       		.uleb128 0
 5935 083e 00       		.uleb128 .LVU352
 5936 083f 00       		.uleb128 .LVU352
 5937 0840 00       		.uleb128 0
 5938              	.LLST55:
 5939 0841 56030000 		.4byte	.LVL98-.Ltext0
 5940 0845 58030000 		.4byte	.LVL99-.Ltext0
 5941 0849 0100     		.2byte	0x1
 5942 084b 50       		.byte	0x50
 5943 084c 58030000 		.4byte	.LVL99-.Ltext0
 5944 0850 5A030000 		.4byte	.LFE12-.Ltext0
 5945 0854 0A00     		.2byte	0xa
 5946 0856 F3       		.byte	0xf3
 5947 0857 03       		.uleb128 0x3
 5948 0858 F5       		.byte	0xf5
 5949 0859 00       		.uleb128 0
 5950 085a 25       		.uleb128 0x25
 5951 085b F7       		.byte	0xf7
 5952 085c 2C       		.uleb128 0x2c
 5953 085d F7       		.byte	0xf7
 5954 085e 00       		.uleb128 0
 5955 085f 9F       		.byte	0x9f
 5956 0860 00000000 		.4byte	0
 5957 0864 00000000 		.4byte	0
 5958              	.LVUS56:
 5959 0868 02       		.uleb128 .LVU347
 5960 0869 00       		.uleb128 .LVU352
 5961 086a 00       		.uleb128 .LVU352
 5962 086b 00       		.uleb128 0
 5963              	.LLST56:
 5964 086c 56030000 		.4byte	.LVL98-.Ltext0
 5965 0870 58030000 		.4byte	.LVL99-.Ltext0
 5966 0874 0100     		.2byte	0x1
 5967 0876 50       		.byte	0x50
 5968 0877 58030000 		.4byte	.LVL99-.Ltext0
 5969 087b 5A030000 		.4byte	.LFE12-.Ltext0
 5970 087f 0A00     		.2byte	0xa
 5971 0881 F3       		.byte	0xf3
 5972 0882 03       		.uleb128 0x3
ARM GAS  /tmp/ccx8nc1r.s 			page 131


 5973 0883 F5       		.byte	0xf5
 5974 0884 00       		.uleb128 0
 5975 0885 25       		.uleb128 0x25
 5976 0886 F7       		.byte	0xf7
 5977 0887 2C       		.uleb128 0x2c
 5978 0888 F7       		.byte	0xf7
 5979 0889 00       		.uleb128 0
 5980 088a 9F       		.byte	0x9f
 5981 088b 00000000 		.4byte	0
 5982 088f 00000000 		.4byte	0
 5983              	.LVUS57:
 5984 0893 05       		.uleb128 .LVU350
 5985 0894 00       		.uleb128 .LVU352
 5986 0895 00       		.uleb128 .LVU352
 5987 0896 00       		.uleb128 0
 5988              	.LLST57:
 5989 0897 56030000 		.4byte	.LVL98-.Ltext0
 5990 089b 58030000 		.4byte	.LVL99-.Ltext0
 5991 089f 0200     		.2byte	0x2
 5992 08a1 70       		.byte	0x70
 5993 08a2 04       		.sleb128 4
 5994 08a3 58030000 		.4byte	.LVL99-.Ltext0
 5995 08a7 5A030000 		.4byte	.LFE12-.Ltext0
 5996 08ab 0100     		.2byte	0x1
 5997 08ad 50       		.byte	0x50
 5998 08ae 00000000 		.4byte	0
 5999 08b2 00000000 		.4byte	0
 6000              	.LLST51:
 6001 08b6 30030000 		.4byte	.LFB11-.Ltext0
 6002 08ba 32030000 		.4byte	.LCFI14-.Ltext0
 6003 08be 0200     		.2byte	0x2
 6004 08c0 7D       		.byte	0x7d
 6005 08c1 00       		.sleb128 0
 6006 08c2 32030000 		.4byte	.LCFI14-.Ltext0
 6007 08c6 4C030000 		.4byte	.LCFI15-.Ltext0
 6008 08ca 0200     		.2byte	0x2
 6009 08cc 7D       		.byte	0x7d
 6010 08cd 10       		.sleb128 16
 6011 08ce 4C030000 		.4byte	.LCFI15-.Ltext0
 6012 08d2 50030000 		.4byte	.LCFI16-.Ltext0
 6013 08d6 0200     		.2byte	0x2
 6014 08d8 7D       		.byte	0x7d
 6015 08d9 00       		.sleb128 0
 6016 08da 50030000 		.4byte	.LCFI16-.Ltext0
 6017 08de 56030000 		.4byte	.LFE11-.Ltext0
 6018 08e2 0200     		.2byte	0x2
 6019 08e4 7D       		.byte	0x7d
 6020 08e5 10       		.sleb128 16
 6021 08e6 00000000 		.4byte	0
 6022 08ea 00000000 		.4byte	0
 6023              	.LVUS52:
 6024 08ee 00       		.uleb128 0
 6025 08ef 00       		.uleb128 .LVU336
 6026 08f0 00       		.uleb128 .LVU336
 6027 08f1 00       		.uleb128 .LVU342
 6028 08f2 00       		.uleb128 .LVU342
 6029 08f3 00       		.uleb128 .LVU343
ARM GAS  /tmp/ccx8nc1r.s 			page 132


 6030 08f4 00       		.uleb128 .LVU343
 6031 08f5 00       		.uleb128 0
 6032              	.LLST52:
 6033 08f6 30030000 		.4byte	.LVL93-.Ltext0
 6034 08fa 39030000 		.4byte	.LVL95-1-.Ltext0
 6035 08fe 0100     		.2byte	0x1
 6036 0900 50       		.byte	0x50
 6037 0901 39030000 		.4byte	.LVL95-1-.Ltext0
 6038 0905 4C030000 		.4byte	.LVL96-.Ltext0
 6039 0909 0100     		.2byte	0x1
 6040 090b 54       		.byte	0x54
 6041 090c 4C030000 		.4byte	.LVL96-.Ltext0
 6042 0910 50030000 		.4byte	.LVL97-.Ltext0
 6043 0914 0A00     		.2byte	0xa
 6044 0916 F3       		.byte	0xf3
 6045 0917 03       		.uleb128 0x3
 6046 0918 F5       		.byte	0xf5
 6047 0919 00       		.uleb128 0
 6048 091a 25       		.uleb128 0x25
 6049 091b F7       		.byte	0xf7
 6050 091c 2C       		.uleb128 0x2c
 6051 091d F7       		.byte	0xf7
 6052 091e 00       		.uleb128 0
 6053 091f 9F       		.byte	0x9f
 6054 0920 50030000 		.4byte	.LVL97-.Ltext0
 6055 0924 56030000 		.4byte	.LFE11-.Ltext0
 6056 0928 0100     		.2byte	0x1
 6057 092a 54       		.byte	0x54
 6058 092b 00000000 		.4byte	0
 6059 092f 00000000 		.4byte	0
 6060              	.LVUS53:
 6061 0933 00       		.uleb128 0
 6062 0934 00       		.uleb128 .LVU336
 6063 0935 00       		.uleb128 .LVU336
 6064 0936 00       		.uleb128 .LVU342
 6065 0937 00       		.uleb128 .LVU342
 6066 0938 00       		.uleb128 .LVU343
 6067 0939 00       		.uleb128 .LVU343
 6068 093a 00       		.uleb128 0
 6069              	.LLST53:
 6070 093b 30030000 		.4byte	.LVL93-.Ltext0
 6071 093f 39030000 		.4byte	.LVL95-1-.Ltext0
 6072 0943 0100     		.2byte	0x1
 6073 0945 51       		.byte	0x51
 6074 0946 39030000 		.4byte	.LVL95-1-.Ltext0
 6075 094a 4C030000 		.4byte	.LVL96-.Ltext0
 6076 094e 0100     		.2byte	0x1
 6077 0950 55       		.byte	0x55
 6078 0951 4C030000 		.4byte	.LVL96-.Ltext0
 6079 0955 50030000 		.4byte	.LVL97-.Ltext0
 6080 0959 0A00     		.2byte	0xa
 6081 095b F3       		.byte	0xf3
 6082 095c 03       		.uleb128 0x3
 6083 095d F5       		.byte	0xf5
 6084 095e 01       		.uleb128 0x1
 6085 095f 25       		.uleb128 0x25
 6086 0960 F7       		.byte	0xf7
ARM GAS  /tmp/ccx8nc1r.s 			page 133


 6087 0961 2C       		.uleb128 0x2c
 6088 0962 F7       		.byte	0xf7
 6089 0963 00       		.uleb128 0
 6090 0964 9F       		.byte	0x9f
 6091 0965 50030000 		.4byte	.LVL97-.Ltext0
 6092 0969 56030000 		.4byte	.LFE11-.Ltext0
 6093 096d 0100     		.2byte	0x1
 6094 096f 55       		.byte	0x55
 6095 0970 00000000 		.4byte	0
 6096 0974 00000000 		.4byte	0
 6097              	.LVUS54:
 6098 0978 00       		.uleb128 .LVU332
 6099 0979 00       		.uleb128 .LVU336
 6100 097a 00       		.uleb128 .LVU336
 6101 097b 00       		.uleb128 .LVU342
 6102 097c 00       		.uleb128 .LVU342
 6103 097d 00       		.uleb128 .LVU343
 6104 097e 00       		.uleb128 .LVU343
 6105 097f 00       		.uleb128 0
 6106              	.LLST54:
 6107 0980 34030000 		.4byte	.LVL94-.Ltext0
 6108 0984 39030000 		.4byte	.LVL95-1-.Ltext0
 6109 0988 0100     		.2byte	0x1
 6110 098a 50       		.byte	0x50
 6111 098b 39030000 		.4byte	.LVL95-1-.Ltext0
 6112 098f 4C030000 		.4byte	.LVL96-.Ltext0
 6113 0993 0100     		.2byte	0x1
 6114 0995 54       		.byte	0x54
 6115 0996 4C030000 		.4byte	.LVL96-.Ltext0
 6116 099a 50030000 		.4byte	.LVL97-.Ltext0
 6117 099e 0A00     		.2byte	0xa
 6118 09a0 F3       		.byte	0xf3
 6119 09a1 03       		.uleb128 0x3
 6120 09a2 F5       		.byte	0xf5
 6121 09a3 00       		.uleb128 0
 6122 09a4 25       		.uleb128 0x25
 6123 09a5 F7       		.byte	0xf7
 6124 09a6 2C       		.uleb128 0x2c
 6125 09a7 F7       		.byte	0xf7
 6126 09a8 00       		.uleb128 0
 6127 09a9 9F       		.byte	0x9f
 6128 09aa 50030000 		.4byte	.LVL97-.Ltext0
 6129 09ae 56030000 		.4byte	.LFE11-.Ltext0
 6130 09b2 0100     		.2byte	0x1
 6131 09b4 54       		.byte	0x54
 6132 09b5 00000000 		.4byte	0
 6133 09b9 00000000 		.4byte	0
 6134              	.LVUS49:
 6135 09bd 00       		.uleb128 0
 6136 09be 00       		.uleb128 .LVU327
 6137 09bf 00       		.uleb128 .LVU327
 6138 09c0 00       		.uleb128 0
 6139              	.LLST49:
 6140 09c1 2C030000 		.4byte	.LVL91-.Ltext0
 6141 09c5 2E030000 		.4byte	.LVL92-.Ltext0
 6142 09c9 0100     		.2byte	0x1
 6143 09cb 50       		.byte	0x50
ARM GAS  /tmp/ccx8nc1r.s 			page 134


 6144 09cc 2E030000 		.4byte	.LVL92-.Ltext0
 6145 09d0 30030000 		.4byte	.LFE10-.Ltext0
 6146 09d4 0A00     		.2byte	0xa
 6147 09d6 F3       		.byte	0xf3
 6148 09d7 03       		.uleb128 0x3
 6149 09d8 F5       		.byte	0xf5
 6150 09d9 00       		.uleb128 0
 6151 09da 25       		.uleb128 0x25
 6152 09db F7       		.byte	0xf7
 6153 09dc 2C       		.uleb128 0x2c
 6154 09dd F7       		.byte	0xf7
 6155 09de 00       		.uleb128 0
 6156 09df 9F       		.byte	0x9f
 6157 09e0 00000000 		.4byte	0
 6158 09e4 00000000 		.4byte	0
 6159              	.LVUS50:
 6160 09e8 02       		.uleb128 .LVU324
 6161 09e9 00       		.uleb128 .LVU327
 6162 09ea 00       		.uleb128 .LVU327
 6163 09eb 00       		.uleb128 0
 6164              	.LLST50:
 6165 09ec 2C030000 		.4byte	.LVL91-.Ltext0
 6166 09f0 2E030000 		.4byte	.LVL92-.Ltext0
 6167 09f4 0100     		.2byte	0x1
 6168 09f6 50       		.byte	0x50
 6169 09f7 2E030000 		.4byte	.LVL92-.Ltext0
 6170 09fb 30030000 		.4byte	.LFE10-.Ltext0
 6171 09ff 0A00     		.2byte	0xa
 6172 0a01 F3       		.byte	0xf3
 6173 0a02 03       		.uleb128 0x3
 6174 0a03 F5       		.byte	0xf5
 6175 0a04 00       		.uleb128 0
 6176 0a05 25       		.uleb128 0x25
 6177 0a06 F7       		.byte	0xf7
 6178 0a07 2C       		.uleb128 0x2c
 6179 0a08 F7       		.byte	0xf7
 6180 0a09 00       		.uleb128 0
 6181 0a0a 9F       		.byte	0x9f
 6182 0a0b 00000000 		.4byte	0
 6183 0a0f 00000000 		.4byte	0
 6184              	.LLST21:
 6185 0a13 EE000000 		.4byte	.LFB8-.Ltext0
 6186 0a17 F0000000 		.4byte	.LCFI6-.Ltext0
 6187 0a1b 0200     		.2byte	0x2
 6188 0a1d 7D       		.byte	0x7d
 6189 0a1e 00       		.sleb128 0
 6190 0a1f F0000000 		.4byte	.LCFI6-.Ltext0
 6191 0a23 1E010000 		.4byte	.LCFI7-.Ltext0
 6192 0a27 0200     		.2byte	0x2
 6193 0a29 7D       		.byte	0x7d
 6194 0a2a 20       		.sleb128 32
 6195 0a2b 1E010000 		.4byte	.LCFI7-.Ltext0
 6196 0a2f 20010000 		.4byte	.LCFI8-.Ltext0
 6197 0a33 0200     		.2byte	0x2
 6198 0a35 7D       		.byte	0x7d
 6199 0a36 10       		.sleb128 16
 6200 0a37 20010000 		.4byte	.LCFI8-.Ltext0
ARM GAS  /tmp/ccx8nc1r.s 			page 135


 6201 0a3b 30010000 		.4byte	.LFE8-.Ltext0
 6202 0a3f 0200     		.2byte	0x2
 6203 0a41 7D       		.byte	0x7d
 6204 0a42 20       		.sleb128 32
 6205 0a43 00000000 		.4byte	0
 6206 0a47 00000000 		.4byte	0
 6207              	.LVUS22:
 6208 0a4b 00       		.uleb128 0
 6209 0a4c 00       		.uleb128 .LVU102
 6210 0a4d 00       		.uleb128 .LVU102
 6211 0a4e 00       		.uleb128 0
 6212              	.LLST22:
 6213 0a4f EE000000 		.4byte	.LVL28-.Ltext0
 6214 0a53 F6000000 		.4byte	.LVL29-.Ltext0
 6215 0a57 0100     		.2byte	0x1
 6216 0a59 50       		.byte	0x50
 6217 0a5a F6000000 		.4byte	.LVL29-.Ltext0
 6218 0a5e 30010000 		.4byte	.LFE8-.Ltext0
 6219 0a62 0100     		.2byte	0x1
 6220 0a64 55       		.byte	0x55
 6221 0a65 00000000 		.4byte	0
 6222 0a69 00000000 		.4byte	0
 6223              	.LVUS23:
 6224 0a6d 00       		.uleb128 0
 6225 0a6e 00       		.uleb128 .LVU113
 6226 0a6f 00       		.uleb128 .LVU113
 6227 0a70 00       		.uleb128 .LVU121
 6228 0a71 00       		.uleb128 .LVU121
 6229 0a72 00       		.uleb128 .LVU123
 6230 0a73 00       		.uleb128 .LVU123
 6231 0a74 00       		.uleb128 .LVU124
 6232 0a75 00       		.uleb128 .LVU124
 6233 0a76 00       		.uleb128 0
 6234              	.LLST23:
 6235 0a77 EE000000 		.4byte	.LVL28-.Ltext0
 6236 0a7b 09010000 		.4byte	.LVL31-1-.Ltext0
 6237 0a7f 0100     		.2byte	0x1
 6238 0a81 51       		.byte	0x51
 6239 0a82 09010000 		.4byte	.LVL31-1-.Ltext0
 6240 0a86 20010000 		.4byte	.LVL33-.Ltext0
 6241 0a8a 0A00     		.2byte	0xa
 6242 0a8c F3       		.byte	0xf3
 6243 0a8d 03       		.uleb128 0x3
 6244 0a8e F5       		.byte	0xf5
 6245 0a8f 01       		.uleb128 0x1
 6246 0a90 25       		.uleb128 0x25
 6247 0a91 F7       		.byte	0xf7
 6248 0a92 2C       		.uleb128 0x2c
 6249 0a93 F7       		.byte	0xf7
 6250 0a94 00       		.uleb128 0
 6251 0a95 9F       		.byte	0x9f
 6252 0a96 20010000 		.4byte	.LVL33-.Ltext0
 6253 0a9a 24010000 		.4byte	.LVL34-.Ltext0
 6254 0a9e 0100     		.2byte	0x1
 6255 0aa0 51       		.byte	0x51
 6256 0aa1 24010000 		.4byte	.LVL34-.Ltext0
 6257 0aa5 27010000 		.4byte	.LVL35-1-.Ltext0
ARM GAS  /tmp/ccx8nc1r.s 			page 136


 6258 0aa9 0200     		.2byte	0x2
 6259 0aab 71       		.byte	0x71
 6260 0aac 00       		.sleb128 0
 6261 0aad 27010000 		.4byte	.LVL35-1-.Ltext0
 6262 0ab1 30010000 		.4byte	.LFE8-.Ltext0
 6263 0ab5 0A00     		.2byte	0xa
 6264 0ab7 F3       		.byte	0xf3
 6265 0ab8 03       		.uleb128 0x3
 6266 0ab9 F5       		.byte	0xf5
 6267 0aba 01       		.uleb128 0x1
 6268 0abb 25       		.uleb128 0x25
 6269 0abc F7       		.byte	0xf7
 6270 0abd 2C       		.uleb128 0x2c
 6271 0abe F7       		.byte	0xf7
 6272 0abf 00       		.uleb128 0
 6273 0ac0 9F       		.byte	0x9f
 6274 0ac1 00000000 		.4byte	0
 6275 0ac5 00000000 		.4byte	0
 6276              	.LVUS24:
 6277 0ac9 00       		.uleb128 0
 6278 0aca 00       		.uleb128 .LVU103
 6279 0acb 00       		.uleb128 .LVU103
 6280 0acc 00       		.uleb128 0
 6281              	.LLST24:
 6282 0acd EE000000 		.4byte	.LVL28-.Ltext0
 6283 0ad1 FA000000 		.4byte	.LVL30-.Ltext0
 6284 0ad5 0100     		.2byte	0x1
 6285 0ad7 52       		.byte	0x52
 6286 0ad8 FA000000 		.4byte	.LVL30-.Ltext0
 6287 0adc 30010000 		.4byte	.LFE8-.Ltext0
 6288 0ae0 0100     		.2byte	0x1
 6289 0ae2 56       		.byte	0x56
 6290 0ae3 00000000 		.4byte	0
 6291 0ae7 00000000 		.4byte	0
 6292              	.LVUS25:
 6293 0aeb 00       		.uleb128 0
 6294 0aec 00       		.uleb128 .LVU113
 6295 0aed 00       		.uleb128 .LVU113
 6296 0aee 00       		.uleb128 .LVU121
 6297 0aef 00       		.uleb128 .LVU121
 6298 0af0 00       		.uleb128 .LVU124
 6299 0af1 00       		.uleb128 .LVU124
 6300 0af2 00       		.uleb128 0
 6301              	.LLST25:
 6302 0af3 EE000000 		.4byte	.LVL28-.Ltext0
 6303 0af7 09010000 		.4byte	.LVL31-1-.Ltext0
 6304 0afb 0100     		.2byte	0x1
 6305 0afd 53       		.byte	0x53
 6306 0afe 09010000 		.4byte	.LVL31-1-.Ltext0
 6307 0b02 20010000 		.4byte	.LVL33-.Ltext0
 6308 0b06 0A00     		.2byte	0xa
 6309 0b08 F3       		.byte	0xf3
 6310 0b09 03       		.uleb128 0x3
 6311 0b0a F5       		.byte	0xf5
 6312 0b0b 03       		.uleb128 0x3
 6313 0b0c 25       		.uleb128 0x25
 6314 0b0d F7       		.byte	0xf7
ARM GAS  /tmp/ccx8nc1r.s 			page 137


 6315 0b0e 2C       		.uleb128 0x2c
 6316 0b0f F7       		.byte	0xf7
 6317 0b10 00       		.uleb128 0
 6318 0b11 9F       		.byte	0x9f
 6319 0b12 20010000 		.4byte	.LVL33-.Ltext0
 6320 0b16 27010000 		.4byte	.LVL35-1-.Ltext0
 6321 0b1a 0100     		.2byte	0x1
 6322 0b1c 52       		.byte	0x52
 6323 0b1d 27010000 		.4byte	.LVL35-1-.Ltext0
 6324 0b21 30010000 		.4byte	.LFE8-.Ltext0
 6325 0b25 0A00     		.2byte	0xa
 6326 0b27 F3       		.byte	0xf3
 6327 0b28 03       		.uleb128 0x3
 6328 0b29 F5       		.byte	0xf5
 6329 0b2a 03       		.uleb128 0x3
 6330 0b2b 25       		.uleb128 0x25
 6331 0b2c F7       		.byte	0xf7
 6332 0b2d 2C       		.uleb128 0x2c
 6333 0b2e F7       		.byte	0xf7
 6334 0b2f 00       		.uleb128 0
 6335 0b30 9F       		.byte	0x9f
 6336 0b31 00000000 		.4byte	0
 6337 0b35 00000000 		.4byte	0
 6338              	.LVUS26:
 6339 0b39 00       		.uleb128 0
 6340 0b3a 00       		.uleb128 .LVU121
 6341 0b3b 00       		.uleb128 .LVU121
 6342 0b3c 00       		.uleb128 0
 6343              	.LLST26:
 6344 0b3d EE000000 		.4byte	.LVL28-.Ltext0
 6345 0b41 20010000 		.4byte	.LVL33-.Ltext0
 6346 0b45 0200     		.2byte	0x2
 6347 0b47 91       		.byte	0x91
 6348 0b48 00       		.sleb128 0
 6349 0b49 20010000 		.4byte	.LVL33-.Ltext0
 6350 0b4d 30010000 		.4byte	.LFE8-.Ltext0
 6351 0b51 0200     		.2byte	0x2
 6352 0b53 91       		.byte	0x91
 6353 0b54 00       		.sleb128 0
 6354 0b55 00000000 		.4byte	0
 6355 0b59 00000000 		.4byte	0
 6356              	.LVUS27:
 6357 0b5d 02       		.uleb128 .LVU95
 6358 0b5e 00       		.uleb128 .LVU120
 6359 0b5f 00       		.uleb128 .LVU121
 6360 0b60 00       		.uleb128 .LVU124
 6361 0b61 00       		.uleb128 .LVU124
 6362 0b62 00       		.uleb128 0
 6363              	.LLST27:
 6364 0b63 EE000000 		.4byte	.LVL28-.Ltext0
 6365 0b67 1C010000 		.4byte	.LVL32-.Ltext0
 6366 0b6b 0200     		.2byte	0x2
 6367 0b6d 30       		.byte	0x30
 6368 0b6e 9F       		.byte	0x9f
 6369 0b6f 20010000 		.4byte	.LVL33-.Ltext0
 6370 0b73 28010000 		.4byte	.LVL35-.Ltext0
 6371 0b77 0200     		.2byte	0x2
ARM GAS  /tmp/ccx8nc1r.s 			page 138


 6372 0b79 30       		.byte	0x30
 6373 0b7a 9F       		.byte	0x9f
 6374 0b7b 28010000 		.4byte	.LVL35-.Ltext0
 6375 0b7f 30010000 		.4byte	.LFE8-.Ltext0
 6376 0b83 0100     		.2byte	0x1
 6377 0b85 50       		.byte	0x50
 6378 0b86 00000000 		.4byte	0
 6379 0b8a 00000000 		.4byte	0
 6380              	.LLST9:
 6381 0b8e A8000000 		.4byte	.LFB6-.Ltext0
 6382 0b92 AC000000 		.4byte	.LCFI5-.Ltext0
 6383 0b96 0200     		.2byte	0x2
 6384 0b98 7D       		.byte	0x7d
 6385 0b99 00       		.sleb128 0
 6386 0b9a AC000000 		.4byte	.LCFI5-.Ltext0
 6387 0b9e EE000000 		.4byte	.LFE6-.Ltext0
 6388 0ba2 0200     		.2byte	0x2
 6389 0ba4 7D       		.byte	0x7d
 6390 0ba5 18       		.sleb128 24
 6391 0ba6 00000000 		.4byte	0
 6392 0baa 00000000 		.4byte	0
 6393              	.LVUS10:
 6394 0bae 00       		.uleb128 0
 6395 0baf 00       		.uleb128 .LVU66
 6396 0bb0 00       		.uleb128 .LVU66
 6397 0bb1 00       		.uleb128 0
 6398              	.LLST10:
 6399 0bb2 A8000000 		.4byte	.LVL21-.Ltext0
 6400 0bb6 B0000000 		.4byte	.LVL22-.Ltext0
 6401 0bba 0100     		.2byte	0x1
 6402 0bbc 50       		.byte	0x50
 6403 0bbd B0000000 		.4byte	.LVL22-.Ltext0
 6404 0bc1 EE000000 		.4byte	.LFE6-.Ltext0
 6405 0bc5 0100     		.2byte	0x1
 6406 0bc7 58       		.byte	0x58
 6407 0bc8 00000000 		.4byte	0
 6408 0bcc 00000000 		.4byte	0
 6409              	.LVUS11:
 6410 0bd0 00       		.uleb128 0
 6411 0bd1 00       		.uleb128 .LVU68
 6412 0bd2 00       		.uleb128 .LVU68
 6413 0bd3 00       		.uleb128 0
 6414              	.LLST11:
 6415 0bd4 A8000000 		.4byte	.LVL21-.Ltext0
 6416 0bd8 B9000000 		.4byte	.LVL23-1-.Ltext0
 6417 0bdc 0100     		.2byte	0x1
 6418 0bde 51       		.byte	0x51
 6419 0bdf B9000000 		.4byte	.LVL23-1-.Ltext0
 6420 0be3 EE000000 		.4byte	.LFE6-.Ltext0
 6421 0be7 0100     		.2byte	0x1
 6422 0be9 57       		.byte	0x57
 6423 0bea 00000000 		.4byte	0
 6424 0bee 00000000 		.4byte	0
 6425              	.LVUS12:
 6426 0bf2 00       		.uleb128 0
 6427 0bf3 00       		.uleb128 .LVU68
 6428 0bf4 00       		.uleb128 .LVU68
ARM GAS  /tmp/ccx8nc1r.s 			page 139


 6429 0bf5 00       		.uleb128 0
 6430              	.LLST12:
 6431 0bf6 A8000000 		.4byte	.LVL21-.Ltext0
 6432 0bfa B9000000 		.4byte	.LVL23-1-.Ltext0
 6433 0bfe 0100     		.2byte	0x1
 6434 0c00 52       		.byte	0x52
 6435 0c01 B9000000 		.4byte	.LVL23-1-.Ltext0
 6436 0c05 EE000000 		.4byte	.LFE6-.Ltext0
 6437 0c09 0100     		.2byte	0x1
 6438 0c0b 55       		.byte	0x55
 6439 0c0c 00000000 		.4byte	0
 6440 0c10 00000000 		.4byte	0
 6441              	.LVUS13:
 6442 0c14 00       		.uleb128 0
 6443 0c15 00       		.uleb128 .LVU68
 6444 0c16 00       		.uleb128 .LVU68
 6445 0c17 00       		.uleb128 0
 6446              	.LLST13:
 6447 0c18 A8000000 		.4byte	.LVL21-.Ltext0
 6448 0c1c B9000000 		.4byte	.LVL23-1-.Ltext0
 6449 0c20 0100     		.2byte	0x1
 6450 0c22 53       		.byte	0x53
 6451 0c23 B9000000 		.4byte	.LVL23-1-.Ltext0
 6452 0c27 EE000000 		.4byte	.LFE6-.Ltext0
 6453 0c2b 0100     		.2byte	0x1
 6454 0c2d 56       		.byte	0x56
 6455 0c2e 00000000 		.4byte	0
 6456 0c32 00000000 		.4byte	0
 6457              	.LVUS14:
 6458 0c36 00       		.uleb128 .LVU68
 6459 0c37 00       		.uleb128 .LVU77
 6460 0c38 00       		.uleb128 .LVU77
 6461 0c39 00       		.uleb128 0
 6462              	.LLST14:
 6463 0c3a BA000000 		.4byte	.LVL23-.Ltext0
 6464 0c3e C7000000 		.4byte	.LVL25-1-.Ltext0
 6465 0c42 0100     		.2byte	0x1
 6466 0c44 50       		.byte	0x50
 6467 0c45 C7000000 		.4byte	.LVL25-1-.Ltext0
 6468 0c49 EE000000 		.4byte	.LFE6-.Ltext0
 6469 0c4d 0100     		.2byte	0x1
 6470 0c4f 54       		.byte	0x54
 6471 0c50 00000000 		.4byte	0
 6472 0c54 00000000 		.4byte	0
 6473              	.LVUS15:
 6474 0c58 01       		.uleb128 .LVU73
 6475 0c59 00       		.uleb128 .LVU77
 6476 0c5a 00       		.uleb128 .LVU77
 6477 0c5b 00       		.uleb128 .LVU89
 6478              	.LLST15:
 6479 0c5c C4000000 		.4byte	.LVL24-.Ltext0
 6480 0c60 C7000000 		.4byte	.LVL25-1-.Ltext0
 6481 0c64 0100     		.2byte	0x1
 6482 0c66 50       		.byte	0x50
 6483 0c67 C7000000 		.4byte	.LVL25-1-.Ltext0
 6484 0c6b E8000000 		.4byte	.LVL27-.Ltext0
 6485 0c6f 0100     		.2byte	0x1
ARM GAS  /tmp/ccx8nc1r.s 			page 140


 6486 0c71 54       		.byte	0x54
 6487 0c72 00000000 		.4byte	0
 6488 0c76 00000000 		.4byte	0
 6489              	.LVUS16:
 6490 0c7a 01       		.uleb128 .LVU73
 6491 0c7b 00       		.uleb128 .LVU89
 6492              	.LLST16:
 6493 0c7c C4000000 		.4byte	.LVL24-.Ltext0
 6494 0c80 E8000000 		.4byte	.LVL27-.Ltext0
 6495 0c84 0200     		.2byte	0x2
 6496 0c86 91       		.byte	0x91
 6497 0c87 00       		.sleb128 0
 6498 0c88 00000000 		.4byte	0
 6499 0c8c 00000000 		.4byte	0
 6500              	.LVUS17:
 6501 0c90 01       		.uleb128 .LVU73
 6502 0c91 00       		.uleb128 .LVU89
 6503              	.LLST17:
 6504 0c92 C4000000 		.4byte	.LVL24-.Ltext0
 6505 0c96 E8000000 		.4byte	.LVL27-.Ltext0
 6506 0c9a 0100     		.2byte	0x1
 6507 0c9c 56       		.byte	0x56
 6508 0c9d 00000000 		.4byte	0
 6509 0ca1 00000000 		.4byte	0
 6510              	.LVUS18:
 6511 0ca5 01       		.uleb128 .LVU73
 6512 0ca6 00       		.uleb128 .LVU89
 6513              	.LLST18:
 6514 0ca7 C4000000 		.4byte	.LVL24-.Ltext0
 6515 0cab E8000000 		.4byte	.LVL27-.Ltext0
 6516 0caf 0100     		.2byte	0x1
 6517 0cb1 55       		.byte	0x55
 6518 0cb2 00000000 		.4byte	0
 6519 0cb6 00000000 		.4byte	0
 6520              	.LVUS19:
 6521 0cba 01       		.uleb128 .LVU73
 6522 0cbb 00       		.uleb128 .LVU89
 6523              	.LLST19:
 6524 0cbc C4000000 		.4byte	.LVL24-.Ltext0
 6525 0cc0 E8000000 		.4byte	.LVL27-.Ltext0
 6526 0cc4 0100     		.2byte	0x1
 6527 0cc6 57       		.byte	0x57
 6528 0cc7 00000000 		.4byte	0
 6529 0ccb 00000000 		.4byte	0
 6530              	.LVUS20:
 6531 0ccf 01       		.uleb128 .LVU73
 6532 0cd0 00       		.uleb128 .LVU89
 6533              	.LLST20:
 6534 0cd1 C4000000 		.4byte	.LVL24-.Ltext0
 6535 0cd5 E8000000 		.4byte	.LVL27-.Ltext0
 6536 0cd9 0100     		.2byte	0x1
 6537 0cdb 58       		.byte	0x58
 6538 0cdc 00000000 		.4byte	0
 6539 0ce0 00000000 		.4byte	0
 6540              	.LLST7:
 6541 0ce4 74000000 		.4byte	.LFB5-.Ltext0
 6542 0ce8 76000000 		.4byte	.LCFI3-.Ltext0
ARM GAS  /tmp/ccx8nc1r.s 			page 141


 6543 0cec 0200     		.2byte	0x2
 6544 0cee 7D       		.byte	0x7d
 6545 0cef 00       		.sleb128 0
 6546 0cf0 76000000 		.4byte	.LCFI3-.Ltext0
 6547 0cf4 96000000 		.4byte	.LCFI4-.Ltext0
 6548 0cf8 0200     		.2byte	0x2
 6549 0cfa 7D       		.byte	0x7d
 6550 0cfb 10       		.sleb128 16
 6551 0cfc 96000000 		.4byte	.LCFI4-.Ltext0
 6552 0d00 A8000000 		.4byte	.LFE5-.Ltext0
 6553 0d04 0200     		.2byte	0x2
 6554 0d06 7D       		.byte	0x7d
 6555 0d07 04       		.sleb128 4
 6556 0d08 00000000 		.4byte	0
 6557 0d0c 00000000 		.4byte	0
 6558              	.LVUS8:
 6559 0d10 02       		.uleb128 .LVU51
 6560 0d11 00       		.uleb128 .LVU59
 6561              	.LLST8:
 6562 0d12 74000000 		.4byte	.LVL18-.Ltext0
 6563 0d16 94000000 		.4byte	.LVL20-.Ltext0
 6564 0d1a 0200     		.2byte	0x2
 6565 0d1c 30       		.byte	0x30
 6566 0d1d 9F       		.byte	0x9f
 6567 0d1e 00000000 		.4byte	0
 6568 0d22 00000000 		.4byte	0
 6569              		.section	.debug_aranges,"",%progbits
 6570 0000 1C000000 		.4byte	0x1c
 6571 0004 0200     		.2byte	0x2
 6572 0006 00000000 		.4byte	.Ldebug_info0
 6573 000a 04       		.byte	0x4
 6574 000b 00       		.byte	0
 6575 000c 0000     		.2byte	0
 6576 000e 0000     		.2byte	0
 6577 0010 00000000 		.4byte	.Ltext0
 6578 0014 A4030000 		.4byte	.Letext0-.Ltext0
 6579 0018 00000000 		.4byte	0
 6580 001c 00000000 		.4byte	0
 6581              		.section	.debug_ranges,"",%progbits
 6582              	.Ldebug_ranges0:
 6583 0000 52010000 		.4byte	.LBB8-.Ltext0
 6584 0004 94010000 		.4byte	.LBE8-.Ltext0
 6585 0008 98010000 		.4byte	.LBB11-.Ltext0
 6586 000c AC010000 		.4byte	.LBE11-.Ltext0
 6587 0010 00000000 		.4byte	0
 6588 0014 00000000 		.4byte	0
 6589 0018 B0010000 		.4byte	.LBB20-.Ltext0
 6590 001c B4010000 		.4byte	.LBE20-.Ltext0
 6591 0020 B6010000 		.4byte	.LBB24-.Ltext0
 6592 0024 CA010000 		.4byte	.LBE24-.Ltext0
 6593 0028 5C020000 		.4byte	.LBB37-.Ltext0
 6594 002c 60020000 		.4byte	.LBE37-.Ltext0
 6595 0030 00000000 		.4byte	0
 6596 0034 00000000 		.4byte	0
 6597 0038 CA010000 		.4byte	.LBB25-.Ltext0
 6598 003c 20020000 		.4byte	.LBE25-.Ltext0
 6599 0040 60020000 		.4byte	.LBB38-.Ltext0
ARM GAS  /tmp/ccx8nc1r.s 			page 142


 6600 0044 A2020000 		.4byte	.LBE38-.Ltext0
 6601 0048 A2020000 		.4byte	.LBB40-.Ltext0
 6602 004c A4020000 		.4byte	.LBE40-.Ltext0
 6603 0050 00000000 		.4byte	0
 6604 0054 00000000 		.4byte	0
 6605 0058 E8010000 		.4byte	.LBB27-.Ltext0
 6606 005c 20020000 		.4byte	.LBE27-.Ltext0
 6607 0060 60020000 		.4byte	.LBB30-.Ltext0
 6608 0064 6A020000 		.4byte	.LBE30-.Ltext0
 6609 0068 00000000 		.4byte	0
 6610 006c 00000000 		.4byte	0
 6611 0070 20020000 		.4byte	.LBB33-.Ltext0
 6612 0074 5C020000 		.4byte	.LBE33-.Ltext0
 6613 0078 A2020000 		.4byte	.LBB39-.Ltext0
 6614 007c A2020000 		.4byte	.LBE39-.Ltext0
 6615 0080 A4020000 		.4byte	.LBB41-.Ltext0
 6616 0084 20030000 		.4byte	.LBE41-.Ltext0
 6617 0088 00000000 		.4byte	0
 6618 008c 00000000 		.4byte	0
 6619              		.section	.debug_line,"",%progbits
 6620              	.Ldebug_line0:
 6621 0000 65070000 		.section	.debug_str,"MS",%progbits,1
 6621      03004F01 
 6621      00000201 
 6621      FB0E0D00 
 6621      01010101 
 6622              	.LASF75:
 6623 0000 764C6973 		.ascii	"vListInsert\000"
 6623      74496E73 
 6623      65727400 
 6624              	.LASF114:
 6625 000c 70727650 		.ascii	"prvProcessExpiredTimer\000"
 6625      726F6365 
 6625      73734578 
 6625      70697265 
 6625      6454696D 
 6626              	.LASF102:
 6627 0023 78436F6D 		.ascii	"xCommandTime\000"
 6627      6D616E64 
 6627      54696D65 
 6627      00
 6628              	.LASF29:
 6629 0030 75784E75 		.ascii	"uxNumberOfItems\000"
 6629      6D626572 
 6629      4F664974 
 6629      656D7300 
 6630              	.LASF44:
 6631 0040 7854696D 		.ascii	"xTimerPeriodInTicks\000"
 6631      65725065 
 6631      72696F64 
 6631      496E5469 
 6631      636B7300 
 6632              	.LASF71:
 6633 0054 76506F72 		.ascii	"vPortExitCritical\000"
 6633      74457869 
 6633      74437269 
 6633      74696361 
ARM GAS  /tmp/ccx8nc1r.s 			page 143


 6633      6C00
 6634              	.LASF46:
 6635 0066 70784361 		.ascii	"pxCallbackFunction\000"
 6635      6C6C6261 
 6635      636B4675 
 6635      6E637469 
 6635      6F6E00
 6636              	.LASF109:
 6637 0079 70784C69 		.ascii	"pxListWasEmpty\000"
 6637      73745761 
 6637      73456D70 
 6637      747900
 6638              	.LASF47:
 6639 0088 75785469 		.ascii	"uxTimerNumber\000"
 6639      6D65724E 
 6639      756D6265 
 6639      7200
 6640              	.LASF100:
 6641 0096 7854696D 		.ascii	"xTimeNow\000"
 6641      654E6F77 
 6641      00
 6642              	.LASF38:
 6643 009f 74736B54 		.ascii	"tskTaskControlBlock\000"
 6643      61736B43 
 6643      6F6E7472 
 6643      6F6C426C 
 6643      6F636B00 
 6644              	.LASF132:
 6645 00b3 7854696D 		.ascii	"xTimerParameters\000"
 6645      65725061 
 6645      72616D65 
 6645      74657273 
 6645      00
 6646              	.LASF122:
 6647 00c4 784F7074 		.ascii	"xOptionalValue\000"
 6647      696F6E61 
 6647      6C56616C 
 6647      756500
 6648              	.LASF73:
 6649 00d3 78517565 		.ascii	"xQueueReceive\000"
 6649      75655265 
 6649      63656976 
 6649      6500
 6650              	.LASF77:
 6651 00e1 78546173 		.ascii	"xTaskGetSchedulerState\000"
 6651      6B476574 
 6651      53636865 
 6651      64756C65 
 6651      72537461 
 6652              	.LASF123:
 6653 00f8 70784869 		.ascii	"pxHigherPriorityTaskWoken\000"
 6653      67686572 
 6653      5072696F 
 6653      72697479 
 6653      5461736B 
 6654              	.LASF1:
 6655 0112 756E7369 		.ascii	"unsigned int\000"
ARM GAS  /tmp/ccx8nc1r.s 			page 144


 6655      676E6564 
 6655      20696E74 
 6655      00
 6656              	.LASF30:
 6657 011f 7078496E 		.ascii	"pxIndex\000"
 6657      64657800 
 6658              	.LASF42:
 6659 0127 70635469 		.ascii	"pcTimerName\000"
 6659      6D65724E 
 6659      616D6500 
 6660              	.LASF27:
 6661 0133 784C4953 		.ascii	"xLIST_ITEM\000"
 6661      545F4954 
 6661      454D00
 6662              	.LASF130:
 6663 013e 2E2E2F66 		.ascii	"../freertos/timers.c\000"
 6663      72656572 
 6663      746F732F 
 6663      74696D65 
 6663      72732E63 
 6664              	.LASF113:
 6665 0153 70765061 		.ascii	"pvParameters\000"
 6665      72616D65 
 6665      74657273 
 6665      00
 6666              	.LASF55:
 6667 0160 54696D65 		.ascii	"TimerParameter_t\000"
 6667      72506172 
 6667      616D6574 
 6667      65725F74 
 6667      00
 6668              	.LASF63:
 6669 0171 7854696D 		.ascii	"xTimerQueue\000"
 6669      65725175 
 6669      65756500 
 6670              	.LASF72:
 6671 017d 76506F72 		.ascii	"vPortEnterCritical\000"
 6671      74456E74 
 6671      65724372 
 6671      69746963 
 6671      616C00
 6672              	.LASF49:
 6673 0190 54696D65 		.ascii	"TimerCallbackFunction_t\000"
 6673      7243616C 
 6673      6C626163 
 6673      6B46756E 
 6673      6374696F 
 6674              	.LASF121:
 6675 01a8 78436F6D 		.ascii	"xCommandID\000"
 6675      6D616E64 
 6675      494400
 6676              	.LASF128:
 6677 01b3 7854696D 		.ascii	"xTimerCreateTimerTask\000"
 6677      65724372 
 6677      65617465 
 6677      54696D65 
 6677      72546173 
ARM GAS  /tmp/ccx8nc1r.s 			page 145


 6678              	.LASF103:
 6679 01c9 7850726F 		.ascii	"xProcessTimerNow\000"
 6679      63657373 
 6679      54696D65 
 6679      724E6F77 
 6679      00
 6680              	.LASF17:
 6681 01da 75696E74 		.ascii	"uint32_t\000"
 6681      33325F74 
 6681      00
 6682              	.LASF76:
 6683 01e3 75784C69 		.ascii	"uxListRemove\000"
 6683      73745265 
 6683      6D6F7665 
 6683      00
 6684              	.LASF40:
 6685 01f0 54696D65 		.ascii	"TimerHandle_t\000"
 6685      7248616E 
 6685      646C655F 
 6685      7400
 6686              	.LASF39:
 6687 01fe 51756575 		.ascii	"QueueDefinition\000"
 6687      65446566 
 6687      696E6974 
 6687      696F6E00 
 6688              	.LASF87:
 6689 020e 75785469 		.ascii	"uxTimerGetTimerNumber\000"
 6689      6D657247 
 6689      65745469 
 6689      6D65724E 
 6689      756D6265 
 6690              	.LASF0:
 6691 0224 6C6F6E67 		.ascii	"long long unsigned int\000"
 6691      206C6F6E 
 6691      6720756E 
 6691      7369676E 
 6691      65642069 
 6692              	.LASF129:
 6693 023b 474E5520 		.ascii	"GNU C17 13.2.0 -mcpu=cortex-m3 -mthumb -mfloat-abi="
 6693      43313720 
 6693      31332E32 
 6693      2E30202D 
 6693      6D637075 
 6694 026e 736F6674 		.ascii	"soft -march=armv7-m -g -gdwarf-2 -Os -fomit-frame-p"
 6694      202D6D61 
 6694      7263683D 
 6694      61726D76 
 6694      372D6D20 
 6695 02a1 6F696E74 		.ascii	"ointer\000"
 6695      657200
 6696              	.LASF126:
 6697 02a8 70784E65 		.ascii	"pxNewTimer\000"
 6697      7754696D 
 6697      657200
 6698              	.LASF24:
 6699 02b3 70785072 		.ascii	"pxPrevious\000"
 6699      6576696F 
ARM GAS  /tmp/ccx8nc1r.s 			page 146


 6699      757300
 6700              	.LASF9:
 6701 02be 5F5F7569 		.ascii	"__uint16_t\000"
 6701      6E743136 
 6701      5F7400
 6702              	.LASF89:
 6703 02c9 70765265 		.ascii	"pvReturn\000"
 6703      7475726E 
 6703      00
 6704              	.LASF94:
 6705 02d2 70785465 		.ascii	"pxTemp\000"
 6705      6D7000
 6706              	.LASF67:
 6707 02d9 7076506F 		.ascii	"pvPortMalloc\000"
 6707      72744D61 
 6707      6C6C6F63 
 6707      00
 6708              	.LASF81:
 6709 02e6 76546173 		.ascii	"vTaskSuspendAll\000"
 6709      6B537573 
 6709      70656E64 
 6709      416C6C00 
 6710              	.LASF131:
 6711 02f6 2F686F6D 		.ascii	"/home/me/Codigos/6-Stm32_GCC_FreeRTOS10.2.1/5-PWM_L"
 6711      652F6D65 
 6711      2F436F64 
 6711      69676F73 
 6711      2F362D53 
 6712 0329 43445F53 		.ascii	"CD_SERIAL\000"
 6712      45524941 
 6712      4C00
 6713              	.LASF90:
 6714 0333 7854696D 		.ascii	"xTimerIsTimerActive\000"
 6714      65724973 
 6714      54696D65 
 6714      72416374 
 6714      69766500 
 6715              	.LASF88:
 6716 0347 70765469 		.ascii	"pvTimerGetTimerID\000"
 6716      6D657247 
 6716      65745469 
 6716      6D657249 
 6716      4400
 6717              	.LASF5:
 6718 0359 73697A65 		.ascii	"size_t\000"
 6718      5F7400
 6719              	.LASF33:
 6720 0360 784D494E 		.ascii	"xMINI_LIST_ITEM\000"
 6720      495F4C49 
 6720      53545F49 
 6720      54454D00 
 6721              	.LASF62:
 6722 0370 70784F76 		.ascii	"pxOverflowTimerList\000"
 6722      6572666C 
 6722      6F775469 
 6722      6D65724C 
 6722      69737400 
ARM GAS  /tmp/ccx8nc1r.s 			page 147


 6723              	.LASF28:
 6724 0384 784C4953 		.ascii	"xLIST\000"
 6724      5400
 6725              	.LASF65:
 6726 038a 78517565 		.ascii	"xQueueGenericSendFromISR\000"
 6726      75654765 
 6726      6E657269 
 6726      6353656E 
 6726      6446726F 
 6727              	.LASF125:
 6728 03a3 70727649 		.ascii	"prvInitialiseNewTimer\000"
 6728      6E697469 
 6728      616C6973 
 6728      654E6577 
 6728      54696D65 
 6729              	.LASF56:
 6730 03b9 746D7254 		.ascii	"tmrTimerQueueMessage\000"
 6730      696D6572 
 6730      51756575 
 6730      654D6573 
 6730      73616765 
 6731              	.LASF66:
 6732 03ce 78517565 		.ascii	"xQueueGenericSend\000"
 6732      75654765 
 6732      6E657269 
 6732      6353656E 
 6732      6400
 6733              	.LASF83:
 6734 03e0 7854696D 		.ascii	"xTimer\000"
 6734      657200
 6735              	.LASF50:
 6736 03e7 7854494D 		.ascii	"xTIMER\000"
 6736      455200
 6737              	.LASF59:
 6738 03ee 78416374 		.ascii	"xActiveTimerList1\000"
 6738      69766554 
 6738      696D6572 
 6738      4C697374 
 6738      3100
 6739              	.LASF60:
 6740 0400 78416374 		.ascii	"xActiveTimerList2\000"
 6740      69766554 
 6740      696D6572 
 6740      4C697374 
 6740      3200
 6741              	.LASF104:
 6742 0412 70727649 		.ascii	"prvInsertTimerInActiveList\000"
 6742      6E736572 
 6742      7454696D 
 6742      6572496E 
 6742      41637469 
 6743              	.LASF14:
 6744 042d 63686172 		.ascii	"char\000"
 6744      00
 6745              	.LASF32:
 6746 0432 4C697374 		.ascii	"ListItem_t\000"
 6746      4974656D 
ARM GAS  /tmp/ccx8nc1r.s 			page 148


 6746      5F7400
 6747              	.LASF20:
 6748 043d 55426173 		.ascii	"UBaseType_t\000"
 6748      65547970 
 6748      655F7400 
 6749              	.LASF116:
 6750 0449 7854696D 		.ascii	"xTimerGetExpiryTime\000"
 6750      65724765 
 6750      74457870 
 6750      69727954 
 6750      696D6500 
 6751              	.LASF37:
 6752 045d 51756575 		.ascii	"QueueHandle_t\000"
 6752      6548616E 
 6752      646C655F 
 6752      7400
 6753              	.LASF127:
 6754 046b 7854696D 		.ascii	"xTimerCreate\000"
 6754      65724372 
 6754      65617465 
 6754      00
 6755              	.LASF105:
 6756 0478 70727653 		.ascii	"prvSampleTimeNow\000"
 6756      616D706C 
 6756      6554696D 
 6756      654E6F77 
 6756      00
 6757              	.LASF31:
 6758 0489 784C6973 		.ascii	"xListEnd\000"
 6758      74456E64 
 6758      00
 6759              	.LASF34:
 6760 0492 4D696E69 		.ascii	"MiniListItem_t\000"
 6760      4C697374 
 6760      4974656D 
 6760      5F7400
 6761              	.LASF82:
 6762 04a1 78546173 		.ascii	"xTaskCreate\000"
 6762      6B437265 
 6762      61746500 
 6763              	.LASF15:
 6764 04ad 75696E74 		.ascii	"uint8_t\000"
 6764      385F7400 
 6765              	.LASF85:
 6766 04b5 7654696D 		.ascii	"vTimerSetTimerID\000"
 6766      65725365 
 6766      7454696D 
 6766      65724944 
 6766      00
 6767              	.LASF99:
 6768 04c6 7854696D 		.ascii	"xTimerListsWereSwitched\000"
 6768      65724C69 
 6768      73747357 
 6768      65726553 
 6768      77697463 
 6769              	.LASF68:
 6770 04de 78517565 		.ascii	"xQueueGenericCreate\000"
ARM GAS  /tmp/ccx8nc1r.s 			page 149


 6770      75654765 
 6770      6E657269 
 6770      63437265 
 6770      61746500 
 6771              	.LASF78:
 6772 04f2 78546173 		.ascii	"xTaskGetTickCount\000"
 6772      6B476574 
 6772      5469636B 
 6772      436F756E 
 6772      7400
 6773              	.LASF2:
 6774 0504 6C6F6E67 		.ascii	"long long int\000"
 6774      206C6F6E 
 6774      6720696E 
 6774      7400
 6775              	.LASF86:
 6776 0512 70764E65 		.ascii	"pvNewID\000"
 6776      77494400 
 6777              	.LASF19:
 6778 051a 42617365 		.ascii	"BaseType_t\000"
 6778      54797065 
 6778      5F7400
 6779              	.LASF96:
 6780 0525 70727653 		.ascii	"prvSwitchTimerLists\000"
 6780      77697463 
 6780      6854696D 
 6780      65724C69 
 6780      73747300 
 6781              	.LASF18:
 6782 0539 5461736B 		.ascii	"TaskFunction_t\000"
 6782      46756E63 
 6782      74696F6E 
 6782      5F7400
 6783              	.LASF23:
 6784 0548 70784E65 		.ascii	"pxNext\000"
 6784      787400
 6785              	.LASF36:
 6786 054f 5461736B 		.ascii	"TaskHandle_t\000"
 6786      48616E64 
 6786      6C655F74 
 6786      00
 6787              	.LASF35:
 6788 055c 4C697374 		.ascii	"List_t\000"
 6788      5F7400
 6789              	.LASF21:
 6790 0563 5469636B 		.ascii	"TickType_t\000"
 6790      54797065 
 6790      5F7400
 6791              	.LASF43:
 6792 056e 7854696D 		.ascii	"xTimerListItem\000"
 6792      65724C69 
 6792      73744974 
 6792      656D00
 6793              	.LASF3:
 6794 057d 6C6F6E67 		.ascii	"long double\000"
 6794      20646F75 
 6794      626C6500 
ARM GAS  /tmp/ccx8nc1r.s 			page 150


 6795              	.LASF16:
 6796 0589 75696E74 		.ascii	"uint16_t\000"
 6796      31365F74 
 6796      00
 6797              	.LASF120:
 6798 0592 7854696D 		.ascii	"xTimerGenericCommand\000"
 6798      65724765 
 6798      6E657269 
 6798      63436F6D 
 6798      6D616E64 
 6799              	.LASF26:
 6800 05a7 7076436F 		.ascii	"pvContainer\000"
 6800      6E746169 
 6800      6E657200 
 6801              	.LASF64:
 6802 05b3 7854696D 		.ascii	"xTimerTaskHandle\000"
 6802      65725461 
 6802      736B4861 
 6802      6E646C65 
 6802      00
 6803              	.LASF112:
 6804 05c4 70727654 		.ascii	"prvTimerTask\000"
 6804      696D6572 
 6804      5461736B 
 6804      00
 6805              	.LASF92:
 6806 05d1 784E6578 		.ascii	"xNextExpireTime\000"
 6806      74457870 
 6806      69726554 
 6806      696D6500 
 6807              	.LASF79:
 6808 05e1 76517565 		.ascii	"vQueueWaitForMessageRestricted\000"
 6808      75655761 
 6808      6974466F 
 6808      724D6573 
 6808      73616765 
 6809              	.LASF8:
 6810 0600 73686F72 		.ascii	"short int\000"
 6810      7420696E 
 6810      7400
 6811              	.LASF69:
 6812 060a 764C6973 		.ascii	"vListInitialiseItem\000"
 6812      74496E69 
 6812      7469616C 
 6812      69736549 
 6812      74656D00 
 6813              	.LASF48:
 6814 061e 75635374 		.ascii	"ucStatus\000"
 6814      61747573 
 6814      00
 6815              	.LASF22:
 6816 0627 78497465 		.ascii	"xItemValue\000"
 6816      6D56616C 
 6816      756500
 6817              	.LASF97:
 6818 0632 70727650 		.ascii	"prvProcessReceivedCommands\000"
 6818      726F6365 
ARM GAS  /tmp/ccx8nc1r.s 			page 151


 6818      73735265 
 6818      63656976 
 6818      6564436F 
 6819              	.LASF11:
 6820 064d 6C6F6E67 		.ascii	"long int\000"
 6820      20696E74 
 6820      00
 6821              	.LASF107:
 6822 0656 784C6173 		.ascii	"xLastTime\000"
 6822      7454696D 
 6822      6500
 6823              	.LASF80:
 6824 0660 78546173 		.ascii	"xTaskResumeAll\000"
 6824      6B526573 
 6824      756D6541 
 6824      6C6C00
 6825              	.LASF61:
 6826 066f 70784375 		.ascii	"pxCurrentTimerList\000"
 6826      7272656E 
 6826      7454696D 
 6826      65724C69 
 6826      737400
 6827              	.LASF98:
 6828 0682 784D6573 		.ascii	"xMessage\000"
 6828      73616765 
 6828      00
 6829              	.LASF74:
 6830 068b 76506F72 		.ascii	"vPortFree\000"
 6830      74467265 
 6830      6500
 6831              	.LASF110:
 6832 0695 784C6973 		.ascii	"xListWasEmpty\000"
 6832      74576173 
 6832      456D7074 
 6832      7900
 6833              	.LASF45:
 6834 06a3 70765469 		.ascii	"pvTimerID\000"
 6834      6D657249 
 6834      4400
 6835              	.LASF118:
 6836 06ad 75784175 		.ascii	"uxAutoReload\000"
 6836      746F5265 
 6836      6C6F6164 
 6836      00
 6837              	.LASF6:
 6838 06ba 5F5F7569 		.ascii	"__uint8_t\000"
 6838      6E74385F 
 6838      7400
 6839              	.LASF51:
 6840 06c4 54696D65 		.ascii	"Timer_t\000"
 6840      725F7400 
 6841              	.LASF57:
 6842 06cc 784D6573 		.ascii	"xMessageID\000"
 6842      73616765 
 6842      494400
 6843              	.LASF58:
 6844 06d7 4461656D 		.ascii	"DaemonTaskMessage_t\000"
ARM GAS  /tmp/ccx8nc1r.s 			page 152


 6844      6F6E5461 
 6844      736B4D65 
 6844      73736167 
 6844      655F7400 
 6845              	.LASF93:
 6846 06eb 7852656C 		.ascii	"xReloadTime\000"
 6846      6F616454 
 6846      696D6500 
 6847              	.LASF91:
 6848 06f7 78526574 		.ascii	"xReturn\000"
 6848      75726E00 
 6849              	.LASF84:
 6850 06ff 7654696D 		.ascii	"vTimerSetTimerNumber\000"
 6850      65725365 
 6850      7454696D 
 6850      65724E75 
 6850      6D626572 
 6851              	.LASF13:
 6852 0714 6C6F6E67 		.ascii	"long unsigned int\000"
 6852      20756E73 
 6852      69676E65 
 6852      6420696E 
 6852      7400
 6853              	.LASF95:
 6854 0726 78526573 		.ascii	"xResult\000"
 6854      756C7400 
 6855              	.LASF119:
 6856 072e 7854696D 		.ascii	"xTimerGetPeriod\000"
 6856      65724765 
 6856      74506572 
 6856      696F6400 
 6857              	.LASF54:
 6858 073e 70785469 		.ascii	"pxTimer\000"
 6858      6D657200 
 6859              	.LASF7:
 6860 0746 756E7369 		.ascii	"unsigned char\000"
 6860      676E6564 
 6860      20636861 
 6860      7200
 6861              	.LASF53:
 6862 0754 784D6573 		.ascii	"xMessageValue\000"
 6862      73616765 
 6862      56616C75 
 6862      6500
 6863              	.LASF12:
 6864 0762 5F5F7569 		.ascii	"__uint32_t\000"
 6864      6E743332 
 6864      5F7400
 6865              	.LASF111:
 6866 076d 70727643 		.ascii	"prvCheckForValidListAndQueue\000"
 6866      6865636B 
 6866      466F7256 
 6866      616C6964 
 6866      4C697374 
 6867              	.LASF70:
 6868 078a 764C6973 		.ascii	"vListInitialise\000"
 6868      74496E69 
ARM GAS  /tmp/ccx8nc1r.s 			page 153


 6868      7469616C 
 6868      69736500 
 6869              	.LASF41:
 6870 079a 746D7254 		.ascii	"tmrTimerControl\000"
 6870      696D6572 
 6870      436F6E74 
 6870      726F6C00 
 6871              	.LASF115:
 6872 07aa 70635469 		.ascii	"pcTimerGetName\000"
 6872      6D657247 
 6872      65744E61 
 6872      6D6500
 6873              	.LASF124:
 6874 07b9 78546963 		.ascii	"xTicksToWait\000"
 6874      6B73546F 
 6874      57616974 
 6874      00
 6875              	.LASF25:
 6876 07c6 70764F77 		.ascii	"pvOwner\000"
 6876      6E657200 
 6877              	.LASF108:
 6878 07ce 70727650 		.ascii	"prvProcessTimerOrBlockTask\000"
 6878      726F6365 
 6878      73735469 
 6878      6D65724F 
 6878      72426C6F 
 6879              	.LASF117:
 6880 07e9 7654696D 		.ascii	"vTimerSetReloadMode\000"
 6880      65725365 
 6880      7452656C 
 6880      6F61644D 
 6880      6F646500 
 6881              	.LASF4:
 6882 07fd 7369676E 		.ascii	"signed char\000"
 6882      65642063 
 6882      68617200 
 6883              	.LASF101:
 6884 0809 784E6578 		.ascii	"xNextExpiryTime\000"
 6884      74457870 
 6884      69727954 
 6884      696D6500 
 6885              	.LASF10:
 6886 0819 73686F72 		.ascii	"short unsigned int\000"
 6886      7420756E 
 6886      7369676E 
 6886      65642069 
 6886      6E7400
 6887              	.LASF52:
 6888 082c 746D7254 		.ascii	"tmrTimerParameters\000"
 6888      696D6572 
 6888      50617261 
 6888      6D657465 
 6888      727300
 6889              	.LASF134:
 6890 083f 7854696D 		.ascii	"xTimerGetTimerDaemonTaskHandle\000"
 6890      65724765 
 6890      7454696D 
ARM GAS  /tmp/ccx8nc1r.s 			page 154


 6890      65724461 
 6890      656D6F6E 
 6891              	.LASF133:
 6892 085e 70727647 		.ascii	"prvGetNextExpireTime\000"
 6892      65744E65 
 6892      78744578 
 6892      70697265 
 6892      54696D65 
 6893              	.LASF106:
 6894 0873 70785469 		.ascii	"pxTimerListsWereSwitched\000"
 6894      6D65724C 
 6894      69737473 
 6894      57657265 
 6894      53776974 
 6895              		.ident	"GCC: (Arch Repository) 13.2.0"
ARM GAS  /tmp/ccx8nc1r.s 			page 155


DEFINED SYMBOLS
                            *ABS*:00000000 timers.c
     /tmp/ccx8nc1r.s:24     .text:00000000 $t
     /tmp/ccx8nc1r.s:29     .text:00000000 prvInsertTimerInActiveList
     /tmp/ccx8nc1r.s:125    .text:00000034 $d
     /tmp/ccx8nc1r.s:129    .text:00000038 $t
     /tmp/ccx8nc1r.s:134    .text:00000038 prvCheckForValidListAndQueue
     /tmp/ccx8nc1r.s:216    .text:00000070 $d
     /tmp/ccx8nc1r.s:224    .text:00000074 $t
     /tmp/ccx8nc1r.s:230    .text:00000074 xTimerCreateTimerTask
     /tmp/ccx8nc1r.s:281    .text:0000009c $d
     /tmp/ccx8nc1r.s:699    .text:000001ac prvTimerTask
     /tmp/ccx8nc1r.s:287    .text:000000a8 $t
     /tmp/ccx8nc1r.s:293    .text:000000a8 xTimerCreate
     /tmp/ccx8nc1r.s:399    .text:000000ee xTimerGenericCommand
     /tmp/ccx8nc1r.s:505    .text:0000012c $d
     /tmp/ccx8nc1r.s:509    .text:00000130 $t
     /tmp/ccx8nc1r.s:514    .text:00000130 prvSampleTimeNow
     /tmp/ccx8nc1r.s:688    .text:000001a8 $d
     /tmp/ccx8nc1r.s:694    .text:000001ac $t
     /tmp/ccx8nc1r.s:934    .text:00000252 $d
     /tmp/ccx8nc1r.s:945    .text:0000025c $t
     /tmp/ccx8nc1r.s:1169   .text:0000031c $d
     /tmp/ccx8nc1r.s:1175   .text:00000320 $t
     /tmp/ccx8nc1r.s:1181   .text:00000320 xTimerGetTimerDaemonTaskHandle
     /tmp/ccx8nc1r.s:1198   .text:00000328 $d
     /tmp/ccx8nc1r.s:1202   .text:0000032c $t
     /tmp/ccx8nc1r.s:1208   .text:0000032c xTimerGetPeriod
     /tmp/ccx8nc1r.s:1234   .text:00000330 vTimerSetReloadMode
     /tmp/ccx8nc1r.s:1308   .text:00000356 xTimerGetExpiryTime
     /tmp/ccx8nc1r.s:1336   .text:0000035a pcTimerGetName
     /tmp/ccx8nc1r.s:1362   .text:0000035e xTimerIsTimerActive
     /tmp/ccx8nc1r.s:1411   .text:00000376 pvTimerGetTimerID
     /tmp/ccx8nc1r.s:1458   .text:00000388 vTimerSetTimerID
     /tmp/ccx8nc1r.s:1517   .text:0000039c uxTimerGetTimerNumber
     /tmp/ccx8nc1r.s:1541   .text:000003a0 vTimerSetTimerNumber
     /tmp/ccx8nc1r.s:1560   .bss:00000000 $d
     /tmp/ccx8nc1r.s:1564   .bss:00000000 pxOverflowTimerList
     /tmp/ccx8nc1r.s:1568   .bss:00000004 pxCurrentTimerList
     /tmp/ccx8nc1r.s:1572   .bss:00000008 xTimerQueue
     /tmp/ccx8nc1r.s:1576   .bss:0000000c xActiveTimerList1
     /tmp/ccx8nc1r.s:1580   .bss:00000020 xActiveTimerList2
     /tmp/ccx8nc1r.s:1584   .bss:00000034 xTimerTaskHandle
     /tmp/ccx8nc1r.s:1588   .bss:00000038 xLastTime.0

UNDEFINED SYMBOLS
vListInsert
vPortEnterCritical
vListInitialise
xQueueGenericCreate
vPortExitCritical
xTaskCreate
pvPortMalloc
vListInitialiseItem
xTaskGetSchedulerState
xQueueGenericSend
xQueueGenericSendFromISR
ARM GAS  /tmp/ccx8nc1r.s 			page 156


xTaskGetTickCount
uxListRemove
vTaskSuspendAll
xTaskResumeAll
xQueueReceive
vQueueWaitForMessageRestricted
vPortFree
