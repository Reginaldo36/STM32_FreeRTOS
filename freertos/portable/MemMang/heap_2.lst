ARM GAS  /tmp/ccDcpl5H.s 			page 1


   1              		.cpu cortex-m3
   2              		.arch armv7-m
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1	@ Tag_ABI_FP_denormal
   5              		.eabi_attribute 21, 1	@ Tag_ABI_FP_exceptions
   6              		.eabi_attribute 23, 3	@ Tag_ABI_FP_number_model
   7              		.eabi_attribute 24, 1	@ Tag_ABI_align8_needed
   8              		.eabi_attribute 25, 1	@ Tag_ABI_align8_preserved
   9              		.eabi_attribute 26, 1	@ Tag_ABI_enum_size
  10              		.eabi_attribute 30, 4	@ Tag_ABI_optimization_goals
  11              		.eabi_attribute 34, 1	@ Tag_CPU_unaligned_access
  12              		.eabi_attribute 18, 4	@ Tag_ABI_PCS_wchar_t
  13              		.file	"heap_2.c"
  14              	@ GNU C17 (GNU Arm Embedded Toolchain 10.3-2021.10) version 10.3.1 20210824 (release) (arm-none-eab
  15              	@	compiled by GNU C version 4.8.4, GMP version 6.1.0, MPFR version 3.1.4, MPC version 1.0.3, isl ve
  16              	
  17              	@ GGC heuristics: --param ggc-min-expand=100 --param ggc-min-heapsize=131072
  18              	@ options passed:  -I . -I ../3-ComProcessos
  19              	@ -I ../stm32f10x_lib/CMSIS/CM3/CoreSupport
  20              	@ -I ../stm32f10x_lib/CMSIS/CM3/DeviceSupport/ST/STM32F10x
  21              	@ -I ../stm32f10x_lib/STM32F10x_StdPeriph_Driver/inc
  22              	@ -I ../stm32f10x_lib/STM32F10x_StdPeriph_Driver -I ../freertos/include
  23              	@ -I ../freertos/portable/GCC/ARM_CM3 -imultilib thumb/v7-m/nofp
  24              	@ -iprefix /usr/bin/../lib/gcc/arm-none-eabi/10.3.1/
  25              	@ -isysroot /usr/bin/../arm-none-eabi -D__USES_INITFINI__ -D STM32F10X_MD
  26              	@ -D USE_STDPERIPH_DRIVER -D HSE_VALUE=8000000 -D RUN_FROM_FLASH=1
  27              	@ ../freertos/portable/MemMang/heap_2.c -mcpu=cortex-m3 -mthumb
  28              	@ -mfloat-abi=soft -mlibarch=armv7-m -march=armv7-m
  29              	@ -auxbase-strip ../freertos/portable/MemMang/heap_2.o -g -gdwarf-2 -Os
  30              	@ -Wall -fomit-frame-pointer -fverbose-asm
  31              	@ options enabled:  -faggressive-loop-optimizations -fallocation-dce
  32              	@ -fauto-inc-dec -fbranch-count-reg -fcaller-saves -fcode-hoisting
  33              	@ -fcombine-stack-adjustments -fcompare-elim -fcprop-registers
  34              	@ -fcrossjumping -fcse-follow-jumps -fdefer-pop
  35              	@ -fdelete-null-pointer-checks -fdevirtualize -fdevirtualize-speculatively
  36              	@ -fdwarf2-cfi-asm -fearly-inlining -feliminate-unused-debug-symbols
  37              	@ -feliminate-unused-debug-types -fexpensive-optimizations
  38              	@ -fforward-propagate -ffp-int-builtin-inexact -ffunction-cse -fgcse
  39              	@ -fgcse-lm -fgnu-unique -fguess-branch-probability -fhoist-adjacent-loads
  40              	@ -fident -fif-conversion -fif-conversion2 -findirect-inlining -finline
  41              	@ -finline-atomics -finline-functions -finline-functions-called-once
  42              	@ -finline-small-functions -fipa-bit-cp -fipa-cp -fipa-icf
  43              	@ -fipa-icf-functions -fipa-icf-variables -fipa-profile -fipa-pure-const
  44              	@ -fipa-ra -fipa-reference -fipa-reference-addressable -fipa-sra
  45              	@ -fipa-stack-alignment -fipa-vrp -fira-hoist-pressure
  46              	@ -fira-share-save-slots -fira-share-spill-slots
  47              	@ -fisolate-erroneous-paths-dereference -fivopts -fkeep-static-consts
  48              	@ -fleading-underscore -flifetime-dse -flra-remat -fmath-errno
  49              	@ -fmerge-constants -fmerge-debug-strings -fmove-loop-invariants
  50              	@ -fomit-frame-pointer -foptimize-sibling-calls -fpartial-inlining
  51              	@ -fpeephole -fpeephole2 -fplt -fprefetch-loop-arrays -freg-struct-return
  52              	@ -freorder-blocks -freorder-functions -frerun-cse-after-loop
  53              	@ -fsched-critical-path-heuristic -fsched-dep-count-heuristic
  54              	@ -fsched-group-heuristic -fsched-interblock -fsched-last-insn-heuristic
  55              	@ -fsched-pressure -fsched-rank-heuristic -fsched-spec
  56              	@ -fsched-spec-insn-heuristic -fsched-stalled-insns-dep -fschedule-insns2
  57              	@ -fsection-anchors -fsemantic-interposition -fshow-column
ARM GAS  /tmp/ccDcpl5H.s 			page 2


  58              	@ -fshrink-wrap-separate -fsigned-zeros -fsplit-ivs-in-unroller
  59              	@ -fsplit-wide-types -fssa-backprop -fssa-phiopt -fstdarg-opt
  60              	@ -fstore-merging -fstrict-aliasing -fstrict-volatile-bitfields
  61              	@ -fsync-libcalls -fthread-jumps -ftoplevel-reorder -ftrapping-math
  62              	@ -ftree-bit-ccp -ftree-builtin-call-dce -ftree-ccp -ftree-ch
  63              	@ -ftree-coalesce-vars -ftree-copy-prop -ftree-cselim -ftree-dce
  64              	@ -ftree-dominator-opts -ftree-dse -ftree-forwprop -ftree-fre
  65              	@ -ftree-loop-distribute-patterns -ftree-loop-if-convert -ftree-loop-im
  66              	@ -ftree-loop-ivcanon -ftree-loop-optimize -ftree-parallelize-loops=
  67              	@ -ftree-phiprop -ftree-pre -ftree-pta -ftree-reassoc -ftree-scev-cprop
  68              	@ -ftree-sink -ftree-slsr -ftree-sra -ftree-switch-conversion
  69              	@ -ftree-tail-merge -ftree-ter -ftree-vrp -funit-at-a-time -fvar-tracking
  70              	@ -fvar-tracking-assignments -fverbose-asm -fzero-initialized-in-bss
  71              	@ -masm-syntax-unified -mbe32 -mfix-cortex-m3-ldrd -mlittle-endian
  72              	@ -mpic-data-is-text-relative -msched-prolog -mthumb -munaligned-access
  73              	@ -mvectorize-with-neon-quad
  74              	
  75              		.text
  76              	.Ltext0:
  77              		.cfi_sections	.debug_frame
  78              		.align	1
  79              		.global	pvPortMalloc
  80              		.syntax unified
  81              		.thumb
  82              		.thumb_func
  83              		.type	pvPortMalloc, %function
  84              	pvPortMalloc:
  85              	.LVL0:
  86              	.LFB5:
  87              		.file 1 "../freertos/portable/MemMang/heap_2.c"
   1:../freertos/portable/MemMang/heap_2.c **** /*
   2:../freertos/portable/MemMang/heap_2.c ****  * FreeRTOS Kernel V10.2.1
   3:../freertos/portable/MemMang/heap_2.c ****  * Copyright (C) 2019 Amazon.com, Inc. or its affiliates.  All Rights Reserved.
   4:../freertos/portable/MemMang/heap_2.c ****  *
   5:../freertos/portable/MemMang/heap_2.c ****  * Permission is hereby granted, free of charge, to any person obtaining a copy of
   6:../freertos/portable/MemMang/heap_2.c ****  * this software and associated documentation files (the "Software"), to deal in
   7:../freertos/portable/MemMang/heap_2.c ****  * the Software without restriction, including without limitation the rights to
   8:../freertos/portable/MemMang/heap_2.c ****  * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of
   9:../freertos/portable/MemMang/heap_2.c ****  * the Software, and to permit persons to whom the Software is furnished to do so,
  10:../freertos/portable/MemMang/heap_2.c ****  * subject to the following conditions:
  11:../freertos/portable/MemMang/heap_2.c ****  *
  12:../freertos/portable/MemMang/heap_2.c ****  * The above copyright notice and this permission notice shall be included in all
  13:../freertos/portable/MemMang/heap_2.c ****  * copies or substantial portions of the Software.
  14:../freertos/portable/MemMang/heap_2.c ****  *
  15:../freertos/portable/MemMang/heap_2.c ****  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  16:../freertos/portable/MemMang/heap_2.c ****  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
  17:../freertos/portable/MemMang/heap_2.c ****  * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
  18:../freertos/portable/MemMang/heap_2.c ****  * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
  19:../freertos/portable/MemMang/heap_2.c ****  * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
  20:../freertos/portable/MemMang/heap_2.c ****  * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
  21:../freertos/portable/MemMang/heap_2.c ****  *
  22:../freertos/portable/MemMang/heap_2.c ****  * http://www.FreeRTOS.org
  23:../freertos/portable/MemMang/heap_2.c ****  * http://aws.amazon.com/freertos
  24:../freertos/portable/MemMang/heap_2.c ****  *
  25:../freertos/portable/MemMang/heap_2.c ****  * 1 tab == 4 spaces!
  26:../freertos/portable/MemMang/heap_2.c ****  */
  27:../freertos/portable/MemMang/heap_2.c **** 
ARM GAS  /tmp/ccDcpl5H.s 			page 3


  28:../freertos/portable/MemMang/heap_2.c **** /*
  29:../freertos/portable/MemMang/heap_2.c ****  * A sample implementation of pvPortMalloc() and vPortFree() that permits
  30:../freertos/portable/MemMang/heap_2.c ****  * allocated blocks to be freed, but does not combine adjacent free blocks
  31:../freertos/portable/MemMang/heap_2.c ****  * into a single larger block (and so will fragment memory).  See heap_4.c for
  32:../freertos/portable/MemMang/heap_2.c ****  * an equivalent that does combine adjacent blocks into single larger blocks.
  33:../freertos/portable/MemMang/heap_2.c ****  *
  34:../freertos/portable/MemMang/heap_2.c ****  * See heap_1.c, heap_3.c and heap_4.c for alternative implementations, and the
  35:../freertos/portable/MemMang/heap_2.c ****  * memory management pages of http://www.FreeRTOS.org for more information.
  36:../freertos/portable/MemMang/heap_2.c ****  */
  37:../freertos/portable/MemMang/heap_2.c **** #include <stdlib.h>
  38:../freertos/portable/MemMang/heap_2.c **** 
  39:../freertos/portable/MemMang/heap_2.c **** /* Defining MPU_WRAPPERS_INCLUDED_FROM_API_FILE prevents task.h from redefining
  40:../freertos/portable/MemMang/heap_2.c **** all the API functions to use the MPU wrappers.  That should only be done when
  41:../freertos/portable/MemMang/heap_2.c **** task.h is included from an application file. */
  42:../freertos/portable/MemMang/heap_2.c **** #define MPU_WRAPPERS_INCLUDED_FROM_API_FILE
  43:../freertos/portable/MemMang/heap_2.c **** 
  44:../freertos/portable/MemMang/heap_2.c **** #include "FreeRTOS.h"
  45:../freertos/portable/MemMang/heap_2.c **** #include "task.h"
  46:../freertos/portable/MemMang/heap_2.c **** 
  47:../freertos/portable/MemMang/heap_2.c **** #undef MPU_WRAPPERS_INCLUDED_FROM_API_FILE
  48:../freertos/portable/MemMang/heap_2.c **** 
  49:../freertos/portable/MemMang/heap_2.c **** #if( configSUPPORT_DYNAMIC_ALLOCATION == 0 )
  50:../freertos/portable/MemMang/heap_2.c **** 	#error This file must not be used if configSUPPORT_DYNAMIC_ALLOCATION is 0
  51:../freertos/portable/MemMang/heap_2.c **** #endif
  52:../freertos/portable/MemMang/heap_2.c **** 
  53:../freertos/portable/MemMang/heap_2.c **** /* A few bytes might be lost to byte aligning the heap start address. */
  54:../freertos/portable/MemMang/heap_2.c **** #define configADJUSTED_HEAP_SIZE	( configTOTAL_HEAP_SIZE - portBYTE_ALIGNMENT )
  55:../freertos/portable/MemMang/heap_2.c **** 
  56:../freertos/portable/MemMang/heap_2.c **** /*
  57:../freertos/portable/MemMang/heap_2.c ****  * Initialises the heap structures before their first use.
  58:../freertos/portable/MemMang/heap_2.c ****  */
  59:../freertos/portable/MemMang/heap_2.c **** static void prvHeapInit( void );
  60:../freertos/portable/MemMang/heap_2.c **** 
  61:../freertos/portable/MemMang/heap_2.c **** /* Allocate the memory for the heap. */
  62:../freertos/portable/MemMang/heap_2.c **** #if( configAPPLICATION_ALLOCATED_HEAP == 1 )
  63:../freertos/portable/MemMang/heap_2.c **** 	/* The application writer has already defined the array used for the RTOS
  64:../freertos/portable/MemMang/heap_2.c **** 	heap - probably so it can be placed in a special segment or address. */
  65:../freertos/portable/MemMang/heap_2.c **** 	extern uint8_t ucHeap[ configTOTAL_HEAP_SIZE ];
  66:../freertos/portable/MemMang/heap_2.c **** #else
  67:../freertos/portable/MemMang/heap_2.c **** 	static uint8_t ucHeap[ configTOTAL_HEAP_SIZE ];
  68:../freertos/portable/MemMang/heap_2.c **** #endif /* configAPPLICATION_ALLOCATED_HEAP */
  69:../freertos/portable/MemMang/heap_2.c **** 
  70:../freertos/portable/MemMang/heap_2.c **** 
  71:../freertos/portable/MemMang/heap_2.c **** /* Define the linked list structure.  This is used to link free blocks in order
  72:../freertos/portable/MemMang/heap_2.c **** of their size. */
  73:../freertos/portable/MemMang/heap_2.c **** typedef struct A_BLOCK_LINK
  74:../freertos/portable/MemMang/heap_2.c **** {
  75:../freertos/portable/MemMang/heap_2.c **** 	struct A_BLOCK_LINK *pxNextFreeBlock;	/*<< The next free block in the list. */
  76:../freertos/portable/MemMang/heap_2.c **** 	size_t xBlockSize;						/*<< The size of the free block. */
  77:../freertos/portable/MemMang/heap_2.c **** } BlockLink_t;
  78:../freertos/portable/MemMang/heap_2.c **** 
  79:../freertos/portable/MemMang/heap_2.c **** 
  80:../freertos/portable/MemMang/heap_2.c **** static const uint16_t heapSTRUCT_SIZE	= ( ( sizeof ( BlockLink_t ) + ( portBYTE_ALIGNMENT - 1 ) ) &
  81:../freertos/portable/MemMang/heap_2.c **** #define heapMINIMUM_BLOCK_SIZE	( ( size_t ) ( heapSTRUCT_SIZE * 2 ) )
  82:../freertos/portable/MemMang/heap_2.c **** 
  83:../freertos/portable/MemMang/heap_2.c **** /* Create a couple of list links to mark the start and end of the list. */
  84:../freertos/portable/MemMang/heap_2.c **** static BlockLink_t xStart, xEnd;
ARM GAS  /tmp/ccDcpl5H.s 			page 4


  85:../freertos/portable/MemMang/heap_2.c **** 
  86:../freertos/portable/MemMang/heap_2.c **** /* Keeps track of the number of free bytes remaining, but says nothing about
  87:../freertos/portable/MemMang/heap_2.c **** fragmentation. */
  88:../freertos/portable/MemMang/heap_2.c **** static size_t xFreeBytesRemaining = configADJUSTED_HEAP_SIZE;
  89:../freertos/portable/MemMang/heap_2.c **** 
  90:../freertos/portable/MemMang/heap_2.c **** /* STATIC FUNCTIONS ARE DEFINED AS MACROS TO MINIMIZE THE FUNCTION CALL DEPTH. */
  91:../freertos/portable/MemMang/heap_2.c **** 
  92:../freertos/portable/MemMang/heap_2.c **** /*
  93:../freertos/portable/MemMang/heap_2.c ****  * Insert a block into the list of free blocks - which is ordered by size of
  94:../freertos/portable/MemMang/heap_2.c ****  * the block.  Small blocks at the start of the list and large blocks at the end
  95:../freertos/portable/MemMang/heap_2.c ****  * of the list.
  96:../freertos/portable/MemMang/heap_2.c ****  */
  97:../freertos/portable/MemMang/heap_2.c **** #define prvInsertBlockIntoFreeList( pxBlockToInsert )								\
  98:../freertos/portable/MemMang/heap_2.c **** {																					\
  99:../freertos/portable/MemMang/heap_2.c **** BlockLink_t *pxIterator;															\
 100:../freertos/portable/MemMang/heap_2.c **** size_t xBlockSize;																	\
 101:../freertos/portable/MemMang/heap_2.c **** 																					\
 102:../freertos/portable/MemMang/heap_2.c **** 	xBlockSize = pxBlockToInsert->xBlockSize;										\
 103:../freertos/portable/MemMang/heap_2.c **** 																					\
 104:../freertos/portable/MemMang/heap_2.c **** 	/* Iterate through the list until a block is found that has a larger size */	\
 105:../freertos/portable/MemMang/heap_2.c **** 	/* than the block we are inserting. */											\
 106:../freertos/portable/MemMang/heap_2.c **** 	for( pxIterator = &xStart; pxIterator->pxNextFreeBlock->xBlockSize < xBlockSize; pxIterator = pxIt
 107:../freertos/portable/MemMang/heap_2.c **** 	{																				\
 108:../freertos/portable/MemMang/heap_2.c **** 		/* There is nothing to do here - just iterate to the correct position. */	\
 109:../freertos/portable/MemMang/heap_2.c **** 	}																				\
 110:../freertos/portable/MemMang/heap_2.c **** 																					\
 111:../freertos/portable/MemMang/heap_2.c **** 	/* Update the list to include the block being inserted in the correct */		\
 112:../freertos/portable/MemMang/heap_2.c **** 	/* position. */																	\
 113:../freertos/portable/MemMang/heap_2.c **** 	pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock;					\
 114:../freertos/portable/MemMang/heap_2.c **** 	pxIterator->pxNextFreeBlock = pxBlockToInsert;									\
 115:../freertos/portable/MemMang/heap_2.c **** }
 116:../freertos/portable/MemMang/heap_2.c **** /*-----------------------------------------------------------*/
 117:../freertos/portable/MemMang/heap_2.c **** 
 118:../freertos/portable/MemMang/heap_2.c **** void *pvPortMalloc( size_t xWantedSize )
 119:../freertos/portable/MemMang/heap_2.c **** {
  88              		.loc 1 119 1 view -0
  89              		.cfi_startproc
  90              		@ args = 0, pretend = 0, frame = 0
  91              		@ frame_needed = 0, uses_anonymous_args = 0
 120:../freertos/portable/MemMang/heap_2.c **** BlockLink_t *pxBlock, *pxPreviousBlock, *pxNewBlockLink;
  92              		.loc 1 120 1 view .LVU1
 121:../freertos/portable/MemMang/heap_2.c **** static BaseType_t xHeapHasBeenInitialised = pdFALSE;
  93              		.loc 1 121 1 view .LVU2
 122:../freertos/portable/MemMang/heap_2.c **** void *pvReturn = NULL;
  94              		.loc 1 122 1 view .LVU3
 123:../freertos/portable/MemMang/heap_2.c **** 
 124:../freertos/portable/MemMang/heap_2.c **** 	vTaskSuspendAll();
  95              		.loc 1 124 2 view .LVU4
  96              	@ ../freertos/portable/MemMang/heap_2.c:119: {
 119:../freertos/portable/MemMang/heap_2.c **** BlockLink_t *pxBlock, *pxPreviousBlock, *pxNewBlockLink;
  97              		.loc 1 119 1 is_stmt 0 view .LVU5
  98 0000 70B5     		push	{r4, r5, r6, lr}	@
  99              	.LCFI0:
 100              		.cfi_def_cfa_offset 16
 101              		.cfi_offset 4, -16
 102              		.cfi_offset 5, -12
 103              		.cfi_offset 6, -8
ARM GAS  /tmp/ccDcpl5H.s 			page 5


 104              		.cfi_offset 14, -4
 105              	@ ../freertos/portable/MemMang/heap_2.c:119: {
 119:../freertos/portable/MemMang/heap_2.c **** BlockLink_t *pxBlock, *pxPreviousBlock, *pxNewBlockLink;
 106              		.loc 1 119 1 view .LVU6
 107 0002 0446     		mov	r4, r0	@ xWantedSize, tmp169
 108              	@ ../freertos/portable/MemMang/heap_2.c:124: 	vTaskSuspendAll();
 109              		.loc 1 124 2 view .LVU7
 110 0004 FFF7FEFF 		bl	vTaskSuspendAll		@
 111              	.LVL1:
 125:../freertos/portable/MemMang/heap_2.c **** 	{
 126:../freertos/portable/MemMang/heap_2.c **** 		/* If this is the first call to malloc then the heap will require
 127:../freertos/portable/MemMang/heap_2.c **** 		initialisation to setup the list of free blocks. */
 128:../freertos/portable/MemMang/heap_2.c **** 		if( xHeapHasBeenInitialised == pdFALSE )
 112              		.loc 1 128 3 is_stmt 1 view .LVU8
 113              	@ ../freertos/portable/MemMang/heap_2.c:128: 		if( xHeapHasBeenInitialised == pdFALSE )
 114              		.loc 1 128 31 is_stmt 0 view .LVU9
 115 0008 244B     		ldr	r3, .L19	@ tmp139,
 116              	@ ../freertos/portable/MemMang/heap_2.c:128: 		if( xHeapHasBeenInitialised == pdFALSE )
 117              		.loc 1 128 5 view .LVU10
 118 000a 9868     		ldr	r0, [r3, #8]	@ xHeapHasBeenInitialised, xHeapHasBeenInitialised
 119 000c 70B9     		cbnz	r0, .L2	@ xHeapHasBeenInitialised,
 129:../freertos/portable/MemMang/heap_2.c **** 		{
 130:../freertos/portable/MemMang/heap_2.c **** 			prvHeapInit();
 120              		.loc 1 130 4 is_stmt 1 view .LVU11
 121              	.LBB5:
 122              	.LBI5:
 131:../freertos/portable/MemMang/heap_2.c **** 			xHeapHasBeenInitialised = pdTRUE;
 132:../freertos/portable/MemMang/heap_2.c **** 		}
 133:../freertos/portable/MemMang/heap_2.c **** 
 134:../freertos/portable/MemMang/heap_2.c **** 		/* The wanted size is increased so it can contain a BlockLink_t
 135:../freertos/portable/MemMang/heap_2.c **** 		structure in addition to the requested amount of bytes. */
 136:../freertos/portable/MemMang/heap_2.c **** 		if( xWantedSize > 0 )
 137:../freertos/portable/MemMang/heap_2.c **** 		{
 138:../freertos/portable/MemMang/heap_2.c **** 			xWantedSize += heapSTRUCT_SIZE;
 139:../freertos/portable/MemMang/heap_2.c **** 
 140:../freertos/portable/MemMang/heap_2.c **** 			/* Ensure that blocks are always aligned to the required number of bytes. */
 141:../freertos/portable/MemMang/heap_2.c **** 			if( ( xWantedSize & portBYTE_ALIGNMENT_MASK ) != 0 )
 142:../freertos/portable/MemMang/heap_2.c **** 			{
 143:../freertos/portable/MemMang/heap_2.c **** 				/* Byte alignment required. */
 144:../freertos/portable/MemMang/heap_2.c **** 				xWantedSize += ( portBYTE_ALIGNMENT - ( xWantedSize & portBYTE_ALIGNMENT_MASK ) );
 145:../freertos/portable/MemMang/heap_2.c **** 			}
 146:../freertos/portable/MemMang/heap_2.c **** 		}
 147:../freertos/portable/MemMang/heap_2.c **** 
 148:../freertos/portable/MemMang/heap_2.c **** 		if( ( xWantedSize > 0 ) && ( xWantedSize < configADJUSTED_HEAP_SIZE ) )
 149:../freertos/portable/MemMang/heap_2.c **** 		{
 150:../freertos/portable/MemMang/heap_2.c **** 			/* Blocks are stored in byte order - traverse the list from the start
 151:../freertos/portable/MemMang/heap_2.c **** 			(smallest) block until one of adequate size is found. */
 152:../freertos/portable/MemMang/heap_2.c **** 			pxPreviousBlock = &xStart;
 153:../freertos/portable/MemMang/heap_2.c **** 			pxBlock = xStart.pxNextFreeBlock;
 154:../freertos/portable/MemMang/heap_2.c **** 			while( ( pxBlock->xBlockSize < xWantedSize ) && ( pxBlock->pxNextFreeBlock != NULL ) )
 155:../freertos/portable/MemMang/heap_2.c **** 			{
 156:../freertos/portable/MemMang/heap_2.c **** 				pxPreviousBlock = pxBlock;
 157:../freertos/portable/MemMang/heap_2.c **** 				pxBlock = pxBlock->pxNextFreeBlock;
 158:../freertos/portable/MemMang/heap_2.c **** 			}
 159:../freertos/portable/MemMang/heap_2.c **** 
 160:../freertos/portable/MemMang/heap_2.c **** 			/* If we found the end marker then a block of adequate size was not found. */
 161:../freertos/portable/MemMang/heap_2.c **** 			if( pxBlock != &xEnd )
ARM GAS  /tmp/ccDcpl5H.s 			page 6


 162:../freertos/portable/MemMang/heap_2.c **** 			{
 163:../freertos/portable/MemMang/heap_2.c **** 				/* Return the memory space - jumping over the BlockLink_t structure
 164:../freertos/portable/MemMang/heap_2.c **** 				at its start. */
 165:../freertos/portable/MemMang/heap_2.c **** 				pvReturn = ( void * ) ( ( ( uint8_t * ) pxPreviousBlock->pxNextFreeBlock ) + heapSTRUCT_SIZE );
 166:../freertos/portable/MemMang/heap_2.c **** 
 167:../freertos/portable/MemMang/heap_2.c **** 				/* This block is being returned for use so must be taken out of the
 168:../freertos/portable/MemMang/heap_2.c **** 				list of free blocks. */
 169:../freertos/portable/MemMang/heap_2.c **** 				pxPreviousBlock->pxNextFreeBlock = pxBlock->pxNextFreeBlock;
 170:../freertos/portable/MemMang/heap_2.c **** 
 171:../freertos/portable/MemMang/heap_2.c **** 				/* If the block is larger than required it can be split into two. */
 172:../freertos/portable/MemMang/heap_2.c **** 				if( ( pxBlock->xBlockSize - xWantedSize ) > heapMINIMUM_BLOCK_SIZE )
 173:../freertos/portable/MemMang/heap_2.c **** 				{
 174:../freertos/portable/MemMang/heap_2.c **** 					/* This block is to be split into two.  Create a new block
 175:../freertos/portable/MemMang/heap_2.c **** 					following the number of bytes requested. The void cast is
 176:../freertos/portable/MemMang/heap_2.c **** 					used to prevent byte alignment warnings from the compiler. */
 177:../freertos/portable/MemMang/heap_2.c **** 					pxNewBlockLink = ( void * ) ( ( ( uint8_t * ) pxBlock ) + xWantedSize );
 178:../freertos/portable/MemMang/heap_2.c **** 
 179:../freertos/portable/MemMang/heap_2.c **** 					/* Calculate the sizes of two blocks split from the single
 180:../freertos/portable/MemMang/heap_2.c **** 					block. */
 181:../freertos/portable/MemMang/heap_2.c **** 					pxNewBlockLink->xBlockSize = pxBlock->xBlockSize - xWantedSize;
 182:../freertos/portable/MemMang/heap_2.c **** 					pxBlock->xBlockSize = xWantedSize;
 183:../freertos/portable/MemMang/heap_2.c **** 
 184:../freertos/portable/MemMang/heap_2.c **** 					/* Insert the new block into the list of free blocks. */
 185:../freertos/portable/MemMang/heap_2.c **** 					prvInsertBlockIntoFreeList( ( pxNewBlockLink ) );
 186:../freertos/portable/MemMang/heap_2.c **** 				}
 187:../freertos/portable/MemMang/heap_2.c **** 
 188:../freertos/portable/MemMang/heap_2.c **** 				xFreeBytesRemaining -= pxBlock->xBlockSize;
 189:../freertos/portable/MemMang/heap_2.c **** 			}
 190:../freertos/portable/MemMang/heap_2.c **** 		}
 191:../freertos/portable/MemMang/heap_2.c **** 
 192:../freertos/portable/MemMang/heap_2.c **** 		traceMALLOC( pvReturn, xWantedSize );
 193:../freertos/portable/MemMang/heap_2.c **** 	}
 194:../freertos/portable/MemMang/heap_2.c **** 	( void ) xTaskResumeAll();
 195:../freertos/portable/MemMang/heap_2.c **** 
 196:../freertos/portable/MemMang/heap_2.c **** 	#if( configUSE_MALLOC_FAILED_HOOK == 1 )
 197:../freertos/portable/MemMang/heap_2.c **** 	{
 198:../freertos/portable/MemMang/heap_2.c **** 		if( pvReturn == NULL )
 199:../freertos/portable/MemMang/heap_2.c **** 		{
 200:../freertos/portable/MemMang/heap_2.c **** 			extern void vApplicationMallocFailedHook( void );
 201:../freertos/portable/MemMang/heap_2.c **** 			vApplicationMallocFailedHook();
 202:../freertos/portable/MemMang/heap_2.c **** 		}
 203:../freertos/portable/MemMang/heap_2.c **** 	}
 204:../freertos/portable/MemMang/heap_2.c **** 	#endif
 205:../freertos/portable/MemMang/heap_2.c **** 
 206:../freertos/portable/MemMang/heap_2.c **** 	return pvReturn;
 207:../freertos/portable/MemMang/heap_2.c **** }
 208:../freertos/portable/MemMang/heap_2.c **** /*-----------------------------------------------------------*/
 209:../freertos/portable/MemMang/heap_2.c **** 
 210:../freertos/portable/MemMang/heap_2.c **** void vPortFree( void *pv )
 211:../freertos/portable/MemMang/heap_2.c **** {
 212:../freertos/portable/MemMang/heap_2.c **** uint8_t *puc = ( uint8_t * ) pv;
 213:../freertos/portable/MemMang/heap_2.c **** BlockLink_t *pxLink;
 214:../freertos/portable/MemMang/heap_2.c **** 
 215:../freertos/portable/MemMang/heap_2.c **** 	if( pv != NULL )
 216:../freertos/portable/MemMang/heap_2.c **** 	{
 217:../freertos/portable/MemMang/heap_2.c **** 		/* The memory being freed will have an BlockLink_t structure immediately
 218:../freertos/portable/MemMang/heap_2.c **** 		before it. */
ARM GAS  /tmp/ccDcpl5H.s 			page 7


 219:../freertos/portable/MemMang/heap_2.c **** 		puc -= heapSTRUCT_SIZE;
 220:../freertos/portable/MemMang/heap_2.c **** 
 221:../freertos/portable/MemMang/heap_2.c **** 		/* This unexpected casting is to keep some compilers from issuing
 222:../freertos/portable/MemMang/heap_2.c **** 		byte alignment warnings. */
 223:../freertos/portable/MemMang/heap_2.c **** 		pxLink = ( void * ) puc;
 224:../freertos/portable/MemMang/heap_2.c **** 
 225:../freertos/portable/MemMang/heap_2.c **** 		vTaskSuspendAll();
 226:../freertos/portable/MemMang/heap_2.c **** 		{
 227:../freertos/portable/MemMang/heap_2.c **** 			/* Add this block to the list of free blocks. */
 228:../freertos/portable/MemMang/heap_2.c **** 			prvInsertBlockIntoFreeList( ( ( BlockLink_t * ) pxLink ) );
 229:../freertos/portable/MemMang/heap_2.c **** 			xFreeBytesRemaining += pxLink->xBlockSize;
 230:../freertos/portable/MemMang/heap_2.c **** 			traceFREE( pv, pxLink->xBlockSize );
 231:../freertos/portable/MemMang/heap_2.c **** 		}
 232:../freertos/portable/MemMang/heap_2.c **** 		( void ) xTaskResumeAll();
 233:../freertos/portable/MemMang/heap_2.c **** 	}
 234:../freertos/portable/MemMang/heap_2.c **** }
 235:../freertos/portable/MemMang/heap_2.c **** /*-----------------------------------------------------------*/
 236:../freertos/portable/MemMang/heap_2.c **** 
 237:../freertos/portable/MemMang/heap_2.c **** size_t xPortGetFreeHeapSize( void )
 238:../freertos/portable/MemMang/heap_2.c **** {
 239:../freertos/portable/MemMang/heap_2.c **** 	return xFreeBytesRemaining;
 240:../freertos/portable/MemMang/heap_2.c **** }
 241:../freertos/portable/MemMang/heap_2.c **** /*-----------------------------------------------------------*/
 242:../freertos/portable/MemMang/heap_2.c **** 
 243:../freertos/portable/MemMang/heap_2.c **** void vPortInitialiseBlocks( void )
 244:../freertos/portable/MemMang/heap_2.c **** {
 245:../freertos/portable/MemMang/heap_2.c **** 	/* This just exists to keep the linker quiet. */
 246:../freertos/portable/MemMang/heap_2.c **** }
 247:../freertos/portable/MemMang/heap_2.c **** /*-----------------------------------------------------------*/
 248:../freertos/portable/MemMang/heap_2.c **** 
 249:../freertos/portable/MemMang/heap_2.c **** static void prvHeapInit( void )
 123              		.loc 1 249 13 view .LVU12
 124              	.LBB6:
 250:../freertos/portable/MemMang/heap_2.c **** {
 251:../freertos/portable/MemMang/heap_2.c **** BlockLink_t *pxFirstFreeBlock;
 125              		.loc 1 251 1 view .LVU13
 252:../freertos/portable/MemMang/heap_2.c **** uint8_t *pucAlignedHeap;
 126              		.loc 1 252 1 view .LVU14
 253:../freertos/portable/MemMang/heap_2.c **** 
 254:../freertos/portable/MemMang/heap_2.c **** 	/* Ensure the heap starts on a correctly aligned boundary. */
 255:../freertos/portable/MemMang/heap_2.c **** 	pucAlignedHeap = ( uint8_t * ) ( ( ( portPOINTER_SIZE_TYPE ) &ucHeap[ portBYTE_ALIGNMENT ] ) & ( ~
 127              		.loc 1 255 2 view .LVU15
 128              	@ ../freertos/portable/MemMang/heap_2.c:264: 	xEnd.pxNextFreeBlock = NULL;
 256:../freertos/portable/MemMang/heap_2.c **** 
 257:../freertos/portable/MemMang/heap_2.c **** 	/* xStart is used to hold a pointer to the first item in the list of free
 258:../freertos/portable/MemMang/heap_2.c **** 	blocks.  The void cast is used to prevent compiler warnings. */
 259:../freertos/portable/MemMang/heap_2.c **** 	xStart.pxNextFreeBlock = ( void * ) pucAlignedHeap;
 260:../freertos/portable/MemMang/heap_2.c **** 	xStart.xBlockSize = ( size_t ) 0;
 261:../freertos/portable/MemMang/heap_2.c **** 
 262:../freertos/portable/MemMang/heap_2.c **** 	/* xEnd is used to mark the end of the list of free blocks. */
 263:../freertos/portable/MemMang/heap_2.c **** 	xEnd.xBlockSize = configADJUSTED_HEAP_SIZE;
 264:../freertos/portable/MemMang/heap_2.c **** 	xEnd.pxNextFreeBlock = NULL;
 129              		.loc 1 264 23 is_stmt 0 view .LVU16
 130 000e 1946     		mov	r1, r3	@ tmp151, tmp139
 131              	@ ../freertos/portable/MemMang/heap_2.c:263: 	xEnd.xBlockSize = configADJUSTED_HEAP_SIZE;
 263:../freertos/portable/MemMang/heap_2.c **** 	xEnd.pxNextFreeBlock = NULL;
 132              		.loc 1 263 18 view .LVU17
ARM GAS  /tmp/ccDcpl5H.s 			page 8


 133 0010 44F2F875 		movw	r5, #18424	@ tmp146,
 134              	@ ../freertos/portable/MemMang/heap_2.c:255: 	pucAlignedHeap = ( uint8_t * ) ( ( ( portPOINTER_SIZE
 255:../freertos/portable/MemMang/heap_2.c **** 
 135              		.loc 1 255 95 view .LVU18
 136 0014 224A     		ldr	r2, .L19+4	@ tmp141,
 137              	@ ../freertos/portable/MemMang/heap_2.c:264: 	xEnd.pxNextFreeBlock = NULL;
 138              		.loc 1 264 23 view .LVU19
 139 0016 41F80C0F 		str	r0, [r1, #12]!	@ xHeapHasBeenInitialised, xEnd.pxNextFreeBlock
 140              	@ ../freertos/portable/MemMang/heap_2.c:255: 	pucAlignedHeap = ( uint8_t * ) ( ( ( portPOINTER_SIZE
 255:../freertos/portable/MemMang/heap_2.c **** 
 141              		.loc 1 255 95 view .LVU20
 142 001a 22F00702 		bic	r2, r2, #7	@ pucAlignedHeap, tmp141,
 143              	.LVL2:
 259:../freertos/portable/MemMang/heap_2.c **** 	xStart.xBlockSize = ( size_t ) 0;
 144              		.loc 1 259 2 is_stmt 1 view .LVU21
 145              	@ ../freertos/portable/MemMang/heap_2.c:260: 	xStart.xBlockSize = ( size_t ) 0;
 260:../freertos/portable/MemMang/heap_2.c **** 
 146              		.loc 1 260 20 is_stmt 0 view .LVU22
 147 001e C3E90020 		strd	r2, r0, [r3]	@ pucAlignedHeap, xHeapHasBeenInitialised, tmp139
 263:../freertos/portable/MemMang/heap_2.c **** 	xEnd.pxNextFreeBlock = NULL;
 148              		.loc 1 263 2 is_stmt 1 view .LVU23
 149              	@ ../freertos/portable/MemMang/heap_2.c:270: 	pxFirstFreeBlock->pxNextFreeBlock = &xEnd;
 265:../freertos/portable/MemMang/heap_2.c **** 
 266:../freertos/portable/MemMang/heap_2.c **** 	/* To start with there is a single free block that is sized to take up the
 267:../freertos/portable/MemMang/heap_2.c **** 	entire heap space. */
 268:../freertos/portable/MemMang/heap_2.c **** 	pxFirstFreeBlock = ( void * ) pucAlignedHeap;
 269:../freertos/portable/MemMang/heap_2.c **** 	pxFirstFreeBlock->xBlockSize = configADJUSTED_HEAP_SIZE;
 270:../freertos/portable/MemMang/heap_2.c **** 	pxFirstFreeBlock->pxNextFreeBlock = &xEnd;
 150              		.loc 1 270 36 is_stmt 0 view .LVU24
 151 0022 C2E90015 		strd	r1, r5, [r2]	@ tmp151, tmp146, pucAlignedHeap
 152              	.LBE6:
 153              	.LBE5:
 154              	@ ../freertos/portable/MemMang/heap_2.c:131: 			xHeapHasBeenInitialised = pdTRUE;
 131:../freertos/portable/MemMang/heap_2.c **** 		}
 155              		.loc 1 131 28 view .LVU25
 156 0026 0122     		movs	r2, #1	@ tmp153,
 157              	.LVL3:
 158              	.LBB8:
 159              	.LBB7:
 160              	@ ../freertos/portable/MemMang/heap_2.c:263: 	xEnd.xBlockSize = configADJUSTED_HEAP_SIZE;
 263:../freertos/portable/MemMang/heap_2.c **** 	xEnd.pxNextFreeBlock = NULL;
 161              		.loc 1 263 18 view .LVU26
 162 0028 1D61     		str	r5, [r3, #16]	@ tmp146, xEnd.xBlockSize
 264:../freertos/portable/MemMang/heap_2.c **** 
 163              		.loc 1 264 2 is_stmt 1 view .LVU27
 268:../freertos/portable/MemMang/heap_2.c **** 	pxFirstFreeBlock->xBlockSize = configADJUSTED_HEAP_SIZE;
 164              		.loc 1 268 2 view .LVU28
 269:../freertos/portable/MemMang/heap_2.c **** 	pxFirstFreeBlock->pxNextFreeBlock = &xEnd;
 165              		.loc 1 269 2 view .LVU29
 166              	.LVL4:
 269:../freertos/portable/MemMang/heap_2.c **** 	pxFirstFreeBlock->pxNextFreeBlock = &xEnd;
 167              		.loc 1 269 2 is_stmt 0 view .LVU30
 168              	.LBE7:
 169              	.LBE8:
 131:../freertos/portable/MemMang/heap_2.c **** 		}
 170              		.loc 1 131 4 is_stmt 1 view .LVU31
 171              	@ ../freertos/portable/MemMang/heap_2.c:131: 			xHeapHasBeenInitialised = pdTRUE;
ARM GAS  /tmp/ccDcpl5H.s 			page 9


 131:../freertos/portable/MemMang/heap_2.c **** 		}
 172              		.loc 1 131 28 is_stmt 0 view .LVU32
 173 002a 9A60     		str	r2, [r3, #8]	@ tmp153, xHeapHasBeenInitialised
 174              	.L2:
 136:../freertos/portable/MemMang/heap_2.c **** 		{
 175              		.loc 1 136 3 is_stmt 1 view .LVU33
 176              	@ ../freertos/portable/MemMang/heap_2.c:136: 		if( xWantedSize > 0 )
 136:../freertos/portable/MemMang/heap_2.c **** 		{
 177              		.loc 1 136 5 is_stmt 0 view .LVU34
 178 002c 2CB1     		cbz	r4, .L3	@ xWantedSize,
 138:../freertos/portable/MemMang/heap_2.c **** 
 179              		.loc 1 138 4 is_stmt 1 view .LVU35
 180              	@ ../freertos/portable/MemMang/heap_2.c:138: 			xWantedSize += heapSTRUCT_SIZE;
 138:../freertos/portable/MemMang/heap_2.c **** 
 181              		.loc 1 138 16 is_stmt 0 view .LVU36
 182 002e 0834     		adds	r4, r4, #8	@ xWantedSize, xWantedSize,
 183              	.LVL5:
 141:../freertos/portable/MemMang/heap_2.c **** 			{
 184              		.loc 1 141 4 is_stmt 1 view .LVU37
 185              	@ ../freertos/portable/MemMang/heap_2.c:141: 			if( ( xWantedSize & portBYTE_ALIGNMENT_MASK ) != 0 
 141:../freertos/portable/MemMang/heap_2.c **** 			{
 186              		.loc 1 141 6 is_stmt 0 view .LVU38
 187 0030 6207     		lsls	r2, r4, #29	@, xWantedSize,
 144:../freertos/portable/MemMang/heap_2.c **** 			}
 188              		.loc 1 144 5 is_stmt 1 view .LVU39
 189              	@ ../freertos/portable/MemMang/heap_2.c:144: 				xWantedSize += ( portBYTE_ALIGNMENT - ( xWantedSiz
 144:../freertos/portable/MemMang/heap_2.c **** 			}
 190              		.loc 1 144 17 is_stmt 0 view .LVU40
 191 0032 1CBF     		itt	ne
 192 0034 24F00704 		bicne	r4, r4, #7	@ _3, xWantedSize,
 193              	.LVL6:
 144:../freertos/portable/MemMang/heap_2.c **** 			}
 194              		.loc 1 144 17 view .LVU41
 195 0038 0834     		addne	r4, r4, #8	@ xWantedSize, _3,
 196              	.LVL7:
 197              	.L3:
 148:../freertos/portable/MemMang/heap_2.c **** 		{
 198              		.loc 1 148 3 is_stmt 1 view .LVU42
 199              	@ ../freertos/portable/MemMang/heap_2.c:148: 		if( ( xWantedSize > 0 ) && ( xWantedSize < configADJ
 148:../freertos/portable/MemMang/heap_2.c **** 		{
 200              		.loc 1 148 5 is_stmt 0 view .LVU43
 201 003a 44F2F672 		movw	r2, #18422	@ tmp156,
 202              	@ ../freertos/portable/MemMang/heap_2.c:148: 		if( ( xWantedSize > 0 ) && ( xWantedSize < configADJ
 148:../freertos/portable/MemMang/heap_2.c **** 		{
 203              		.loc 1 148 27 view .LVU44
 204 003e 611E     		subs	r1, r4, #1	@ tmp155, xWantedSize,
 205              	@ ../freertos/portable/MemMang/heap_2.c:148: 		if( ( xWantedSize > 0 ) && ( xWantedSize < configADJ
 148:../freertos/portable/MemMang/heap_2.c **** 		{
 206              		.loc 1 148 5 view .LVU45
 207 0040 9142     		cmp	r1, r2	@ tmp155, tmp156
 208 0042 29D8     		bhi	.L11		@,
 152:../freertos/portable/MemMang/heap_2.c **** 			pxBlock = xStart.pxNextFreeBlock;
 209              		.loc 1 152 4 is_stmt 1 view .LVU46
 210              	.LVL8:
 153:../freertos/portable/MemMang/heap_2.c **** 			while( ( pxBlock->xBlockSize < xWantedSize ) && ( pxBlock->pxNextFreeBlock != NULL ) )
 211              		.loc 1 153 4 view .LVU47
 212              	@ ../freertos/portable/MemMang/heap_2.c:153: 			pxBlock = xStart.pxNextFreeBlock;
ARM GAS  /tmp/ccDcpl5H.s 			page 10


 153:../freertos/portable/MemMang/heap_2.c **** 			while( ( pxBlock->xBlockSize < xWantedSize ) && ( pxBlock->pxNextFreeBlock != NULL ) )
 213              		.loc 1 153 12 is_stmt 0 view .LVU48
 214 0044 1B68     		ldr	r3, [r3]	@ pxBlock, xStart.pxNextFreeBlock
 215              	.LVL9:
 154:../freertos/portable/MemMang/heap_2.c **** 			{
 216              		.loc 1 154 4 is_stmt 1 view .LVU49
 217              	@ ../freertos/portable/MemMang/heap_2.c:152: 			pxPreviousBlock = &xStart;
 152:../freertos/portable/MemMang/heap_2.c **** 			pxBlock = xStart.pxNextFreeBlock;
 218              		.loc 1 152 20 is_stmt 0 view .LVU50
 219 0046 1548     		ldr	r0, .L19	@ pxPreviousBlock,
 220              	.LVL10:
 221              	.L6:
 154:../freertos/portable/MemMang/heap_2.c **** 			{
 222              		.loc 1 154 9 is_stmt 1 view .LVU51
 223              	@ ../freertos/portable/MemMang/heap_2.c:154: 			while( ( pxBlock->xBlockSize < xWantedSize ) && ( p
 154:../freertos/portable/MemMang/heap_2.c **** 			{
 224              		.loc 1 154 20 is_stmt 0 view .LVU52
 225 0048 5968     		ldr	r1, [r3, #4]	@ _5, pxBlock_20->xBlockSize
 226              	@ ../freertos/portable/MemMang/heap_2.c:154: 			while( ( pxBlock->xBlockSize < xWantedSize ) && ( p
 154:../freertos/portable/MemMang/heap_2.c **** 			{
 227              		.loc 1 154 9 view .LVU53
 228 004a A142     		cmp	r1, r4	@ _5, xWantedSize
 229 004c 01D2     		bcs	.L5		@,
 230              	@ ../freertos/portable/MemMang/heap_2.c:154: 			while( ( pxBlock->xBlockSize < xWantedSize ) && ( p
 154:../freertos/portable/MemMang/heap_2.c **** 			{
 231              		.loc 1 154 61 discriminator 1 view .LVU54
 232 004e 1A68     		ldr	r2, [r3]	@ _6, pxBlock_20->pxNextFreeBlock
 233              	@ ../freertos/portable/MemMang/heap_2.c:154: 			while( ( pxBlock->xBlockSize < xWantedSize ) && ( p
 154:../freertos/portable/MemMang/heap_2.c **** 			{
 234              		.loc 1 154 49 discriminator 1 view .LVU55
 235 0050 FAB9     		cbnz	r2, .L10	@ _6,
 236              	.L5:
 161:../freertos/portable/MemMang/heap_2.c **** 			{
 237              		.loc 1 161 4 is_stmt 1 view .LVU56
 238              	@ ../freertos/portable/MemMang/heap_2.c:161: 			if( pxBlock != &xEnd )
 161:../freertos/portable/MemMang/heap_2.c **** 			{
 239              		.loc 1 161 6 is_stmt 0 view .LVU57
 240 0052 144A     		ldr	r2, .L19+8	@ tmp159,
 241 0054 9342     		cmp	r3, r2	@ pxBlock, tmp159
 242 0056 1FD0     		beq	.L11		@,
 165:../freertos/portable/MemMang/heap_2.c **** 
 243              		.loc 1 165 5 is_stmt 1 view .LVU58
 244              	@ ../freertos/portable/MemMang/heap_2.c:165: 				pvReturn = ( void * ) ( ( ( uint8_t * ) pxPrevious
 165:../freertos/portable/MemMang/heap_2.c **** 
 245              		.loc 1 165 14 is_stmt 0 view .LVU59
 246 0058 0568     		ldr	r5, [r0]	@ pxPreviousBlock_21->pxNextFreeBlock, pxPreviousBlock_21->pxNextFreeBlock
 247              	@ ../freertos/portable/MemMang/heap_2.c:169: 				pxPreviousBlock->pxNextFreeBlock = pxBlock->pxNext
 169:../freertos/portable/MemMang/heap_2.c **** 
 248              		.loc 1 169 47 view .LVU60
 249 005a 1E68     		ldr	r6, [r3]	@ _8, pxBlock_20->pxNextFreeBlock
 250              	@ ../freertos/portable/MemMang/heap_2.c:172: 				if( ( pxBlock->xBlockSize - xWantedSize ) > heapMI
 172:../freertos/portable/MemMang/heap_2.c **** 				{
 251              		.loc 1 172 31 view .LVU61
 252 005c 091B     		subs	r1, r1, r4	@ _10, _5, xWantedSize
 253              	@ ../freertos/portable/MemMang/heap_2.c:172: 				if( ( pxBlock->xBlockSize - xWantedSize ) > heapMI
 172:../freertos/portable/MemMang/heap_2.c **** 				{
 254              		.loc 1 172 7 view .LVU62
ARM GAS  /tmp/ccDcpl5H.s 			page 11


 255 005e 1029     		cmp	r1, #16	@ _10,
 256              	@ ../freertos/portable/MemMang/heap_2.c:165: 				pvReturn = ( void * ) ( ( ( uint8_t * ) pxPrevious
 165:../freertos/portable/MemMang/heap_2.c **** 
 257              		.loc 1 165 14 view .LVU63
 258 0060 05F10805 		add	r5, r5, #8	@ <retval>, pxPreviousBlock_21->pxNextFreeBlock,
 259              	.LVL11:
 169:../freertos/portable/MemMang/heap_2.c **** 
 260              		.loc 1 169 5 is_stmt 1 view .LVU64
 261              	@ ../freertos/portable/MemMang/heap_2.c:169: 				pxPreviousBlock->pxNextFreeBlock = pxBlock->pxNext
 169:../freertos/portable/MemMang/heap_2.c **** 
 262              		.loc 1 169 38 is_stmt 0 view .LVU65
 263 0064 0660     		str	r6, [r0]	@ _8, pxPreviousBlock_21->pxNextFreeBlock
 172:../freertos/portable/MemMang/heap_2.c **** 				{
 264              		.loc 1 172 5 is_stmt 1 view .LVU66
 265              	@ ../freertos/portable/MemMang/heap_2.c:172: 				if( ( pxBlock->xBlockSize - xWantedSize ) > heapMI
 172:../freertos/portable/MemMang/heap_2.c **** 				{
 266              		.loc 1 172 7 is_stmt 0 view .LVU67
 267 0066 0BD9     		bls	.L7		@,
 177:../freertos/portable/MemMang/heap_2.c **** 
 268              		.loc 1 177 6 is_stmt 1 view .LVU68
 269              	@ ../freertos/portable/MemMang/heap_2.c:177: 					pxNewBlockLink = ( void * ) ( ( ( uint8_t * ) pxB
 177:../freertos/portable/MemMang/heap_2.c **** 
 270              		.loc 1 177 21 is_stmt 0 view .LVU69
 271 0068 1819     		adds	r0, r3, r4	@ pxNewBlockLink, pxBlock, xWantedSize
 272              	.LVL12:
 181:../freertos/portable/MemMang/heap_2.c **** 					pxBlock->xBlockSize = xWantedSize;
 273              		.loc 1 181 6 is_stmt 1 view .LVU70
 274              	@ ../freertos/portable/MemMang/heap_2.c:181: 					pxNewBlockLink->xBlockSize = pxBlock->xBlockSize 
 181:../freertos/portable/MemMang/heap_2.c **** 					pxBlock->xBlockSize = xWantedSize;
 275              		.loc 1 181 33 is_stmt 0 view .LVU71
 276 006a 4160     		str	r1, [r0, #4]	@ _10, pxNewBlockLink_38->xBlockSize
 182:../freertos/portable/MemMang/heap_2.c **** 
 277              		.loc 1 182 6 is_stmt 1 view .LVU72
 278              	@ ../freertos/portable/MemMang/heap_2.c:182: 					pxBlock->xBlockSize = xWantedSize;
 182:../freertos/portable/MemMang/heap_2.c **** 
 279              		.loc 1 182 26 is_stmt 0 view .LVU73
 280 006c 5C60     		str	r4, [r3, #4]	@ xWantedSize, pxBlock_20->xBlockSize
 281              	.LBB9:
 185:../freertos/portable/MemMang/heap_2.c **** 				}
 282              		.loc 1 185 6 is_stmt 1 view .LVU74
 185:../freertos/portable/MemMang/heap_2.c **** 				}
 283              		.loc 1 185 6 view .LVU75
 185:../freertos/portable/MemMang/heap_2.c **** 				}
 284              		.loc 1 185 6 view .LVU76
 285 006e 4468     		ldr	r4, [r0, #4]	@ xBlockSize, pxNewBlockLink_38->xBlockSize
 286              	.LVL13:
 185:../freertos/portable/MemMang/heap_2.c **** 				}
 287              		.loc 1 185 6 view .LVU77
 185:../freertos/portable/MemMang/heap_2.c **** 				}
 288              		.loc 1 185 6 is_stmt 0 view .LVU78
 289 0070 0C3A     		subs	r2, r2, #12	@ _13, tmp159,
 290              	.LVL14:
 291              	.L8:
 185:../freertos/portable/MemMang/heap_2.c **** 				}
 292              		.loc 1 185 6 is_stmt 1 discriminator 1 view .LVU79
 293 0072 1146     		mov	r1, r2	@ pxIterator, _13
 294 0074 1268     		ldr	r2, [r2]	@ _13, pxIterator_23->pxNextFreeBlock
ARM GAS  /tmp/ccDcpl5H.s 			page 12


 295              	.LVL15:
 185:../freertos/portable/MemMang/heap_2.c **** 				}
 296              		.loc 1 185 6 is_stmt 0 discriminator 1 view .LVU80
 297 0076 5668     		ldr	r6, [r2, #4]	@ _13->xBlockSize, _13->xBlockSize
 298 0078 A642     		cmp	r6, r4	@ _13->xBlockSize, xBlockSize
 299 007a FAD3     		bcc	.L8		@,
 185:../freertos/portable/MemMang/heap_2.c **** 				}
 300              		.loc 1 185 6 is_stmt 1 discriminator 4 view .LVU81
 301 007c 0260     		str	r2, [r0]	@ _13, pxNewBlockLink_38->pxNextFreeBlock
 185:../freertos/portable/MemMang/heap_2.c **** 				}
 302              		.loc 1 185 6 discriminator 4 view .LVU82
 303 007e 0860     		str	r0, [r1]	@ pxNewBlockLink, pxIterator_59->pxNextFreeBlock
 304              	.LVL16:
 305              	.L7:
 185:../freertos/portable/MemMang/heap_2.c **** 				}
 306              		.loc 1 185 6 is_stmt 0 discriminator 4 view .LVU83
 307              	.LBE9:
 185:../freertos/portable/MemMang/heap_2.c **** 				}
 308              		.loc 1 185 54 is_stmt 1 discriminator 5 view .LVU84
 188:../freertos/portable/MemMang/heap_2.c **** 			}
 309              		.loc 1 188 5 discriminator 5 view .LVU85
 310              	@ ../freertos/portable/MemMang/heap_2.c:188: 				xFreeBytesRemaining -= pxBlock->xBlockSize;
 188:../freertos/portable/MemMang/heap_2.c **** 			}
 311              		.loc 1 188 25 is_stmt 0 discriminator 5 view .LVU86
 312 0080 0949     		ldr	r1, .L19+12	@ tmp162,
 313 0082 5B68     		ldr	r3, [r3, #4]	@ pxBlock_20->xBlockSize, pxBlock_20->xBlockSize
 314              	.LVL17:
 188:../freertos/portable/MemMang/heap_2.c **** 			}
 315              		.loc 1 188 25 discriminator 5 view .LVU87
 316 0084 0A68     		ldr	r2, [r1]	@ xFreeBytesRemaining, xFreeBytesRemaining
 317 0086 D21A     		subs	r2, r2, r3	@ tmp164, xFreeBytesRemaining, pxBlock_20->xBlockSize
 318 0088 0A60     		str	r2, [r1]	@ tmp164, xFreeBytesRemaining
 319              	.LVL18:
 320              	.L4:
 192:../freertos/portable/MemMang/heap_2.c **** 	}
 321              		.loc 1 192 39 is_stmt 1 view .LVU88
 194:../freertos/portable/MemMang/heap_2.c **** 
 322              		.loc 1 194 2 view .LVU89
 323              	@ ../freertos/portable/MemMang/heap_2.c:194: 	( void ) xTaskResumeAll();
 194:../freertos/portable/MemMang/heap_2.c **** 
 324              		.loc 1 194 11 is_stmt 0 view .LVU90
 325 008a FFF7FEFF 		bl	xTaskResumeAll		@
 326              	.LVL19:
 206:../freertos/portable/MemMang/heap_2.c **** }
 327              		.loc 1 206 2 is_stmt 1 view .LVU91
 328              	@ ../freertos/portable/MemMang/heap_2.c:207: }
 207:../freertos/portable/MemMang/heap_2.c **** /*-----------------------------------------------------------*/
 329              		.loc 1 207 1 is_stmt 0 view .LVU92
 330 008e 2846     		mov	r0, r5	@, <retval>
 331 0090 70BD     		pop	{r4, r5, r6, pc}	@
 332              	.LVL20:
 333              	.L10:
 207:../freertos/portable/MemMang/heap_2.c **** /*-----------------------------------------------------------*/
 334              		.loc 1 207 1 view .LVU93
 335 0092 1846     		mov	r0, r3	@ pxPreviousBlock, pxBlock
 336 0094 1346     		mov	r3, r2	@ pxBlock, _6
 337              	.LVL21:
ARM GAS  /tmp/ccDcpl5H.s 			page 13


 207:../freertos/portable/MemMang/heap_2.c **** /*-----------------------------------------------------------*/
 338              		.loc 1 207 1 view .LVU94
 339 0096 D7E7     		b	.L6		@
 340              	.LVL22:
 341              	.L11:
 342              	@ ../freertos/portable/MemMang/heap_2.c:122: void *pvReturn = NULL;
 122:../freertos/portable/MemMang/heap_2.c **** 
 343              		.loc 1 122 7 view .LVU95
 344 0098 0025     		movs	r5, #0	@ <retval>,
 345 009a F6E7     		b	.L4		@
 346              	.L20:
 347              		.align	2
 348              	.L19:
 349 009c 00000000 		.word	.LANCHOR0
 350 00a0 1C000000 		.word	ucHeap+8
 351 00a4 0C000000 		.word	.LANCHOR0+12
 352 00a8 00000000 		.word	.LANCHOR1
 353              		.cfi_endproc
 354              	.LFE5:
 355              		.size	pvPortMalloc, .-pvPortMalloc
 356              		.align	1
 357              		.global	vPortFree
 358              		.syntax unified
 359              		.thumb
 360              		.thumb_func
 361              		.type	vPortFree, %function
 362              	vPortFree:
 363              	.LVL23:
 364              	.LFB6:
 211:../freertos/portable/MemMang/heap_2.c **** uint8_t *puc = ( uint8_t * ) pv;
 365              		.loc 1 211 1 is_stmt 1 view -0
 366              		.cfi_startproc
 367              		@ args = 0, pretend = 0, frame = 0
 368              		@ frame_needed = 0, uses_anonymous_args = 0
 212:../freertos/portable/MemMang/heap_2.c **** BlockLink_t *pxLink;
 369              		.loc 1 212 1 view .LVU97
 213:../freertos/portable/MemMang/heap_2.c **** 
 370              		.loc 1 213 1 view .LVU98
 215:../freertos/portable/MemMang/heap_2.c **** 	{
 371              		.loc 1 215 2 view .LVU99
 372              	@ ../freertos/portable/MemMang/heap_2.c:211: {
 211:../freertos/portable/MemMang/heap_2.c **** uint8_t *puc = ( uint8_t * ) pv;
 373              		.loc 1 211 1 is_stmt 0 view .LVU100
 374 00ac 38B5     		push	{r3, r4, r5, lr}	@
 375              	.LCFI1:
 376              		.cfi_def_cfa_offset 16
 377              		.cfi_offset 3, -16
 378              		.cfi_offset 4, -12
 379              		.cfi_offset 5, -8
 380              		.cfi_offset 14, -4
 381              	@ ../freertos/portable/MemMang/heap_2.c:215: 	if( pv != NULL )
 215:../freertos/portable/MemMang/heap_2.c **** 	{
 382              		.loc 1 215 4 view .LVU101
 383 00ae 0446     		mov	r4, r0	@ pv, tmp127
 384 00b0 B0B1     		cbz	r0, .L21	@ pv,
 219:../freertos/portable/MemMang/heap_2.c **** 
 385              		.loc 1 219 3 is_stmt 1 view .LVU102
ARM GAS  /tmp/ccDcpl5H.s 			page 14


 386              	@ ../freertos/portable/MemMang/heap_2.c:219: 		puc -= heapSTRUCT_SIZE;
 219:../freertos/portable/MemMang/heap_2.c **** 
 387              		.loc 1 219 7 is_stmt 0 view .LVU103
 388 00b2 A0F10805 		sub	r5, r0, #8	@ puc, pv,
 389              	.LVL24:
 223:../freertos/portable/MemMang/heap_2.c **** 
 390              		.loc 1 223 3 is_stmt 1 view .LVU104
 225:../freertos/portable/MemMang/heap_2.c **** 		{
 391              		.loc 1 225 3 view .LVU105
 392 00b6 FFF7FEFF 		bl	vTaskSuspendAll		@
 393              	.LVL25:
 394              	.LBB10:
 228:../freertos/portable/MemMang/heap_2.c **** 			xFreeBytesRemaining += pxLink->xBlockSize;
 395              		.loc 1 228 4 view .LVU106
 228:../freertos/portable/MemMang/heap_2.c **** 			xFreeBytesRemaining += pxLink->xBlockSize;
 396              		.loc 1 228 4 view .LVU107
 228:../freertos/portable/MemMang/heap_2.c **** 			xFreeBytesRemaining += pxLink->xBlockSize;
 397              		.loc 1 228 4 view .LVU108
 398 00ba 54F8041C 		ldr	r1, [r4, #-4]	@ xBlockSize, MEM[(struct BlockLink_t *)pv_9(D) + 4294967288B].xBlockSize
 399              	.LVL26:
 228:../freertos/portable/MemMang/heap_2.c **** 			xFreeBytesRemaining += pxLink->xBlockSize;
 400              		.loc 1 228 4 view .LVU109
 228:../freertos/portable/MemMang/heap_2.c **** 			xFreeBytesRemaining += pxLink->xBlockSize;
 401              		.loc 1 228 4 is_stmt 0 view .LVU110
 402 00be 094B     		ldr	r3, .L25	@ _1,
 403              	.LVL27:
 404              	.L23:
 228:../freertos/portable/MemMang/heap_2.c **** 			xFreeBytesRemaining += pxLink->xBlockSize;
 405              		.loc 1 228 4 is_stmt 1 discriminator 1 view .LVU111
 406 00c0 1A46     		mov	r2, r3	@ pxIterator, _1
 407 00c2 1B68     		ldr	r3, [r3]	@ _1, pxIterator_7->pxNextFreeBlock
 408              	.LVL28:
 228:../freertos/portable/MemMang/heap_2.c **** 			xFreeBytesRemaining += pxLink->xBlockSize;
 409              		.loc 1 228 4 is_stmt 0 discriminator 1 view .LVU112
 410 00c4 5868     		ldr	r0, [r3, #4]	@ _1->xBlockSize, _1->xBlockSize
 411 00c6 8842     		cmp	r0, r1	@ _1->xBlockSize, xBlockSize
 412 00c8 FAD3     		bcc	.L23		@,
 228:../freertos/portable/MemMang/heap_2.c **** 			xFreeBytesRemaining += pxLink->xBlockSize;
 413              		.loc 1 228 4 is_stmt 1 discriminator 4 view .LVU113
 414 00ca 44F8083C 		str	r3, [r4, #-8]	@ _1, MEM[(struct BlockLink_t *)pv_9(D) + 4294967288B].pxNextFreeBlock
 228:../freertos/portable/MemMang/heap_2.c **** 			xFreeBytesRemaining += pxLink->xBlockSize;
 415              		.loc 1 228 4 discriminator 4 view .LVU114
 416 00ce 1560     		str	r5, [r2]	@ puc, pxIterator_4->pxNextFreeBlock
 417              	.LBE10:
 228:../freertos/portable/MemMang/heap_2.c **** 			xFreeBytesRemaining += pxLink->xBlockSize;
 418              		.loc 1 228 62 discriminator 4 view .LVU115
 229:../freertos/portable/MemMang/heap_2.c **** 			traceFREE( pv, pxLink->xBlockSize );
 419              		.loc 1 229 4 discriminator 4 view .LVU116
 420              	@ ../freertos/portable/MemMang/heap_2.c:229: 			xFreeBytesRemaining += pxLink->xBlockSize;
 229:../freertos/portable/MemMang/heap_2.c **** 			traceFREE( pv, pxLink->xBlockSize );
 421              		.loc 1 229 24 is_stmt 0 discriminator 4 view .LVU117
 422 00d0 054A     		ldr	r2, .L25+4	@ tmp123,
 423              	.LVL29:
 229:../freertos/portable/MemMang/heap_2.c **** 			traceFREE( pv, pxLink->xBlockSize );
 424              		.loc 1 229 24 discriminator 4 view .LVU118
 425 00d2 1368     		ldr	r3, [r2]	@ xFreeBytesRemaining, xFreeBytesRemaining
 426 00d4 0B44     		add	r3, r3, r1	@ tmp125, xBlockSize
ARM GAS  /tmp/ccDcpl5H.s 			page 15


 427 00d6 1360     		str	r3, [r2]	@ tmp125, xFreeBytesRemaining
 230:../freertos/portable/MemMang/heap_2.c **** 		}
 428              		.loc 1 230 39 is_stmt 1 discriminator 4 view .LVU119
 232:../freertos/portable/MemMang/heap_2.c **** 	}
 429              		.loc 1 232 3 discriminator 4 view .LVU120
 430              	@ ../freertos/portable/MemMang/heap_2.c:234: }
 234:../freertos/portable/MemMang/heap_2.c **** /*-----------------------------------------------------------*/
 431              		.loc 1 234 1 is_stmt 0 discriminator 4 view .LVU121
 432 00d8 BDE83840 		pop	{r3, r4, r5, lr}	@
 433              	.LCFI2:
 434              		.cfi_remember_state
 435              		.cfi_restore 14
 436              		.cfi_restore 5
 437              		.cfi_restore 4
 438              		.cfi_restore 3
 439              		.cfi_def_cfa_offset 0
 440              	.LVL30:
 441              	@ ../freertos/portable/MemMang/heap_2.c:232: 		( void ) xTaskResumeAll();
 232:../freertos/portable/MemMang/heap_2.c **** 	}
 442              		.loc 1 232 12 discriminator 4 view .LVU122
 443 00dc FFF7FEBF 		b	xTaskResumeAll		@
 444              	.LVL31:
 445              	.L21:
 446              	.LCFI3:
 447              		.cfi_restore_state
 448              	@ ../freertos/portable/MemMang/heap_2.c:234: }
 234:../freertos/portable/MemMang/heap_2.c **** /*-----------------------------------------------------------*/
 449              		.loc 1 234 1 view .LVU123
 450 00e0 38BD     		pop	{r3, r4, r5, pc}	@
 451              	.L26:
 452 00e2 00BF     		.align	2
 453              	.L25:
 454 00e4 00000000 		.word	.LANCHOR0
 455 00e8 00000000 		.word	.LANCHOR1
 456              		.cfi_endproc
 457              	.LFE6:
 458              		.size	vPortFree, .-vPortFree
 459              		.align	1
 460              		.global	xPortGetFreeHeapSize
 461              		.syntax unified
 462              		.thumb
 463              		.thumb_func
 464              		.type	xPortGetFreeHeapSize, %function
 465              	xPortGetFreeHeapSize:
 466              	.LFB7:
 238:../freertos/portable/MemMang/heap_2.c **** 	return xFreeBytesRemaining;
 467              		.loc 1 238 1 is_stmt 1 view -0
 468              		.cfi_startproc
 469              		@ args = 0, pretend = 0, frame = 0
 470              		@ frame_needed = 0, uses_anonymous_args = 0
 471              		@ link register save eliminated.
 239:../freertos/portable/MemMang/heap_2.c **** }
 472              		.loc 1 239 2 view .LVU125
 473              	@ ../freertos/portable/MemMang/heap_2.c:240: }
 240:../freertos/portable/MemMang/heap_2.c **** /*-----------------------------------------------------------*/
 474              		.loc 1 240 1 is_stmt 0 view .LVU126
 475 00ec 014B     		ldr	r3, .L28	@ tmp115,
ARM GAS  /tmp/ccDcpl5H.s 			page 16


 476 00ee 1868     		ldr	r0, [r3]	@, xFreeBytesRemaining
 477 00f0 7047     		bx	lr	@
 478              	.L29:
 479 00f2 00BF     		.align	2
 480              	.L28:
 481 00f4 00000000 		.word	.LANCHOR1
 482              		.cfi_endproc
 483              	.LFE7:
 484              		.size	xPortGetFreeHeapSize, .-xPortGetFreeHeapSize
 485              		.align	1
 486              		.global	vPortInitialiseBlocks
 487              		.syntax unified
 488              		.thumb
 489              		.thumb_func
 490              		.type	vPortInitialiseBlocks, %function
 491              	vPortInitialiseBlocks:
 492              	.LFB8:
 244:../freertos/portable/MemMang/heap_2.c **** 	/* This just exists to keep the linker quiet. */
 493              		.loc 1 244 1 is_stmt 1 view -0
 494              		.cfi_startproc
 495              		@ args = 0, pretend = 0, frame = 0
 496              		@ frame_needed = 0, uses_anonymous_args = 0
 497              		@ link register save eliminated.
 246:../freertos/portable/MemMang/heap_2.c **** /*-----------------------------------------------------------*/
 498              		.loc 1 246 1 view .LVU128
 499 00f8 7047     		bx	lr	@
 500              		.cfi_endproc
 501              	.LFE8:
 502              		.size	vPortInitialiseBlocks, .-vPortInitialiseBlocks
 503              		.data
 504              		.align	2
 505              		.set	.LANCHOR1,. + 0
 506              		.type	xFreeBytesRemaining, %object
 507              		.size	xFreeBytesRemaining, 4
 508              	xFreeBytesRemaining:
 509 0000 F8470000 		.word	18424
 510              		.bss
 511              		.align	2
 512              		.set	.LANCHOR0,. + 0
 513              		.type	xStart, %object
 514              		.size	xStart, 8
 515              	xStart:
 516 0000 00000000 		.space	8
 516      00000000 
 517              		.type	xHeapHasBeenInitialised.0, %object
 518              		.size	xHeapHasBeenInitialised.0, 4
 519              	xHeapHasBeenInitialised.0:
 520 0008 00000000 		.space	4
 521              		.type	xEnd, %object
 522              		.size	xEnd, 8
 523              	xEnd:
 524 000c 00000000 		.space	8
 524      00000000 
 525              		.type	ucHeap, %object
 526              		.size	ucHeap, 18432
 527              	ucHeap:
 528 0014 00000000 		.space	18432
ARM GAS  /tmp/ccDcpl5H.s 			page 17


 528      00000000 
 528      00000000 
 528      00000000 
 528      00000000 
 529              		.text
 530              	.Letext0:
 531              		.file 2 "/usr/lib/gcc/arm-none-eabi/10.3.1/include/stddef.h"
 532              		.file 3 "/usr/arm-none-eabi/include/machine/_default_types.h"
 533              		.file 4 "/usr/arm-none-eabi/include/sys/_stdint.h"
 534              		.file 5 "../freertos/portable/GCC/ARM_CM3/portmacro.h"
 535              		.file 6 "../freertos/include/task.h"
 536 00fa 00BF     		.section	.debug_info,"",%progbits
 537              	.Ldebug_info0:
 538 0000 AE030000 		.4byte	0x3ae
 539 0004 0200     		.2byte	0x2
 540 0006 00000000 		.4byte	.Ldebug_abbrev0
 541 000a 04       		.byte	0x4
 542 000b 01       		.uleb128 0x1
 543 000c F3010000 		.4byte	.LASF39
 544 0010 0C       		.byte	0xc
 545 0011 D1000000 		.4byte	.LASF40
 546 0015 00000000 		.4byte	.LASF41
 547 0019 00000000 		.4byte	.Ltext0
 548 001d FA000000 		.4byte	.Letext0
 549 0021 00000000 		.4byte	.Ldebug_line0
 550 0025 02       		.uleb128 0x2
 551 0026 49000000 		.4byte	.LASF4
 552 002a 02       		.byte	0x2
 553 002b D1       		.byte	0xd1
 554 002c 17       		.byte	0x17
 555 002d 31000000 		.4byte	0x31
 556 0031 03       		.uleb128 0x3
 557 0032 04       		.byte	0x4
 558 0033 07       		.byte	0x7
 559 0034 B8010000 		.4byte	.LASF0
 560 0038 04       		.uleb128 0x4
 561 0039 04       		.byte	0x4
 562 003a 05       		.byte	0x5
 563 003b 696E7400 		.ascii	"int\000"
 564 003f 03       		.uleb128 0x3
 565 0040 08       		.byte	0x8
 566 0041 05       		.byte	0x5
 567 0042 7F020000 		.4byte	.LASF1
 568 0046 03       		.uleb128 0x3
 569 0047 08       		.byte	0x8
 570 0048 04       		.byte	0x4
 571 0049 F1020000 		.4byte	.LASF2
 572 004d 03       		.uleb128 0x3
 573 004e 01       		.byte	0x1
 574 004f 06       		.byte	0x6
 575 0050 FD020000 		.4byte	.LASF3
 576 0054 02       		.uleb128 0x2
 577 0055 3F000000 		.4byte	.LASF5
 578 0059 03       		.byte	0x3
 579 005a 2B       		.byte	0x2b
 580 005b 18       		.byte	0x18
 581 005c 60000000 		.4byte	0x60
ARM GAS  /tmp/ccDcpl5H.s 			page 18


 582 0060 03       		.uleb128 0x3
 583 0061 01       		.byte	0x1
 584 0062 08       		.byte	0x8
 585 0063 F7000000 		.4byte	.LASF6
 586 0067 03       		.uleb128 0x3
 587 0068 02       		.byte	0x2
 588 0069 05       		.byte	0x5
 589 006a B8020000 		.4byte	.LASF7
 590 006e 02       		.uleb128 0x2
 591 006f 52010000 		.4byte	.LASF8
 592 0073 03       		.byte	0x3
 593 0074 39       		.byte	0x39
 594 0075 19       		.byte	0x19
 595 0076 7A000000 		.4byte	0x7a
 596 007a 03       		.uleb128 0x3
 597 007b 02       		.byte	0x2
 598 007c 07       		.byte	0x7
 599 007d 22010000 		.4byte	.LASF9
 600 0081 03       		.uleb128 0x3
 601 0082 04       		.byte	0x4
 602 0083 05       		.byte	0x5
 603 0084 E8020000 		.4byte	.LASF10
 604 0088 02       		.uleb128 0x2
 605 0089 77010000 		.4byte	.LASF11
 606 008d 03       		.byte	0x3
 607 008e 4F       		.byte	0x4f
 608 008f 19       		.byte	0x19
 609 0090 94000000 		.4byte	0x94
 610 0094 03       		.uleb128 0x3
 611 0095 04       		.byte	0x4
 612 0096 07       		.byte	0x7
 613 0097 10010000 		.4byte	.LASF12
 614 009b 03       		.uleb128 0x3
 615 009c 08       		.byte	0x8
 616 009d 07       		.byte	0x7
 617 009e C5010000 		.4byte	.LASF13
 618 00a2 05       		.uleb128 0x5
 619 00a3 04       		.byte	0x4
 620 00a4 03       		.uleb128 0x3
 621 00a5 01       		.byte	0x1
 622 00a6 08       		.byte	0x8
 623 00a7 99020000 		.4byte	.LASF14
 624 00ab 02       		.uleb128 0x2
 625 00ac DC010000 		.4byte	.LASF15
 626 00b0 04       		.byte	0x4
 627 00b1 18       		.byte	0x18
 628 00b2 13       		.byte	0x13
 629 00b3 54000000 		.4byte	0x54
 630 00b7 02       		.uleb128 0x2
 631 00b8 C2020000 		.4byte	.LASF16
 632 00bc 04       		.byte	0x4
 633 00bd 24       		.byte	0x24
 634 00be 14       		.byte	0x14
 635 00bf 6E000000 		.4byte	0x6e
 636 00c3 06       		.uleb128 0x6
 637 00c4 B7000000 		.4byte	0xb7
 638 00c8 02       		.uleb128 0x2
ARM GAS  /tmp/ccDcpl5H.s 			page 19


 639 00c9 DF020000 		.4byte	.LASF17
 640 00cd 04       		.byte	0x4
 641 00ce 30       		.byte	0x30
 642 00cf 14       		.byte	0x14
 643 00d0 88000000 		.4byte	0x88
 644 00d4 02       		.uleb128 0x2
 645 00d5 19030000 		.4byte	.LASF18
 646 00d9 05       		.byte	0x5
 647 00da 38       		.byte	0x38
 648 00db 0E       		.byte	0xe
 649 00dc 81000000 		.4byte	0x81
 650 00e0 07       		.uleb128 0x7
 651 00e1 04       		.byte	0x4
 652 00e2 AB000000 		.4byte	0xab
 653 00e6 08       		.uleb128 0x8
 654 00e7 AB000000 		.4byte	0xab
 655 00eb F7000000 		.4byte	0xf7
 656 00ef 09       		.uleb128 0x9
 657 00f0 31000000 		.4byte	0x31
 658 00f4 FF47     		.2byte	0x47ff
 659 00f6 00       		.byte	0
 660 00f7 0A       		.uleb128 0xa
 661 00f8 CA000000 		.4byte	.LASF22
 662 00fc 01       		.byte	0x1
 663 00fd 43       		.byte	0x43
 664 00fe 11       		.byte	0x11
 665 00ff E6000000 		.4byte	0xe6
 666 0103 05       		.byte	0x5
 667 0104 03       		.byte	0x3
 668 0105 14000000 		.4byte	ucHeap
 669 0109 0B       		.uleb128 0xb
 670 010a 75000000 		.4byte	.LASF42
 671 010e 08       		.byte	0x8
 672 010f 01       		.byte	0x1
 673 0110 49       		.byte	0x49
 674 0111 10       		.byte	0x10
 675 0112 35010000 		.4byte	0x135
 676 0116 0C       		.uleb128 0xc
 677 0117 09030000 		.4byte	.LASF19
 678 011b 01       		.byte	0x1
 679 011c 4B       		.byte	0x4b
 680 011d 17       		.byte	0x17
 681 011e 35010000 		.4byte	0x135
 682 0122 02       		.byte	0x2
 683 0123 23       		.byte	0x23
 684 0124 00       		.uleb128 0
 685 0125 0C       		.uleb128 0xc
 686 0126 05010000 		.4byte	.LASF20
 687 012a 01       		.byte	0x1
 688 012b 4C       		.byte	0x4c
 689 012c 09       		.byte	0x9
 690 012d 25000000 		.4byte	0x25
 691 0131 02       		.byte	0x2
 692 0132 23       		.byte	0x23
 693 0133 04       		.uleb128 0x4
 694 0134 00       		.byte	0
 695 0135 07       		.uleb128 0x7
ARM GAS  /tmp/ccDcpl5H.s 			page 20


 696 0136 04       		.byte	0x4
 697 0137 09010000 		.4byte	0x109
 698 013b 02       		.uleb128 0x2
 699 013c 73020000 		.4byte	.LASF21
 700 0140 01       		.byte	0x1
 701 0141 4D       		.byte	0x4d
 702 0142 03       		.byte	0x3
 703 0143 09010000 		.4byte	0x109
 704 0147 0D       		.uleb128 0xd
 705 0148 8B010000 		.4byte	.LASF23
 706 014c 01       		.byte	0x1
 707 014d 50       		.byte	0x50
 708 014e 17       		.byte	0x17
 709 014f C3000000 		.4byte	0xc3
 710 0153 08       		.byte	0x8
 711 0154 0A       		.uleb128 0xa
 712 0155 9B010000 		.4byte	.LASF24
 713 0159 01       		.byte	0x1
 714 015a 54       		.byte	0x54
 715 015b 14       		.byte	0x14
 716 015c 3B010000 		.4byte	0x13b
 717 0160 05       		.byte	0x5
 718 0161 03       		.byte	0x3
 719 0162 00000000 		.4byte	xStart
 720 0166 0A       		.uleb128 0xa
 721 0167 4D010000 		.4byte	.LASF25
 722 016b 01       		.byte	0x1
 723 016c 54       		.byte	0x54
 724 016d 1C       		.byte	0x1c
 725 016e 3B010000 		.4byte	0x13b
 726 0172 05       		.byte	0x5
 727 0173 03       		.byte	0x3
 728 0174 0C000000 		.4byte	xEnd
 729 0178 0A       		.uleb128 0xa
 730 0179 CB020000 		.4byte	.LASF26
 731 017d 01       		.byte	0x1
 732 017e 58       		.byte	0x58
 733 017f 0F       		.byte	0xf
 734 0180 25000000 		.4byte	0x25
 735 0184 05       		.byte	0x5
 736 0185 03       		.byte	0x3
 737 0186 00000000 		.4byte	xFreeBytesRemaining
 738 018a 0E       		.uleb128 0xe
 739 018b 82000000 		.4byte	.LASF43
 740 018f 01       		.byte	0x1
 741 0190 F9       		.byte	0xf9
 742 0191 0D       		.byte	0xd
 743 0192 01       		.byte	0x1
 744 0193 01       		.byte	0x1
 745 0194 B1010000 		.4byte	0x1b1
 746 0198 0F       		.uleb128 0xf
 747 0199 B9000000 		.4byte	.LASF27
 748 019d 01       		.byte	0x1
 749 019e FB       		.byte	0xfb
 750 019f 0E       		.byte	0xe
 751 01a0 B1010000 		.4byte	0x1b1
 752 01a4 0F       		.uleb128 0xf
ARM GAS  /tmp/ccDcpl5H.s 			page 21


 753 01a5 9E020000 		.4byte	.LASF28
 754 01a9 01       		.byte	0x1
 755 01aa FC       		.byte	0xfc
 756 01ab 0A       		.byte	0xa
 757 01ac E0000000 		.4byte	0xe0
 758 01b0 00       		.byte	0
 759 01b1 07       		.uleb128 0x7
 760 01b2 04       		.byte	0x4
 761 01b3 3B010000 		.4byte	0x13b
 762 01b7 10       		.uleb128 0x10
 763 01b8 01       		.byte	0x1
 764 01b9 A2010000 		.4byte	.LASF44
 765 01bd 01       		.byte	0x1
 766 01be F3       		.byte	0xf3
 767 01bf 06       		.byte	0x6
 768 01c0 01       		.byte	0x1
 769 01c1 F8000000 		.4byte	.LFB8
 770 01c5 FA000000 		.4byte	.LFE8
 771 01c9 02       		.byte	0x2
 772 01ca 7D       		.byte	0x7d
 773 01cb 00       		.sleb128 0
 774 01cc 01       		.byte	0x1
 775 01cd 11       		.uleb128 0x11
 776 01ce 01       		.byte	0x1
 777 01cf 60000000 		.4byte	.LASF45
 778 01d3 01       		.byte	0x1
 779 01d4 ED       		.byte	0xed
 780 01d5 08       		.byte	0x8
 781 01d6 01       		.byte	0x1
 782 01d7 25000000 		.4byte	0x25
 783 01db EC000000 		.4byte	.LFB7
 784 01df F8000000 		.4byte	.LFE7
 785 01e3 02       		.byte	0x2
 786 01e4 7D       		.byte	0x7d
 787 01e5 00       		.sleb128 0
 788 01e6 01       		.byte	0x1
 789 01e7 12       		.uleb128 0x12
 790 01e8 01       		.byte	0x1
 791 01e9 6D010000 		.4byte	.LASF46
 792 01ed 01       		.byte	0x1
 793 01ee D2       		.byte	0xd2
 794 01ef 06       		.byte	0x6
 795 01f0 01       		.byte	0x1
 796 01f1 AC000000 		.4byte	.LFB6
 797 01f5 EC000000 		.4byte	.LFE6
 798 01f9 00000000 		.4byte	.LLST9
 799 01fd 01       		.byte	0x1
 800 01fe 87020000 		.4byte	0x287
 801 0202 13       		.uleb128 0x13
 802 0203 707600   		.ascii	"pv\000"
 803 0206 01       		.byte	0x1
 804 0207 D2       		.byte	0xd2
 805 0208 17       		.byte	0x17
 806 0209 A2000000 		.4byte	0xa2
 807 020d 40000000 		.4byte	.LLST10
 808 0211 38000000 		.4byte	.LVUS10
 809 0215 14       		.uleb128 0x14
ARM GAS  /tmp/ccDcpl5H.s 			page 22


 810 0216 70756300 		.ascii	"puc\000"
 811 021a 01       		.byte	0x1
 812 021b D4       		.byte	0xd4
 813 021c 0A       		.byte	0xa
 814 021d E0000000 		.4byte	0xe0
 815 0221 7F000000 		.4byte	.LLST11
 816 0225 77000000 		.4byte	.LVUS11
 817 0229 15       		.uleb128 0x15
 818 022a A5000000 		.4byte	.LASF29
 819 022e 01       		.byte	0x1
 820 022f D5       		.byte	0xd5
 821 0230 0E       		.byte	0xe
 822 0231 B1010000 		.4byte	0x1b1
 823 0235 BC000000 		.4byte	.LLST12
 824 0239 B8000000 		.4byte	.LVUS12
 825 023d 16       		.uleb128 0x16
 826 023e BA000000 		.4byte	.LBB10
 827 0242 D0000000 		.4byte	.LBE10
 828 0246 73020000 		.4byte	0x273
 829 024a 15       		.uleb128 0x15
 830 024b AD020000 		.4byte	.LASF30
 831 024f 01       		.byte	0x1
 832 0250 E4       		.byte	0xe4
 833 0251 04       		.byte	0x4
 834 0252 B1010000 		.4byte	0x1b1
 835 0256 E5000000 		.4byte	.LLST13
 836 025a DF000000 		.4byte	.LVUS13
 837 025e 15       		.uleb128 0x15
 838 025f 05010000 		.4byte	.LASF20
 839 0263 01       		.byte	0x1
 840 0264 E4       		.byte	0xe4
 841 0265 04       		.byte	0x4
 842 0266 25000000 		.4byte	0x25
 843 026a 15010000 		.4byte	.LLST14
 844 026e 13010000 		.4byte	.LVUS14
 845 0272 00       		.byte	0
 846 0273 17       		.uleb128 0x17
 847 0274 BA000000 		.4byte	.LVL25
 848 0278 93030000 		.4byte	0x393
 849 027c 18       		.uleb128 0x18
 850 027d E0000000 		.4byte	.LVL31
 851 0281 01       		.byte	0x1
 852 0282 A2030000 		.4byte	0x3a2
 853 0286 00       		.byte	0
 854 0287 19       		.uleb128 0x19
 855 0288 01       		.byte	0x1
 856 0289 AC000000 		.4byte	.LASF47
 857 028d 01       		.byte	0x1
 858 028e 76       		.byte	0x76
 859 028f 07       		.byte	0x7
 860 0290 01       		.byte	0x1
 861 0291 A2000000 		.4byte	0xa2
 862 0295 00000000 		.4byte	.LFB5
 863 0299 AC000000 		.4byte	.LFE5
 864 029d 28010000 		.4byte	.LLST0
 865 02a1 01       		.byte	0x1
 866 02a2 93030000 		.4byte	0x393
ARM GAS  /tmp/ccDcpl5H.s 			page 23


 867 02a6 1A       		.uleb128 0x1a
 868 02a7 8D020000 		.4byte	.LASF31
 869 02ab 01       		.byte	0x1
 870 02ac 76       		.byte	0x76
 871 02ad 1C       		.byte	0x1c
 872 02ae 25000000 		.4byte	0x25
 873 02b2 54010000 		.4byte	.LLST1
 874 02b6 48010000 		.4byte	.LVUS1
 875 02ba 15       		.uleb128 0x15
 876 02bb 9D000000 		.4byte	.LASF32
 877 02bf 01       		.byte	0x1
 878 02c0 78       		.byte	0x78
 879 02c1 0E       		.byte	0xe
 880 02c2 B1010000 		.4byte	0x1b1
 881 02c6 AA010000 		.4byte	.LLST2
 882 02ca A4010000 		.4byte	.LVUS2
 883 02ce 15       		.uleb128 0x15
 884 02cf 5D010000 		.4byte	.LASF33
 885 02d3 01       		.byte	0x1
 886 02d4 78       		.byte	0x78
 887 02d5 18       		.byte	0x18
 888 02d6 B1010000 		.4byte	0x1b1
 889 02da D5010000 		.4byte	.LLST3
 890 02de D3010000 		.4byte	.LVUS3
 891 02e2 15       		.uleb128 0x15
 892 02e3 E4010000 		.4byte	.LASF34
 893 02e7 01       		.byte	0x1
 894 02e8 78       		.byte	0x78
 895 02e9 2A       		.byte	0x2a
 896 02ea B1010000 		.4byte	0x1b1
 897 02ee EF010000 		.4byte	.LLST4
 898 02f2 ED010000 		.4byte	.LVUS4
 899 02f6 0A       		.uleb128 0xa
 900 02f7 35010000 		.4byte	.LASF35
 901 02fb 01       		.byte	0x1
 902 02fc 79       		.byte	0x79
 903 02fd 13       		.byte	0x13
 904 02fe D4000000 		.4byte	0xd4
 905 0302 05       		.byte	0x5
 906 0303 03       		.byte	0x3
 907 0304 08000000 		.4byte	xHeapHasBeenInitialised.0
 908 0308 15       		.uleb128 0x15
 909 0309 82010000 		.4byte	.LASF36
 910 030d 01       		.byte	0x1
 911 030e 7A       		.byte	0x7a
 912 030f 07       		.byte	0x7
 913 0310 A2000000 		.4byte	0xa2
 914 0314 08020000 		.4byte	.LLST5
 915 0318 02020000 		.4byte	.LVUS5
 916 031c 16       		.uleb128 0x16
 917 031d 6E000000 		.4byte	.LBB9
 918 0321 80000000 		.4byte	.LBE9
 919 0325 52030000 		.4byte	0x352
 920 0329 15       		.uleb128 0x15
 921 032a AD020000 		.4byte	.LASF30
 922 032e 01       		.byte	0x1
 923 032f B9       		.byte	0xb9
ARM GAS  /tmp/ccDcpl5H.s 			page 24


 924 0330 06       		.byte	0x6
 925 0331 B1010000 		.4byte	0x1b1
 926 0335 39020000 		.4byte	.LLST7
 927 0339 33020000 		.4byte	.LVUS7
 928 033d 15       		.uleb128 0x15
 929 033e 05010000 		.4byte	.LASF20
 930 0342 01       		.byte	0x1
 931 0343 B9       		.byte	0xb9
 932 0344 06       		.byte	0x6
 933 0345 25000000 		.4byte	0x25
 934 0349 69020000 		.4byte	.LLST8
 935 034d 67020000 		.4byte	.LVUS8
 936 0351 00       		.byte	0
 937 0352 1B       		.uleb128 0x1b
 938 0353 8A010000 		.4byte	0x18a
 939 0357 0E000000 		.4byte	.LBI5
 940 035b 01       		.byte	.LVU12
 941 035c 00000000 		.4byte	.Ldebug_ranges0+0
 942 0360 01       		.byte	0x1
 943 0361 82       		.byte	0x82
 944 0362 04       		.byte	0x4
 945 0363 80030000 		.4byte	0x380
 946 0367 1C       		.uleb128 0x1c
 947 0368 00000000 		.4byte	.Ldebug_ranges0+0
 948 036c 1D       		.uleb128 0x1d
 949 036d 98010000 		.4byte	0x198
 950 0371 1E       		.uleb128 0x1e
 951 0372 A4010000 		.4byte	0x1a4
 952 0376 80020000 		.4byte	.LLST6
 953 037a 7C020000 		.4byte	.LVUS6
 954 037e 00       		.byte	0
 955 037f 00       		.byte	0
 956 0380 17       		.uleb128 0x17
 957 0381 08000000 		.4byte	.LVL1
 958 0385 93030000 		.4byte	0x393
 959 0389 17       		.uleb128 0x17
 960 038a 8E000000 		.4byte	.LVL19
 961 038e A2030000 		.4byte	0x3a2
 962 0392 00       		.byte	0
 963 0393 1F       		.uleb128 0x1f
 964 0394 01       		.byte	0x1
 965 0395 01       		.byte	0x1
 966 0396 50000000 		.4byte	.LASF37
 967 039a 50000000 		.4byte	.LASF37
 968 039e 06       		.byte	0x6
 969 039f 0205     		.2byte	0x502
 970 03a1 06       		.byte	0x6
 971 03a2 1F       		.uleb128 0x1f
 972 03a3 01       		.byte	0x1
 973 03a4 01       		.byte	0x1
 974 03a5 8E000000 		.4byte	.LASF38
 975 03a9 8E000000 		.4byte	.LASF38
 976 03ad 06       		.byte	0x6
 977 03ae 3805     		.2byte	0x538
 978 03b0 0C       		.byte	0xc
 979 03b1 00       		.byte	0
 980              		.section	.debug_abbrev,"",%progbits
ARM GAS  /tmp/ccDcpl5H.s 			page 25


 981              	.Ldebug_abbrev0:
 982 0000 01       		.uleb128 0x1
 983 0001 11       		.uleb128 0x11
 984 0002 01       		.byte	0x1
 985 0003 25       		.uleb128 0x25
 986 0004 0E       		.uleb128 0xe
 987 0005 13       		.uleb128 0x13
 988 0006 0B       		.uleb128 0xb
 989 0007 03       		.uleb128 0x3
 990 0008 0E       		.uleb128 0xe
 991 0009 1B       		.uleb128 0x1b
 992 000a 0E       		.uleb128 0xe
 993 000b 11       		.uleb128 0x11
 994 000c 01       		.uleb128 0x1
 995 000d 12       		.uleb128 0x12
 996 000e 01       		.uleb128 0x1
 997 000f 10       		.uleb128 0x10
 998 0010 06       		.uleb128 0x6
 999 0011 00       		.byte	0
 1000 0012 00       		.byte	0
 1001 0013 02       		.uleb128 0x2
 1002 0014 16       		.uleb128 0x16
 1003 0015 00       		.byte	0
 1004 0016 03       		.uleb128 0x3
 1005 0017 0E       		.uleb128 0xe
 1006 0018 3A       		.uleb128 0x3a
 1007 0019 0B       		.uleb128 0xb
 1008 001a 3B       		.uleb128 0x3b
 1009 001b 0B       		.uleb128 0xb
 1010 001c 39       		.uleb128 0x39
 1011 001d 0B       		.uleb128 0xb
 1012 001e 49       		.uleb128 0x49
 1013 001f 13       		.uleb128 0x13
 1014 0020 00       		.byte	0
 1015 0021 00       		.byte	0
 1016 0022 03       		.uleb128 0x3
 1017 0023 24       		.uleb128 0x24
 1018 0024 00       		.byte	0
 1019 0025 0B       		.uleb128 0xb
 1020 0026 0B       		.uleb128 0xb
 1021 0027 3E       		.uleb128 0x3e
 1022 0028 0B       		.uleb128 0xb
 1023 0029 03       		.uleb128 0x3
 1024 002a 0E       		.uleb128 0xe
 1025 002b 00       		.byte	0
 1026 002c 00       		.byte	0
 1027 002d 04       		.uleb128 0x4
 1028 002e 24       		.uleb128 0x24
 1029 002f 00       		.byte	0
 1030 0030 0B       		.uleb128 0xb
 1031 0031 0B       		.uleb128 0xb
 1032 0032 3E       		.uleb128 0x3e
 1033 0033 0B       		.uleb128 0xb
 1034 0034 03       		.uleb128 0x3
 1035 0035 08       		.uleb128 0x8
 1036 0036 00       		.byte	0
 1037 0037 00       		.byte	0
ARM GAS  /tmp/ccDcpl5H.s 			page 26


 1038 0038 05       		.uleb128 0x5
 1039 0039 0F       		.uleb128 0xf
 1040 003a 00       		.byte	0
 1041 003b 0B       		.uleb128 0xb
 1042 003c 0B       		.uleb128 0xb
 1043 003d 00       		.byte	0
 1044 003e 00       		.byte	0
 1045 003f 06       		.uleb128 0x6
 1046 0040 26       		.uleb128 0x26
 1047 0041 00       		.byte	0
 1048 0042 49       		.uleb128 0x49
 1049 0043 13       		.uleb128 0x13
 1050 0044 00       		.byte	0
 1051 0045 00       		.byte	0
 1052 0046 07       		.uleb128 0x7
 1053 0047 0F       		.uleb128 0xf
 1054 0048 00       		.byte	0
 1055 0049 0B       		.uleb128 0xb
 1056 004a 0B       		.uleb128 0xb
 1057 004b 49       		.uleb128 0x49
 1058 004c 13       		.uleb128 0x13
 1059 004d 00       		.byte	0
 1060 004e 00       		.byte	0
 1061 004f 08       		.uleb128 0x8
 1062 0050 01       		.uleb128 0x1
 1063 0051 01       		.byte	0x1
 1064 0052 49       		.uleb128 0x49
 1065 0053 13       		.uleb128 0x13
 1066 0054 01       		.uleb128 0x1
 1067 0055 13       		.uleb128 0x13
 1068 0056 00       		.byte	0
 1069 0057 00       		.byte	0
 1070 0058 09       		.uleb128 0x9
 1071 0059 21       		.uleb128 0x21
 1072 005a 00       		.byte	0
 1073 005b 49       		.uleb128 0x49
 1074 005c 13       		.uleb128 0x13
 1075 005d 2F       		.uleb128 0x2f
 1076 005e 05       		.uleb128 0x5
 1077 005f 00       		.byte	0
 1078 0060 00       		.byte	0
 1079 0061 0A       		.uleb128 0xa
 1080 0062 34       		.uleb128 0x34
 1081 0063 00       		.byte	0
 1082 0064 03       		.uleb128 0x3
 1083 0065 0E       		.uleb128 0xe
 1084 0066 3A       		.uleb128 0x3a
 1085 0067 0B       		.uleb128 0xb
 1086 0068 3B       		.uleb128 0x3b
 1087 0069 0B       		.uleb128 0xb
 1088 006a 39       		.uleb128 0x39
 1089 006b 0B       		.uleb128 0xb
 1090 006c 49       		.uleb128 0x49
 1091 006d 13       		.uleb128 0x13
 1092 006e 02       		.uleb128 0x2
 1093 006f 0A       		.uleb128 0xa
 1094 0070 00       		.byte	0
ARM GAS  /tmp/ccDcpl5H.s 			page 27


 1095 0071 00       		.byte	0
 1096 0072 0B       		.uleb128 0xb
 1097 0073 13       		.uleb128 0x13
 1098 0074 01       		.byte	0x1
 1099 0075 03       		.uleb128 0x3
 1100 0076 0E       		.uleb128 0xe
 1101 0077 0B       		.uleb128 0xb
 1102 0078 0B       		.uleb128 0xb
 1103 0079 3A       		.uleb128 0x3a
 1104 007a 0B       		.uleb128 0xb
 1105 007b 3B       		.uleb128 0x3b
 1106 007c 0B       		.uleb128 0xb
 1107 007d 39       		.uleb128 0x39
 1108 007e 0B       		.uleb128 0xb
 1109 007f 01       		.uleb128 0x1
 1110 0080 13       		.uleb128 0x13
 1111 0081 00       		.byte	0
 1112 0082 00       		.byte	0
 1113 0083 0C       		.uleb128 0xc
 1114 0084 0D       		.uleb128 0xd
 1115 0085 00       		.byte	0
 1116 0086 03       		.uleb128 0x3
 1117 0087 0E       		.uleb128 0xe
 1118 0088 3A       		.uleb128 0x3a
 1119 0089 0B       		.uleb128 0xb
 1120 008a 3B       		.uleb128 0x3b
 1121 008b 0B       		.uleb128 0xb
 1122 008c 39       		.uleb128 0x39
 1123 008d 0B       		.uleb128 0xb
 1124 008e 49       		.uleb128 0x49
 1125 008f 13       		.uleb128 0x13
 1126 0090 38       		.uleb128 0x38
 1127 0091 0A       		.uleb128 0xa
 1128 0092 00       		.byte	0
 1129 0093 00       		.byte	0
 1130 0094 0D       		.uleb128 0xd
 1131 0095 34       		.uleb128 0x34
 1132 0096 00       		.byte	0
 1133 0097 03       		.uleb128 0x3
 1134 0098 0E       		.uleb128 0xe
 1135 0099 3A       		.uleb128 0x3a
 1136 009a 0B       		.uleb128 0xb
 1137 009b 3B       		.uleb128 0x3b
 1138 009c 0B       		.uleb128 0xb
 1139 009d 39       		.uleb128 0x39
 1140 009e 0B       		.uleb128 0xb
 1141 009f 49       		.uleb128 0x49
 1142 00a0 13       		.uleb128 0x13
 1143 00a1 1C       		.uleb128 0x1c
 1144 00a2 0B       		.uleb128 0xb
 1145 00a3 00       		.byte	0
 1146 00a4 00       		.byte	0
 1147 00a5 0E       		.uleb128 0xe
 1148 00a6 2E       		.uleb128 0x2e
 1149 00a7 01       		.byte	0x1
 1150 00a8 03       		.uleb128 0x3
 1151 00a9 0E       		.uleb128 0xe
ARM GAS  /tmp/ccDcpl5H.s 			page 28


 1152 00aa 3A       		.uleb128 0x3a
 1153 00ab 0B       		.uleb128 0xb
 1154 00ac 3B       		.uleb128 0x3b
 1155 00ad 0B       		.uleb128 0xb
 1156 00ae 39       		.uleb128 0x39
 1157 00af 0B       		.uleb128 0xb
 1158 00b0 27       		.uleb128 0x27
 1159 00b1 0C       		.uleb128 0xc
 1160 00b2 20       		.uleb128 0x20
 1161 00b3 0B       		.uleb128 0xb
 1162 00b4 01       		.uleb128 0x1
 1163 00b5 13       		.uleb128 0x13
 1164 00b6 00       		.byte	0
 1165 00b7 00       		.byte	0
 1166 00b8 0F       		.uleb128 0xf
 1167 00b9 34       		.uleb128 0x34
 1168 00ba 00       		.byte	0
 1169 00bb 03       		.uleb128 0x3
 1170 00bc 0E       		.uleb128 0xe
 1171 00bd 3A       		.uleb128 0x3a
 1172 00be 0B       		.uleb128 0xb
 1173 00bf 3B       		.uleb128 0x3b
 1174 00c0 0B       		.uleb128 0xb
 1175 00c1 39       		.uleb128 0x39
 1176 00c2 0B       		.uleb128 0xb
 1177 00c3 49       		.uleb128 0x49
 1178 00c4 13       		.uleb128 0x13
 1179 00c5 00       		.byte	0
 1180 00c6 00       		.byte	0
 1181 00c7 10       		.uleb128 0x10
 1182 00c8 2E       		.uleb128 0x2e
 1183 00c9 00       		.byte	0
 1184 00ca 3F       		.uleb128 0x3f
 1185 00cb 0C       		.uleb128 0xc
 1186 00cc 03       		.uleb128 0x3
 1187 00cd 0E       		.uleb128 0xe
 1188 00ce 3A       		.uleb128 0x3a
 1189 00cf 0B       		.uleb128 0xb
 1190 00d0 3B       		.uleb128 0x3b
 1191 00d1 0B       		.uleb128 0xb
 1192 00d2 39       		.uleb128 0x39
 1193 00d3 0B       		.uleb128 0xb
 1194 00d4 27       		.uleb128 0x27
 1195 00d5 0C       		.uleb128 0xc
 1196 00d6 11       		.uleb128 0x11
 1197 00d7 01       		.uleb128 0x1
 1198 00d8 12       		.uleb128 0x12
 1199 00d9 01       		.uleb128 0x1
 1200 00da 40       		.uleb128 0x40
 1201 00db 0A       		.uleb128 0xa
 1202 00dc 9742     		.uleb128 0x2117
 1203 00de 0C       		.uleb128 0xc
 1204 00df 00       		.byte	0
 1205 00e0 00       		.byte	0
 1206 00e1 11       		.uleb128 0x11
 1207 00e2 2E       		.uleb128 0x2e
 1208 00e3 00       		.byte	0
ARM GAS  /tmp/ccDcpl5H.s 			page 29


 1209 00e4 3F       		.uleb128 0x3f
 1210 00e5 0C       		.uleb128 0xc
 1211 00e6 03       		.uleb128 0x3
 1212 00e7 0E       		.uleb128 0xe
 1213 00e8 3A       		.uleb128 0x3a
 1214 00e9 0B       		.uleb128 0xb
 1215 00ea 3B       		.uleb128 0x3b
 1216 00eb 0B       		.uleb128 0xb
 1217 00ec 39       		.uleb128 0x39
 1218 00ed 0B       		.uleb128 0xb
 1219 00ee 27       		.uleb128 0x27
 1220 00ef 0C       		.uleb128 0xc
 1221 00f0 49       		.uleb128 0x49
 1222 00f1 13       		.uleb128 0x13
 1223 00f2 11       		.uleb128 0x11
 1224 00f3 01       		.uleb128 0x1
 1225 00f4 12       		.uleb128 0x12
 1226 00f5 01       		.uleb128 0x1
 1227 00f6 40       		.uleb128 0x40
 1228 00f7 0A       		.uleb128 0xa
 1229 00f8 9742     		.uleb128 0x2117
 1230 00fa 0C       		.uleb128 0xc
 1231 00fb 00       		.byte	0
 1232 00fc 00       		.byte	0
 1233 00fd 12       		.uleb128 0x12
 1234 00fe 2E       		.uleb128 0x2e
 1235 00ff 01       		.byte	0x1
 1236 0100 3F       		.uleb128 0x3f
 1237 0101 0C       		.uleb128 0xc
 1238 0102 03       		.uleb128 0x3
 1239 0103 0E       		.uleb128 0xe
 1240 0104 3A       		.uleb128 0x3a
 1241 0105 0B       		.uleb128 0xb
 1242 0106 3B       		.uleb128 0x3b
 1243 0107 0B       		.uleb128 0xb
 1244 0108 39       		.uleb128 0x39
 1245 0109 0B       		.uleb128 0xb
 1246 010a 27       		.uleb128 0x27
 1247 010b 0C       		.uleb128 0xc
 1248 010c 11       		.uleb128 0x11
 1249 010d 01       		.uleb128 0x1
 1250 010e 12       		.uleb128 0x12
 1251 010f 01       		.uleb128 0x1
 1252 0110 40       		.uleb128 0x40
 1253 0111 06       		.uleb128 0x6
 1254 0112 9742     		.uleb128 0x2117
 1255 0114 0C       		.uleb128 0xc
 1256 0115 01       		.uleb128 0x1
 1257 0116 13       		.uleb128 0x13
 1258 0117 00       		.byte	0
 1259 0118 00       		.byte	0
 1260 0119 13       		.uleb128 0x13
 1261 011a 05       		.uleb128 0x5
 1262 011b 00       		.byte	0
 1263 011c 03       		.uleb128 0x3
 1264 011d 08       		.uleb128 0x8
 1265 011e 3A       		.uleb128 0x3a
ARM GAS  /tmp/ccDcpl5H.s 			page 30


 1266 011f 0B       		.uleb128 0xb
 1267 0120 3B       		.uleb128 0x3b
 1268 0121 0B       		.uleb128 0xb
 1269 0122 39       		.uleb128 0x39
 1270 0123 0B       		.uleb128 0xb
 1271 0124 49       		.uleb128 0x49
 1272 0125 13       		.uleb128 0x13
 1273 0126 02       		.uleb128 0x2
 1274 0127 06       		.uleb128 0x6
 1275 0128 B742     		.uleb128 0x2137
 1276 012a 06       		.uleb128 0x6
 1277 012b 00       		.byte	0
 1278 012c 00       		.byte	0
 1279 012d 14       		.uleb128 0x14
 1280 012e 34       		.uleb128 0x34
 1281 012f 00       		.byte	0
 1282 0130 03       		.uleb128 0x3
 1283 0131 08       		.uleb128 0x8
 1284 0132 3A       		.uleb128 0x3a
 1285 0133 0B       		.uleb128 0xb
 1286 0134 3B       		.uleb128 0x3b
 1287 0135 0B       		.uleb128 0xb
 1288 0136 39       		.uleb128 0x39
 1289 0137 0B       		.uleb128 0xb
 1290 0138 49       		.uleb128 0x49
 1291 0139 13       		.uleb128 0x13
 1292 013a 02       		.uleb128 0x2
 1293 013b 06       		.uleb128 0x6
 1294 013c B742     		.uleb128 0x2137
 1295 013e 06       		.uleb128 0x6
 1296 013f 00       		.byte	0
 1297 0140 00       		.byte	0
 1298 0141 15       		.uleb128 0x15
 1299 0142 34       		.uleb128 0x34
 1300 0143 00       		.byte	0
 1301 0144 03       		.uleb128 0x3
 1302 0145 0E       		.uleb128 0xe
 1303 0146 3A       		.uleb128 0x3a
 1304 0147 0B       		.uleb128 0xb
 1305 0148 3B       		.uleb128 0x3b
 1306 0149 0B       		.uleb128 0xb
 1307 014a 39       		.uleb128 0x39
 1308 014b 0B       		.uleb128 0xb
 1309 014c 49       		.uleb128 0x49
 1310 014d 13       		.uleb128 0x13
 1311 014e 02       		.uleb128 0x2
 1312 014f 06       		.uleb128 0x6
 1313 0150 B742     		.uleb128 0x2137
 1314 0152 06       		.uleb128 0x6
 1315 0153 00       		.byte	0
 1316 0154 00       		.byte	0
 1317 0155 16       		.uleb128 0x16
 1318 0156 0B       		.uleb128 0xb
 1319 0157 01       		.byte	0x1
 1320 0158 11       		.uleb128 0x11
 1321 0159 01       		.uleb128 0x1
 1322 015a 12       		.uleb128 0x12
ARM GAS  /tmp/ccDcpl5H.s 			page 31


 1323 015b 01       		.uleb128 0x1
 1324 015c 01       		.uleb128 0x1
 1325 015d 13       		.uleb128 0x13
 1326 015e 00       		.byte	0
 1327 015f 00       		.byte	0
 1328 0160 17       		.uleb128 0x17
 1329 0161 898201   		.uleb128 0x4109
 1330 0164 00       		.byte	0
 1331 0165 11       		.uleb128 0x11
 1332 0166 01       		.uleb128 0x1
 1333 0167 31       		.uleb128 0x31
 1334 0168 13       		.uleb128 0x13
 1335 0169 00       		.byte	0
 1336 016a 00       		.byte	0
 1337 016b 18       		.uleb128 0x18
 1338 016c 898201   		.uleb128 0x4109
 1339 016f 00       		.byte	0
 1340 0170 11       		.uleb128 0x11
 1341 0171 01       		.uleb128 0x1
 1342 0172 9542     		.uleb128 0x2115
 1343 0174 0C       		.uleb128 0xc
 1344 0175 31       		.uleb128 0x31
 1345 0176 13       		.uleb128 0x13
 1346 0177 00       		.byte	0
 1347 0178 00       		.byte	0
 1348 0179 19       		.uleb128 0x19
 1349 017a 2E       		.uleb128 0x2e
 1350 017b 01       		.byte	0x1
 1351 017c 3F       		.uleb128 0x3f
 1352 017d 0C       		.uleb128 0xc
 1353 017e 03       		.uleb128 0x3
 1354 017f 0E       		.uleb128 0xe
 1355 0180 3A       		.uleb128 0x3a
 1356 0181 0B       		.uleb128 0xb
 1357 0182 3B       		.uleb128 0x3b
 1358 0183 0B       		.uleb128 0xb
 1359 0184 39       		.uleb128 0x39
 1360 0185 0B       		.uleb128 0xb
 1361 0186 27       		.uleb128 0x27
 1362 0187 0C       		.uleb128 0xc
 1363 0188 49       		.uleb128 0x49
 1364 0189 13       		.uleb128 0x13
 1365 018a 11       		.uleb128 0x11
 1366 018b 01       		.uleb128 0x1
 1367 018c 12       		.uleb128 0x12
 1368 018d 01       		.uleb128 0x1
 1369 018e 40       		.uleb128 0x40
 1370 018f 06       		.uleb128 0x6
 1371 0190 9742     		.uleb128 0x2117
 1372 0192 0C       		.uleb128 0xc
 1373 0193 01       		.uleb128 0x1
 1374 0194 13       		.uleb128 0x13
 1375 0195 00       		.byte	0
 1376 0196 00       		.byte	0
 1377 0197 1A       		.uleb128 0x1a
 1378 0198 05       		.uleb128 0x5
 1379 0199 00       		.byte	0
ARM GAS  /tmp/ccDcpl5H.s 			page 32


 1380 019a 03       		.uleb128 0x3
 1381 019b 0E       		.uleb128 0xe
 1382 019c 3A       		.uleb128 0x3a
 1383 019d 0B       		.uleb128 0xb
 1384 019e 3B       		.uleb128 0x3b
 1385 019f 0B       		.uleb128 0xb
 1386 01a0 39       		.uleb128 0x39
 1387 01a1 0B       		.uleb128 0xb
 1388 01a2 49       		.uleb128 0x49
 1389 01a3 13       		.uleb128 0x13
 1390 01a4 02       		.uleb128 0x2
 1391 01a5 06       		.uleb128 0x6
 1392 01a6 B742     		.uleb128 0x2137
 1393 01a8 06       		.uleb128 0x6
 1394 01a9 00       		.byte	0
 1395 01aa 00       		.byte	0
 1396 01ab 1B       		.uleb128 0x1b
 1397 01ac 1D       		.uleb128 0x1d
 1398 01ad 01       		.byte	0x1
 1399 01ae 31       		.uleb128 0x31
 1400 01af 13       		.uleb128 0x13
 1401 01b0 52       		.uleb128 0x52
 1402 01b1 01       		.uleb128 0x1
 1403 01b2 B842     		.uleb128 0x2138
 1404 01b4 0B       		.uleb128 0xb
 1405 01b5 55       		.uleb128 0x55
 1406 01b6 06       		.uleb128 0x6
 1407 01b7 58       		.uleb128 0x58
 1408 01b8 0B       		.uleb128 0xb
 1409 01b9 59       		.uleb128 0x59
 1410 01ba 0B       		.uleb128 0xb
 1411 01bb 57       		.uleb128 0x57
 1412 01bc 0B       		.uleb128 0xb
 1413 01bd 01       		.uleb128 0x1
 1414 01be 13       		.uleb128 0x13
 1415 01bf 00       		.byte	0
 1416 01c0 00       		.byte	0
 1417 01c1 1C       		.uleb128 0x1c
 1418 01c2 0B       		.uleb128 0xb
 1419 01c3 01       		.byte	0x1
 1420 01c4 55       		.uleb128 0x55
 1421 01c5 06       		.uleb128 0x6
 1422 01c6 00       		.byte	0
 1423 01c7 00       		.byte	0
 1424 01c8 1D       		.uleb128 0x1d
 1425 01c9 34       		.uleb128 0x34
 1426 01ca 00       		.byte	0
 1427 01cb 31       		.uleb128 0x31
 1428 01cc 13       		.uleb128 0x13
 1429 01cd 00       		.byte	0
 1430 01ce 00       		.byte	0
 1431 01cf 1E       		.uleb128 0x1e
 1432 01d0 34       		.uleb128 0x34
 1433 01d1 00       		.byte	0
 1434 01d2 31       		.uleb128 0x31
 1435 01d3 13       		.uleb128 0x13
 1436 01d4 02       		.uleb128 0x2
ARM GAS  /tmp/ccDcpl5H.s 			page 33


 1437 01d5 06       		.uleb128 0x6
 1438 01d6 B742     		.uleb128 0x2137
 1439 01d8 06       		.uleb128 0x6
 1440 01d9 00       		.byte	0
 1441 01da 00       		.byte	0
 1442 01db 1F       		.uleb128 0x1f
 1443 01dc 2E       		.uleb128 0x2e
 1444 01dd 00       		.byte	0
 1445 01de 3F       		.uleb128 0x3f
 1446 01df 0C       		.uleb128 0xc
 1447 01e0 3C       		.uleb128 0x3c
 1448 01e1 0C       		.uleb128 0xc
 1449 01e2 8740     		.uleb128 0x2007
 1450 01e4 0E       		.uleb128 0xe
 1451 01e5 03       		.uleb128 0x3
 1452 01e6 0E       		.uleb128 0xe
 1453 01e7 3A       		.uleb128 0x3a
 1454 01e8 0B       		.uleb128 0xb
 1455 01e9 3B       		.uleb128 0x3b
 1456 01ea 05       		.uleb128 0x5
 1457 01eb 39       		.uleb128 0x39
 1458 01ec 0B       		.uleb128 0xb
 1459 01ed 00       		.byte	0
 1460 01ee 00       		.byte	0
 1461 01ef 00       		.byte	0
 1462              		.section	.debug_loc,"",%progbits
 1463              	.Ldebug_loc0:
 1464              	.LLST9:
 1465 0000 AC000000 		.4byte	.LFB6-.Ltext0
 1466 0004 AE000000 		.4byte	.LCFI1-.Ltext0
 1467 0008 0200     		.2byte	0x2
 1468 000a 7D       		.byte	0x7d
 1469 000b 00       		.sleb128 0
 1470 000c AE000000 		.4byte	.LCFI1-.Ltext0
 1471 0010 DC000000 		.4byte	.LCFI2-.Ltext0
 1472 0014 0200     		.2byte	0x2
 1473 0016 7D       		.byte	0x7d
 1474 0017 10       		.sleb128 16
 1475 0018 DC000000 		.4byte	.LCFI2-.Ltext0
 1476 001c E0000000 		.4byte	.LCFI3-.Ltext0
 1477 0020 0200     		.2byte	0x2
 1478 0022 7D       		.byte	0x7d
 1479 0023 00       		.sleb128 0
 1480 0024 E0000000 		.4byte	.LCFI3-.Ltext0
 1481 0028 EC000000 		.4byte	.LFE6-.Ltext0
 1482 002c 0200     		.2byte	0x2
 1483 002e 7D       		.byte	0x7d
 1484 002f 10       		.sleb128 16
 1485 0030 00000000 		.4byte	0
 1486 0034 00000000 		.4byte	0
 1487              	.LVUS10:
 1488 0038 00       		.uleb128 0
 1489 0039 00       		.uleb128 .LVU106
 1490 003a 00       		.uleb128 .LVU106
 1491 003b 00       		.uleb128 .LVU122
 1492 003c 00       		.uleb128 .LVU122
 1493 003d 00       		.uleb128 .LVU123
ARM GAS  /tmp/ccDcpl5H.s 			page 34


 1494 003e 00       		.uleb128 .LVU123
 1495 003f 00       		.uleb128 0
 1496              	.LLST10:
 1497 0040 AC000000 		.4byte	.LVL23-.Ltext0
 1498 0044 B9000000 		.4byte	.LVL25-1-.Ltext0
 1499 0048 0100     		.2byte	0x1
 1500 004a 50       		.byte	0x50
 1501 004b B9000000 		.4byte	.LVL25-1-.Ltext0
 1502 004f DC000000 		.4byte	.LVL30-.Ltext0
 1503 0053 0100     		.2byte	0x1
 1504 0055 54       		.byte	0x54
 1505 0056 DC000000 		.4byte	.LVL30-.Ltext0
 1506 005a E0000000 		.4byte	.LVL31-.Ltext0
 1507 005e 0400     		.2byte	0x4
 1508 0060 F3       		.byte	0xf3
 1509 0061 01       		.uleb128 0x1
 1510 0062 50       		.byte	0x50
 1511 0063 9F       		.byte	0x9f
 1512 0064 E0000000 		.4byte	.LVL31-.Ltext0
 1513 0068 EC000000 		.4byte	.LFE6-.Ltext0
 1514 006c 0100     		.2byte	0x1
 1515 006e 50       		.byte	0x50
 1516 006f 00000000 		.4byte	0
 1517 0073 00000000 		.4byte	0
 1518              	.LVUS11:
 1519 0077 02       		.uleb128 .LVU98
 1520 0078 00       		.uleb128 .LVU104
 1521 0079 00       		.uleb128 .LVU104
 1522 007a 00       		.uleb128 .LVU122
 1523 007b 00       		.uleb128 .LVU122
 1524 007c 00       		.uleb128 .LVU123
 1525 007d 00       		.uleb128 .LVU123
 1526 007e 00       		.uleb128 0
 1527              	.LLST11:
 1528 007f AC000000 		.4byte	.LVL23-.Ltext0
 1529 0083 B6000000 		.4byte	.LVL24-.Ltext0
 1530 0087 0100     		.2byte	0x1
 1531 0089 50       		.byte	0x50
 1532 008a B6000000 		.4byte	.LVL24-.Ltext0
 1533 008e DC000000 		.4byte	.LVL30-.Ltext0
 1534 0092 0100     		.2byte	0x1
 1535 0094 55       		.byte	0x55
 1536 0095 DC000000 		.4byte	.LVL30-.Ltext0
 1537 0099 E0000000 		.4byte	.LVL31-.Ltext0
 1538 009d 0600     		.2byte	0x6
 1539 009f F3       		.byte	0xf3
 1540 00a0 01       		.uleb128 0x1
 1541 00a1 50       		.byte	0x50
 1542 00a2 38       		.byte	0x38
 1543 00a3 1C       		.byte	0x1c
 1544 00a4 9F       		.byte	0x9f
 1545 00a5 E0000000 		.4byte	.LVL31-.Ltext0
 1546 00a9 EC000000 		.4byte	.LFE6-.Ltext0
 1547 00ad 0100     		.2byte	0x1
 1548 00af 50       		.byte	0x50
 1549 00b0 00000000 		.4byte	0
 1550 00b4 00000000 		.4byte	0
ARM GAS  /tmp/ccDcpl5H.s 			page 35


 1551              	.LVUS12:
 1552 00b8 01       		.uleb128 .LVU105
 1553 00b9 00       		.uleb128 .LVU122
 1554 00ba 00       		.uleb128 .LVU122
 1555 00bb 00       		.uleb128 .LVU123
 1556              	.LLST12:
 1557 00bc B6000000 		.4byte	.LVL24-.Ltext0
 1558 00c0 DC000000 		.4byte	.LVL30-.Ltext0
 1559 00c4 0100     		.2byte	0x1
 1560 00c6 55       		.byte	0x55
 1561 00c7 DC000000 		.4byte	.LVL30-.Ltext0
 1562 00cb E0000000 		.4byte	.LVL31-.Ltext0
 1563 00cf 0600     		.2byte	0x6
 1564 00d1 F3       		.byte	0xf3
 1565 00d2 01       		.uleb128 0x1
 1566 00d3 50       		.byte	0x50
 1567 00d4 38       		.byte	0x38
 1568 00d5 1C       		.byte	0x1c
 1569 00d6 9F       		.byte	0x9f
 1570 00d7 00000000 		.4byte	0
 1571 00db 00000000 		.4byte	0
 1572              	.LVUS13:
 1573 00df 01       		.uleb128 .LVU110
 1574 00e0 00       		.uleb128 .LVU111
 1575 00e1 00       		.uleb128 .LVU111
 1576 00e2 00       		.uleb128 .LVU112
 1577 00e3 00       		.uleb128 .LVU112
 1578 00e4 00       		.uleb128 .LVU118
 1579              	.LLST13:
 1580 00e5 BE000000 		.4byte	.LVL26-.Ltext0
 1581 00e9 C0000000 		.4byte	.LVL27-.Ltext0
 1582 00ed 0600     		.2byte	0x6
 1583 00ef 03       		.byte	0x3
 1584 00f0 00000000 		.4byte	xStart
 1585 00f4 9F       		.byte	0x9f
 1586 00f5 C0000000 		.4byte	.LVL27-.Ltext0
 1587 00f9 C4000000 		.4byte	.LVL28-.Ltext0
 1588 00fd 0100     		.2byte	0x1
 1589 00ff 53       		.byte	0x53
 1590 0100 C4000000 		.4byte	.LVL28-.Ltext0
 1591 0104 D2000000 		.4byte	.LVL29-.Ltext0
 1592 0108 0100     		.2byte	0x1
 1593 010a 52       		.byte	0x52
 1594 010b 00000000 		.4byte	0
 1595 010f 00000000 		.4byte	0
 1596              	.LVUS14:
 1597 0113 00       		.uleb128 .LVU109
 1598 0114 00       		.uleb128 .LVU123
 1599              	.LLST14:
 1600 0115 BE000000 		.4byte	.LVL26-.Ltext0
 1601 0119 DF000000 		.4byte	.LVL31-1-.Ltext0
 1602 011d 0100     		.2byte	0x1
 1603 011f 51       		.byte	0x51
 1604 0120 00000000 		.4byte	0
 1605 0124 00000000 		.4byte	0
 1606              	.LLST0:
 1607 0128 00000000 		.4byte	.LFB5-.Ltext0
ARM GAS  /tmp/ccDcpl5H.s 			page 36


 1608 012c 02000000 		.4byte	.LCFI0-.Ltext0
 1609 0130 0200     		.2byte	0x2
 1610 0132 7D       		.byte	0x7d
 1611 0133 00       		.sleb128 0
 1612 0134 02000000 		.4byte	.LCFI0-.Ltext0
 1613 0138 AC000000 		.4byte	.LFE5-.Ltext0
 1614 013c 0200     		.2byte	0x2
 1615 013e 7D       		.byte	0x7d
 1616 013f 10       		.sleb128 16
 1617 0140 00000000 		.4byte	0
 1618 0144 00000000 		.4byte	0
 1619              	.LVUS1:
 1620 0148 00       		.uleb128 0
 1621 0149 00       		.uleb128 .LVU8
 1622 014a 00       		.uleb128 .LVU8
 1623 014b 00       		.uleb128 .LVU41
 1624 014c 00       		.uleb128 .LVU41
 1625 014d 00       		.uleb128 .LVU42
 1626 014e 00       		.uleb128 .LVU42
 1627 014f 00       		.uleb128 .LVU77
 1628 0150 00       		.uleb128 .LVU77
 1629 0151 00       		.uleb128 .LVU83
 1630 0152 00       		.uleb128 .LVU93
 1631 0153 00       		.uleb128 0
 1632              	.LLST1:
 1633 0154 00000000 		.4byte	.LVL0-.Ltext0
 1634 0158 07000000 		.4byte	.LVL1-1-.Ltext0
 1635 015c 0100     		.2byte	0x1
 1636 015e 50       		.byte	0x50
 1637 015f 07000000 		.4byte	.LVL1-1-.Ltext0
 1638 0163 38000000 		.4byte	.LVL6-.Ltext0
 1639 0167 0100     		.2byte	0x1
 1640 0169 54       		.byte	0x54
 1641 016a 38000000 		.4byte	.LVL6-.Ltext0
 1642 016e 3A000000 		.4byte	.LVL7-.Ltext0
 1643 0172 0600     		.2byte	0x6
 1644 0174 F3       		.byte	0xf3
 1645 0175 01       		.uleb128 0x1
 1646 0176 50       		.byte	0x50
 1647 0177 23       		.byte	0x23
 1648 0178 08       		.uleb128 0x8
 1649 0179 9F       		.byte	0x9f
 1650 017a 3A000000 		.4byte	.LVL7-.Ltext0
 1651 017e 70000000 		.4byte	.LVL13-.Ltext0
 1652 0182 0100     		.2byte	0x1
 1653 0184 54       		.byte	0x54
 1654 0185 70000000 		.4byte	.LVL13-.Ltext0
 1655 0189 80000000 		.4byte	.LVL16-.Ltext0
 1656 018d 0200     		.2byte	0x2
 1657 018f 73       		.byte	0x73
 1658 0190 04       		.sleb128 4
 1659 0191 92000000 		.4byte	.LVL20-.Ltext0
 1660 0195 AC000000 		.4byte	.LFE5-.Ltext0
 1661 0199 0100     		.2byte	0x1
 1662 019b 54       		.byte	0x54
 1663 019c 00000000 		.4byte	0
 1664 01a0 00000000 		.4byte	0
ARM GAS  /tmp/ccDcpl5H.s 			page 37


 1665              	.LVUS2:
 1666 01a4 00       		.uleb128 .LVU49
 1667 01a5 00       		.uleb128 .LVU87
 1668 01a6 00       		.uleb128 .LVU93
 1669 01a7 00       		.uleb128 .LVU94
 1670 01a8 00       		.uleb128 .LVU94
 1671 01a9 00       		.uleb128 .LVU95
 1672              	.LLST2:
 1673 01aa 46000000 		.4byte	.LVL9-.Ltext0
 1674 01ae 84000000 		.4byte	.LVL17-.Ltext0
 1675 01b2 0100     		.2byte	0x1
 1676 01b4 53       		.byte	0x53
 1677 01b5 92000000 		.4byte	.LVL20-.Ltext0
 1678 01b9 96000000 		.4byte	.LVL21-.Ltext0
 1679 01bd 0100     		.2byte	0x1
 1680 01bf 53       		.byte	0x53
 1681 01c0 96000000 		.4byte	.LVL21-.Ltext0
 1682 01c4 98000000 		.4byte	.LVL22-.Ltext0
 1683 01c8 0100     		.2byte	0x1
 1684 01ca 50       		.byte	0x50
 1685 01cb 00000000 		.4byte	0
 1686 01cf 00000000 		.4byte	0
 1687              	.LVUS3:
 1688 01d3 01       		.uleb128 .LVU47
 1689 01d4 00       		.uleb128 .LVU51
 1690              	.LLST3:
 1691 01d5 44000000 		.4byte	.LVL8-.Ltext0
 1692 01d9 48000000 		.4byte	.LVL10-.Ltext0
 1693 01dd 0600     		.2byte	0x6
 1694 01df 03       		.byte	0x3
 1695 01e0 00000000 		.4byte	xStart
 1696 01e4 9F       		.byte	0x9f
 1697 01e5 00000000 		.4byte	0
 1698 01e9 00000000 		.4byte	0
 1699              	.LVUS4:
 1700 01ed 00       		.uleb128 .LVU70
 1701 01ee 00       		.uleb128 .LVU83
 1702              	.LLST4:
 1703 01ef 6A000000 		.4byte	.LVL12-.Ltext0
 1704 01f3 80000000 		.4byte	.LVL16-.Ltext0
 1705 01f7 0100     		.2byte	0x1
 1706 01f9 50       		.byte	0x50
 1707 01fa 00000000 		.4byte	0
 1708 01fe 00000000 		.4byte	0
 1709              	.LVUS5:
 1710 0202 04       		.uleb128 .LVU4
 1711 0203 00       		.uleb128 .LVU64
 1712 0204 00       		.uleb128 .LVU64
 1713 0205 00       		.uleb128 .LVU93
 1714 0206 00       		.uleb128 .LVU93
 1715 0207 00       		.uleb128 0
 1716              	.LLST5:
 1717 0208 00000000 		.4byte	.LVL0-.Ltext0
 1718 020c 64000000 		.4byte	.LVL11-.Ltext0
 1719 0210 0200     		.2byte	0x2
 1720 0212 30       		.byte	0x30
 1721 0213 9F       		.byte	0x9f
ARM GAS  /tmp/ccDcpl5H.s 			page 38


 1722 0214 64000000 		.4byte	.LVL11-.Ltext0
 1723 0218 92000000 		.4byte	.LVL20-.Ltext0
 1724 021c 0100     		.2byte	0x1
 1725 021e 55       		.byte	0x55
 1726 021f 92000000 		.4byte	.LVL20-.Ltext0
 1727 0223 AC000000 		.4byte	.LFE5-.Ltext0
 1728 0227 0200     		.2byte	0x2
 1729 0229 30       		.byte	0x30
 1730 022a 9F       		.byte	0x9f
 1731 022b 00000000 		.4byte	0
 1732 022f 00000000 		.4byte	0
 1733              	.LVUS7:
 1734 0233 01       		.uleb128 .LVU78
 1735 0234 00       		.uleb128 .LVU79
 1736 0235 00       		.uleb128 .LVU79
 1737 0236 00       		.uleb128 .LVU80
 1738 0237 00       		.uleb128 .LVU80
 1739 0238 00       		.uleb128 .LVU83
 1740              	.LLST7:
 1741 0239 70000000 		.4byte	.LVL13-.Ltext0
 1742 023d 72000000 		.4byte	.LVL14-.Ltext0
 1743 0241 0600     		.2byte	0x6
 1744 0243 03       		.byte	0x3
 1745 0244 00000000 		.4byte	xStart
 1746 0248 9F       		.byte	0x9f
 1747 0249 72000000 		.4byte	.LVL14-.Ltext0
 1748 024d 76000000 		.4byte	.LVL15-.Ltext0
 1749 0251 0100     		.2byte	0x1
 1750 0253 52       		.byte	0x52
 1751 0254 76000000 		.4byte	.LVL15-.Ltext0
 1752 0258 80000000 		.4byte	.LVL16-.Ltext0
 1753 025c 0100     		.2byte	0x1
 1754 025e 51       		.byte	0x51
 1755 025f 00000000 		.4byte	0
 1756 0263 00000000 		.4byte	0
 1757              	.LVUS8:
 1758 0267 00       		.uleb128 .LVU77
 1759 0268 00       		.uleb128 .LVU83
 1760              	.LLST8:
 1761 0269 70000000 		.4byte	.LVL13-.Ltext0
 1762 026d 80000000 		.4byte	.LVL16-.Ltext0
 1763 0271 0100     		.2byte	0x1
 1764 0273 54       		.byte	0x54
 1765 0274 00000000 		.4byte	0
 1766 0278 00000000 		.4byte	0
 1767              	.LVUS6:
 1768 027c 00       		.uleb128 .LVU21
 1769 027d 00       		.uleb128 .LVU26
 1770 027e 00       		.uleb128 .LVU26
 1771 027f 03       		.uleb128 .LVU30
 1772              	.LLST6:
 1773 0280 1E000000 		.4byte	.LVL2-.Ltext0
 1774 0284 28000000 		.4byte	.LVL3-.Ltext0
 1775 0288 0100     		.2byte	0x1
 1776 028a 52       		.byte	0x52
 1777 028b 28000000 		.4byte	.LVL3-.Ltext0
 1778 028f 2A000000 		.4byte	.LVL4-.Ltext0
ARM GAS  /tmp/ccDcpl5H.s 			page 39


 1779 0293 0500     		.2byte	0x5
 1780 0295 03       		.byte	0x3
 1781 0296 00000000 		.4byte	xStart
 1782 029a 00000000 		.4byte	0
 1783 029e 00000000 		.4byte	0
 1784              		.section	.debug_aranges,"",%progbits
 1785 0000 1C000000 		.4byte	0x1c
 1786 0004 0200     		.2byte	0x2
 1787 0006 00000000 		.4byte	.Ldebug_info0
 1788 000a 04       		.byte	0x4
 1789 000b 00       		.byte	0
 1790 000c 0000     		.2byte	0
 1791 000e 0000     		.2byte	0
 1792 0010 00000000 		.4byte	.Ltext0
 1793 0014 FA000000 		.4byte	.Letext0-.Ltext0
 1794 0018 00000000 		.4byte	0
 1795 001c 00000000 		.4byte	0
 1796              		.section	.debug_ranges,"",%progbits
 1797              	.Ldebug_ranges0:
 1798 0000 0E000000 		.4byte	.LBB5-.Ltext0
 1799 0004 26000000 		.4byte	.LBE5-.Ltext0
 1800 0008 28000000 		.4byte	.LBB8-.Ltext0
 1801 000c 2A000000 		.4byte	.LBE8-.Ltext0
 1802 0010 00000000 		.4byte	0
 1803 0014 00000000 		.4byte	0
 1804              		.section	.debug_line,"",%progbits
 1805              	.Ldebug_line0:
 1806 0000 46030000 		.section	.debug_str,"MS",%progbits,1
 1806      03002301 
 1806      00000201 
 1806      FB0E0D00 
 1806      01010101 
 1807              	.LASF41:
 1808 0000 2F686F6D 		.ascii	"/home/junior/Codigos/6-Stm32_GCC_FreeRTOS10.2.1/3-C"
 1808      652F6A75 
 1808      6E696F72 
 1808      2F436F64 
 1808      69676F73 
 1809 0033 6F6D5072 		.ascii	"omProcessos\000"
 1809      6F636573 
 1809      736F7300 
 1810              	.LASF5:
 1811 003f 5F5F7569 		.ascii	"__uint8_t\000"
 1811      6E74385F 
 1811      7400
 1812              	.LASF4:
 1813 0049 73697A65 		.ascii	"size_t\000"
 1813      5F7400
 1814              	.LASF37:
 1815 0050 76546173 		.ascii	"vTaskSuspendAll\000"
 1815      6B537573 
 1815      70656E64 
 1815      416C6C00 
 1816              	.LASF45:
 1817 0060 78506F72 		.ascii	"xPortGetFreeHeapSize\000"
 1817      74476574 
 1817      46726565 
ARM GAS  /tmp/ccDcpl5H.s 			page 40


 1817      48656170 
 1817      53697A65 
 1818              	.LASF42:
 1819 0075 415F424C 		.ascii	"A_BLOCK_LINK\000"
 1819      4F434B5F 
 1819      4C494E4B 
 1819      00
 1820              	.LASF43:
 1821 0082 70727648 		.ascii	"prvHeapInit\000"
 1821      65617049 
 1821      6E697400 
 1822              	.LASF38:
 1823 008e 78546173 		.ascii	"xTaskResumeAll\000"
 1823      6B526573 
 1823      756D6541 
 1823      6C6C00
 1824              	.LASF32:
 1825 009d 7078426C 		.ascii	"pxBlock\000"
 1825      6F636B00 
 1826              	.LASF29:
 1827 00a5 70784C69 		.ascii	"pxLink\000"
 1827      6E6B00
 1828              	.LASF47:
 1829 00ac 7076506F 		.ascii	"pvPortMalloc\000"
 1829      72744D61 
 1829      6C6C6F63 
 1829      00
 1830              	.LASF27:
 1831 00b9 70784669 		.ascii	"pxFirstFreeBlock\000"
 1831      72737446 
 1831      72656542 
 1831      6C6F636B 
 1831      00
 1832              	.LASF22:
 1833 00ca 75634865 		.ascii	"ucHeap\000"
 1833      617000
 1834              	.LASF40:
 1835 00d1 2E2E2F66 		.ascii	"../freertos/portable/MemMang/heap_2.c\000"
 1835      72656572 
 1835      746F732F 
 1835      706F7274 
 1835      61626C65 
 1836              	.LASF6:
 1837 00f7 756E7369 		.ascii	"unsigned char\000"
 1837      676E6564 
 1837      20636861 
 1837      7200
 1838              	.LASF20:
 1839 0105 78426C6F 		.ascii	"xBlockSize\000"
 1839      636B5369 
 1839      7A6500
 1840              	.LASF12:
 1841 0110 6C6F6E67 		.ascii	"long unsigned int\000"
 1841      20756E73 
 1841      69676E65 
 1841      6420696E 
 1841      7400
ARM GAS  /tmp/ccDcpl5H.s 			page 41


 1842              	.LASF9:
 1843 0122 73686F72 		.ascii	"short unsigned int\000"
 1843      7420756E 
 1843      7369676E 
 1843      65642069 
 1843      6E7400
 1844              	.LASF35:
 1845 0135 78486561 		.ascii	"xHeapHasBeenInitialised\000"
 1845      70486173 
 1845      4265656E 
 1845      496E6974 
 1845      69616C69 
 1846              	.LASF25:
 1847 014d 78456E64 		.ascii	"xEnd\000"
 1847      00
 1848              	.LASF8:
 1849 0152 5F5F7569 		.ascii	"__uint16_t\000"
 1849      6E743136 
 1849      5F7400
 1850              	.LASF33:
 1851 015d 70785072 		.ascii	"pxPreviousBlock\000"
 1851      6576696F 
 1851      7573426C 
 1851      6F636B00 
 1852              	.LASF46:
 1853 016d 76506F72 		.ascii	"vPortFree\000"
 1853      74467265 
 1853      6500
 1854              	.LASF11:
 1855 0177 5F5F7569 		.ascii	"__uint32_t\000"
 1855      6E743332 
 1855      5F7400
 1856              	.LASF36:
 1857 0182 70765265 		.ascii	"pvReturn\000"
 1857      7475726E 
 1857      00
 1858              	.LASF23:
 1859 018b 68656170 		.ascii	"heapSTRUCT_SIZE\000"
 1859      53545255 
 1859      43545F53 
 1859      495A4500 
 1860              	.LASF24:
 1861 019b 78537461 		.ascii	"xStart\000"
 1861      727400
 1862              	.LASF44:
 1863 01a2 76506F72 		.ascii	"vPortInitialiseBlocks\000"
 1863      74496E69 
 1863      7469616C 
 1863      69736542 
 1863      6C6F636B 
 1864              	.LASF0:
 1865 01b8 756E7369 		.ascii	"unsigned int\000"
 1865      676E6564 
 1865      20696E74 
 1865      00
 1866              	.LASF13:
 1867 01c5 6C6F6E67 		.ascii	"long long unsigned int\000"
ARM GAS  /tmp/ccDcpl5H.s 			page 42


 1867      206C6F6E 
 1867      6720756E 
 1867      7369676E 
 1867      65642069 
 1868              	.LASF15:
 1869 01dc 75696E74 		.ascii	"uint8_t\000"
 1869      385F7400 
 1870              	.LASF34:
 1871 01e4 70784E65 		.ascii	"pxNewBlockLink\000"
 1871      77426C6F 
 1871      636B4C69 
 1871      6E6B00
 1872              	.LASF39:
 1873 01f3 474E5520 		.ascii	"GNU C17 10.3.1 20210824 (release) -mcpu=cortex-m3 -"
 1873      43313720 
 1873      31302E33 
 1873      2E312032 
 1873      30323130 
 1874 0226 6D746875 		.ascii	"mthumb -mfloat-abi=soft -march=armv7-m -g -gdwarf-2"
 1874      6D62202D 
 1874      6D666C6F 
 1874      61742D61 
 1874      62693D73 
 1875 0259 202D4F73 		.ascii	" -Os -fomit-frame-pointer\000"
 1875      202D666F 
 1875      6D69742D 
 1875      6672616D 
 1875      652D706F 
 1876              	.LASF21:
 1877 0273 426C6F63 		.ascii	"BlockLink_t\000"
 1877      6B4C696E 
 1877      6B5F7400 
 1878              	.LASF1:
 1879 027f 6C6F6E67 		.ascii	"long long int\000"
 1879      206C6F6E 
 1879      6720696E 
 1879      7400
 1880              	.LASF31:
 1881 028d 7857616E 		.ascii	"xWantedSize\000"
 1881      74656453 
 1881      697A6500 
 1882              	.LASF14:
 1883 0299 63686172 		.ascii	"char\000"
 1883      00
 1884              	.LASF28:
 1885 029e 70756341 		.ascii	"pucAlignedHeap\000"
 1885      6C69676E 
 1885      65644865 
 1885      617000
 1886              	.LASF30:
 1887 02ad 70784974 		.ascii	"pxIterator\000"
 1887      65726174 
 1887      6F7200
 1888              	.LASF7:
 1889 02b8 73686F72 		.ascii	"short int\000"
 1889      7420696E 
 1889      7400
ARM GAS  /tmp/ccDcpl5H.s 			page 43


 1890              	.LASF16:
 1891 02c2 75696E74 		.ascii	"uint16_t\000"
 1891      31365F74 
 1891      00
 1892              	.LASF26:
 1893 02cb 78467265 		.ascii	"xFreeBytesRemaining\000"
 1893      65427974 
 1893      65735265 
 1893      6D61696E 
 1893      696E6700 
 1894              	.LASF17:
 1895 02df 75696E74 		.ascii	"uint32_t\000"
 1895      33325F74 
 1895      00
 1896              	.LASF10:
 1897 02e8 6C6F6E67 		.ascii	"long int\000"
 1897      20696E74 
 1897      00
 1898              	.LASF2:
 1899 02f1 6C6F6E67 		.ascii	"long double\000"
 1899      20646F75 
 1899      626C6500 
 1900              	.LASF3:
 1901 02fd 7369676E 		.ascii	"signed char\000"
 1901      65642063 
 1901      68617200 
 1902              	.LASF19:
 1903 0309 70784E65 		.ascii	"pxNextFreeBlock\000"
 1903      78744672 
 1903      6565426C 
 1903      6F636B00 
 1904              	.LASF18:
 1905 0319 42617365 		.ascii	"BaseType_t\000"
 1905      54797065 
 1905      5F7400
 1906              		.ident	"GCC: (GNU Arm Embedded Toolchain 10.3-2021.10) 10.3.1 20210824 (release)"
ARM GAS  /tmp/ccDcpl5H.s 			page 44


DEFINED SYMBOLS
                            *ABS*:0000000000000000 heap_2.c
     /tmp/ccDcpl5H.s:78     .text:0000000000000000 $t
     /tmp/ccDcpl5H.s:84     .text:0000000000000000 pvPortMalloc
     /tmp/ccDcpl5H.s:349    .text:000000000000009c $d
     /tmp/ccDcpl5H.s:527    .bss:0000000000000014 ucHeap
     /tmp/ccDcpl5H.s:356    .text:00000000000000ac $t
     /tmp/ccDcpl5H.s:362    .text:00000000000000ac vPortFree
     /tmp/ccDcpl5H.s:454    .text:00000000000000e4 $d
     /tmp/ccDcpl5H.s:459    .text:00000000000000ec $t
     /tmp/ccDcpl5H.s:465    .text:00000000000000ec xPortGetFreeHeapSize
     /tmp/ccDcpl5H.s:481    .text:00000000000000f4 $d
     /tmp/ccDcpl5H.s:485    .text:00000000000000f8 $t
     /tmp/ccDcpl5H.s:491    .text:00000000000000f8 vPortInitialiseBlocks
     /tmp/ccDcpl5H.s:504    .data:0000000000000000 $d
     /tmp/ccDcpl5H.s:508    .data:0000000000000000 xFreeBytesRemaining
     /tmp/ccDcpl5H.s:511    .bss:0000000000000000 $d
     /tmp/ccDcpl5H.s:515    .bss:0000000000000000 xStart
     /tmp/ccDcpl5H.s:519    .bss:0000000000000008 xHeapHasBeenInitialised.0
     /tmp/ccDcpl5H.s:523    .bss:000000000000000c xEnd

UNDEFINED SYMBOLS
vTaskSuspendAll
xTaskResumeAll
