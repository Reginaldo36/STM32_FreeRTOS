ARM GAS  /tmp/ccUMpXkT.s 			page 1


   1              		.cpu cortex-m3
   2              		.arch armv7-m
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1	@ Tag_ABI_FP_denormal
   5              		.eabi_attribute 21, 1	@ Tag_ABI_FP_exceptions
   6              		.eabi_attribute 23, 3	@ Tag_ABI_FP_number_model
   7              		.eabi_attribute 24, 1	@ Tag_ABI_align8_needed
   8              		.eabi_attribute 25, 1	@ Tag_ABI_align8_preserved
   9              		.eabi_attribute 26, 1	@ Tag_ABI_enum_size
  10              		.eabi_attribute 30, 4	@ Tag_ABI_optimization_goals
  11              		.eabi_attribute 34, 1	@ Tag_CPU_unaligned_access
  12              		.eabi_attribute 18, 4	@ Tag_ABI_PCS_wchar_t
  13              		.file	"port.c"
  14              	@ GNU C17 (GNU Arm Embedded Toolchain 10.3-2021.10) version 10.3.1 20210824 (release) (arm-none-eab
  15              	@	compiled by GNU C version 4.8.4, GMP version 6.1.0, MPFR version 3.1.4, MPC version 1.0.3, isl ve
  16              	
  17              	@ GGC heuristics: --param ggc-min-expand=100 --param ggc-min-heapsize=131072
  18              	@ options passed:  -I . -I ../3-ComProcessos
  19              	@ -I ../stm32f10x_lib/CMSIS/CM3/CoreSupport
  20              	@ -I ../stm32f10x_lib/CMSIS/CM3/DeviceSupport/ST/STM32F10x
  21              	@ -I ../stm32f10x_lib/STM32F10x_StdPeriph_Driver/inc
  22              	@ -I ../stm32f10x_lib/STM32F10x_StdPeriph_Driver -I ../freertos/include
  23              	@ -I ../freertos/portable/GCC/ARM_CM3 -imultilib thumb/v7-m/nofp
  24              	@ -iprefix /usr/bin/../lib/gcc/arm-none-eabi/10.3.1/
  25              	@ -isysroot /usr/bin/../arm-none-eabi -D__USES_INITFINI__ -D STM32F10X_MD
  26              	@ -D USE_STDPERIPH_DRIVER -D HSE_VALUE=8000000 -D RUN_FROM_FLASH=1
  27              	@ ../freertos/portable/GCC/ARM_CM3/port.c -mcpu=cortex-m3 -mthumb
  28              	@ -mfloat-abi=soft -mlibarch=armv7-m -march=armv7-m
  29              	@ -auxbase-strip ../freertos/portable/GCC/ARM_CM3/port.o -g -gdwarf-2 -Os
  30              	@ -Wall -fomit-frame-pointer -fverbose-asm
  31              	@ options enabled:  -faggressive-loop-optimizations -fallocation-dce
  32              	@ -fauto-inc-dec -fbranch-count-reg -fcaller-saves -fcode-hoisting
  33              	@ -fcombine-stack-adjustments -fcompare-elim -fcprop-registers
  34              	@ -fcrossjumping -fcse-follow-jumps -fdefer-pop
  35              	@ -fdelete-null-pointer-checks -fdevirtualize -fdevirtualize-speculatively
  36              	@ -fdwarf2-cfi-asm -fearly-inlining -feliminate-unused-debug-symbols
  37              	@ -feliminate-unused-debug-types -fexpensive-optimizations
  38              	@ -fforward-propagate -ffp-int-builtin-inexact -ffunction-cse -fgcse
  39              	@ -fgcse-lm -fgnu-unique -fguess-branch-probability -fhoist-adjacent-loads
  40              	@ -fident -fif-conversion -fif-conversion2 -findirect-inlining -finline
  41              	@ -finline-atomics -finline-functions -finline-functions-called-once
  42              	@ -finline-small-functions -fipa-bit-cp -fipa-cp -fipa-icf
  43              	@ -fipa-icf-functions -fipa-icf-variables -fipa-profile -fipa-pure-const
  44              	@ -fipa-ra -fipa-reference -fipa-reference-addressable -fipa-sra
  45              	@ -fipa-stack-alignment -fipa-vrp -fira-hoist-pressure
  46              	@ -fira-share-save-slots -fira-share-spill-slots
  47              	@ -fisolate-erroneous-paths-dereference -fivopts -fkeep-static-consts
  48              	@ -fleading-underscore -flifetime-dse -flra-remat -fmath-errno
  49              	@ -fmerge-constants -fmerge-debug-strings -fmove-loop-invariants
  50              	@ -fomit-frame-pointer -foptimize-sibling-calls -fpartial-inlining
  51              	@ -fpeephole -fpeephole2 -fplt -fprefetch-loop-arrays -freg-struct-return
  52              	@ -freorder-blocks -freorder-functions -frerun-cse-after-loop
  53              	@ -fsched-critical-path-heuristic -fsched-dep-count-heuristic
  54              	@ -fsched-group-heuristic -fsched-interblock -fsched-last-insn-heuristic
  55              	@ -fsched-pressure -fsched-rank-heuristic -fsched-spec
  56              	@ -fsched-spec-insn-heuristic -fsched-stalled-insns-dep -fschedule-insns2
  57              	@ -fsection-anchors -fsemantic-interposition -fshow-column
ARM GAS  /tmp/ccUMpXkT.s 			page 2


  58              	@ -fshrink-wrap-separate -fsigned-zeros -fsplit-ivs-in-unroller
  59              	@ -fsplit-wide-types -fssa-backprop -fssa-phiopt -fstdarg-opt
  60              	@ -fstore-merging -fstrict-aliasing -fstrict-volatile-bitfields
  61              	@ -fsync-libcalls -fthread-jumps -ftoplevel-reorder -ftrapping-math
  62              	@ -ftree-bit-ccp -ftree-builtin-call-dce -ftree-ccp -ftree-ch
  63              	@ -ftree-coalesce-vars -ftree-copy-prop -ftree-cselim -ftree-dce
  64              	@ -ftree-dominator-opts -ftree-dse -ftree-forwprop -ftree-fre
  65              	@ -ftree-loop-distribute-patterns -ftree-loop-if-convert -ftree-loop-im
  66              	@ -ftree-loop-ivcanon -ftree-loop-optimize -ftree-parallelize-loops=
  67              	@ -ftree-phiprop -ftree-pre -ftree-pta -ftree-reassoc -ftree-scev-cprop
  68              	@ -ftree-sink -ftree-slsr -ftree-sra -ftree-switch-conversion
  69              	@ -ftree-tail-merge -ftree-ter -ftree-vrp -funit-at-a-time -fvar-tracking
  70              	@ -fvar-tracking-assignments -fverbose-asm -fzero-initialized-in-bss
  71              	@ -masm-syntax-unified -mbe32 -mfix-cortex-m3-ldrd -mlittle-endian
  72              	@ -mpic-data-is-text-relative -msched-prolog -mthumb -munaligned-access
  73              	@ -mvectorize-with-neon-quad
  74              	
  75              		.text
  76              	.Ltext0:
  77              		.cfi_sections	.debug_frame
  78              		.align	1
  79              		.syntax unified
  80              		.thumb
  81              		.thumb_func
  82              		.type	prvTaskExitError, %function
  83              	prvTaskExitError:
  84              	.LFB6:
  85              		.file 1 "../freertos/portable/GCC/ARM_CM3/port.c"
   1:../freertos/portable/GCC/ARM_CM3/port.c **** /*
   2:../freertos/portable/GCC/ARM_CM3/port.c ****  * FreeRTOS Kernel V10.2.1
   3:../freertos/portable/GCC/ARM_CM3/port.c ****  * Copyright (C) 2019 Amazon.com, Inc. or its affiliates.  All Rights Reserved.
   4:../freertos/portable/GCC/ARM_CM3/port.c ****  *
   5:../freertos/portable/GCC/ARM_CM3/port.c ****  * Permission is hereby granted, free of charge, to any person obtaining a copy of
   6:../freertos/portable/GCC/ARM_CM3/port.c ****  * this software and associated documentation files (the "Software"), to deal in
   7:../freertos/portable/GCC/ARM_CM3/port.c ****  * the Software without restriction, including without limitation the rights to
   8:../freertos/portable/GCC/ARM_CM3/port.c ****  * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of
   9:../freertos/portable/GCC/ARM_CM3/port.c ****  * the Software, and to permit persons to whom the Software is furnished to do so,
  10:../freertos/portable/GCC/ARM_CM3/port.c ****  * subject to the following conditions:
  11:../freertos/portable/GCC/ARM_CM3/port.c ****  *
  12:../freertos/portable/GCC/ARM_CM3/port.c ****  * The above copyright notice and this permission notice shall be included in all
  13:../freertos/portable/GCC/ARM_CM3/port.c ****  * copies or substantial portions of the Software.
  14:../freertos/portable/GCC/ARM_CM3/port.c ****  *
  15:../freertos/portable/GCC/ARM_CM3/port.c ****  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  16:../freertos/portable/GCC/ARM_CM3/port.c ****  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
  17:../freertos/portable/GCC/ARM_CM3/port.c ****  * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
  18:../freertos/portable/GCC/ARM_CM3/port.c ****  * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
  19:../freertos/portable/GCC/ARM_CM3/port.c ****  * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
  20:../freertos/portable/GCC/ARM_CM3/port.c ****  * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
  21:../freertos/portable/GCC/ARM_CM3/port.c ****  *
  22:../freertos/portable/GCC/ARM_CM3/port.c ****  * http://www.FreeRTOS.org
  23:../freertos/portable/GCC/ARM_CM3/port.c ****  * http://aws.amazon.com/freertos
  24:../freertos/portable/GCC/ARM_CM3/port.c ****  *
  25:../freertos/portable/GCC/ARM_CM3/port.c ****  * 1 tab == 4 spaces!
  26:../freertos/portable/GCC/ARM_CM3/port.c ****  */
  27:../freertos/portable/GCC/ARM_CM3/port.c **** 
  28:../freertos/portable/GCC/ARM_CM3/port.c **** /*-----------------------------------------------------------
  29:../freertos/portable/GCC/ARM_CM3/port.c ****  * Implementation of functions defined in portable.h for the ARM CM3 port.
ARM GAS  /tmp/ccUMpXkT.s 			page 3


  30:../freertos/portable/GCC/ARM_CM3/port.c ****  *----------------------------------------------------------*/
  31:../freertos/portable/GCC/ARM_CM3/port.c **** 
  32:../freertos/portable/GCC/ARM_CM3/port.c **** /* Scheduler includes. */
  33:../freertos/portable/GCC/ARM_CM3/port.c **** #include "FreeRTOS.h"
  34:../freertos/portable/GCC/ARM_CM3/port.c **** #include "task.h"
  35:../freertos/portable/GCC/ARM_CM3/port.c **** 
  36:../freertos/portable/GCC/ARM_CM3/port.c **** /* For backward compatibility, ensure configKERNEL_INTERRUPT_PRIORITY is
  37:../freertos/portable/GCC/ARM_CM3/port.c **** defined.  The value should also ensure backward compatibility.
  38:../freertos/portable/GCC/ARM_CM3/port.c **** FreeRTOS.org versions prior to V4.4.0 did not include this definition. */
  39:../freertos/portable/GCC/ARM_CM3/port.c **** #ifndef configKERNEL_INTERRUPT_PRIORITY
  40:../freertos/portable/GCC/ARM_CM3/port.c **** 	#define configKERNEL_INTERRUPT_PRIORITY 255
  41:../freertos/portable/GCC/ARM_CM3/port.c **** #endif
  42:../freertos/portable/GCC/ARM_CM3/port.c **** 
  43:../freertos/portable/GCC/ARM_CM3/port.c **** #ifndef configSYSTICK_CLOCK_HZ
  44:../freertos/portable/GCC/ARM_CM3/port.c **** 	#define configSYSTICK_CLOCK_HZ configCPU_CLOCK_HZ
  45:../freertos/portable/GCC/ARM_CM3/port.c **** 	/* Ensure the SysTick is clocked at the same frequency as the core. */
  46:../freertos/portable/GCC/ARM_CM3/port.c **** 	#define portNVIC_SYSTICK_CLK_BIT	( 1UL << 2UL )
  47:../freertos/portable/GCC/ARM_CM3/port.c **** #else
  48:../freertos/portable/GCC/ARM_CM3/port.c **** 	/* The way the SysTick is clocked is not modified in case it is not the same
  49:../freertos/portable/GCC/ARM_CM3/port.c **** 	as the core. */
  50:../freertos/portable/GCC/ARM_CM3/port.c **** 	#define portNVIC_SYSTICK_CLK_BIT	( 0 )
  51:../freertos/portable/GCC/ARM_CM3/port.c **** #endif
  52:../freertos/portable/GCC/ARM_CM3/port.c **** 
  53:../freertos/portable/GCC/ARM_CM3/port.c **** /* Constants required to manipulate the core.  Registers first... */
  54:../freertos/portable/GCC/ARM_CM3/port.c **** #define portNVIC_SYSTICK_CTRL_REG			( * ( ( volatile uint32_t * ) 0xe000e010 ) )
  55:../freertos/portable/GCC/ARM_CM3/port.c **** #define portNVIC_SYSTICK_LOAD_REG			( * ( ( volatile uint32_t * ) 0xe000e014 ) )
  56:../freertos/portable/GCC/ARM_CM3/port.c **** #define portNVIC_SYSTICK_CURRENT_VALUE_REG	( * ( ( volatile uint32_t * ) 0xe000e018 ) )
  57:../freertos/portable/GCC/ARM_CM3/port.c **** #define portNVIC_SYSPRI2_REG				( * ( ( volatile uint32_t * ) 0xe000ed20 ) )
  58:../freertos/portable/GCC/ARM_CM3/port.c **** /* ...then bits in the registers. */
  59:../freertos/portable/GCC/ARM_CM3/port.c **** #define portNVIC_SYSTICK_INT_BIT			( 1UL << 1UL )
  60:../freertos/portable/GCC/ARM_CM3/port.c **** #define portNVIC_SYSTICK_ENABLE_BIT			( 1UL << 0UL )
  61:../freertos/portable/GCC/ARM_CM3/port.c **** #define portNVIC_SYSTICK_COUNT_FLAG_BIT		( 1UL << 16UL )
  62:../freertos/portable/GCC/ARM_CM3/port.c **** #define portNVIC_PENDSVCLEAR_BIT 			( 1UL << 27UL )
  63:../freertos/portable/GCC/ARM_CM3/port.c **** #define portNVIC_PEND_SYSTICK_CLEAR_BIT		( 1UL << 25UL )
  64:../freertos/portable/GCC/ARM_CM3/port.c **** 
  65:../freertos/portable/GCC/ARM_CM3/port.c **** #define portNVIC_PENDSV_PRI					( ( ( uint32_t ) configKERNEL_INTERRUPT_PRIORITY ) << 16UL )
  66:../freertos/portable/GCC/ARM_CM3/port.c **** #define portNVIC_SYSTICK_PRI				( ( ( uint32_t ) configKERNEL_INTERRUPT_PRIORITY ) << 24UL )
  67:../freertos/portable/GCC/ARM_CM3/port.c **** 
  68:../freertos/portable/GCC/ARM_CM3/port.c **** /* Constants required to check the validity of an interrupt priority. */
  69:../freertos/portable/GCC/ARM_CM3/port.c **** #define portFIRST_USER_INTERRUPT_NUMBER		( 16 )
  70:../freertos/portable/GCC/ARM_CM3/port.c **** #define portNVIC_IP_REGISTERS_OFFSET_16 	( 0xE000E3F0 )
  71:../freertos/portable/GCC/ARM_CM3/port.c **** #define portAIRCR_REG						( * ( ( volatile uint32_t * ) 0xE000ED0C ) )
  72:../freertos/portable/GCC/ARM_CM3/port.c **** #define portMAX_8_BIT_VALUE					( ( uint8_t ) 0xff )
  73:../freertos/portable/GCC/ARM_CM3/port.c **** #define portTOP_BIT_OF_BYTE					( ( uint8_t ) 0x80 )
  74:../freertos/portable/GCC/ARM_CM3/port.c **** #define portMAX_PRIGROUP_BITS				( ( uint8_t ) 7 )
  75:../freertos/portable/GCC/ARM_CM3/port.c **** #define portPRIORITY_GROUP_MASK				( 0x07UL << 8UL )
  76:../freertos/portable/GCC/ARM_CM3/port.c **** #define portPRIGROUP_SHIFT					( 8UL )
  77:../freertos/portable/GCC/ARM_CM3/port.c **** 
  78:../freertos/portable/GCC/ARM_CM3/port.c **** /* Masks off all bits but the VECTACTIVE bits in the ICSR register. */
  79:../freertos/portable/GCC/ARM_CM3/port.c **** #define portVECTACTIVE_MASK					( 0xFFUL )
  80:../freertos/portable/GCC/ARM_CM3/port.c **** 
  81:../freertos/portable/GCC/ARM_CM3/port.c **** /* Constants required to set up the initial stack. */
  82:../freertos/portable/GCC/ARM_CM3/port.c **** #define portINITIAL_XPSR					( 0x01000000UL )
  83:../freertos/portable/GCC/ARM_CM3/port.c **** 
  84:../freertos/portable/GCC/ARM_CM3/port.c **** /* The systick is a 24-bit counter. */
  85:../freertos/portable/GCC/ARM_CM3/port.c **** #define portMAX_24_BIT_NUMBER				( 0xffffffUL )
  86:../freertos/portable/GCC/ARM_CM3/port.c **** 
ARM GAS  /tmp/ccUMpXkT.s 			page 4


  87:../freertos/portable/GCC/ARM_CM3/port.c **** /* A fiddle factor to estimate the number of SysTick counts that would have
  88:../freertos/portable/GCC/ARM_CM3/port.c **** occurred while the SysTick counter is stopped during tickless idle
  89:../freertos/portable/GCC/ARM_CM3/port.c **** calculations. */
  90:../freertos/portable/GCC/ARM_CM3/port.c **** #define portMISSED_COUNTS_FACTOR			( 45UL )
  91:../freertos/portable/GCC/ARM_CM3/port.c **** 
  92:../freertos/portable/GCC/ARM_CM3/port.c **** /* For strict compliance with the Cortex-M spec the task start address should
  93:../freertos/portable/GCC/ARM_CM3/port.c **** have bit-0 clear, as it is loaded into the PC on exit from an ISR. */
  94:../freertos/portable/GCC/ARM_CM3/port.c **** #define portSTART_ADDRESS_MASK				( ( StackType_t ) 0xfffffffeUL )
  95:../freertos/portable/GCC/ARM_CM3/port.c **** 
  96:../freertos/portable/GCC/ARM_CM3/port.c **** /* Let the user override the pre-loading of the initial LR with the address of
  97:../freertos/portable/GCC/ARM_CM3/port.c **** prvTaskExitError() in case it messes up unwinding of the stack in the
  98:../freertos/portable/GCC/ARM_CM3/port.c **** debugger. */
  99:../freertos/portable/GCC/ARM_CM3/port.c **** #ifdef configTASK_RETURN_ADDRESS
 100:../freertos/portable/GCC/ARM_CM3/port.c **** 	#define portTASK_RETURN_ADDRESS	configTASK_RETURN_ADDRESS
 101:../freertos/portable/GCC/ARM_CM3/port.c **** #else
 102:../freertos/portable/GCC/ARM_CM3/port.c **** 	#define portTASK_RETURN_ADDRESS	prvTaskExitError
 103:../freertos/portable/GCC/ARM_CM3/port.c **** #endif
 104:../freertos/portable/GCC/ARM_CM3/port.c **** 
 105:../freertos/portable/GCC/ARM_CM3/port.c **** /*
 106:../freertos/portable/GCC/ARM_CM3/port.c ****  * Setup the timer to generate the tick interrupts.  The implementation in this
 107:../freertos/portable/GCC/ARM_CM3/port.c ****  * file is weak to allow application writers to change the timer used to
 108:../freertos/portable/GCC/ARM_CM3/port.c ****  * generate the tick interrupt.
 109:../freertos/portable/GCC/ARM_CM3/port.c ****  */
 110:../freertos/portable/GCC/ARM_CM3/port.c **** void vPortSetupTimerInterrupt( void );
 111:../freertos/portable/GCC/ARM_CM3/port.c **** 
 112:../freertos/portable/GCC/ARM_CM3/port.c **** /*
 113:../freertos/portable/GCC/ARM_CM3/port.c ****  * Exception handlers.
 114:../freertos/portable/GCC/ARM_CM3/port.c ****  */
 115:../freertos/portable/GCC/ARM_CM3/port.c **** void xPortPendSVHandler( void ) __attribute__ (( naked ));
 116:../freertos/portable/GCC/ARM_CM3/port.c **** void xPortSysTickHandler( void );
 117:../freertos/portable/GCC/ARM_CM3/port.c **** void vPortSVCHandler( void ) __attribute__ (( naked ));
 118:../freertos/portable/GCC/ARM_CM3/port.c **** 
 119:../freertos/portable/GCC/ARM_CM3/port.c **** /*
 120:../freertos/portable/GCC/ARM_CM3/port.c ****  * Start first task is a separate function so it can be tested in isolation.
 121:../freertos/portable/GCC/ARM_CM3/port.c ****  */
 122:../freertos/portable/GCC/ARM_CM3/port.c **** static void prvPortStartFirstTask( void ) __attribute__ (( naked ));
 123:../freertos/portable/GCC/ARM_CM3/port.c **** 
 124:../freertos/portable/GCC/ARM_CM3/port.c **** /*
 125:../freertos/portable/GCC/ARM_CM3/port.c ****  * Used to catch tasks that attempt to return from their implementing function.
 126:../freertos/portable/GCC/ARM_CM3/port.c ****  */
 127:../freertos/portable/GCC/ARM_CM3/port.c **** static void prvTaskExitError( void );
 128:../freertos/portable/GCC/ARM_CM3/port.c **** 
 129:../freertos/portable/GCC/ARM_CM3/port.c **** /*-----------------------------------------------------------*/
 130:../freertos/portable/GCC/ARM_CM3/port.c **** 
 131:../freertos/portable/GCC/ARM_CM3/port.c **** /* Each task maintains its own interrupt status in the critical nesting
 132:../freertos/portable/GCC/ARM_CM3/port.c **** variable. */
 133:../freertos/portable/GCC/ARM_CM3/port.c **** static UBaseType_t uxCriticalNesting = 0xaaaaaaaa;
 134:../freertos/portable/GCC/ARM_CM3/port.c **** 
 135:../freertos/portable/GCC/ARM_CM3/port.c **** /*
 136:../freertos/portable/GCC/ARM_CM3/port.c ****  * The number of SysTick increments that make up one tick period.
 137:../freertos/portable/GCC/ARM_CM3/port.c ****  */
 138:../freertos/portable/GCC/ARM_CM3/port.c **** #if( configUSE_TICKLESS_IDLE == 1 )
 139:../freertos/portable/GCC/ARM_CM3/port.c **** 	static uint32_t ulTimerCountsForOneTick = 0;
 140:../freertos/portable/GCC/ARM_CM3/port.c **** #endif /* configUSE_TICKLESS_IDLE */
 141:../freertos/portable/GCC/ARM_CM3/port.c **** 
 142:../freertos/portable/GCC/ARM_CM3/port.c **** /*
 143:../freertos/portable/GCC/ARM_CM3/port.c ****  * The maximum number of tick periods that can be suppressed is limited by the
ARM GAS  /tmp/ccUMpXkT.s 			page 5


 144:../freertos/portable/GCC/ARM_CM3/port.c ****  * 24 bit resolution of the SysTick timer.
 145:../freertos/portable/GCC/ARM_CM3/port.c ****  */
 146:../freertos/portable/GCC/ARM_CM3/port.c **** #if( configUSE_TICKLESS_IDLE == 1 )
 147:../freertos/portable/GCC/ARM_CM3/port.c **** 	static uint32_t xMaximumPossibleSuppressedTicks = 0;
 148:../freertos/portable/GCC/ARM_CM3/port.c **** #endif /* configUSE_TICKLESS_IDLE */
 149:../freertos/portable/GCC/ARM_CM3/port.c **** 
 150:../freertos/portable/GCC/ARM_CM3/port.c **** /*
 151:../freertos/portable/GCC/ARM_CM3/port.c ****  * Compensate for the CPU cycles that pass while the SysTick is stopped (low
 152:../freertos/portable/GCC/ARM_CM3/port.c ****  * power functionality only.
 153:../freertos/portable/GCC/ARM_CM3/port.c ****  */
 154:../freertos/portable/GCC/ARM_CM3/port.c **** #if( configUSE_TICKLESS_IDLE == 1 )
 155:../freertos/portable/GCC/ARM_CM3/port.c **** 	static uint32_t ulStoppedTimerCompensation = 0;
 156:../freertos/portable/GCC/ARM_CM3/port.c **** #endif /* configUSE_TICKLESS_IDLE */
 157:../freertos/portable/GCC/ARM_CM3/port.c **** 
 158:../freertos/portable/GCC/ARM_CM3/port.c **** /*
 159:../freertos/portable/GCC/ARM_CM3/port.c ****  * Used by the portASSERT_IF_INTERRUPT_PRIORITY_INVALID() macro to ensure
 160:../freertos/portable/GCC/ARM_CM3/port.c ****  * FreeRTOS API functions are not called from interrupts that have been assigned
 161:../freertos/portable/GCC/ARM_CM3/port.c ****  * a priority above configMAX_SYSCALL_INTERRUPT_PRIORITY.
 162:../freertos/portable/GCC/ARM_CM3/port.c ****  */
 163:../freertos/portable/GCC/ARM_CM3/port.c **** #if( configASSERT_DEFINED == 1 )
 164:../freertos/portable/GCC/ARM_CM3/port.c **** 	 static uint8_t ucMaxSysCallPriority = 0;
 165:../freertos/portable/GCC/ARM_CM3/port.c **** 	 static uint32_t ulMaxPRIGROUPValue = 0;
 166:../freertos/portable/GCC/ARM_CM3/port.c **** 	 static const volatile uint8_t * const pcInterruptPriorityRegisters = ( const volatile uint8_t * c
 167:../freertos/portable/GCC/ARM_CM3/port.c **** #endif /* configASSERT_DEFINED */
 168:../freertos/portable/GCC/ARM_CM3/port.c **** 
 169:../freertos/portable/GCC/ARM_CM3/port.c **** /*-----------------------------------------------------------*/
 170:../freertos/portable/GCC/ARM_CM3/port.c **** 
 171:../freertos/portable/GCC/ARM_CM3/port.c **** /*
 172:../freertos/portable/GCC/ARM_CM3/port.c ****  * See header file for description.
 173:../freertos/portable/GCC/ARM_CM3/port.c ****  */
 174:../freertos/portable/GCC/ARM_CM3/port.c **** StackType_t *pxPortInitialiseStack( StackType_t *pxTopOfStack, TaskFunction_t pxCode, void *pvParam
 175:../freertos/portable/GCC/ARM_CM3/port.c **** {
 176:../freertos/portable/GCC/ARM_CM3/port.c **** 	/* Simulate the stack frame as it would be created by a context switch
 177:../freertos/portable/GCC/ARM_CM3/port.c **** 	interrupt. */
 178:../freertos/portable/GCC/ARM_CM3/port.c **** 	pxTopOfStack--; /* Offset added to account for the way the MCU uses the stack on entry/exit of int
 179:../freertos/portable/GCC/ARM_CM3/port.c **** 	*pxTopOfStack = portINITIAL_XPSR;	/* xPSR */
 180:../freertos/portable/GCC/ARM_CM3/port.c **** 	pxTopOfStack--;
 181:../freertos/portable/GCC/ARM_CM3/port.c **** 	*pxTopOfStack = ( ( StackType_t ) pxCode ) & portSTART_ADDRESS_MASK;	/* PC */
 182:../freertos/portable/GCC/ARM_CM3/port.c **** 	pxTopOfStack--;
 183:../freertos/portable/GCC/ARM_CM3/port.c **** 	*pxTopOfStack = ( StackType_t ) portTASK_RETURN_ADDRESS;	/* LR */
 184:../freertos/portable/GCC/ARM_CM3/port.c **** 	pxTopOfStack -= 5;	/* R12, R3, R2 and R1. */
 185:../freertos/portable/GCC/ARM_CM3/port.c **** 	*pxTopOfStack = ( StackType_t ) pvParameters;	/* R0 */
 186:../freertos/portable/GCC/ARM_CM3/port.c **** 	pxTopOfStack -= 8;	/* R11, R10, R9, R8, R7, R6, R5 and R4. */
 187:../freertos/portable/GCC/ARM_CM3/port.c **** 
 188:../freertos/portable/GCC/ARM_CM3/port.c **** 	return pxTopOfStack;
 189:../freertos/portable/GCC/ARM_CM3/port.c **** }
 190:../freertos/portable/GCC/ARM_CM3/port.c **** /*-----------------------------------------------------------*/
 191:../freertos/portable/GCC/ARM_CM3/port.c **** 
 192:../freertos/portable/GCC/ARM_CM3/port.c **** static void prvTaskExitError( void )
 193:../freertos/portable/GCC/ARM_CM3/port.c **** {
  86              		.loc 1 193 1 view -0
  87              		.cfi_startproc
  88              		@ args = 0, pretend = 0, frame = 8
  89              		@ frame_needed = 0, uses_anonymous_args = 0
  90              		@ link register save eliminated.
 194:../freertos/portable/GCC/ARM_CM3/port.c **** volatile uint32_t ulDummy = 0UL;
  91              		.loc 1 194 1 view .LVU1
ARM GAS  /tmp/ccUMpXkT.s 			page 6


  92              	@ ../freertos/portable/GCC/ARM_CM3/port.c:194: volatile uint32_t ulDummy = 0UL;
  93              		.loc 1 194 19 is_stmt 0 view .LVU2
  94 0000 0023     		movs	r3, #0	@ tmp115,
  95              	@ ../freertos/portable/GCC/ARM_CM3/port.c:193: {
 193:../freertos/portable/GCC/ARM_CM3/port.c **** volatile uint32_t ulDummy = 0UL;
  96              		.loc 1 193 1 view .LVU3
  97 0002 82B0     		sub	sp, sp, #8	@,,
  98              	.LCFI0:
  99              		.cfi_def_cfa_offset 8
 100              	@ ../freertos/portable/GCC/ARM_CM3/port.c:194: volatile uint32_t ulDummy = 0UL;
 101              		.loc 1 194 19 view .LVU4
 102 0004 0193     		str	r3, [sp, #4]	@ tmp115, ulDummy
 195:../freertos/portable/GCC/ARM_CM3/port.c **** 
 196:../freertos/portable/GCC/ARM_CM3/port.c **** 	/* A function that implements a task must not exit or attempt to return to
 197:../freertos/portable/GCC/ARM_CM3/port.c **** 	its caller as there is nothing to return to.  If a task wants to exit it
 198:../freertos/portable/GCC/ARM_CM3/port.c **** 	should instead call vTaskDelete( NULL ).
 199:../freertos/portable/GCC/ARM_CM3/port.c **** 
 200:../freertos/portable/GCC/ARM_CM3/port.c **** 	Artificially force an assert() to be triggered if configASSERT() is
 201:../freertos/portable/GCC/ARM_CM3/port.c **** 	defined, then stop here so application writers can catch the error. */
 202:../freertos/portable/GCC/ARM_CM3/port.c **** 	configASSERT( uxCriticalNesting == ~0UL );
 103              		.loc 1 202 43 is_stmt 1 view .LVU5
 203:../freertos/portable/GCC/ARM_CM3/port.c **** 	portDISABLE_INTERRUPTS();
 104              		.loc 1 203 2 view .LVU6
 105              	.LBB12:
 106              	.LBI12:
 107              		.file 2 "../freertos/portable/GCC/ARM_CM3/portmacro.h"
   1:../freertos/portable/GCC/ARM_CM3/portmacro.h **** /*
   2:../freertos/portable/GCC/ARM_CM3/portmacro.h ****  * FreeRTOS Kernel V10.2.1
   3:../freertos/portable/GCC/ARM_CM3/portmacro.h ****  * Copyright (C) 2019 Amazon.com, Inc. or its affiliates.  All Rights Reserved.
   4:../freertos/portable/GCC/ARM_CM3/portmacro.h ****  *
   5:../freertos/portable/GCC/ARM_CM3/portmacro.h ****  * Permission is hereby granted, free of charge, to any person obtaining a copy of
   6:../freertos/portable/GCC/ARM_CM3/portmacro.h ****  * this software and associated documentation files (the "Software"), to deal in
   7:../freertos/portable/GCC/ARM_CM3/portmacro.h ****  * the Software without restriction, including without limitation the rights to
   8:../freertos/portable/GCC/ARM_CM3/portmacro.h ****  * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of
   9:../freertos/portable/GCC/ARM_CM3/portmacro.h ****  * the Software, and to permit persons to whom the Software is furnished to do so,
  10:../freertos/portable/GCC/ARM_CM3/portmacro.h ****  * subject to the following conditions:
  11:../freertos/portable/GCC/ARM_CM3/portmacro.h ****  *
  12:../freertos/portable/GCC/ARM_CM3/portmacro.h ****  * The above copyright notice and this permission notice shall be included in all
  13:../freertos/portable/GCC/ARM_CM3/portmacro.h ****  * copies or substantial portions of the Software.
  14:../freertos/portable/GCC/ARM_CM3/portmacro.h ****  *
  15:../freertos/portable/GCC/ARM_CM3/portmacro.h ****  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  16:../freertos/portable/GCC/ARM_CM3/portmacro.h ****  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
  17:../freertos/portable/GCC/ARM_CM3/portmacro.h ****  * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
  18:../freertos/portable/GCC/ARM_CM3/portmacro.h ****  * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
  19:../freertos/portable/GCC/ARM_CM3/portmacro.h ****  * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
  20:../freertos/portable/GCC/ARM_CM3/portmacro.h ****  * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
  21:../freertos/portable/GCC/ARM_CM3/portmacro.h ****  *
  22:../freertos/portable/GCC/ARM_CM3/portmacro.h ****  * http://www.FreeRTOS.org
  23:../freertos/portable/GCC/ARM_CM3/portmacro.h ****  * http://aws.amazon.com/freertos
  24:../freertos/portable/GCC/ARM_CM3/portmacro.h ****  *
  25:../freertos/portable/GCC/ARM_CM3/portmacro.h ****  * 1 tab == 4 spaces!
  26:../freertos/portable/GCC/ARM_CM3/portmacro.h ****  */
  27:../freertos/portable/GCC/ARM_CM3/portmacro.h **** 
  28:../freertos/portable/GCC/ARM_CM3/portmacro.h **** 
  29:../freertos/portable/GCC/ARM_CM3/portmacro.h **** #ifndef PORTMACRO_H
  30:../freertos/portable/GCC/ARM_CM3/portmacro.h **** #define PORTMACRO_H
  31:../freertos/portable/GCC/ARM_CM3/portmacro.h **** 
ARM GAS  /tmp/ccUMpXkT.s 			page 7


  32:../freertos/portable/GCC/ARM_CM3/portmacro.h **** #ifdef __cplusplus
  33:../freertos/portable/GCC/ARM_CM3/portmacro.h **** extern "C" {
  34:../freertos/portable/GCC/ARM_CM3/portmacro.h **** #endif
  35:../freertos/portable/GCC/ARM_CM3/portmacro.h **** 
  36:../freertos/portable/GCC/ARM_CM3/portmacro.h **** /*-----------------------------------------------------------
  37:../freertos/portable/GCC/ARM_CM3/portmacro.h ****  * Port specific definitions.
  38:../freertos/portable/GCC/ARM_CM3/portmacro.h ****  *
  39:../freertos/portable/GCC/ARM_CM3/portmacro.h ****  * The settings in this file configure FreeRTOS correctly for the
  40:../freertos/portable/GCC/ARM_CM3/portmacro.h ****  * given hardware and compiler.
  41:../freertos/portable/GCC/ARM_CM3/portmacro.h ****  *
  42:../freertos/portable/GCC/ARM_CM3/portmacro.h ****  * These settings should not be altered.
  43:../freertos/portable/GCC/ARM_CM3/portmacro.h ****  *-----------------------------------------------------------
  44:../freertos/portable/GCC/ARM_CM3/portmacro.h ****  */
  45:../freertos/portable/GCC/ARM_CM3/portmacro.h **** 
  46:../freertos/portable/GCC/ARM_CM3/portmacro.h **** /* Type definitions. */
  47:../freertos/portable/GCC/ARM_CM3/portmacro.h **** #define portCHAR		char
  48:../freertos/portable/GCC/ARM_CM3/portmacro.h **** #define portFLOAT		float
  49:../freertos/portable/GCC/ARM_CM3/portmacro.h **** #define portDOUBLE		double
  50:../freertos/portable/GCC/ARM_CM3/portmacro.h **** #define portLONG		long
  51:../freertos/portable/GCC/ARM_CM3/portmacro.h **** #define portSHORT		short
  52:../freertos/portable/GCC/ARM_CM3/portmacro.h **** #define portSTACK_TYPE	uint32_t
  53:../freertos/portable/GCC/ARM_CM3/portmacro.h **** #define portBASE_TYPE	long
  54:../freertos/portable/GCC/ARM_CM3/portmacro.h **** 
  55:../freertos/portable/GCC/ARM_CM3/portmacro.h **** typedef portSTACK_TYPE StackType_t;
  56:../freertos/portable/GCC/ARM_CM3/portmacro.h **** typedef long BaseType_t;
  57:../freertos/portable/GCC/ARM_CM3/portmacro.h **** typedef unsigned long UBaseType_t;
  58:../freertos/portable/GCC/ARM_CM3/portmacro.h **** 
  59:../freertos/portable/GCC/ARM_CM3/portmacro.h **** #if( configUSE_16_BIT_TICKS == 1 )
  60:../freertos/portable/GCC/ARM_CM3/portmacro.h **** 	typedef uint16_t TickType_t;
  61:../freertos/portable/GCC/ARM_CM3/portmacro.h **** 	#define portMAX_DELAY ( TickType_t ) 0xffff
  62:../freertos/portable/GCC/ARM_CM3/portmacro.h **** #else
  63:../freertos/portable/GCC/ARM_CM3/portmacro.h **** 	typedef uint32_t TickType_t;
  64:../freertos/portable/GCC/ARM_CM3/portmacro.h **** 	#define portMAX_DELAY ( TickType_t ) 0xffffffffUL
  65:../freertos/portable/GCC/ARM_CM3/portmacro.h **** 
  66:../freertos/portable/GCC/ARM_CM3/portmacro.h **** 	/* 32-bit tick type on a 32-bit architecture, so reads of the tick count do
  67:../freertos/portable/GCC/ARM_CM3/portmacro.h **** 	not need to be guarded with a critical section. */
  68:../freertos/portable/GCC/ARM_CM3/portmacro.h **** 	#define portTICK_TYPE_IS_ATOMIC 1
  69:../freertos/portable/GCC/ARM_CM3/portmacro.h **** #endif
  70:../freertos/portable/GCC/ARM_CM3/portmacro.h **** /*-----------------------------------------------------------*/
  71:../freertos/portable/GCC/ARM_CM3/portmacro.h **** 
  72:../freertos/portable/GCC/ARM_CM3/portmacro.h **** /* Architecture specifics. */
  73:../freertos/portable/GCC/ARM_CM3/portmacro.h **** #define portSTACK_GROWTH			( -1 )
  74:../freertos/portable/GCC/ARM_CM3/portmacro.h **** #define portTICK_PERIOD_MS			( ( TickType_t ) 1000 / configTICK_RATE_HZ )
  75:../freertos/portable/GCC/ARM_CM3/portmacro.h **** #define portBYTE_ALIGNMENT			8
  76:../freertos/portable/GCC/ARM_CM3/portmacro.h **** /*-----------------------------------------------------------*/
  77:../freertos/portable/GCC/ARM_CM3/portmacro.h **** 
  78:../freertos/portable/GCC/ARM_CM3/portmacro.h **** /* Scheduler utilities. */
  79:../freertos/portable/GCC/ARM_CM3/portmacro.h **** #define portYIELD() 															\
  80:../freertos/portable/GCC/ARM_CM3/portmacro.h **** {																				\
  81:../freertos/portable/GCC/ARM_CM3/portmacro.h **** 	/* Set a PendSV to request a context switch. */								\
  82:../freertos/portable/GCC/ARM_CM3/portmacro.h **** 	portNVIC_INT_CTRL_REG = portNVIC_PENDSVSET_BIT;								\
  83:../freertos/portable/GCC/ARM_CM3/portmacro.h **** 																				\
  84:../freertos/portable/GCC/ARM_CM3/portmacro.h **** 	/* Barriers are normally not required but do ensure the code is completely	\
  85:../freertos/portable/GCC/ARM_CM3/portmacro.h **** 	within the specified behaviour for the architecture. */						\
  86:../freertos/portable/GCC/ARM_CM3/portmacro.h **** 	__asm volatile( "dsb" ::: "memory" );										\
  87:../freertos/portable/GCC/ARM_CM3/portmacro.h **** 	__asm volatile( "isb" );													\
  88:../freertos/portable/GCC/ARM_CM3/portmacro.h **** }
ARM GAS  /tmp/ccUMpXkT.s 			page 8


  89:../freertos/portable/GCC/ARM_CM3/portmacro.h **** 
  90:../freertos/portable/GCC/ARM_CM3/portmacro.h **** #define portNVIC_INT_CTRL_REG		( * ( ( volatile uint32_t * ) 0xe000ed04 ) )
  91:../freertos/portable/GCC/ARM_CM3/portmacro.h **** #define portNVIC_PENDSVSET_BIT		( 1UL << 28UL )
  92:../freertos/portable/GCC/ARM_CM3/portmacro.h **** #define portEND_SWITCHING_ISR( xSwitchRequired ) if( xSwitchRequired != pdFALSE ) portYIELD()
  93:../freertos/portable/GCC/ARM_CM3/portmacro.h **** #define portYIELD_FROM_ISR( x ) portEND_SWITCHING_ISR( x )
  94:../freertos/portable/GCC/ARM_CM3/portmacro.h **** /*-----------------------------------------------------------*/
  95:../freertos/portable/GCC/ARM_CM3/portmacro.h **** 
  96:../freertos/portable/GCC/ARM_CM3/portmacro.h **** /* Critical section management. */
  97:../freertos/portable/GCC/ARM_CM3/portmacro.h **** extern void vPortEnterCritical( void );
  98:../freertos/portable/GCC/ARM_CM3/portmacro.h **** extern void vPortExitCritical( void );
  99:../freertos/portable/GCC/ARM_CM3/portmacro.h **** #define portSET_INTERRUPT_MASK_FROM_ISR()		ulPortRaiseBASEPRI()
 100:../freertos/portable/GCC/ARM_CM3/portmacro.h **** #define portCLEAR_INTERRUPT_MASK_FROM_ISR(x)	vPortSetBASEPRI(x)
 101:../freertos/portable/GCC/ARM_CM3/portmacro.h **** #define portDISABLE_INTERRUPTS()				vPortRaiseBASEPRI()
 102:../freertos/portable/GCC/ARM_CM3/portmacro.h **** #define portENABLE_INTERRUPTS()					vPortSetBASEPRI(0)
 103:../freertos/portable/GCC/ARM_CM3/portmacro.h **** #define portENTER_CRITICAL()					vPortEnterCritical()
 104:../freertos/portable/GCC/ARM_CM3/portmacro.h **** #define portEXIT_CRITICAL()						vPortExitCritical()
 105:../freertos/portable/GCC/ARM_CM3/portmacro.h **** 
 106:../freertos/portable/GCC/ARM_CM3/portmacro.h **** /*-----------------------------------------------------------*/
 107:../freertos/portable/GCC/ARM_CM3/portmacro.h **** 
 108:../freertos/portable/GCC/ARM_CM3/portmacro.h **** /* Task function macros as described on the FreeRTOS.org WEB site.  These are
 109:../freertos/portable/GCC/ARM_CM3/portmacro.h **** not necessary for to use this port.  They are defined so the common demo files
 110:../freertos/portable/GCC/ARM_CM3/portmacro.h **** (which build with all the ports) will build. */
 111:../freertos/portable/GCC/ARM_CM3/portmacro.h **** #define portTASK_FUNCTION_PROTO( vFunction, pvParameters ) void vFunction( void *pvParameters )
 112:../freertos/portable/GCC/ARM_CM3/portmacro.h **** #define portTASK_FUNCTION( vFunction, pvParameters ) void vFunction( void *pvParameters )
 113:../freertos/portable/GCC/ARM_CM3/portmacro.h **** /*-----------------------------------------------------------*/
 114:../freertos/portable/GCC/ARM_CM3/portmacro.h **** 
 115:../freertos/portable/GCC/ARM_CM3/portmacro.h **** /* Tickless idle/low power functionality. */
 116:../freertos/portable/GCC/ARM_CM3/portmacro.h **** #ifndef portSUPPRESS_TICKS_AND_SLEEP
 117:../freertos/portable/GCC/ARM_CM3/portmacro.h **** 	extern void vPortSuppressTicksAndSleep( TickType_t xExpectedIdleTime );
 118:../freertos/portable/GCC/ARM_CM3/portmacro.h **** 	#define portSUPPRESS_TICKS_AND_SLEEP( xExpectedIdleTime ) vPortSuppressTicksAndSleep( xExpectedIdl
 119:../freertos/portable/GCC/ARM_CM3/portmacro.h **** #endif
 120:../freertos/portable/GCC/ARM_CM3/portmacro.h **** /*-----------------------------------------------------------*/
 121:../freertos/portable/GCC/ARM_CM3/portmacro.h **** 
 122:../freertos/portable/GCC/ARM_CM3/portmacro.h **** /* Architecture specific optimisations. */
 123:../freertos/portable/GCC/ARM_CM3/portmacro.h **** #ifndef configUSE_PORT_OPTIMISED_TASK_SELECTION
 124:../freertos/portable/GCC/ARM_CM3/portmacro.h **** 	#define configUSE_PORT_OPTIMISED_TASK_SELECTION 1
 125:../freertos/portable/GCC/ARM_CM3/portmacro.h **** #endif
 126:../freertos/portable/GCC/ARM_CM3/portmacro.h **** 
 127:../freertos/portable/GCC/ARM_CM3/portmacro.h **** #if configUSE_PORT_OPTIMISED_TASK_SELECTION == 1
 128:../freertos/portable/GCC/ARM_CM3/portmacro.h **** 
 129:../freertos/portable/GCC/ARM_CM3/portmacro.h **** 	/* Generic helper function. */
 130:../freertos/portable/GCC/ARM_CM3/portmacro.h **** 	__attribute__( ( always_inline ) ) static inline uint8_t ucPortCountLeadingZeros( uint32_t ulBitma
 131:../freertos/portable/GCC/ARM_CM3/portmacro.h **** 	{
 132:../freertos/portable/GCC/ARM_CM3/portmacro.h **** 	uint8_t ucReturn;
 133:../freertos/portable/GCC/ARM_CM3/portmacro.h **** 
 134:../freertos/portable/GCC/ARM_CM3/portmacro.h **** 		__asm volatile ( "clz %0, %1" : "=r" ( ucReturn ) : "r" ( ulBitmap ) : "memory" );
 135:../freertos/portable/GCC/ARM_CM3/portmacro.h **** 		return ucReturn;
 136:../freertos/portable/GCC/ARM_CM3/portmacro.h **** 	}
 137:../freertos/portable/GCC/ARM_CM3/portmacro.h **** 
 138:../freertos/portable/GCC/ARM_CM3/portmacro.h **** 	/* Check the configuration. */
 139:../freertos/portable/GCC/ARM_CM3/portmacro.h **** 	#if( configMAX_PRIORITIES > 32 )
 140:../freertos/portable/GCC/ARM_CM3/portmacro.h **** 		#error configUSE_PORT_OPTIMISED_TASK_SELECTION can only be set to 1 when configMAX_PRIORITIES is 
 141:../freertos/portable/GCC/ARM_CM3/portmacro.h **** 	#endif
 142:../freertos/portable/GCC/ARM_CM3/portmacro.h **** 
 143:../freertos/portable/GCC/ARM_CM3/portmacro.h **** 	/* Store/clear the ready priorities in a bit map. */
 144:../freertos/portable/GCC/ARM_CM3/portmacro.h **** 	#define portRECORD_READY_PRIORITY( uxPriority, uxReadyPriorities ) ( uxReadyPriorities ) |= ( 1UL 
 145:../freertos/portable/GCC/ARM_CM3/portmacro.h **** 	#define portRESET_READY_PRIORITY( uxPriority, uxReadyPriorities ) ( uxReadyPriorities ) &= ~( 1UL 
ARM GAS  /tmp/ccUMpXkT.s 			page 9


 146:../freertos/portable/GCC/ARM_CM3/portmacro.h **** 
 147:../freertos/portable/GCC/ARM_CM3/portmacro.h **** 	/*-----------------------------------------------------------*/
 148:../freertos/portable/GCC/ARM_CM3/portmacro.h **** 
 149:../freertos/portable/GCC/ARM_CM3/portmacro.h **** 	#define portGET_HIGHEST_PRIORITY( uxTopPriority, uxReadyPriorities ) uxTopPriority = ( 31UL - ( ui
 150:../freertos/portable/GCC/ARM_CM3/portmacro.h **** 
 151:../freertos/portable/GCC/ARM_CM3/portmacro.h **** #endif /* configUSE_PORT_OPTIMISED_TASK_SELECTION */
 152:../freertos/portable/GCC/ARM_CM3/portmacro.h **** 
 153:../freertos/portable/GCC/ARM_CM3/portmacro.h **** /*-----------------------------------------------------------*/
 154:../freertos/portable/GCC/ARM_CM3/portmacro.h **** 
 155:../freertos/portable/GCC/ARM_CM3/portmacro.h **** #ifdef configASSERT
 156:../freertos/portable/GCC/ARM_CM3/portmacro.h **** 	void vPortValidateInterruptPriority( void );
 157:../freertos/portable/GCC/ARM_CM3/portmacro.h **** 	#define portASSERT_IF_INTERRUPT_PRIORITY_INVALID() 	vPortValidateInterruptPriority()
 158:../freertos/portable/GCC/ARM_CM3/portmacro.h **** #endif
 159:../freertos/portable/GCC/ARM_CM3/portmacro.h **** 
 160:../freertos/portable/GCC/ARM_CM3/portmacro.h **** /* portNOP() is not required by this port. */
 161:../freertos/portable/GCC/ARM_CM3/portmacro.h **** #define portNOP()
 162:../freertos/portable/GCC/ARM_CM3/portmacro.h **** 
 163:../freertos/portable/GCC/ARM_CM3/portmacro.h **** #define portINLINE	__inline
 164:../freertos/portable/GCC/ARM_CM3/portmacro.h **** 
 165:../freertos/portable/GCC/ARM_CM3/portmacro.h **** #ifndef portFORCE_INLINE
 166:../freertos/portable/GCC/ARM_CM3/portmacro.h **** 	#define portFORCE_INLINE inline __attribute__(( always_inline))
 167:../freertos/portable/GCC/ARM_CM3/portmacro.h **** #endif
 168:../freertos/portable/GCC/ARM_CM3/portmacro.h **** 
 169:../freertos/portable/GCC/ARM_CM3/portmacro.h **** portFORCE_INLINE static BaseType_t xPortIsInsideInterrupt( void )
 170:../freertos/portable/GCC/ARM_CM3/portmacro.h **** {
 171:../freertos/portable/GCC/ARM_CM3/portmacro.h **** uint32_t ulCurrentInterrupt;
 172:../freertos/portable/GCC/ARM_CM3/portmacro.h **** BaseType_t xReturn;
 173:../freertos/portable/GCC/ARM_CM3/portmacro.h **** 
 174:../freertos/portable/GCC/ARM_CM3/portmacro.h **** 	/* Obtain the number of the currently executing interrupt. */
 175:../freertos/portable/GCC/ARM_CM3/portmacro.h **** 	__asm volatile( "mrs %0, ipsr" : "=r"( ulCurrentInterrupt ) :: "memory" );
 176:../freertos/portable/GCC/ARM_CM3/portmacro.h **** 
 177:../freertos/portable/GCC/ARM_CM3/portmacro.h **** 	if( ulCurrentInterrupt == 0 )
 178:../freertos/portable/GCC/ARM_CM3/portmacro.h **** 	{
 179:../freertos/portable/GCC/ARM_CM3/portmacro.h **** 		xReturn = pdFALSE;
 180:../freertos/portable/GCC/ARM_CM3/portmacro.h **** 	}
 181:../freertos/portable/GCC/ARM_CM3/portmacro.h **** 	else
 182:../freertos/portable/GCC/ARM_CM3/portmacro.h **** 	{
 183:../freertos/portable/GCC/ARM_CM3/portmacro.h **** 		xReturn = pdTRUE;
 184:../freertos/portable/GCC/ARM_CM3/portmacro.h **** 	}
 185:../freertos/portable/GCC/ARM_CM3/portmacro.h **** 
 186:../freertos/portable/GCC/ARM_CM3/portmacro.h **** 	return xReturn;
 187:../freertos/portable/GCC/ARM_CM3/portmacro.h **** }
 188:../freertos/portable/GCC/ARM_CM3/portmacro.h **** 
 189:../freertos/portable/GCC/ARM_CM3/portmacro.h **** /*-----------------------------------------------------------*/
 190:../freertos/portable/GCC/ARM_CM3/portmacro.h **** 
 191:../freertos/portable/GCC/ARM_CM3/portmacro.h **** portFORCE_INLINE static void vPortRaiseBASEPRI( void )
 108              		.loc 2 191 30 view .LVU7
 109              	.LBB13:
 192:../freertos/portable/GCC/ARM_CM3/portmacro.h **** {
 193:../freertos/portable/GCC/ARM_CM3/portmacro.h **** uint32_t ulNewBASEPRI;
 110              		.loc 2 193 1 view .LVU8
 194:../freertos/portable/GCC/ARM_CM3/portmacro.h **** 
 195:../freertos/portable/GCC/ARM_CM3/portmacro.h **** 	__asm volatile
 111              		.loc 2 195 2 view .LVU9
 112              		.syntax unified
 113              	@ 195 "../freertos/portable/GCC/ARM_CM3/portmacro.h" 1
 114 0006 4FF01003 			mov r3, #16													@ ulNewBASEPRI,
ARM GAS  /tmp/ccUMpXkT.s 			page 10


 115 000a 83F31188 		msr basepri, r3												@ ulNewBASEPRI
 116 000e BFF36F8F 		isb														
 117 0012 BFF34F8F 		dsb														
 118              	
 119              	@ 0 "" 2
 120              	.LVL0:
 121              		.thumb
 122              		.syntax unified
 123              	.L2:
 124              		.loc 2 195 2 is_stmt 0 view .LVU10
 125              	.LBE13:
 126              	.LBE12:
 204:../freertos/portable/GCC/ARM_CM3/port.c **** 	while( ulDummy == 0 )
 205:../freertos/portable/GCC/ARM_CM3/port.c **** 	{
 206:../freertos/portable/GCC/ARM_CM3/port.c **** 		/* This file calls prvTaskExitError() after the scheduler has been
 207:../freertos/portable/GCC/ARM_CM3/port.c **** 		started to remove a compiler warning about the function being defined
 208:../freertos/portable/GCC/ARM_CM3/port.c **** 		but never called.  ulDummy is used purely to quieten other warnings
 209:../freertos/portable/GCC/ARM_CM3/port.c **** 		about code appearing after this function is called - making ulDummy
 210:../freertos/portable/GCC/ARM_CM3/port.c **** 		volatile makes the compiler think the function could return and
 211:../freertos/portable/GCC/ARM_CM3/port.c **** 		therefore not output an 'unreachable code' warning for code that appears
 212:../freertos/portable/GCC/ARM_CM3/port.c **** 		after it. */
 213:../freertos/portable/GCC/ARM_CM3/port.c **** 	}
 127              		.loc 1 213 2 is_stmt 1 discriminator 1 view .LVU11
 204:../freertos/portable/GCC/ARM_CM3/port.c **** 	while( ulDummy == 0 )
 128              		.loc 1 204 7 discriminator 1 view .LVU12
 129              	@ ../freertos/portable/GCC/ARM_CM3/port.c:204: 	while( ulDummy == 0 )
 204:../freertos/portable/GCC/ARM_CM3/port.c **** 	while( ulDummy == 0 )
 130              		.loc 1 204 17 is_stmt 0 discriminator 1 view .LVU13
 131 0016 019B     		ldr	r3, [sp, #4]	@ ulDummy.3_1, ulDummy
 132              	@ ../freertos/portable/GCC/ARM_CM3/port.c:204: 	while( ulDummy == 0 )
 204:../freertos/portable/GCC/ARM_CM3/port.c **** 	while( ulDummy == 0 )
 133              		.loc 1 204 7 discriminator 1 view .LVU14
 134 0018 002B     		cmp	r3, #0	@ ulDummy.3_1
 135 001a FCD0     		beq	.L2	@
 136              	@ ../freertos/portable/GCC/ARM_CM3/port.c:214: }
 214:../freertos/portable/GCC/ARM_CM3/port.c **** }
 137              		.loc 1 214 1 view .LVU15
 138 001c 02B0     		add	sp, sp, #8	@,,
 139              	.LCFI1:
 140              		.cfi_def_cfa_offset 0
 141              		@ sp needed	@
 142 001e 7047     		bx	lr	@
 143              		.cfi_endproc
 144              	.LFE6:
 145              		.size	prvTaskExitError, .-prvTaskExitError
 146              		.align	1
 147              		.syntax unified
 148              		.thumb
 149              		.thumb_func
 150              		.type	prvPortStartFirstTask, %function
 151              	prvPortStartFirstTask:
 152              	.LFB8:
 215:../freertos/portable/GCC/ARM_CM3/port.c **** /*-----------------------------------------------------------*/
 216:../freertos/portable/GCC/ARM_CM3/port.c **** 
 217:../freertos/portable/GCC/ARM_CM3/port.c **** void vPortSVCHandler( void )
 218:../freertos/portable/GCC/ARM_CM3/port.c **** {
 219:../freertos/portable/GCC/ARM_CM3/port.c **** 	__asm volatile (
ARM GAS  /tmp/ccUMpXkT.s 			page 11


 220:../freertos/portable/GCC/ARM_CM3/port.c **** 					"	ldr	r3, pxCurrentTCBConst2		\n" /* Restore the context. */
 221:../freertos/portable/GCC/ARM_CM3/port.c **** 					"	ldr r1, [r3]					\n" /* Use pxCurrentTCBConst to get the pxCurrentTCB address. */
 222:../freertos/portable/GCC/ARM_CM3/port.c **** 					"	ldr r0, [r1]					\n" /* The first item in pxCurrentTCB is the task top of stack. */
 223:../freertos/portable/GCC/ARM_CM3/port.c **** 					"	ldmia r0!, {r4-r11}				\n" /* Pop the registers that are not automatically saved on exceptio
 224:../freertos/portable/GCC/ARM_CM3/port.c **** 					"	msr psp, r0						\n" /* Restore the task stack pointer. */
 225:../freertos/portable/GCC/ARM_CM3/port.c **** 					"	isb								\n"
 226:../freertos/portable/GCC/ARM_CM3/port.c **** 					"	mov r0, #0 						\n"
 227:../freertos/portable/GCC/ARM_CM3/port.c **** 					"	msr	basepri, r0					\n"
 228:../freertos/portable/GCC/ARM_CM3/port.c **** 					"	orr r14, #0xd					\n"
 229:../freertos/portable/GCC/ARM_CM3/port.c **** 					"	bx r14							\n"
 230:../freertos/portable/GCC/ARM_CM3/port.c **** 					"									\n"
 231:../freertos/portable/GCC/ARM_CM3/port.c **** 					"	.align 4						\n"
 232:../freertos/portable/GCC/ARM_CM3/port.c **** 					"pxCurrentTCBConst2: .word pxCurrentTCB				\n"
 233:../freertos/portable/GCC/ARM_CM3/port.c **** 				);
 234:../freertos/portable/GCC/ARM_CM3/port.c **** }
 235:../freertos/portable/GCC/ARM_CM3/port.c **** /*-----------------------------------------------------------*/
 236:../freertos/portable/GCC/ARM_CM3/port.c **** 
 237:../freertos/portable/GCC/ARM_CM3/port.c **** static void prvPortStartFirstTask( void )
 238:../freertos/portable/GCC/ARM_CM3/port.c **** {
 153              		.loc 1 238 1 is_stmt 1 view -0
 154              		.cfi_startproc
 155              		@ Naked Function: prologue and epilogue provided by programmer.
 156              		@ args = 0, pretend = 0, frame = 0
 157              		@ frame_needed = 0, uses_anonymous_args = 0
 239:../freertos/portable/GCC/ARM_CM3/port.c **** 	__asm volatile(
 158              		.loc 1 239 2 view .LVU17
 159              		.syntax unified
 160              	@ 239 "../freertos/portable/GCC/ARM_CM3/port.c" 1
 161 0020 5848     		 ldr r0, =0xE000ED08 	
 162 0022 0068     	 ldr r0, [r0] 			
 163 0024 0068     	 ldr r0, [r0] 			
 164 0026 80F30888 	 msr msp, r0			
 165 002a 62B6     	 cpsie i				
 166 002c 61B6     	 cpsie f				
 167 002e BFF34F8F 	 dsb					
 168 0032 BFF36F8F 	 isb					
 169 0036 00DF     	 svc 0					
 170 0038 00BF     	 nop					
 171              	
 172              	@ 0 "" 2
 173              	@ ../freertos/portable/GCC/ARM_CM3/port.c:251: }
 240:../freertos/portable/GCC/ARM_CM3/port.c **** 					" ldr r0, =0xE000ED08 	\n" /* Use the NVIC offset register to locate the stack. */
 241:../freertos/portable/GCC/ARM_CM3/port.c **** 					" ldr r0, [r0] 			\n"
 242:../freertos/portable/GCC/ARM_CM3/port.c **** 					" ldr r0, [r0] 			\n"
 243:../freertos/portable/GCC/ARM_CM3/port.c **** 					" msr msp, r0			\n" /* Set the msp back to the start of the stack. */
 244:../freertos/portable/GCC/ARM_CM3/port.c **** 					" cpsie i				\n" /* Globally enable interrupts. */
 245:../freertos/portable/GCC/ARM_CM3/port.c **** 					" cpsie f				\n"
 246:../freertos/portable/GCC/ARM_CM3/port.c **** 					" dsb					\n"
 247:../freertos/portable/GCC/ARM_CM3/port.c **** 					" isb					\n"
 248:../freertos/portable/GCC/ARM_CM3/port.c **** 					" svc 0					\n" /* System call to start first task. */
 249:../freertos/portable/GCC/ARM_CM3/port.c **** 					" nop					\n"
 250:../freertos/portable/GCC/ARM_CM3/port.c **** 				);
 251:../freertos/portable/GCC/ARM_CM3/port.c **** }
 174              		.loc 1 251 1 is_stmt 0 view .LVU18
 175              		.thumb
 176              		.syntax unified
 177              		.cfi_endproc
ARM GAS  /tmp/ccUMpXkT.s 			page 12


 178              	.LFE8:
 179              		.size	prvPortStartFirstTask, .-prvPortStartFirstTask
 180              		.align	1
 181              		.global	pxPortInitialiseStack
 182              		.syntax unified
 183              		.thumb
 184              		.thumb_func
 185              		.type	pxPortInitialiseStack, %function
 186              	pxPortInitialiseStack:
 187              	.LVL1:
 188              	.LFB5:
 175:../freertos/portable/GCC/ARM_CM3/port.c **** 	/* Simulate the stack frame as it would be created by a context switch
 189              		.loc 1 175 1 is_stmt 1 view -0
 190              		.cfi_startproc
 191              		@ args = 0, pretend = 0, frame = 0
 192              		@ frame_needed = 0, uses_anonymous_args = 0
 193              		@ link register save eliminated.
 178:../freertos/portable/GCC/ARM_CM3/port.c **** 	*pxTopOfStack = portINITIAL_XPSR;	/* xPSR */
 194              		.loc 1 178 2 view .LVU20
 179:../freertos/portable/GCC/ARM_CM3/port.c **** 	pxTopOfStack--;
 195              		.loc 1 179 2 view .LVU21
 196              	@ ../freertos/portable/GCC/ARM_CM3/port.c:179: 	*pxTopOfStack = portINITIAL_XPSR;	/* xPSR */
 179:../freertos/portable/GCC/ARM_CM3/port.c **** 	pxTopOfStack--;
 197              		.loc 1 179 16 is_stmt 0 view .LVU22
 198 003a 4FF08073 		mov	r3, #16777216	@ tmp121,
 199 003e 40F8043C 		str	r3, [r0, #-4]	@ tmp121, MEM[(StackType_t *)pxTopOfStack_5(D) + 4294967292B]
 180:../freertos/portable/GCC/ARM_CM3/port.c **** 	*pxTopOfStack = ( ( StackType_t ) pxCode ) & portSTART_ADDRESS_MASK;	/* PC */
 200              		.loc 1 180 2 is_stmt 1 view .LVU23
 201              	.LVL2:
 181:../freertos/portable/GCC/ARM_CM3/port.c **** 	pxTopOfStack--;
 202              		.loc 1 181 2 view .LVU24
 203              	@ ../freertos/portable/GCC/ARM_CM3/port.c:183: 	*pxTopOfStack = ( StackType_t ) portTASK_RETURN_ADD
 183:../freertos/portable/GCC/ARM_CM3/port.c **** 	pxTopOfStack -= 5;	/* R12, R3, R2 and R1. */
 204              		.loc 1 183 16 is_stmt 0 view .LVU25
 205 0042 054B     		ldr	r3, .L7	@ tmp123,
 206              	@ ../freertos/portable/GCC/ARM_CM3/port.c:181: 	*pxTopOfStack = ( ( StackType_t ) pxCode ) & portST
 181:../freertos/portable/GCC/ARM_CM3/port.c **** 	pxTopOfStack--;
 207              		.loc 1 181 45 view .LVU26
 208 0044 21F00101 		bic	r1, r1, #1	@ tmp122, tmp126,
 209              	.LVL3:
 210              	@ ../freertos/portable/GCC/ARM_CM3/port.c:181: 	*pxTopOfStack = ( ( StackType_t ) pxCode ) & portST
 181:../freertos/portable/GCC/ARM_CM3/port.c **** 	pxTopOfStack--;
 211              		.loc 1 181 16 view .LVU27
 212 0048 40F8081C 		str	r1, [r0, #-8]	@ tmp122, MEM[(StackType_t *)pxTopOfStack_5(D) + 4294967288B]
 182:../freertos/portable/GCC/ARM_CM3/port.c **** 	*pxTopOfStack = ( StackType_t ) portTASK_RETURN_ADDRESS;	/* LR */
 213              		.loc 1 182 2 is_stmt 1 view .LVU28
 214              	.LVL4:
 183:../freertos/portable/GCC/ARM_CM3/port.c **** 	pxTopOfStack -= 5;	/* R12, R3, R2 and R1. */
 215              		.loc 1 183 2 view .LVU29
 216              	@ ../freertos/portable/GCC/ARM_CM3/port.c:183: 	*pxTopOfStack = ( StackType_t ) portTASK_RETURN_ADD
 183:../freertos/portable/GCC/ARM_CM3/port.c **** 	pxTopOfStack -= 5;	/* R12, R3, R2 and R1. */
 217              		.loc 1 183 16 is_stmt 0 view .LVU30
 218 004c 40F80C3C 		str	r3, [r0, #-12]	@ tmp123, MEM[(StackType_t *)pxTopOfStack_5(D) + 4294967284B]
 184:../freertos/portable/GCC/ARM_CM3/port.c **** 	*pxTopOfStack = ( StackType_t ) pvParameters;	/* R0 */
 219              		.loc 1 184 2 is_stmt 1 view .LVU31
 220              	.LVL5:
 185:../freertos/portable/GCC/ARM_CM3/port.c **** 	pxTopOfStack -= 8;	/* R11, R10, R9, R8, R7, R6, R5 and R4. */
ARM GAS  /tmp/ccUMpXkT.s 			page 13


 221              		.loc 1 185 2 view .LVU32
 222              	@ ../freertos/portable/GCC/ARM_CM3/port.c:185: 	*pxTopOfStack = ( StackType_t ) pvParameters;	/* R0
 185:../freertos/portable/GCC/ARM_CM3/port.c **** 	pxTopOfStack -= 8;	/* R11, R10, R9, R8, R7, R6, R5 and R4. */
 223              		.loc 1 185 16 is_stmt 0 view .LVU33
 224 0050 40F8202C 		str	r2, [r0, #-32]	@ tmp127, MEM[(StackType_t *)pxTopOfStack_5(D) + 4294967264B]
 186:../freertos/portable/GCC/ARM_CM3/port.c **** 
 225              		.loc 1 186 2 is_stmt 1 view .LVU34
 226              	.LVL6:
 188:../freertos/portable/GCC/ARM_CM3/port.c **** }
 227              		.loc 1 188 2 view .LVU35
 228              	@ ../freertos/portable/GCC/ARM_CM3/port.c:189: }
 189:../freertos/portable/GCC/ARM_CM3/port.c **** /*-----------------------------------------------------------*/
 229              		.loc 1 189 1 is_stmt 0 view .LVU36
 230 0054 4038     		subs	r0, r0, #64	@, pxTopOfStack,
 231              	.LVL7:
 189:../freertos/portable/GCC/ARM_CM3/port.c **** /*-----------------------------------------------------------*/
 232              		.loc 1 189 1 view .LVU37
 233 0056 7047     		bx	lr	@
 234              	.L8:
 235              		.align	2
 236              	.L7:
 237 0058 00000000 		.word	prvTaskExitError
 238              		.cfi_endproc
 239              	.LFE5:
 240              		.size	pxPortInitialiseStack, .-pxPortInitialiseStack
 241              		.align	1
 242              		.global	SVC_Handler
 243              		.syntax unified
 244              		.thumb
 245              		.thumb_func
 246              		.type	SVC_Handler, %function
 247              	SVC_Handler:
 248              	.LFB7:
 218:../freertos/portable/GCC/ARM_CM3/port.c **** 	__asm volatile (
 249              		.loc 1 218 1 is_stmt 1 view -0
 250              		.cfi_startproc
 251              		@ Naked Function: prologue and epilogue provided by programmer.
 252              		@ args = 0, pretend = 0, frame = 0
 253              		@ frame_needed = 0, uses_anonymous_args = 0
 219:../freertos/portable/GCC/ARM_CM3/port.c **** 					"	ldr	r3, pxCurrentTCBConst2		\n" /* Restore the context. */
 254              		.loc 1 219 2 view .LVU39
 255              		.syntax unified
 256              	@ 219 "../freertos/portable/GCC/ARM_CM3/port.c" 1
 257 005c 084B     			ldr	r3, pxCurrentTCBConst2		
 258 005e 1968     		ldr r1, [r3]					
 259 0060 0868     		ldr r0, [r1]					
 260 0062 B0E8F00F 		ldmia r0!, {r4-r11}				
 261 0066 80F30988 		msr psp, r0						
 262 006a BFF36F8F 		isb								
 263 006e 4FF00000 		mov r0, #0 						
 264 0072 80F31188 		msr	basepri, r0					
 265 0076 4EF00D0E 		orr r14, #0xd					
 266 007a 7047     		bx r14							
 267              										
 268 007c AFF30080 		.align 4						
 269 0080 00000000 	pxCurrentTCBConst2: .word pxCurrentTCB				
 270              	
ARM GAS  /tmp/ccUMpXkT.s 			page 14


 271              	@ 0 "" 2
 272              	@ ../freertos/portable/GCC/ARM_CM3/port.c:234: }
 234:../freertos/portable/GCC/ARM_CM3/port.c **** /*-----------------------------------------------------------*/
 273              		.loc 1 234 1 is_stmt 0 view .LVU40
 274              		.thumb
 275              		.syntax unified
 276              		.cfi_endproc
 277              	.LFE7:
 278              		.size	SVC_Handler, .-SVC_Handler
 279              		.align	1
 280              		.global	vPortEndScheduler
 281              		.syntax unified
 282              		.thumb
 283              		.thumb_func
 284              		.type	vPortEndScheduler, %function
 285              	vPortEndScheduler:
 286              	.LFB10:
 252:../freertos/portable/GCC/ARM_CM3/port.c **** /*-----------------------------------------------------------*/
 253:../freertos/portable/GCC/ARM_CM3/port.c **** 
 254:../freertos/portable/GCC/ARM_CM3/port.c **** /*
 255:../freertos/portable/GCC/ARM_CM3/port.c ****  * See header file for description.
 256:../freertos/portable/GCC/ARM_CM3/port.c ****  */
 257:../freertos/portable/GCC/ARM_CM3/port.c **** BaseType_t xPortStartScheduler( void )
 258:../freertos/portable/GCC/ARM_CM3/port.c **** {
 259:../freertos/portable/GCC/ARM_CM3/port.c **** 	/* configMAX_SYSCALL_INTERRUPT_PRIORITY must not be set to 0.
 260:../freertos/portable/GCC/ARM_CM3/port.c **** 	See http://www.FreeRTOS.org/RTOS-Cortex-M3-M4.html */
 261:../freertos/portable/GCC/ARM_CM3/port.c **** 	configASSERT( configMAX_SYSCALL_INTERRUPT_PRIORITY );
 262:../freertos/portable/GCC/ARM_CM3/port.c **** 
 263:../freertos/portable/GCC/ARM_CM3/port.c **** 	#if( configASSERT_DEFINED == 1 )
 264:../freertos/portable/GCC/ARM_CM3/port.c **** 	{
 265:../freertos/portable/GCC/ARM_CM3/port.c **** 		volatile uint32_t ulOriginalPriority;
 266:../freertos/portable/GCC/ARM_CM3/port.c **** 		volatile uint8_t * const pucFirstUserPriorityRegister = ( volatile uint8_t * const ) ( portNVIC_I
 267:../freertos/portable/GCC/ARM_CM3/port.c **** 		volatile uint8_t ucMaxPriorityValue;
 268:../freertos/portable/GCC/ARM_CM3/port.c **** 
 269:../freertos/portable/GCC/ARM_CM3/port.c **** 		/* Determine the maximum priority from which ISR safe FreeRTOS API
 270:../freertos/portable/GCC/ARM_CM3/port.c **** 		functions can be called.  ISR safe functions are those that end in
 271:../freertos/portable/GCC/ARM_CM3/port.c **** 		"FromISR".  FreeRTOS maintains separate thread and ISR API functions to
 272:../freertos/portable/GCC/ARM_CM3/port.c **** 		ensure interrupt entry is as fast and simple as possible.
 273:../freertos/portable/GCC/ARM_CM3/port.c **** 
 274:../freertos/portable/GCC/ARM_CM3/port.c **** 		Save the interrupt priority value that is about to be clobbered. */
 275:../freertos/portable/GCC/ARM_CM3/port.c **** 		ulOriginalPriority = *pucFirstUserPriorityRegister;
 276:../freertos/portable/GCC/ARM_CM3/port.c **** 
 277:../freertos/portable/GCC/ARM_CM3/port.c **** 		/* Determine the number of priority bits available.  First write to all
 278:../freertos/portable/GCC/ARM_CM3/port.c **** 		possible bits. */
 279:../freertos/portable/GCC/ARM_CM3/port.c **** 		*pucFirstUserPriorityRegister = portMAX_8_BIT_VALUE;
 280:../freertos/portable/GCC/ARM_CM3/port.c **** 
 281:../freertos/portable/GCC/ARM_CM3/port.c **** 		/* Read the value back to see how many bits stuck. */
 282:../freertos/portable/GCC/ARM_CM3/port.c **** 		ucMaxPriorityValue = *pucFirstUserPriorityRegister;
 283:../freertos/portable/GCC/ARM_CM3/port.c **** 
 284:../freertos/portable/GCC/ARM_CM3/port.c **** 		/* Use the same mask on the maximum system call priority. */
 285:../freertos/portable/GCC/ARM_CM3/port.c **** 		ucMaxSysCallPriority = configMAX_SYSCALL_INTERRUPT_PRIORITY & ucMaxPriorityValue;
 286:../freertos/portable/GCC/ARM_CM3/port.c **** 
 287:../freertos/portable/GCC/ARM_CM3/port.c **** 		/* Calculate the maximum acceptable priority group value for the number
 288:../freertos/portable/GCC/ARM_CM3/port.c **** 		of bits read back. */
 289:../freertos/portable/GCC/ARM_CM3/port.c **** 		ulMaxPRIGROUPValue = portMAX_PRIGROUP_BITS;
 290:../freertos/portable/GCC/ARM_CM3/port.c **** 		while( ( ucMaxPriorityValue & portTOP_BIT_OF_BYTE ) == portTOP_BIT_OF_BYTE )
 291:../freertos/portable/GCC/ARM_CM3/port.c **** 		{
ARM GAS  /tmp/ccUMpXkT.s 			page 15


 292:../freertos/portable/GCC/ARM_CM3/port.c **** 			ulMaxPRIGROUPValue--;
 293:../freertos/portable/GCC/ARM_CM3/port.c **** 			ucMaxPriorityValue <<= ( uint8_t ) 0x01;
 294:../freertos/portable/GCC/ARM_CM3/port.c **** 		}
 295:../freertos/portable/GCC/ARM_CM3/port.c **** 
 296:../freertos/portable/GCC/ARM_CM3/port.c **** 		#ifdef __NVIC_PRIO_BITS
 297:../freertos/portable/GCC/ARM_CM3/port.c **** 		{
 298:../freertos/portable/GCC/ARM_CM3/port.c **** 			/* Check the CMSIS configuration that defines the number of
 299:../freertos/portable/GCC/ARM_CM3/port.c **** 			priority bits matches the number of priority bits actually queried
 300:../freertos/portable/GCC/ARM_CM3/port.c **** 			from the hardware. */
 301:../freertos/portable/GCC/ARM_CM3/port.c **** 			configASSERT( ( portMAX_PRIGROUP_BITS - ulMaxPRIGROUPValue ) == __NVIC_PRIO_BITS );
 302:../freertos/portable/GCC/ARM_CM3/port.c **** 		}
 303:../freertos/portable/GCC/ARM_CM3/port.c **** 		#endif
 304:../freertos/portable/GCC/ARM_CM3/port.c **** 
 305:../freertos/portable/GCC/ARM_CM3/port.c **** 		#ifdef configPRIO_BITS
 306:../freertos/portable/GCC/ARM_CM3/port.c **** 		{
 307:../freertos/portable/GCC/ARM_CM3/port.c **** 			/* Check the FreeRTOS configuration that defines the number of
 308:../freertos/portable/GCC/ARM_CM3/port.c **** 			priority bits matches the number of priority bits actually queried
 309:../freertos/portable/GCC/ARM_CM3/port.c **** 			from the hardware. */
 310:../freertos/portable/GCC/ARM_CM3/port.c **** 			configASSERT( ( portMAX_PRIGROUP_BITS - ulMaxPRIGROUPValue ) == configPRIO_BITS );
 311:../freertos/portable/GCC/ARM_CM3/port.c **** 		}
 312:../freertos/portable/GCC/ARM_CM3/port.c **** 		#endif
 313:../freertos/portable/GCC/ARM_CM3/port.c **** 
 314:../freertos/portable/GCC/ARM_CM3/port.c **** 		/* Shift the priority group value back to its position within the AIRCR
 315:../freertos/portable/GCC/ARM_CM3/port.c **** 		register. */
 316:../freertos/portable/GCC/ARM_CM3/port.c **** 		ulMaxPRIGROUPValue <<= portPRIGROUP_SHIFT;
 317:../freertos/portable/GCC/ARM_CM3/port.c **** 		ulMaxPRIGROUPValue &= portPRIORITY_GROUP_MASK;
 318:../freertos/portable/GCC/ARM_CM3/port.c **** 
 319:../freertos/portable/GCC/ARM_CM3/port.c **** 		/* Restore the clobbered interrupt priority register to its original
 320:../freertos/portable/GCC/ARM_CM3/port.c **** 		value. */
 321:../freertos/portable/GCC/ARM_CM3/port.c **** 		*pucFirstUserPriorityRegister = ulOriginalPriority;
 322:../freertos/portable/GCC/ARM_CM3/port.c **** 	}
 323:../freertos/portable/GCC/ARM_CM3/port.c **** 	#endif /* conifgASSERT_DEFINED */
 324:../freertos/portable/GCC/ARM_CM3/port.c **** 
 325:../freertos/portable/GCC/ARM_CM3/port.c **** 	/* Make PendSV and SysTick the lowest priority interrupts. */
 326:../freertos/portable/GCC/ARM_CM3/port.c **** 	portNVIC_SYSPRI2_REG |= portNVIC_PENDSV_PRI;
 327:../freertos/portable/GCC/ARM_CM3/port.c **** 	portNVIC_SYSPRI2_REG |= portNVIC_SYSTICK_PRI;
 328:../freertos/portable/GCC/ARM_CM3/port.c **** 
 329:../freertos/portable/GCC/ARM_CM3/port.c **** 	/* Start the timer that generates the tick ISR.  Interrupts are disabled
 330:../freertos/portable/GCC/ARM_CM3/port.c **** 	here already. */
 331:../freertos/portable/GCC/ARM_CM3/port.c **** 	vPortSetupTimerInterrupt();
 332:../freertos/portable/GCC/ARM_CM3/port.c **** 
 333:../freertos/portable/GCC/ARM_CM3/port.c **** 	/* Initialise the critical nesting count ready for the first task. */
 334:../freertos/portable/GCC/ARM_CM3/port.c **** 	uxCriticalNesting = 0;
 335:../freertos/portable/GCC/ARM_CM3/port.c **** 
 336:../freertos/portable/GCC/ARM_CM3/port.c **** 	/* Start the first task. */
 337:../freertos/portable/GCC/ARM_CM3/port.c **** 	prvPortStartFirstTask();
 338:../freertos/portable/GCC/ARM_CM3/port.c **** 
 339:../freertos/portable/GCC/ARM_CM3/port.c **** 	/* Should never get here as the tasks will now be executing!  Call the task
 340:../freertos/portable/GCC/ARM_CM3/port.c **** 	exit error function to prevent compiler warnings about a static function
 341:../freertos/portable/GCC/ARM_CM3/port.c **** 	not being called in the case that the application writer overrides this
 342:../freertos/portable/GCC/ARM_CM3/port.c **** 	functionality by defining configTASK_RETURN_ADDRESS.  Call
 343:../freertos/portable/GCC/ARM_CM3/port.c **** 	vTaskSwitchContext() so link time optimisation does not remove the
 344:../freertos/portable/GCC/ARM_CM3/port.c **** 	symbol. */
 345:../freertos/portable/GCC/ARM_CM3/port.c **** 	vTaskSwitchContext();
 346:../freertos/portable/GCC/ARM_CM3/port.c **** 	prvTaskExitError();
 347:../freertos/portable/GCC/ARM_CM3/port.c **** 
 348:../freertos/portable/GCC/ARM_CM3/port.c **** 	/* Should not get here! */
ARM GAS  /tmp/ccUMpXkT.s 			page 16


 349:../freertos/portable/GCC/ARM_CM3/port.c **** 	return 0;
 350:../freertos/portable/GCC/ARM_CM3/port.c **** }
 351:../freertos/portable/GCC/ARM_CM3/port.c **** /*-----------------------------------------------------------*/
 352:../freertos/portable/GCC/ARM_CM3/port.c **** 
 353:../freertos/portable/GCC/ARM_CM3/port.c **** void vPortEndScheduler( void )
 354:../freertos/portable/GCC/ARM_CM3/port.c **** {
 287              		.loc 1 354 1 is_stmt 1 view -0
 288              		.cfi_startproc
 289              		@ args = 0, pretend = 0, frame = 0
 290              		@ frame_needed = 0, uses_anonymous_args = 0
 291              		@ link register save eliminated.
 355:../freertos/portable/GCC/ARM_CM3/port.c **** 	/* Not implemented in ports where there is nothing to return to.
 356:../freertos/portable/GCC/ARM_CM3/port.c **** 	Artificially force an assert. */
 357:../freertos/portable/GCC/ARM_CM3/port.c **** 	configASSERT( uxCriticalNesting == 1000UL );
 292              		.loc 1 357 45 view .LVU42
 293              	@ ../freertos/portable/GCC/ARM_CM3/port.c:358: }
 358:../freertos/portable/GCC/ARM_CM3/port.c **** }
 294              		.loc 1 358 1 is_stmt 0 view .LVU43
 295 0084 7047     		bx	lr	@
 296              		.cfi_endproc
 297              	.LFE10:
 298              		.size	vPortEndScheduler, .-vPortEndScheduler
 299              		.align	1
 300              		.global	vPortEnterCritical
 301              		.syntax unified
 302              		.thumb
 303              		.thumb_func
 304              		.type	vPortEnterCritical, %function
 305              	vPortEnterCritical:
 306              	.LFB11:
 359:../freertos/portable/GCC/ARM_CM3/port.c **** /*-----------------------------------------------------------*/
 360:../freertos/portable/GCC/ARM_CM3/port.c **** 
 361:../freertos/portable/GCC/ARM_CM3/port.c **** void vPortEnterCritical( void )
 362:../freertos/portable/GCC/ARM_CM3/port.c **** {
 307              		.loc 1 362 1 is_stmt 1 view -0
 308              		.cfi_startproc
 309              		@ args = 0, pretend = 0, frame = 0
 310              		@ frame_needed = 0, uses_anonymous_args = 0
 311              		@ link register save eliminated.
 363:../freertos/portable/GCC/ARM_CM3/port.c **** 	portDISABLE_INTERRUPTS();
 312              		.loc 1 363 2 view .LVU45
 313              	.LBB14:
 314              	.LBI14:
 191:../freertos/portable/GCC/ARM_CM3/portmacro.h **** {
 315              		.loc 2 191 30 view .LVU46
 316              	.LBB15:
 193:../freertos/portable/GCC/ARM_CM3/portmacro.h **** 
 317              		.loc 2 193 1 view .LVU47
 318              		.loc 2 195 2 view .LVU48
 319              		.syntax unified
 320              	@ 195 "../freertos/portable/GCC/ARM_CM3/portmacro.h" 1
 321 0086 4FF01003 			mov r3, #16													@ ulNewBASEPRI,
 322 008a 83F31188 		msr basepri, r3												@ ulNewBASEPRI
 323 008e BFF36F8F 		isb														
 324 0092 BFF34F8F 		dsb														
 325              	
 326              	@ 0 "" 2
ARM GAS  /tmp/ccUMpXkT.s 			page 17


 327              		.thumb
 328              		.syntax unified
 329              	.LBE15:
 330              	.LBE14:
 364:../freertos/portable/GCC/ARM_CM3/port.c **** 	uxCriticalNesting++;
 331              		.loc 1 364 2 view .LVU49
 332              	@ ../freertos/portable/GCC/ARM_CM3/port.c:364: 	uxCriticalNesting++;
 333              		.loc 1 364 19 is_stmt 0 view .LVU50
 334 0096 024A     		ldr	r2, .L12	@ tmp117,
 335 0098 1368     		ldr	r3, [r2]	@ uxCriticalNesting, uxCriticalNesting
 336 009a 0133     		adds	r3, r3, #1	@ tmp119, uxCriticalNesting,
 337 009c 1360     		str	r3, [r2]	@ tmp119, uxCriticalNesting
 365:../freertos/portable/GCC/ARM_CM3/port.c **** 
 366:../freertos/portable/GCC/ARM_CM3/port.c **** 	/* This is not the interrupt safe version of the enter critical function so
 367:../freertos/portable/GCC/ARM_CM3/port.c **** 	assert() if it is being called from an interrupt context.  Only API
 368:../freertos/portable/GCC/ARM_CM3/port.c **** 	functions that end in "FromISR" can be used in an interrupt.  Only assert if
 369:../freertos/portable/GCC/ARM_CM3/port.c **** 	the critical nesting count is 1 to protect against recursive calls if the
 370:../freertos/portable/GCC/ARM_CM3/port.c **** 	assert function also uses a critical section. */
 371:../freertos/portable/GCC/ARM_CM3/port.c **** 	if( uxCriticalNesting == 1 )
 338              		.loc 1 371 2 is_stmt 1 view .LVU51
 372:../freertos/portable/GCC/ARM_CM3/port.c **** 	{
 373:../freertos/portable/GCC/ARM_CM3/port.c **** 		configASSERT( ( portNVIC_INT_CTRL_REG & portVECTACTIVE_MASK ) == 0 );
 339              		.loc 1 373 71 view .LVU52
 340              	@ ../freertos/portable/GCC/ARM_CM3/port.c:375: }
 374:../freertos/portable/GCC/ARM_CM3/port.c **** 	}
 375:../freertos/portable/GCC/ARM_CM3/port.c **** }
 341              		.loc 1 375 1 is_stmt 0 view .LVU53
 342 009e 7047     		bx	lr	@
 343              	.L13:
 344              		.align	2
 345              	.L12:
 346 00a0 00000000 		.word	.LANCHOR0
 347              		.cfi_endproc
 348              	.LFE11:
 349              		.size	vPortEnterCritical, .-vPortEnterCritical
 350              		.align	1
 351              		.global	vPortExitCritical
 352              		.syntax unified
 353              		.thumb
 354              		.thumb_func
 355              		.type	vPortExitCritical, %function
 356              	vPortExitCritical:
 357              	.LFB12:
 376:../freertos/portable/GCC/ARM_CM3/port.c **** /*-----------------------------------------------------------*/
 377:../freertos/portable/GCC/ARM_CM3/port.c **** 
 378:../freertos/portable/GCC/ARM_CM3/port.c **** void vPortExitCritical( void )
 379:../freertos/portable/GCC/ARM_CM3/port.c **** {
 358              		.loc 1 379 1 is_stmt 1 view -0
 359              		.cfi_startproc
 360              		@ args = 0, pretend = 0, frame = 0
 361              		@ frame_needed = 0, uses_anonymous_args = 0
 362              		@ link register save eliminated.
 380:../freertos/portable/GCC/ARM_CM3/port.c **** 	configASSERT( uxCriticalNesting );
 363              		.loc 1 380 35 view .LVU55
 381:../freertos/portable/GCC/ARM_CM3/port.c **** 	uxCriticalNesting--;
 364              		.loc 1 381 2 view .LVU56
 365              	@ ../freertos/portable/GCC/ARM_CM3/port.c:381: 	uxCriticalNesting--;
ARM GAS  /tmp/ccUMpXkT.s 			page 18


 366              		.loc 1 381 19 is_stmt 0 view .LVU57
 367 00a4 034A     		ldr	r2, .L16	@ tmp115,
 368 00a6 1368     		ldr	r3, [r2]	@ uxCriticalNesting, uxCriticalNesting
 369 00a8 013B     		subs	r3, r3, #1	@ _2, uxCriticalNesting,
 370 00aa 1360     		str	r3, [r2]	@ _2, uxCriticalNesting
 382:../freertos/portable/GCC/ARM_CM3/port.c **** 	if( uxCriticalNesting == 0 )
 371              		.loc 1 382 2 is_stmt 1 view .LVU58
 372              	@ ../freertos/portable/GCC/ARM_CM3/port.c:382: 	if( uxCriticalNesting == 0 )
 373              		.loc 1 382 4 is_stmt 0 view .LVU59
 374 00ac 0BB9     		cbnz	r3, .L14	@ _2,
 383:../freertos/portable/GCC/ARM_CM3/port.c **** 	{
 384:../freertos/portable/GCC/ARM_CM3/port.c **** 		portENABLE_INTERRUPTS();
 375              		.loc 1 384 3 is_stmt 1 view .LVU60
 376              	.LVL8:
 377              	.LBB16:
 378              	.LBI16:
 196:../freertos/portable/GCC/ARM_CM3/portmacro.h **** 	(
 197:../freertos/portable/GCC/ARM_CM3/portmacro.h **** 		"	mov %0, %1												\n" \
 198:../freertos/portable/GCC/ARM_CM3/portmacro.h **** 		"	msr basepri, %0											\n" \
 199:../freertos/portable/GCC/ARM_CM3/portmacro.h **** 		"	isb														\n" \
 200:../freertos/portable/GCC/ARM_CM3/portmacro.h **** 		"	dsb														\n" \
 201:../freertos/portable/GCC/ARM_CM3/portmacro.h **** 		:"=r" (ulNewBASEPRI) : "i" ( configMAX_SYSCALL_INTERRUPT_PRIORITY ) : "memory"
 202:../freertos/portable/GCC/ARM_CM3/portmacro.h **** 	);
 203:../freertos/portable/GCC/ARM_CM3/portmacro.h **** }
 204:../freertos/portable/GCC/ARM_CM3/portmacro.h **** 
 205:../freertos/portable/GCC/ARM_CM3/portmacro.h **** /*-----------------------------------------------------------*/
 206:../freertos/portable/GCC/ARM_CM3/portmacro.h **** 
 207:../freertos/portable/GCC/ARM_CM3/portmacro.h **** portFORCE_INLINE static uint32_t ulPortRaiseBASEPRI( void )
 208:../freertos/portable/GCC/ARM_CM3/portmacro.h **** {
 209:../freertos/portable/GCC/ARM_CM3/portmacro.h **** uint32_t ulOriginalBASEPRI, ulNewBASEPRI;
 210:../freertos/portable/GCC/ARM_CM3/portmacro.h **** 
 211:../freertos/portable/GCC/ARM_CM3/portmacro.h **** 	__asm volatile
 212:../freertos/portable/GCC/ARM_CM3/portmacro.h **** 	(
 213:../freertos/portable/GCC/ARM_CM3/portmacro.h **** 		"	mrs %0, basepri											\n" \
 214:../freertos/portable/GCC/ARM_CM3/portmacro.h **** 		"	mov %1, %2												\n" \
 215:../freertos/portable/GCC/ARM_CM3/portmacro.h **** 		"	msr basepri, %1											\n" \
 216:../freertos/portable/GCC/ARM_CM3/portmacro.h **** 		"	isb														\n" \
 217:../freertos/portable/GCC/ARM_CM3/portmacro.h **** 		"	dsb														\n" \
 218:../freertos/portable/GCC/ARM_CM3/portmacro.h **** 		:"=r" (ulOriginalBASEPRI), "=r" (ulNewBASEPRI) : "i" ( configMAX_SYSCALL_INTERRUPT_PRIORITY ) : "
 219:../freertos/portable/GCC/ARM_CM3/portmacro.h **** 	);
 220:../freertos/portable/GCC/ARM_CM3/portmacro.h **** 
 221:../freertos/portable/GCC/ARM_CM3/portmacro.h **** 	/* This return will not be reached but is necessary to prevent compiler
 222:../freertos/portable/GCC/ARM_CM3/portmacro.h **** 	warnings. */
 223:../freertos/portable/GCC/ARM_CM3/portmacro.h **** 	return ulOriginalBASEPRI;
 224:../freertos/portable/GCC/ARM_CM3/portmacro.h **** }
 225:../freertos/portable/GCC/ARM_CM3/portmacro.h **** /*-----------------------------------------------------------*/
 226:../freertos/portable/GCC/ARM_CM3/portmacro.h **** 
 227:../freertos/portable/GCC/ARM_CM3/portmacro.h **** portFORCE_INLINE static void vPortSetBASEPRI( uint32_t ulNewMaskValue )
 379              		.loc 2 227 30 view .LVU61
 380              	.LBB17:
 228:../freertos/portable/GCC/ARM_CM3/portmacro.h **** {
 229:../freertos/portable/GCC/ARM_CM3/portmacro.h **** 	__asm volatile
 381              		.loc 2 229 2 view .LVU62
 382              		.syntax unified
 383              	@ 229 "../freertos/portable/GCC/ARM_CM3/portmacro.h" 1
 384 00ae 83F31188 			msr basepri, r3		@ _2
 385              	@ 0 "" 2
ARM GAS  /tmp/ccUMpXkT.s 			page 19


 386              	.LVL9:
 387              		.thumb
 388              		.syntax unified
 389              	.L14:
 390              		.loc 2 229 2 is_stmt 0 view .LVU63
 391              	.LBE17:
 392              	.LBE16:
 393              	@ ../freertos/portable/GCC/ARM_CM3/port.c:386: }
 385:../freertos/portable/GCC/ARM_CM3/port.c **** 	}
 386:../freertos/portable/GCC/ARM_CM3/port.c **** }
 394              		.loc 1 386 1 view .LVU64
 395 00b2 7047     		bx	lr	@
 396              	.L17:
 397              		.align	2
 398              	.L16:
 399 00b4 00000000 		.word	.LANCHOR0
 400              		.cfi_endproc
 401              	.LFE12:
 402              		.size	vPortExitCritical, .-vPortExitCritical
 403              		.align	1
 404              		.global	PendSV_Handler
 405              		.syntax unified
 406              		.thumb
 407              		.thumb_func
 408              		.type	PendSV_Handler, %function
 409              	PendSV_Handler:
 410              	.LFB13:
 387:../freertos/portable/GCC/ARM_CM3/port.c **** /*-----------------------------------------------------------*/
 388:../freertos/portable/GCC/ARM_CM3/port.c **** 
 389:../freertos/portable/GCC/ARM_CM3/port.c **** void xPortPendSVHandler( void )
 390:../freertos/portable/GCC/ARM_CM3/port.c **** {
 411              		.loc 1 390 1 is_stmt 1 view -0
 412              		.cfi_startproc
 413              		@ Naked Function: prologue and epilogue provided by programmer.
 414              		@ args = 0, pretend = 0, frame = 0
 415              		@ frame_needed = 0, uses_anonymous_args = 0
 391:../freertos/portable/GCC/ARM_CM3/port.c **** 	/* This is a naked function. */
 392:../freertos/portable/GCC/ARM_CM3/port.c **** 
 393:../freertos/portable/GCC/ARM_CM3/port.c **** 	__asm volatile
 416              		.loc 1 393 2 view .LVU66
 417              		.syntax unified
 418              	@ 393 "../freertos/portable/GCC/ARM_CM3/port.c" 1
 419 00b8 EFF30980 			mrs r0, psp							
 420 00bc BFF36F8F 		isb									
 421              											
 422 00c0 0F4B     		ldr	r3, pxCurrentTCBConst			
 423 00c2 1A68     		ldr	r2, [r3]						
 424              											
 425 00c4 20E9F00F 		stmdb r0!, {r4-r11}					
 426 00c8 1060     		str r0, [r2]						
 427              											
 428 00ca 2DE90840 		stmdb sp!, {r3, r14}				
 429 00ce 4FF01000 		mov r0, #16								@
 430 00d2 80F31188 		msr basepri, r0						
 431 00d6 FFF7FEFF 		bl vTaskSwitchContext				
 432 00da 4FF00000 		mov r0, #0							
 433 00de 80F31188 		msr basepri, r0						
ARM GAS  /tmp/ccUMpXkT.s 			page 20


 434 00e2 BDE80840 		ldmia sp!, {r3, r14}				
 435              											
 436 00e6 1968     		ldr r1, [r3]						
 437 00e8 0868     		ldr r0, [r1]						
 438 00ea B0E8F00F 		ldmia r0!, {r4-r11}					
 439 00ee 80F30988 		msr psp, r0							
 440 00f2 BFF36F8F 		isb									
 441 00f6 7047     		bx r14								
 442              											
 443 00f8 AFF30080 		.align 4							
 443      AFF30080 
 444 0100 00000000 	pxCurrentTCBConst: .word pxCurrentTCB	
 445              	
 446              	@ 0 "" 2
 447              	@ ../freertos/portable/GCC/ARM_CM3/port.c:423: }
 394:../freertos/portable/GCC/ARM_CM3/port.c **** 	(
 395:../freertos/portable/GCC/ARM_CM3/port.c **** 	"	mrs r0, psp							\n"
 396:../freertos/portable/GCC/ARM_CM3/port.c **** 	"	isb									\n"
 397:../freertos/portable/GCC/ARM_CM3/port.c **** 	"										\n"
 398:../freertos/portable/GCC/ARM_CM3/port.c **** 	"	ldr	r3, pxCurrentTCBConst			\n" /* Get the location of the current TCB. */
 399:../freertos/portable/GCC/ARM_CM3/port.c **** 	"	ldr	r2, [r3]						\n"
 400:../freertos/portable/GCC/ARM_CM3/port.c **** 	"										\n"
 401:../freertos/portable/GCC/ARM_CM3/port.c **** 	"	stmdb r0!, {r4-r11}					\n" /* Save the remaining registers. */
 402:../freertos/portable/GCC/ARM_CM3/port.c **** 	"	str r0, [r2]						\n" /* Save the new top of stack into the first member of the TCB. */
 403:../freertos/portable/GCC/ARM_CM3/port.c **** 	"										\n"
 404:../freertos/portable/GCC/ARM_CM3/port.c **** 	"	stmdb sp!, {r3, r14}				\n"
 405:../freertos/portable/GCC/ARM_CM3/port.c **** 	"	mov r0, %0							\n"
 406:../freertos/portable/GCC/ARM_CM3/port.c **** 	"	msr basepri, r0						\n"
 407:../freertos/portable/GCC/ARM_CM3/port.c **** 	"	bl vTaskSwitchContext				\n"
 408:../freertos/portable/GCC/ARM_CM3/port.c **** 	"	mov r0, #0							\n"
 409:../freertos/portable/GCC/ARM_CM3/port.c **** 	"	msr basepri, r0						\n"
 410:../freertos/portable/GCC/ARM_CM3/port.c **** 	"	ldmia sp!, {r3, r14}				\n"
 411:../freertos/portable/GCC/ARM_CM3/port.c **** 	"										\n" /* Restore the context, including the critical nesting count. */
 412:../freertos/portable/GCC/ARM_CM3/port.c **** 	"	ldr r1, [r3]						\n"
 413:../freertos/portable/GCC/ARM_CM3/port.c **** 	"	ldr r0, [r1]						\n" /* The first item in pxCurrentTCB is the task top of stack. */
 414:../freertos/portable/GCC/ARM_CM3/port.c **** 	"	ldmia r0!, {r4-r11}					\n" /* Pop the registers. */
 415:../freertos/portable/GCC/ARM_CM3/port.c **** 	"	msr psp, r0							\n"
 416:../freertos/portable/GCC/ARM_CM3/port.c **** 	"	isb									\n"
 417:../freertos/portable/GCC/ARM_CM3/port.c **** 	"	bx r14								\n"
 418:../freertos/portable/GCC/ARM_CM3/port.c **** 	"										\n"
 419:../freertos/portable/GCC/ARM_CM3/port.c **** 	"	.align 4							\n"
 420:../freertos/portable/GCC/ARM_CM3/port.c **** 	"pxCurrentTCBConst: .word pxCurrentTCB	\n"
 421:../freertos/portable/GCC/ARM_CM3/port.c **** 	::"i"(configMAX_SYSCALL_INTERRUPT_PRIORITY)
 422:../freertos/portable/GCC/ARM_CM3/port.c **** 	);
 423:../freertos/portable/GCC/ARM_CM3/port.c **** }
 448              		.loc 1 423 1 is_stmt 0 view .LVU67
 449              		.thumb
 450              		.syntax unified
 451              		.cfi_endproc
 452              	.LFE13:
 453              		.size	PendSV_Handler, .-PendSV_Handler
 454              		.align	1
 455              		.global	SysTick_Handler
 456              		.syntax unified
 457              		.thumb
 458              		.thumb_func
 459              		.type	SysTick_Handler, %function
ARM GAS  /tmp/ccUMpXkT.s 			page 21


 460              	SysTick_Handler:
 461              	.LFB14:
 424:../freertos/portable/GCC/ARM_CM3/port.c **** /*-----------------------------------------------------------*/
 425:../freertos/portable/GCC/ARM_CM3/port.c **** 
 426:../freertos/portable/GCC/ARM_CM3/port.c **** void xPortSysTickHandler( void )
 427:../freertos/portable/GCC/ARM_CM3/port.c **** {
 462              		.loc 1 427 1 is_stmt 1 view -0
 463              		.cfi_startproc
 464              		@ args = 0, pretend = 0, frame = 0
 465              		@ frame_needed = 0, uses_anonymous_args = 0
 428:../freertos/portable/GCC/ARM_CM3/port.c **** 	/* The SysTick runs at the lowest interrupt priority, so when this interrupt
 429:../freertos/portable/GCC/ARM_CM3/port.c **** 	executes all interrupts must be unmasked.  There is therefore no need to
 430:../freertos/portable/GCC/ARM_CM3/port.c **** 	save and then restore the interrupt mask value as its value is already
 431:../freertos/portable/GCC/ARM_CM3/port.c **** 	known. */
 432:../freertos/portable/GCC/ARM_CM3/port.c **** 	portDISABLE_INTERRUPTS();
 466              		.loc 1 432 2 view .LVU69
 467              	.LBB18:
 468              	.LBI18:
 191:../freertos/portable/GCC/ARM_CM3/portmacro.h **** {
 469              		.loc 2 191 30 view .LVU70
 470              	.LBB19:
 193:../freertos/portable/GCC/ARM_CM3/portmacro.h **** 
 471              		.loc 2 193 1 view .LVU71
 195:../freertos/portable/GCC/ARM_CM3/portmacro.h **** 	(
 472              		.loc 2 195 2 view .LVU72
 473              	.LBE19:
 474              	.LBE18:
 475              	@ ../freertos/portable/GCC/ARM_CM3/port.c:427: {
 427:../freertos/portable/GCC/ARM_CM3/port.c **** 	/* The SysTick runs at the lowest interrupt priority, so when this interrupt
 476              		.loc 1 427 1 is_stmt 0 view .LVU73
 477 0104 08B5     		push	{r3, lr}	@
 478              	.LCFI2:
 479              		.cfi_def_cfa_offset 8
 480              		.cfi_offset 3, -8
 481              		.cfi_offset 14, -4
 482              	.LBB21:
 483              	.LBB20:
 484              	@ ../freertos/portable/GCC/ARM_CM3/portmacro.h:195: 	__asm volatile
 195:../freertos/portable/GCC/ARM_CM3/portmacro.h **** 	(
 485              		.loc 2 195 2 view .LVU74
 486              		.syntax unified
 487              	@ 195 "../freertos/portable/GCC/ARM_CM3/portmacro.h" 1
 488 0106 4FF01003 			mov r3, #16													@ ulNewBASEPRI,
 489 010a 83F31188 		msr basepri, r3												@ ulNewBASEPRI
 490 010e BFF36F8F 		isb														
 491 0112 BFF34F8F 		dsb														
 492              	
 493              	@ 0 "" 2
 494              		.thumb
 495              		.syntax unified
 496              	.LBE20:
 497              	.LBE21:
 433:../freertos/portable/GCC/ARM_CM3/port.c **** 	{
 434:../freertos/portable/GCC/ARM_CM3/port.c **** 		/* Increment the RTOS tick. */
 435:../freertos/portable/GCC/ARM_CM3/port.c **** 		if( xTaskIncrementTick() != pdFALSE )
 498              		.loc 1 435 3 is_stmt 1 view .LVU75
 499              	@ ../freertos/portable/GCC/ARM_CM3/port.c:435: 		if( xTaskIncrementTick() != pdFALSE )
ARM GAS  /tmp/ccUMpXkT.s 			page 22


 500              		.loc 1 435 7 is_stmt 0 view .LVU76
 501 0116 FFF7FEFF 		bl	xTaskIncrementTick		@
 502              	.LVL10:
 503              	@ ../freertos/portable/GCC/ARM_CM3/port.c:435: 		if( xTaskIncrementTick() != pdFALSE )
 504              		.loc 1 435 5 view .LVU77
 505 011a 28B1     		cbz	r0, .L20	@ tmp119,
 436:../freertos/portable/GCC/ARM_CM3/port.c **** 		{
 437:../freertos/portable/GCC/ARM_CM3/port.c **** 			/* A context switch is required.  Context switching is performed in
 438:../freertos/portable/GCC/ARM_CM3/port.c **** 			the PendSV interrupt.  Pend the PendSV interrupt. */
 439:../freertos/portable/GCC/ARM_CM3/port.c **** 			portNVIC_INT_CTRL_REG = portNVIC_PENDSVSET_BIT;
 506              		.loc 1 439 4 is_stmt 1 view .LVU78
 507              	@ ../freertos/portable/GCC/ARM_CM3/port.c:439: 			portNVIC_INT_CTRL_REG = portNVIC_PENDSVSET_BIT;
 508              		.loc 1 439 26 is_stmt 0 view .LVU79
 509 011c 4FF0E023 		mov	r3, #-536813568	@ tmp116,
 510 0120 4FF08052 		mov	r2, #268435456	@ tmp117,
 511 0124 C3F8042D 		str	r2, [r3, #3332]	@ tmp117, MEM[(volatile uint32_t *)3758157060B]
 512              	.L20:
 440:../freertos/portable/GCC/ARM_CM3/port.c **** 		}
 441:../freertos/portable/GCC/ARM_CM3/port.c **** 	}
 442:../freertos/portable/GCC/ARM_CM3/port.c **** 	portENABLE_INTERRUPTS();
 513              		.loc 1 442 2 is_stmt 1 view .LVU80
 514              	.LVL11:
 515              	.LBB22:
 516              	.LBI22:
 227:../freertos/portable/GCC/ARM_CM3/portmacro.h **** {
 517              		.loc 2 227 30 view .LVU81
 518              	.LBB23:
 519              		.loc 2 229 2 view .LVU82
 520 0128 0023     		movs	r3, #0	@ tmp118,
 521              		.syntax unified
 522              	@ 229 "../freertos/portable/GCC/ARM_CM3/portmacro.h" 1
 523 012a 83F31188 			msr basepri, r3		@ tmp118
 524              	@ 0 "" 2
 525              	.LVL12:
 526              		.loc 2 229 2 is_stmt 0 view .LVU83
 527              		.thumb
 528              		.syntax unified
 529              	.LBE23:
 530              	.LBE22:
 531              	@ ../freertos/portable/GCC/ARM_CM3/port.c:443: }
 443:../freertos/portable/GCC/ARM_CM3/port.c **** }
 532              		.loc 1 443 1 view .LVU84
 533 012e 08BD     		pop	{r3, pc}	@
 534              		.cfi_endproc
 535              	.LFE14:
 536              		.size	SysTick_Handler, .-SysTick_Handler
 537              		.align	1
 538              		.weak	vPortSetupTimerInterrupt
 539              		.syntax unified
 540              		.thumb
 541              		.thumb_func
 542              		.type	vPortSetupTimerInterrupt, %function
 543              	vPortSetupTimerInterrupt:
 544              	.LFB15:
 444:../freertos/portable/GCC/ARM_CM3/port.c **** /*-----------------------------------------------------------*/
 445:../freertos/portable/GCC/ARM_CM3/port.c **** 
 446:../freertos/portable/GCC/ARM_CM3/port.c **** #if( configUSE_TICKLESS_IDLE == 1 )
ARM GAS  /tmp/ccUMpXkT.s 			page 23


 447:../freertos/portable/GCC/ARM_CM3/port.c **** 
 448:../freertos/portable/GCC/ARM_CM3/port.c **** 	__attribute__((weak)) void vPortSuppressTicksAndSleep( TickType_t xExpectedIdleTime )
 449:../freertos/portable/GCC/ARM_CM3/port.c **** 	{
 450:../freertos/portable/GCC/ARM_CM3/port.c **** 	uint32_t ulReloadValue, ulCompleteTickPeriods, ulCompletedSysTickDecrements;
 451:../freertos/portable/GCC/ARM_CM3/port.c **** 	TickType_t xModifiableIdleTime;
 452:../freertos/portable/GCC/ARM_CM3/port.c **** 
 453:../freertos/portable/GCC/ARM_CM3/port.c **** 		/* Make sure the SysTick reload value does not overflow the counter. */
 454:../freertos/portable/GCC/ARM_CM3/port.c **** 		if( xExpectedIdleTime > xMaximumPossibleSuppressedTicks )
 455:../freertos/portable/GCC/ARM_CM3/port.c **** 		{
 456:../freertos/portable/GCC/ARM_CM3/port.c **** 			xExpectedIdleTime = xMaximumPossibleSuppressedTicks;
 457:../freertos/portable/GCC/ARM_CM3/port.c **** 		}
 458:../freertos/portable/GCC/ARM_CM3/port.c **** 
 459:../freertos/portable/GCC/ARM_CM3/port.c **** 		/* Stop the SysTick momentarily.  The time the SysTick is stopped for
 460:../freertos/portable/GCC/ARM_CM3/port.c **** 		is accounted for as best it can be, but using the tickless mode will
 461:../freertos/portable/GCC/ARM_CM3/port.c **** 		inevitably result in some tiny drift of the time maintained by the
 462:../freertos/portable/GCC/ARM_CM3/port.c **** 		kernel with respect to calendar time. */
 463:../freertos/portable/GCC/ARM_CM3/port.c **** 		portNVIC_SYSTICK_CTRL_REG &= ~portNVIC_SYSTICK_ENABLE_BIT;
 464:../freertos/portable/GCC/ARM_CM3/port.c **** 
 465:../freertos/portable/GCC/ARM_CM3/port.c **** 		/* Calculate the reload value required to wait xExpectedIdleTime
 466:../freertos/portable/GCC/ARM_CM3/port.c **** 		tick periods.  -1 is used because this code will execute part way
 467:../freertos/portable/GCC/ARM_CM3/port.c **** 		through one of the tick periods. */
 468:../freertos/portable/GCC/ARM_CM3/port.c **** 		ulReloadValue = portNVIC_SYSTICK_CURRENT_VALUE_REG + ( ulTimerCountsForOneTick * ( xExpectedIdleT
 469:../freertos/portable/GCC/ARM_CM3/port.c **** 		if( ulReloadValue > ulStoppedTimerCompensation )
 470:../freertos/portable/GCC/ARM_CM3/port.c **** 		{
 471:../freertos/portable/GCC/ARM_CM3/port.c **** 			ulReloadValue -= ulStoppedTimerCompensation;
 472:../freertos/portable/GCC/ARM_CM3/port.c **** 		}
 473:../freertos/portable/GCC/ARM_CM3/port.c **** 
 474:../freertos/portable/GCC/ARM_CM3/port.c **** 		/* Enter a critical section but don't use the taskENTER_CRITICAL()
 475:../freertos/portable/GCC/ARM_CM3/port.c **** 		method as that will mask interrupts that should exit sleep mode. */
 476:../freertos/portable/GCC/ARM_CM3/port.c **** 		__asm volatile( "cpsid i" ::: "memory" );
 477:../freertos/portable/GCC/ARM_CM3/port.c **** 		__asm volatile( "dsb" );
 478:../freertos/portable/GCC/ARM_CM3/port.c **** 		__asm volatile( "isb" );
 479:../freertos/portable/GCC/ARM_CM3/port.c **** 
 480:../freertos/portable/GCC/ARM_CM3/port.c **** 		/* If a context switch is pending or a task is waiting for the scheduler
 481:../freertos/portable/GCC/ARM_CM3/port.c **** 		to be unsuspended then abandon the low power entry. */
 482:../freertos/portable/GCC/ARM_CM3/port.c **** 		if( eTaskConfirmSleepModeStatus() == eAbortSleep )
 483:../freertos/portable/GCC/ARM_CM3/port.c **** 		{
 484:../freertos/portable/GCC/ARM_CM3/port.c **** 			/* Restart from whatever is left in the count register to complete
 485:../freertos/portable/GCC/ARM_CM3/port.c **** 			this tick period. */
 486:../freertos/portable/GCC/ARM_CM3/port.c **** 			portNVIC_SYSTICK_LOAD_REG = portNVIC_SYSTICK_CURRENT_VALUE_REG;
 487:../freertos/portable/GCC/ARM_CM3/port.c **** 
 488:../freertos/portable/GCC/ARM_CM3/port.c **** 			/* Restart SysTick. */
 489:../freertos/portable/GCC/ARM_CM3/port.c **** 			portNVIC_SYSTICK_CTRL_REG |= portNVIC_SYSTICK_ENABLE_BIT;
 490:../freertos/portable/GCC/ARM_CM3/port.c **** 
 491:../freertos/portable/GCC/ARM_CM3/port.c **** 			/* Reset the reload register to the value required for normal tick
 492:../freertos/portable/GCC/ARM_CM3/port.c **** 			periods. */
 493:../freertos/portable/GCC/ARM_CM3/port.c **** 			portNVIC_SYSTICK_LOAD_REG = ulTimerCountsForOneTick - 1UL;
 494:../freertos/portable/GCC/ARM_CM3/port.c **** 
 495:../freertos/portable/GCC/ARM_CM3/port.c **** 			/* Re-enable interrupts - see comments above the cpsid instruction()
 496:../freertos/portable/GCC/ARM_CM3/port.c **** 			above. */
 497:../freertos/portable/GCC/ARM_CM3/port.c **** 			__asm volatile( "cpsie i" ::: "memory" );
 498:../freertos/portable/GCC/ARM_CM3/port.c **** 		}
 499:../freertos/portable/GCC/ARM_CM3/port.c **** 		else
 500:../freertos/portable/GCC/ARM_CM3/port.c **** 		{
 501:../freertos/portable/GCC/ARM_CM3/port.c **** 			/* Set the new reload value. */
 502:../freertos/portable/GCC/ARM_CM3/port.c **** 			portNVIC_SYSTICK_LOAD_REG = ulReloadValue;
 503:../freertos/portable/GCC/ARM_CM3/port.c **** 
ARM GAS  /tmp/ccUMpXkT.s 			page 24


 504:../freertos/portable/GCC/ARM_CM3/port.c **** 			/* Clear the SysTick count flag and set the count value back to
 505:../freertos/portable/GCC/ARM_CM3/port.c **** 			zero. */
 506:../freertos/portable/GCC/ARM_CM3/port.c **** 			portNVIC_SYSTICK_CURRENT_VALUE_REG = 0UL;
 507:../freertos/portable/GCC/ARM_CM3/port.c **** 
 508:../freertos/portable/GCC/ARM_CM3/port.c **** 			/* Restart SysTick. */
 509:../freertos/portable/GCC/ARM_CM3/port.c **** 			portNVIC_SYSTICK_CTRL_REG |= portNVIC_SYSTICK_ENABLE_BIT;
 510:../freertos/portable/GCC/ARM_CM3/port.c **** 
 511:../freertos/portable/GCC/ARM_CM3/port.c **** 			/* Sleep until something happens.  configPRE_SLEEP_PROCESSING() can
 512:../freertos/portable/GCC/ARM_CM3/port.c **** 			set its parameter to 0 to indicate that its implementation contains
 513:../freertos/portable/GCC/ARM_CM3/port.c **** 			its own wait for interrupt or wait for event instruction, and so wfi
 514:../freertos/portable/GCC/ARM_CM3/port.c **** 			should not be executed again.  However, the original expected idle
 515:../freertos/portable/GCC/ARM_CM3/port.c **** 			time variable must remain unmodified, so a copy is taken. */
 516:../freertos/portable/GCC/ARM_CM3/port.c **** 			xModifiableIdleTime = xExpectedIdleTime;
 517:../freertos/portable/GCC/ARM_CM3/port.c **** 			configPRE_SLEEP_PROCESSING( xModifiableIdleTime );
 518:../freertos/portable/GCC/ARM_CM3/port.c **** 			if( xModifiableIdleTime > 0 )
 519:../freertos/portable/GCC/ARM_CM3/port.c **** 			{
 520:../freertos/portable/GCC/ARM_CM3/port.c **** 				__asm volatile( "dsb" ::: "memory" );
 521:../freertos/portable/GCC/ARM_CM3/port.c **** 				__asm volatile( "wfi" );
 522:../freertos/portable/GCC/ARM_CM3/port.c **** 				__asm volatile( "isb" );
 523:../freertos/portable/GCC/ARM_CM3/port.c **** 			}
 524:../freertos/portable/GCC/ARM_CM3/port.c **** 			configPOST_SLEEP_PROCESSING( xExpectedIdleTime );
 525:../freertos/portable/GCC/ARM_CM3/port.c **** 
 526:../freertos/portable/GCC/ARM_CM3/port.c **** 			/* Re-enable interrupts to allow the interrupt that brought the MCU
 527:../freertos/portable/GCC/ARM_CM3/port.c **** 			out of sleep mode to execute immediately.  see comments above
 528:../freertos/portable/GCC/ARM_CM3/port.c **** 			__disable_interrupt() call above. */
 529:../freertos/portable/GCC/ARM_CM3/port.c **** 			__asm volatile( "cpsie i" ::: "memory" );
 530:../freertos/portable/GCC/ARM_CM3/port.c **** 			__asm volatile( "dsb" );
 531:../freertos/portable/GCC/ARM_CM3/port.c **** 			__asm volatile( "isb" );
 532:../freertos/portable/GCC/ARM_CM3/port.c **** 
 533:../freertos/portable/GCC/ARM_CM3/port.c **** 			/* Disable interrupts again because the clock is about to be stopped
 534:../freertos/portable/GCC/ARM_CM3/port.c **** 			and interrupts that execute while the clock is stopped will increase
 535:../freertos/portable/GCC/ARM_CM3/port.c **** 			any slippage between the time maintained by the RTOS and calendar
 536:../freertos/portable/GCC/ARM_CM3/port.c **** 			time. */
 537:../freertos/portable/GCC/ARM_CM3/port.c **** 			__asm volatile( "cpsid i" ::: "memory" );
 538:../freertos/portable/GCC/ARM_CM3/port.c **** 			__asm volatile( "dsb" );
 539:../freertos/portable/GCC/ARM_CM3/port.c **** 			__asm volatile( "isb" );
 540:../freertos/portable/GCC/ARM_CM3/port.c **** 
 541:../freertos/portable/GCC/ARM_CM3/port.c **** 			/* Disable the SysTick clock without reading the
 542:../freertos/portable/GCC/ARM_CM3/port.c **** 			portNVIC_SYSTICK_CTRL_REG register to ensure the
 543:../freertos/portable/GCC/ARM_CM3/port.c **** 			portNVIC_SYSTICK_COUNT_FLAG_BIT is not cleared if it is set.  Again,
 544:../freertos/portable/GCC/ARM_CM3/port.c **** 			the time the SysTick is stopped for is accounted for as best it can
 545:../freertos/portable/GCC/ARM_CM3/port.c **** 			be, but using the tickless mode will inevitably result in some tiny
 546:../freertos/portable/GCC/ARM_CM3/port.c **** 			drift of the time maintained by the kernel with respect to calendar
 547:../freertos/portable/GCC/ARM_CM3/port.c **** 			time*/
 548:../freertos/portable/GCC/ARM_CM3/port.c **** 			portNVIC_SYSTICK_CTRL_REG = ( portNVIC_SYSTICK_CLK_BIT | portNVIC_SYSTICK_INT_BIT );
 549:../freertos/portable/GCC/ARM_CM3/port.c **** 
 550:../freertos/portable/GCC/ARM_CM3/port.c **** 			/* Determine if the SysTick clock has already counted to zero and
 551:../freertos/portable/GCC/ARM_CM3/port.c **** 			been set back to the current reload value (the reload back being
 552:../freertos/portable/GCC/ARM_CM3/port.c **** 			correct for the entire expected idle time) or if the SysTick is yet
 553:../freertos/portable/GCC/ARM_CM3/port.c **** 			to count to zero (in which case an interrupt other than the SysTick
 554:../freertos/portable/GCC/ARM_CM3/port.c **** 			must have brought the system out of sleep mode). */
 555:../freertos/portable/GCC/ARM_CM3/port.c **** 			if( ( portNVIC_SYSTICK_CTRL_REG & portNVIC_SYSTICK_COUNT_FLAG_BIT ) != 0 )
 556:../freertos/portable/GCC/ARM_CM3/port.c **** 			{
 557:../freertos/portable/GCC/ARM_CM3/port.c **** 				uint32_t ulCalculatedLoadValue;
 558:../freertos/portable/GCC/ARM_CM3/port.c **** 
 559:../freertos/portable/GCC/ARM_CM3/port.c **** 				/* The tick interrupt is already pending, and the SysTick count
 560:../freertos/portable/GCC/ARM_CM3/port.c **** 				reloaded with ulReloadValue.  Reset the
ARM GAS  /tmp/ccUMpXkT.s 			page 25


 561:../freertos/portable/GCC/ARM_CM3/port.c **** 				portNVIC_SYSTICK_LOAD_REG with whatever remains of this tick
 562:../freertos/portable/GCC/ARM_CM3/port.c **** 				period. */
 563:../freertos/portable/GCC/ARM_CM3/port.c **** 				ulCalculatedLoadValue = ( ulTimerCountsForOneTick - 1UL ) - ( ulReloadValue - portNVIC_SYSTICK_
 564:../freertos/portable/GCC/ARM_CM3/port.c **** 
 565:../freertos/portable/GCC/ARM_CM3/port.c **** 				/* Don't allow a tiny value, or values that have somehow
 566:../freertos/portable/GCC/ARM_CM3/port.c **** 				underflowed because the post sleep hook did something
 567:../freertos/portable/GCC/ARM_CM3/port.c **** 				that took too long. */
 568:../freertos/portable/GCC/ARM_CM3/port.c **** 				if( ( ulCalculatedLoadValue < ulStoppedTimerCompensation ) || ( ulCalculatedLoadValue > ulTimer
 569:../freertos/portable/GCC/ARM_CM3/port.c **** 				{
 570:../freertos/portable/GCC/ARM_CM3/port.c **** 					ulCalculatedLoadValue = ( ulTimerCountsForOneTick - 1UL );
 571:../freertos/portable/GCC/ARM_CM3/port.c **** 				}
 572:../freertos/portable/GCC/ARM_CM3/port.c **** 
 573:../freertos/portable/GCC/ARM_CM3/port.c **** 				portNVIC_SYSTICK_LOAD_REG = ulCalculatedLoadValue;
 574:../freertos/portable/GCC/ARM_CM3/port.c **** 
 575:../freertos/portable/GCC/ARM_CM3/port.c **** 				/* As the pending tick will be processed as soon as this
 576:../freertos/portable/GCC/ARM_CM3/port.c **** 				function exits, the tick value maintained by the tick is stepped
 577:../freertos/portable/GCC/ARM_CM3/port.c **** 				forward by one less than the time spent waiting. */
 578:../freertos/portable/GCC/ARM_CM3/port.c **** 				ulCompleteTickPeriods = xExpectedIdleTime - 1UL;
 579:../freertos/portable/GCC/ARM_CM3/port.c **** 			}
 580:../freertos/portable/GCC/ARM_CM3/port.c **** 			else
 581:../freertos/portable/GCC/ARM_CM3/port.c **** 			{
 582:../freertos/portable/GCC/ARM_CM3/port.c **** 				/* Something other than the tick interrupt ended the sleep.
 583:../freertos/portable/GCC/ARM_CM3/port.c **** 				Work out how long the sleep lasted rounded to complete tick
 584:../freertos/portable/GCC/ARM_CM3/port.c **** 				periods (not the ulReload value which accounted for part
 585:../freertos/portable/GCC/ARM_CM3/port.c **** 				ticks). */
 586:../freertos/portable/GCC/ARM_CM3/port.c **** 				ulCompletedSysTickDecrements = ( xExpectedIdleTime * ulTimerCountsForOneTick ) - portNVIC_SYSTI
 587:../freertos/portable/GCC/ARM_CM3/port.c **** 
 588:../freertos/portable/GCC/ARM_CM3/port.c **** 				/* How many complete tick periods passed while the processor
 589:../freertos/portable/GCC/ARM_CM3/port.c **** 				was waiting? */
 590:../freertos/portable/GCC/ARM_CM3/port.c **** 				ulCompleteTickPeriods = ulCompletedSysTickDecrements / ulTimerCountsForOneTick;
 591:../freertos/portable/GCC/ARM_CM3/port.c **** 
 592:../freertos/portable/GCC/ARM_CM3/port.c **** 				/* The reload value is set to whatever fraction of a single tick
 593:../freertos/portable/GCC/ARM_CM3/port.c **** 				period remains. */
 594:../freertos/portable/GCC/ARM_CM3/port.c **** 				portNVIC_SYSTICK_LOAD_REG = ( ( ulCompleteTickPeriods + 1UL ) * ulTimerCountsForOneTick ) - ulC
 595:../freertos/portable/GCC/ARM_CM3/port.c **** 			}
 596:../freertos/portable/GCC/ARM_CM3/port.c **** 
 597:../freertos/portable/GCC/ARM_CM3/port.c **** 			/* Restart SysTick so it runs from portNVIC_SYSTICK_LOAD_REG
 598:../freertos/portable/GCC/ARM_CM3/port.c **** 			again, then set portNVIC_SYSTICK_LOAD_REG back to its standard
 599:../freertos/portable/GCC/ARM_CM3/port.c **** 			value. */
 600:../freertos/portable/GCC/ARM_CM3/port.c **** 			portNVIC_SYSTICK_CURRENT_VALUE_REG = 0UL;
 601:../freertos/portable/GCC/ARM_CM3/port.c **** 			portNVIC_SYSTICK_CTRL_REG |= portNVIC_SYSTICK_ENABLE_BIT;
 602:../freertos/portable/GCC/ARM_CM3/port.c **** 			vTaskStepTick( ulCompleteTickPeriods );
 603:../freertos/portable/GCC/ARM_CM3/port.c **** 			portNVIC_SYSTICK_LOAD_REG = ulTimerCountsForOneTick - 1UL;
 604:../freertos/portable/GCC/ARM_CM3/port.c **** 
 605:../freertos/portable/GCC/ARM_CM3/port.c **** 			/* Exit with interrpts enabled. */
 606:../freertos/portable/GCC/ARM_CM3/port.c **** 			__asm volatile( "cpsie i" ::: "memory" );
 607:../freertos/portable/GCC/ARM_CM3/port.c **** 		}
 608:../freertos/portable/GCC/ARM_CM3/port.c **** 	}
 609:../freertos/portable/GCC/ARM_CM3/port.c **** 
 610:../freertos/portable/GCC/ARM_CM3/port.c **** #endif /* configUSE_TICKLESS_IDLE */
 611:../freertos/portable/GCC/ARM_CM3/port.c **** /*-----------------------------------------------------------*/
 612:../freertos/portable/GCC/ARM_CM3/port.c **** 
 613:../freertos/portable/GCC/ARM_CM3/port.c **** /*
 614:../freertos/portable/GCC/ARM_CM3/port.c ****  * Setup the systick timer to generate the tick interrupts at the required
 615:../freertos/portable/GCC/ARM_CM3/port.c ****  * frequency.
 616:../freertos/portable/GCC/ARM_CM3/port.c ****  */
 617:../freertos/portable/GCC/ARM_CM3/port.c **** __attribute__(( weak )) void vPortSetupTimerInterrupt( void )
ARM GAS  /tmp/ccUMpXkT.s 			page 26


 618:../freertos/portable/GCC/ARM_CM3/port.c **** {
 545              		.loc 1 618 1 is_stmt 1 view -0
 546              		.cfi_startproc
 547              		@ args = 0, pretend = 0, frame = 0
 548              		@ frame_needed = 0, uses_anonymous_args = 0
 549              		@ link register save eliminated.
 619:../freertos/portable/GCC/ARM_CM3/port.c **** 	/* Calculate the constants required to configure the tick interrupt. */
 620:../freertos/portable/GCC/ARM_CM3/port.c **** 	#if( configUSE_TICKLESS_IDLE == 1 )
 621:../freertos/portable/GCC/ARM_CM3/port.c **** 	{
 622:../freertos/portable/GCC/ARM_CM3/port.c **** 		ulTimerCountsForOneTick = ( configSYSTICK_CLOCK_HZ / configTICK_RATE_HZ );
 623:../freertos/portable/GCC/ARM_CM3/port.c **** 		xMaximumPossibleSuppressedTicks = portMAX_24_BIT_NUMBER / ulTimerCountsForOneTick;
 624:../freertos/portable/GCC/ARM_CM3/port.c **** 		ulStoppedTimerCompensation = portMISSED_COUNTS_FACTOR / ( configCPU_CLOCK_HZ / configSYSTICK_CLOC
 625:../freertos/portable/GCC/ARM_CM3/port.c **** 	}
 626:../freertos/portable/GCC/ARM_CM3/port.c **** 	#endif /* configUSE_TICKLESS_IDLE */
 627:../freertos/portable/GCC/ARM_CM3/port.c **** 
 628:../freertos/portable/GCC/ARM_CM3/port.c **** 	/* Stop and clear the SysTick. */
 629:../freertos/portable/GCC/ARM_CM3/port.c **** 	portNVIC_SYSTICK_CTRL_REG = 0UL;
 550              		.loc 1 629 2 view .LVU86
 551              	@ ../freertos/portable/GCC/ARM_CM3/port.c:629: 	portNVIC_SYSTICK_CTRL_REG = 0UL;
 552              		.loc 1 629 28 is_stmt 0 view .LVU87
 553 0130 4FF0E023 		mov	r3, #-536813568	@ tmp113,
 554 0134 0022     		movs	r2, #0	@ tmp114,
 555 0136 1A61     		str	r2, [r3, #16]	@ tmp114, MEM[(volatile uint32_t *)3758153744B]
 630:../freertos/portable/GCC/ARM_CM3/port.c **** 	portNVIC_SYSTICK_CURRENT_VALUE_REG = 0UL;
 556              		.loc 1 630 2 is_stmt 1 view .LVU88
 557              	@ ../freertos/portable/GCC/ARM_CM3/port.c:630: 	portNVIC_SYSTICK_CURRENT_VALUE_REG = 0UL;
 558              		.loc 1 630 37 is_stmt 0 view .LVU89
 559 0138 9A61     		str	r2, [r3, #24]	@ tmp114, MEM[(volatile uint32_t *)3758153752B]
 631:../freertos/portable/GCC/ARM_CM3/port.c **** 
 632:../freertos/portable/GCC/ARM_CM3/port.c **** 	/* Configure SysTick to interrupt at the requested rate. */
 633:../freertos/portable/GCC/ARM_CM3/port.c **** 	portNVIC_SYSTICK_LOAD_REG = ( configSYSTICK_CLOCK_HZ / configTICK_RATE_HZ ) - 1UL;
 560              		.loc 1 633 2 is_stmt 1 view .LVU90
 561              	@ ../freertos/portable/GCC/ARM_CM3/port.c:633: 	portNVIC_SYSTICK_LOAD_REG = ( configSYSTICK_CLOCK_H
 562              		.loc 1 633 28 is_stmt 0 view .LVU91
 563 013a 024A     		ldr	r2, .L25	@ tmp118,
 564 013c 5A61     		str	r2, [r3, #20]	@ tmp118, MEM[(volatile uint32_t *)3758153748B]
 634:../freertos/portable/GCC/ARM_CM3/port.c **** 	portNVIC_SYSTICK_CTRL_REG = ( portNVIC_SYSTICK_CLK_BIT | portNVIC_SYSTICK_INT_BIT | portNVIC_SYSTI
 565              		.loc 1 634 2 is_stmt 1 view .LVU92
 566              	@ ../freertos/portable/GCC/ARM_CM3/port.c:634: 	portNVIC_SYSTICK_CTRL_REG = ( portNVIC_SYSTICK_CLK_
 567              		.loc 1 634 28 is_stmt 0 view .LVU93
 568 013e 0722     		movs	r2, #7	@ tmp120,
 569 0140 1A61     		str	r2, [r3, #16]	@ tmp120, MEM[(volatile uint32_t *)3758153744B]
 570              	@ ../freertos/portable/GCC/ARM_CM3/port.c:635: }
 635:../freertos/portable/GCC/ARM_CM3/port.c **** }
 571              		.loc 1 635 1 view .LVU94
 572 0142 7047     		bx	lr	@
 573              	.L26:
 574              		.align	2
 575              	.L25:
 576 0144 3F190100 		.word	71999
 577              		.cfi_endproc
 578              	.LFE15:
 579              		.size	vPortSetupTimerInterrupt, .-vPortSetupTimerInterrupt
 580              		.align	1
 581              		.global	xPortStartScheduler
 582              		.syntax unified
 583              		.thumb
ARM GAS  /tmp/ccUMpXkT.s 			page 27


 584              		.thumb_func
 585              		.type	xPortStartScheduler, %function
 586              	xPortStartScheduler:
 587              	.LFB9:
 258:../freertos/portable/GCC/ARM_CM3/port.c **** 	/* configMAX_SYSCALL_INTERRUPT_PRIORITY must not be set to 0.
 588              		.loc 1 258 1 is_stmt 1 view -0
 589              		.cfi_startproc
 590              		@ args = 0, pretend = 0, frame = 0
 591              		@ frame_needed = 0, uses_anonymous_args = 0
 261:../freertos/portable/GCC/ARM_CM3/port.c **** 
 592              		.loc 1 261 54 view .LVU96
 326:../freertos/portable/GCC/ARM_CM3/port.c **** 	portNVIC_SYSPRI2_REG |= portNVIC_SYSTICK_PRI;
 593              		.loc 1 326 2 view .LVU97
 594              	@ ../freertos/portable/GCC/ARM_CM3/port.c:326: 	portNVIC_SYSPRI2_REG |= portNVIC_PENDSV_PRI;
 326:../freertos/portable/GCC/ARM_CM3/port.c **** 	portNVIC_SYSPRI2_REG |= portNVIC_SYSTICK_PRI;
 595              		.loc 1 326 23 is_stmt 0 view .LVU98
 596 0148 4FF0E023 		mov	r3, #-536813568	@ tmp118,
 597              	@ ../freertos/portable/GCC/ARM_CM3/port.c:258: {
 258:../freertos/portable/GCC/ARM_CM3/port.c **** 	/* configMAX_SYSCALL_INTERRUPT_PRIORITY must not be set to 0.
 598              		.loc 1 258 1 view .LVU99
 599 014c 10B5     		push	{r4, lr}	@
 600              	.LCFI3:
 601              		.cfi_def_cfa_offset 8
 602              		.cfi_offset 4, -8
 603              		.cfi_offset 14, -4
 604              	@ ../freertos/portable/GCC/ARM_CM3/port.c:334: 	uxCriticalNesting = 0;
 334:../freertos/portable/GCC/ARM_CM3/port.c **** 
 605              		.loc 1 334 20 view .LVU100
 606 014e 0024     		movs	r4, #0	@ tmp123,
 607              	@ ../freertos/portable/GCC/ARM_CM3/port.c:326: 	portNVIC_SYSPRI2_REG |= portNVIC_PENDSV_PRI;
 326:../freertos/portable/GCC/ARM_CM3/port.c **** 	portNVIC_SYSPRI2_REG |= portNVIC_SYSTICK_PRI;
 608              		.loc 1 326 23 view .LVU101
 609 0150 D3F8202D 		ldr	r2, [r3, #3360]	@ _1, MEM[(volatile uint32_t *)3758157088B]
 610 0154 42F47002 		orr	r2, r2, #15728640	@ _2, _1,
 611 0158 C3F8202D 		str	r2, [r3, #3360]	@ _2, MEM[(volatile uint32_t *)3758157088B]
 327:../freertos/portable/GCC/ARM_CM3/port.c **** 
 612              		.loc 1 327 2 is_stmt 1 view .LVU102
 613              	@ ../freertos/portable/GCC/ARM_CM3/port.c:327: 	portNVIC_SYSPRI2_REG |= portNVIC_SYSTICK_PRI;
 327:../freertos/portable/GCC/ARM_CM3/port.c **** 
 614              		.loc 1 327 23 is_stmt 0 view .LVU103
 615 015c D3F8202D 		ldr	r2, [r3, #3360]	@ _3, MEM[(volatile uint32_t *)3758157088B]
 616 0160 42F07042 		orr	r2, r2, #-268435456	@ _4, _3,
 617 0164 C3F8202D 		str	r2, [r3, #3360]	@ _4, MEM[(volatile uint32_t *)3758157088B]
 331:../freertos/portable/GCC/ARM_CM3/port.c **** 
 618              		.loc 1 331 2 is_stmt 1 view .LVU104
 619 0168 FFF7FEFF 		bl	vPortSetupTimerInterrupt		@
 620              	.LVL13:
 334:../freertos/portable/GCC/ARM_CM3/port.c **** 
 621              		.loc 1 334 2 view .LVU105
 622              	@ ../freertos/portable/GCC/ARM_CM3/port.c:334: 	uxCriticalNesting = 0;
 334:../freertos/portable/GCC/ARM_CM3/port.c **** 
 623              		.loc 1 334 20 is_stmt 0 view .LVU106
 624 016c 044B     		ldr	r3, .L28	@ tmp122,
 625 016e 1C60     		str	r4, [r3]	@ tmp123, uxCriticalNesting
 337:../freertos/portable/GCC/ARM_CM3/port.c **** 
 626              		.loc 1 337 2 is_stmt 1 view .LVU107
 627 0170 FFF756FF 		bl	prvPortStartFirstTask		@
ARM GAS  /tmp/ccUMpXkT.s 			page 28


 628              	.LVL14:
 345:../freertos/portable/GCC/ARM_CM3/port.c **** 	prvTaskExitError();
 629              		.loc 1 345 2 view .LVU108
 630 0174 FFF7FEFF 		bl	vTaskSwitchContext		@
 631              	.LVL15:
 346:../freertos/portable/GCC/ARM_CM3/port.c **** 
 632              		.loc 1 346 2 view .LVU109
 633 0178 FFF742FF 		bl	prvTaskExitError		@
 634              	.LVL16:
 349:../freertos/portable/GCC/ARM_CM3/port.c **** }
 635              		.loc 1 349 2 view .LVU110
 636              	@ ../freertos/portable/GCC/ARM_CM3/port.c:350: }
 350:../freertos/portable/GCC/ARM_CM3/port.c **** /*-----------------------------------------------------------*/
 637              		.loc 1 350 1 is_stmt 0 view .LVU111
 638 017c 2046     		mov	r0, r4	@, tmp123
 639 017e 10BD     		pop	{r4, pc}	@
 640              	.L29:
 641              		.align	2
 642              	.L28:
 643 0180 00000000 		.word	.LANCHOR0
 644              		.cfi_endproc
 645              	.LFE9:
 646              		.size	xPortStartScheduler, .-xPortStartScheduler
 647              		.data
 648              		.align	2
 649              		.set	.LANCHOR0,. + 0
 650              		.type	uxCriticalNesting, %object
 651              		.size	uxCriticalNesting, 4
 652              	uxCriticalNesting:
 653 0000 AAAAAAAA 		.word	-1431655766
 654              		.text
 655              	.Letext0:
 656              		.file 3 "/usr/arm-none-eabi/include/machine/_default_types.h"
 657              		.file 4 "/usr/arm-none-eabi/include/sys/_stdint.h"
 658              		.file 5 "../freertos/include/projdefs.h"
 659              		.file 6 "../freertos/include/task.h"
 660              		.section	.debug_info,"",%progbits
 661              	.Ldebug_info0:
 662 0000 86030000 		.4byte	0x386
 663 0004 0200     		.2byte	0x2
 664 0006 00000000 		.4byte	.Ldebug_abbrev0
 665 000a 04       		.byte	0x4
 666 000b 01       		.uleb128 0x1
 667 000c D4010000 		.4byte	.LASF35
 668 0010 0C       		.byte	0xc
 669 0011 BE000000 		.4byte	.LASF36
 670 0015 00000000 		.4byte	.LASF37
 671 0019 00000000 		.4byte	.Ltext0
 672 001d 84010000 		.4byte	.Letext0
 673 0021 00000000 		.4byte	.Ldebug_line0
 674 0025 02       		.uleb128 0x2
 675 0026 04       		.byte	0x4
 676 0027 05       		.byte	0x5
 677 0028 696E7400 		.ascii	"int\000"
 678 002c 03       		.uleb128 0x3
 679 002d 04       		.byte	0x4
 680 002e 07       		.byte	0x7
ARM GAS  /tmp/ccUMpXkT.s 			page 29


 681 002f 9E010000 		.4byte	.LASF0
 682 0033 03       		.uleb128 0x3
 683 0034 08       		.byte	0x8
 684 0035 05       		.byte	0x5
 685 0036 6D020000 		.4byte	.LASF1
 686 003a 03       		.uleb128 0x3
 687 003b 08       		.byte	0x8
 688 003c 04       		.byte	0x4
 689 003d F5020000 		.4byte	.LASF2
 690 0041 03       		.uleb128 0x3
 691 0042 01       		.byte	0x1
 692 0043 06       		.byte	0x6
 693 0044 01030000 		.4byte	.LASF3
 694 0048 03       		.uleb128 0x3
 695 0049 01       		.byte	0x1
 696 004a 08       		.byte	0x8
 697 004b 0E010000 		.4byte	.LASF4
 698 004f 03       		.uleb128 0x3
 699 0050 02       		.byte	0x2
 700 0051 05       		.byte	0x5
 701 0052 B4000000 		.4byte	.LASF5
 702 0056 03       		.uleb128 0x3
 703 0057 02       		.byte	0x2
 704 0058 07       		.byte	0x7
 705 0059 2E010000 		.4byte	.LASF6
 706 005d 03       		.uleb128 0x3
 707 005e 04       		.byte	0x4
 708 005f 05       		.byte	0x5
 709 0060 AB000000 		.4byte	.LASF7
 710 0064 04       		.uleb128 0x4
 711 0065 41010000 		.4byte	.LASF10
 712 0069 03       		.byte	0x3
 713 006a 4F       		.byte	0x4f
 714 006b 19       		.byte	0x19
 715 006c 70000000 		.4byte	0x70
 716 0070 03       		.uleb128 0x3
 717 0071 04       		.byte	0x4
 718 0072 07       		.byte	0x7
 719 0073 1C010000 		.4byte	.LASF8
 720 0077 03       		.uleb128 0x3
 721 0078 08       		.byte	0x8
 722 0079 07       		.byte	0x7
 723 007a AB010000 		.4byte	.LASF9
 724 007e 04       		.uleb128 0x4
 725 007f C2020000 		.4byte	.LASF11
 726 0083 04       		.byte	0x4
 727 0084 30       		.byte	0x30
 728 0085 14       		.byte	0x14
 729 0086 64000000 		.4byte	0x64
 730 008a 05       		.uleb128 0x5
 731 008b 7E000000 		.4byte	0x7e
 732 008f 04       		.uleb128 0x4
 733 0090 F7000000 		.4byte	.LASF12
 734 0094 05       		.byte	0x5
 735 0095 23       		.byte	0x23
 736 0096 10       		.byte	0x10
 737 0097 9B000000 		.4byte	0x9b
ARM GAS  /tmp/ccUMpXkT.s 			page 30


 738 009b 06       		.uleb128 0x6
 739 009c 04       		.byte	0x4
 740 009d A1000000 		.4byte	0xa1
 741 00a1 07       		.uleb128 0x7
 742 00a2 01       		.byte	0x1
 743 00a3 AD000000 		.4byte	0xad
 744 00a7 08       		.uleb128 0x8
 745 00a8 AD000000 		.4byte	0xad
 746 00ac 00       		.byte	0
 747 00ad 09       		.uleb128 0x9
 748 00ae 04       		.byte	0x4
 749 00af 04       		.uleb128 0x4
 750 00b0 92010000 		.4byte	.LASF13
 751 00b4 02       		.byte	0x2
 752 00b5 37       		.byte	0x37
 753 00b6 18       		.byte	0x18
 754 00b7 7E000000 		.4byte	0x7e
 755 00bb 04       		.uleb128 0x4
 756 00bc 2D030000 		.4byte	.LASF14
 757 00c0 02       		.byte	0x2
 758 00c1 38       		.byte	0x38
 759 00c2 0E       		.byte	0xe
 760 00c3 5D000000 		.4byte	0x5d
 761 00c7 04       		.uleb128 0x4
 762 00c8 21030000 		.4byte	.LASF15
 763 00cc 02       		.byte	0x2
 764 00cd 39       		.byte	0x39
 765 00ce 17       		.byte	0x17
 766 00cf 70000000 		.4byte	0x70
 767 00d3 04       		.uleb128 0x4
 768 00d4 7D000000 		.4byte	.LASF16
 769 00d8 02       		.byte	0x2
 770 00d9 3F       		.byte	0x3f
 771 00da 13       		.byte	0x13
 772 00db 7E000000 		.4byte	0x7e
 773 00df 03       		.uleb128 0x3
 774 00e0 01       		.byte	0x1
 775 00e1 08       		.byte	0x8
 776 00e2 DA020000 		.4byte	.LASF17
 777 00e6 06       		.uleb128 0x6
 778 00e7 04       		.byte	0x4
 779 00e8 AF000000 		.4byte	0xaf
 780 00ec 0A       		.uleb128 0xa
 781 00ed 3F000000 		.4byte	.LASF25
 782 00f1 01       		.byte	0x1
 783 00f2 85       		.byte	0x85
 784 00f3 14       		.byte	0x14
 785 00f4 C7000000 		.4byte	0xc7
 786 00f8 05       		.byte	0x5
 787 00f9 03       		.byte	0x3
 788 00fa 00000000 		.4byte	uxCriticalNesting
 789 00fe 0B       		.uleb128 0xb
 790 00ff 01       		.byte	0x1
 791 0100 54020000 		.4byte	.LASF18
 792 0104 01       		.byte	0x1
 793 0105 6902     		.2byte	0x269
 794 0107 1E       		.byte	0x1e
ARM GAS  /tmp/ccUMpXkT.s 			page 31


 795 0108 01       		.byte	0x1
 796 0109 30010000 		.4byte	.LFB15
 797 010d 48010000 		.4byte	.LFE15
 798 0111 02       		.byte	0x2
 799 0112 7D       		.byte	0x7d
 800 0113 00       		.sleb128 0
 801 0114 01       		.byte	0x1
 802 0115 0C       		.uleb128 0xc
 803 0116 01       		.byte	0x1
 804 0117 9B000000 		.4byte	.LASF20
 805 011b 01       		.byte	0x1
 806 011c AA01     		.2byte	0x1aa
 807 011e 06       		.byte	0x6
 808 011f 01       		.byte	0x1
 809 0120 04010000 		.4byte	.LFB14
 810 0124 30010000 		.4byte	.LFE14
 811 0128 00000000 		.4byte	.LLST4
 812 012c 01       		.byte	0x1
 813 012d 85010000 		.4byte	0x185
 814 0131 0D       		.uleb128 0xd
 815 0132 50030000 		.4byte	0x350
 816 0136 04010000 		.4byte	.LBI18
 817 013a 02       		.byte	.LVU70
 818 013b 00000000 		.4byte	.Ldebug_ranges0+0
 819 013f 01       		.byte	0x1
 820 0140 B001     		.2byte	0x1b0
 821 0142 02       		.byte	0x2
 822 0143 53010000 		.4byte	0x153
 823 0147 0E       		.uleb128 0xe
 824 0148 00000000 		.4byte	.Ldebug_ranges0+0
 825 014c 0F       		.uleb128 0xf
 826 014d 5E030000 		.4byte	0x35e
 827 0151 00       		.byte	0
 828 0152 00       		.byte	0
 829 0153 10       		.uleb128 0x10
 830 0154 35030000 		.4byte	0x335
 831 0158 28010000 		.4byte	.LBI22
 832 015c 01       		.byte	.LVU81
 833 015d 28010000 		.4byte	.LBB22
 834 0161 2E010000 		.4byte	.LBE22
 835 0165 01       		.byte	0x1
 836 0166 BA01     		.2byte	0x1ba
 837 0168 02       		.byte	0x2
 838 0169 7B010000 		.4byte	0x17b
 839 016d 11       		.uleb128 0x11
 840 016e 43030000 		.4byte	0x343
 841 0172 22000000 		.4byte	.LLST5
 842 0176 20000000 		.4byte	.LVUS5
 843 017a 00       		.byte	0
 844 017b 12       		.uleb128 0x12
 845 017c 1A010000 		.4byte	.LVL10
 846 0180 6B030000 		.4byte	0x36b
 847 0184 00       		.byte	0
 848 0185 0B       		.uleb128 0xb
 849 0186 01       		.byte	0x1
 850 0187 A1020000 		.4byte	.LASF19
 851 018b 01       		.byte	0x1
ARM GAS  /tmp/ccUMpXkT.s 			page 32


 852 018c 8501     		.2byte	0x185
 853 018e 06       		.byte	0x6
 854 018f 01       		.byte	0x1
 855 0190 B8000000 		.4byte	.LFB13
 856 0194 04010000 		.4byte	.LFE13
 857 0198 02       		.byte	0x2
 858 0199 7D       		.byte	0x7d
 859 019a 00       		.sleb128 0
 860 019b 01       		.byte	0x1
 861 019c 13       		.uleb128 0x13
 862 019d 01       		.byte	0x1
 863 019e B0020000 		.4byte	.LASF21
 864 01a2 01       		.byte	0x1
 865 01a3 7A01     		.2byte	0x17a
 866 01a5 06       		.byte	0x6
 867 01a6 01       		.byte	0x1
 868 01a7 A4000000 		.4byte	.LFB12
 869 01ab B8000000 		.4byte	.LFE12
 870 01af 02       		.byte	0x2
 871 01b0 7D       		.byte	0x7d
 872 01b1 00       		.sleb128 0
 873 01b2 01       		.byte	0x1
 874 01b3 DC010000 		.4byte	0x1dc
 875 01b7 14       		.uleb128 0x14
 876 01b8 35030000 		.4byte	0x335
 877 01bc AE000000 		.4byte	.LBI16
 878 01c0 01       		.byte	.LVU61
 879 01c1 AE000000 		.4byte	.LBB16
 880 01c5 B2000000 		.4byte	.LBE16
 881 01c9 01       		.byte	0x1
 882 01ca 8001     		.2byte	0x180
 883 01cc 03       		.byte	0x3
 884 01cd 11       		.uleb128 0x11
 885 01ce 43030000 		.4byte	0x343
 886 01d2 38000000 		.4byte	.LLST3
 887 01d6 36000000 		.4byte	.LVUS3
 888 01da 00       		.byte	0
 889 01db 00       		.byte	0
 890 01dc 13       		.uleb128 0x13
 891 01dd 01       		.byte	0x1
 892 01de 51000000 		.4byte	.LASF22
 893 01e2 01       		.byte	0x1
 894 01e3 6901     		.2byte	0x169
 895 01e5 06       		.byte	0x6
 896 01e6 01       		.byte	0x1
 897 01e7 86000000 		.4byte	.LFB11
 898 01eb A4000000 		.4byte	.LFE11
 899 01ef 02       		.byte	0x2
 900 01f0 7D       		.byte	0x7d
 901 01f1 00       		.sleb128 0
 902 01f2 01       		.byte	0x1
 903 01f3 14020000 		.4byte	0x214
 904 01f7 14       		.uleb128 0x14
 905 01f8 50030000 		.4byte	0x350
 906 01fc 86000000 		.4byte	.LBI14
 907 0200 02       		.byte	.LVU46
 908 0201 86000000 		.4byte	.LBB14
ARM GAS  /tmp/ccUMpXkT.s 			page 33


 909 0205 96000000 		.4byte	.LBE14
 910 0209 01       		.byte	0x1
 911 020a 6B01     		.2byte	0x16b
 912 020c 02       		.byte	0x2
 913 020d 0F       		.uleb128 0xf
 914 020e 5E030000 		.4byte	0x35e
 915 0212 00       		.byte	0
 916 0213 00       		.byte	0
 917 0214 0B       		.uleb128 0xb
 918 0215 01       		.byte	0x1
 919 0216 6B000000 		.4byte	.LASF23
 920 021a 01       		.byte	0x1
 921 021b 6101     		.2byte	0x161
 922 021d 06       		.byte	0x6
 923 021e 01       		.byte	0x1
 924 021f 84000000 		.4byte	.LFB10
 925 0223 86000000 		.4byte	.LFE10
 926 0227 02       		.byte	0x2
 927 0228 7D       		.byte	0x7d
 928 0229 00       		.sleb128 0
 929 022a 01       		.byte	0x1
 930 022b 15       		.uleb128 0x15
 931 022c 01       		.byte	0x1
 932 022d 0D030000 		.4byte	.LASF27
 933 0231 01       		.byte	0x1
 934 0232 0101     		.2byte	0x101
 935 0234 0C       		.byte	0xc
 936 0235 01       		.byte	0x1
 937 0236 BB000000 		.4byte	0xbb
 938 023a 48010000 		.4byte	.LFB9
 939 023e 84010000 		.4byte	.LFE9
 940 0242 4C000000 		.4byte	.LLST6
 941 0246 01       		.byte	0x1
 942 0247 70020000 		.4byte	0x270
 943 024b 12       		.uleb128 0x12
 944 024c 6C010000 		.4byte	.LVL13
 945 0250 FE000000 		.4byte	0xfe
 946 0254 12       		.uleb128 0x12
 947 0255 74010000 		.4byte	.LVL14
 948 0259 70020000 		.4byte	0x270
 949 025d 12       		.uleb128 0x12
 950 025e 78010000 		.4byte	.LVL15
 951 0262 7A030000 		.4byte	0x37a
 952 0266 12       		.uleb128 0x12
 953 0267 7C010000 		.4byte	.LVL16
 954 026b 9B020000 		.4byte	0x29b
 955 026f 00       		.byte	0
 956 0270 16       		.uleb128 0x16
 957 0271 DF020000 		.4byte	.LASF38
 958 0275 01       		.byte	0x1
 959 0276 ED       		.byte	0xed
 960 0277 0D       		.byte	0xd
 961 0278 01       		.byte	0x1
 962 0279 20000000 		.4byte	.LFB8
 963 027d 3A000000 		.4byte	.LFE8
 964 0281 02       		.byte	0x2
 965 0282 7D       		.byte	0x7d
ARM GAS  /tmp/ccUMpXkT.s 			page 34


 966 0283 00       		.sleb128 0
 967 0284 01       		.byte	0x1
 968 0285 17       		.uleb128 0x17
 969 0286 01       		.byte	0x1
 970 0287 7B020000 		.4byte	.LASF24
 971 028b 01       		.byte	0x1
 972 028c D9       		.byte	0xd9
 973 028d 06       		.byte	0x6
 974 028e 01       		.byte	0x1
 975 028f 5C000000 		.4byte	.LFB7
 976 0293 84000000 		.4byte	.LFE7
 977 0297 02       		.byte	0x2
 978 0298 7D       		.byte	0x7d
 979 0299 00       		.sleb128 0
 980 029a 01       		.byte	0x1
 981 029b 18       		.uleb128 0x18
 982 029c E6000000 		.4byte	.LASF39
 983 02a0 01       		.byte	0x1
 984 02a1 C0       		.byte	0xc0
 985 02a2 0D       		.byte	0xd
 986 02a3 01       		.byte	0x1
 987 02a4 00000000 		.4byte	.LFB6
 988 02a8 20000000 		.4byte	.LFE6
 989 02ac 6C000000 		.4byte	.LLST0
 990 02b0 01       		.byte	0x1
 991 02b1 E0020000 		.4byte	0x2e0
 992 02b5 0A       		.uleb128 0xa
 993 02b6 06010000 		.4byte	.LASF26
 994 02ba 01       		.byte	0x1
 995 02bb C2       		.byte	0xc2
 996 02bc 13       		.byte	0x13
 997 02bd 8A000000 		.4byte	0x8a
 998 02c1 02       		.byte	0x2
 999 02c2 91       		.byte	0x91
 1000 02c3 7C       		.sleb128 -4
 1001 02c4 19       		.uleb128 0x19
 1002 02c5 50030000 		.4byte	0x350
 1003 02c9 06000000 		.4byte	.LBI12
 1004 02cd 02       		.byte	.LVU7
 1005 02ce 06000000 		.4byte	.LBB12
 1006 02d2 16000000 		.4byte	.LBE12
 1007 02d6 01       		.byte	0x1
 1008 02d7 CB       		.byte	0xcb
 1009 02d8 02       		.byte	0x2
 1010 02d9 0F       		.uleb128 0xf
 1011 02da 5E030000 		.4byte	0x35e
 1012 02de 00       		.byte	0
 1013 02df 00       		.byte	0
 1014 02e0 1A       		.uleb128 0x1a
 1015 02e1 01       		.byte	0x1
 1016 02e2 59010000 		.4byte	.LASF28
 1017 02e6 01       		.byte	0x1
 1018 02e7 AE       		.byte	0xae
 1019 02e8 0E       		.byte	0xe
 1020 02e9 01       		.byte	0x1
 1021 02ea E6000000 		.4byte	0xe6
 1022 02ee 3A000000 		.4byte	.LFB5
ARM GAS  /tmp/ccUMpXkT.s 			page 35


 1023 02f2 5C000000 		.4byte	.LFE5
 1024 02f6 02       		.byte	0x2
 1025 02f7 7D       		.byte	0x7d
 1026 02f8 00       		.sleb128 0
 1027 02f9 01       		.byte	0x1
 1028 02fa 35030000 		.4byte	0x335
 1029 02fe 1B       		.uleb128 0x1b
 1030 02ff 94020000 		.4byte	.LASF29
 1031 0303 01       		.byte	0x1
 1032 0304 AE       		.byte	0xae
 1033 0305 32       		.byte	0x32
 1034 0306 E6000000 		.4byte	0xe6
 1035 030a A6000000 		.4byte	.LLST1
 1036 030e 98000000 		.4byte	.LVUS1
 1037 0312 1B       		.uleb128 0x1b
 1038 0313 64000000 		.4byte	.LASF30
 1039 0317 01       		.byte	0x1
 1040 0318 AE       		.byte	0xae
 1041 0319 4F       		.byte	0x4f
 1042 031a 8F000000 		.4byte	0x8f
 1043 031e 09010000 		.4byte	.LLST2
 1044 0322 05010000 		.4byte	.LVUS2
 1045 0326 1C       		.uleb128 0x1c
 1046 0327 87020000 		.4byte	.LASF40
 1047 032b 01       		.byte	0x1
 1048 032c AE       		.byte	0xae
 1049 032d 5D       		.byte	0x5d
 1050 032e AD000000 		.4byte	0xad
 1051 0332 01       		.byte	0x1
 1052 0333 52       		.byte	0x52
 1053 0334 00       		.byte	0
 1054 0335 1D       		.uleb128 0x1d
 1055 0336 82010000 		.4byte	.LASF31
 1056 033a 02       		.byte	0x2
 1057 033b E3       		.byte	0xe3
 1058 033c 1E       		.byte	0x1e
 1059 033d 01       		.byte	0x1
 1060 033e 03       		.byte	0x3
 1061 033f 50030000 		.4byte	0x350
 1062 0343 1E       		.uleb128 0x1e
 1063 0344 CB020000 		.4byte	.LASF41
 1064 0348 02       		.byte	0x2
 1065 0349 E3       		.byte	0xe3
 1066 034a 38       		.byte	0x38
 1067 034b 7E000000 		.4byte	0x7e
 1068 034f 00       		.byte	0
 1069 0350 1D       		.uleb128 0x1d
 1070 0351 C2010000 		.4byte	.LASF32
 1071 0355 02       		.byte	0x2
 1072 0356 BF       		.byte	0xbf
 1073 0357 1E       		.byte	0x1e
 1074 0358 01       		.byte	0x1
 1075 0359 03       		.byte	0x3
 1076 035a 6B030000 		.4byte	0x36b
 1077 035e 1F       		.uleb128 0x1f
 1078 035f 4C010000 		.4byte	.LASF42
 1079 0363 02       		.byte	0x2
ARM GAS  /tmp/ccUMpXkT.s 			page 36


 1080 0364 C1       		.byte	0xc1
 1081 0365 0A       		.byte	0xa
 1082 0366 7E000000 		.4byte	0x7e
 1083 036a 00       		.byte	0
 1084 036b 20       		.uleb128 0x20
 1085 036c 01       		.byte	0x1
 1086 036d 01       		.byte	0x1
 1087 036e 6F010000 		.4byte	.LASF33
 1088 0372 6F010000 		.4byte	.LASF33
 1089 0376 06       		.byte	0x6
 1090 0377 AF08     		.2byte	0x8af
 1091 0379 0C       		.byte	0xc
 1092 037a 20       		.uleb128 0x20
 1093 037b 01       		.byte	0x1
 1094 037c 01       		.byte	0x1
 1095 037d 88000000 		.4byte	.LASF34
 1096 0381 88000000 		.4byte	.LASF34
 1097 0385 06       		.byte	0x6
 1098 0386 0309     		.2byte	0x903
 1099 0388 17       		.byte	0x17
 1100 0389 00       		.byte	0
 1101              		.section	.debug_abbrev,"",%progbits
 1102              	.Ldebug_abbrev0:
 1103 0000 01       		.uleb128 0x1
 1104 0001 11       		.uleb128 0x11
 1105 0002 01       		.byte	0x1
 1106 0003 25       		.uleb128 0x25
 1107 0004 0E       		.uleb128 0xe
 1108 0005 13       		.uleb128 0x13
 1109 0006 0B       		.uleb128 0xb
 1110 0007 03       		.uleb128 0x3
 1111 0008 0E       		.uleb128 0xe
 1112 0009 1B       		.uleb128 0x1b
 1113 000a 0E       		.uleb128 0xe
 1114 000b 11       		.uleb128 0x11
 1115 000c 01       		.uleb128 0x1
 1116 000d 12       		.uleb128 0x12
 1117 000e 01       		.uleb128 0x1
 1118 000f 10       		.uleb128 0x10
 1119 0010 06       		.uleb128 0x6
 1120 0011 00       		.byte	0
 1121 0012 00       		.byte	0
 1122 0013 02       		.uleb128 0x2
 1123 0014 24       		.uleb128 0x24
 1124 0015 00       		.byte	0
 1125 0016 0B       		.uleb128 0xb
 1126 0017 0B       		.uleb128 0xb
 1127 0018 3E       		.uleb128 0x3e
 1128 0019 0B       		.uleb128 0xb
 1129 001a 03       		.uleb128 0x3
 1130 001b 08       		.uleb128 0x8
 1131 001c 00       		.byte	0
 1132 001d 00       		.byte	0
 1133 001e 03       		.uleb128 0x3
 1134 001f 24       		.uleb128 0x24
 1135 0020 00       		.byte	0
 1136 0021 0B       		.uleb128 0xb
ARM GAS  /tmp/ccUMpXkT.s 			page 37


 1137 0022 0B       		.uleb128 0xb
 1138 0023 3E       		.uleb128 0x3e
 1139 0024 0B       		.uleb128 0xb
 1140 0025 03       		.uleb128 0x3
 1141 0026 0E       		.uleb128 0xe
 1142 0027 00       		.byte	0
 1143 0028 00       		.byte	0
 1144 0029 04       		.uleb128 0x4
 1145 002a 16       		.uleb128 0x16
 1146 002b 00       		.byte	0
 1147 002c 03       		.uleb128 0x3
 1148 002d 0E       		.uleb128 0xe
 1149 002e 3A       		.uleb128 0x3a
 1150 002f 0B       		.uleb128 0xb
 1151 0030 3B       		.uleb128 0x3b
 1152 0031 0B       		.uleb128 0xb
 1153 0032 39       		.uleb128 0x39
 1154 0033 0B       		.uleb128 0xb
 1155 0034 49       		.uleb128 0x49
 1156 0035 13       		.uleb128 0x13
 1157 0036 00       		.byte	0
 1158 0037 00       		.byte	0
 1159 0038 05       		.uleb128 0x5
 1160 0039 35       		.uleb128 0x35
 1161 003a 00       		.byte	0
 1162 003b 49       		.uleb128 0x49
 1163 003c 13       		.uleb128 0x13
 1164 003d 00       		.byte	0
 1165 003e 00       		.byte	0
 1166 003f 06       		.uleb128 0x6
 1167 0040 0F       		.uleb128 0xf
 1168 0041 00       		.byte	0
 1169 0042 0B       		.uleb128 0xb
 1170 0043 0B       		.uleb128 0xb
 1171 0044 49       		.uleb128 0x49
 1172 0045 13       		.uleb128 0x13
 1173 0046 00       		.byte	0
 1174 0047 00       		.byte	0
 1175 0048 07       		.uleb128 0x7
 1176 0049 15       		.uleb128 0x15
 1177 004a 01       		.byte	0x1
 1178 004b 27       		.uleb128 0x27
 1179 004c 0C       		.uleb128 0xc
 1180 004d 01       		.uleb128 0x1
 1181 004e 13       		.uleb128 0x13
 1182 004f 00       		.byte	0
 1183 0050 00       		.byte	0
 1184 0051 08       		.uleb128 0x8
 1185 0052 05       		.uleb128 0x5
 1186 0053 00       		.byte	0
 1187 0054 49       		.uleb128 0x49
 1188 0055 13       		.uleb128 0x13
 1189 0056 00       		.byte	0
 1190 0057 00       		.byte	0
 1191 0058 09       		.uleb128 0x9
 1192 0059 0F       		.uleb128 0xf
 1193 005a 00       		.byte	0
ARM GAS  /tmp/ccUMpXkT.s 			page 38


 1194 005b 0B       		.uleb128 0xb
 1195 005c 0B       		.uleb128 0xb
 1196 005d 00       		.byte	0
 1197 005e 00       		.byte	0
 1198 005f 0A       		.uleb128 0xa
 1199 0060 34       		.uleb128 0x34
 1200 0061 00       		.byte	0
 1201 0062 03       		.uleb128 0x3
 1202 0063 0E       		.uleb128 0xe
 1203 0064 3A       		.uleb128 0x3a
 1204 0065 0B       		.uleb128 0xb
 1205 0066 3B       		.uleb128 0x3b
 1206 0067 0B       		.uleb128 0xb
 1207 0068 39       		.uleb128 0x39
 1208 0069 0B       		.uleb128 0xb
 1209 006a 49       		.uleb128 0x49
 1210 006b 13       		.uleb128 0x13
 1211 006c 02       		.uleb128 0x2
 1212 006d 0A       		.uleb128 0xa
 1213 006e 00       		.byte	0
 1214 006f 00       		.byte	0
 1215 0070 0B       		.uleb128 0xb
 1216 0071 2E       		.uleb128 0x2e
 1217 0072 00       		.byte	0
 1218 0073 3F       		.uleb128 0x3f
 1219 0074 0C       		.uleb128 0xc
 1220 0075 03       		.uleb128 0x3
 1221 0076 0E       		.uleb128 0xe
 1222 0077 3A       		.uleb128 0x3a
 1223 0078 0B       		.uleb128 0xb
 1224 0079 3B       		.uleb128 0x3b
 1225 007a 05       		.uleb128 0x5
 1226 007b 39       		.uleb128 0x39
 1227 007c 0B       		.uleb128 0xb
 1228 007d 27       		.uleb128 0x27
 1229 007e 0C       		.uleb128 0xc
 1230 007f 11       		.uleb128 0x11
 1231 0080 01       		.uleb128 0x1
 1232 0081 12       		.uleb128 0x12
 1233 0082 01       		.uleb128 0x1
 1234 0083 40       		.uleb128 0x40
 1235 0084 0A       		.uleb128 0xa
 1236 0085 9742     		.uleb128 0x2117
 1237 0087 0C       		.uleb128 0xc
 1238 0088 00       		.byte	0
 1239 0089 00       		.byte	0
 1240 008a 0C       		.uleb128 0xc
 1241 008b 2E       		.uleb128 0x2e
 1242 008c 01       		.byte	0x1
 1243 008d 3F       		.uleb128 0x3f
 1244 008e 0C       		.uleb128 0xc
 1245 008f 03       		.uleb128 0x3
 1246 0090 0E       		.uleb128 0xe
 1247 0091 3A       		.uleb128 0x3a
 1248 0092 0B       		.uleb128 0xb
 1249 0093 3B       		.uleb128 0x3b
 1250 0094 05       		.uleb128 0x5
ARM GAS  /tmp/ccUMpXkT.s 			page 39


 1251 0095 39       		.uleb128 0x39
 1252 0096 0B       		.uleb128 0xb
 1253 0097 27       		.uleb128 0x27
 1254 0098 0C       		.uleb128 0xc
 1255 0099 11       		.uleb128 0x11
 1256 009a 01       		.uleb128 0x1
 1257 009b 12       		.uleb128 0x12
 1258 009c 01       		.uleb128 0x1
 1259 009d 40       		.uleb128 0x40
 1260 009e 06       		.uleb128 0x6
 1261 009f 9742     		.uleb128 0x2117
 1262 00a1 0C       		.uleb128 0xc
 1263 00a2 01       		.uleb128 0x1
 1264 00a3 13       		.uleb128 0x13
 1265 00a4 00       		.byte	0
 1266 00a5 00       		.byte	0
 1267 00a6 0D       		.uleb128 0xd
 1268 00a7 1D       		.uleb128 0x1d
 1269 00a8 01       		.byte	0x1
 1270 00a9 31       		.uleb128 0x31
 1271 00aa 13       		.uleb128 0x13
 1272 00ab 52       		.uleb128 0x52
 1273 00ac 01       		.uleb128 0x1
 1274 00ad B842     		.uleb128 0x2138
 1275 00af 0B       		.uleb128 0xb
 1276 00b0 55       		.uleb128 0x55
 1277 00b1 06       		.uleb128 0x6
 1278 00b2 58       		.uleb128 0x58
 1279 00b3 0B       		.uleb128 0xb
 1280 00b4 59       		.uleb128 0x59
 1281 00b5 05       		.uleb128 0x5
 1282 00b6 57       		.uleb128 0x57
 1283 00b7 0B       		.uleb128 0xb
 1284 00b8 01       		.uleb128 0x1
 1285 00b9 13       		.uleb128 0x13
 1286 00ba 00       		.byte	0
 1287 00bb 00       		.byte	0
 1288 00bc 0E       		.uleb128 0xe
 1289 00bd 0B       		.uleb128 0xb
 1290 00be 01       		.byte	0x1
 1291 00bf 55       		.uleb128 0x55
 1292 00c0 06       		.uleb128 0x6
 1293 00c1 00       		.byte	0
 1294 00c2 00       		.byte	0
 1295 00c3 0F       		.uleb128 0xf
 1296 00c4 34       		.uleb128 0x34
 1297 00c5 00       		.byte	0
 1298 00c6 31       		.uleb128 0x31
 1299 00c7 13       		.uleb128 0x13
 1300 00c8 00       		.byte	0
 1301 00c9 00       		.byte	0
 1302 00ca 10       		.uleb128 0x10
 1303 00cb 1D       		.uleb128 0x1d
 1304 00cc 01       		.byte	0x1
 1305 00cd 31       		.uleb128 0x31
 1306 00ce 13       		.uleb128 0x13
 1307 00cf 52       		.uleb128 0x52
ARM GAS  /tmp/ccUMpXkT.s 			page 40


 1308 00d0 01       		.uleb128 0x1
 1309 00d1 B842     		.uleb128 0x2138
 1310 00d3 0B       		.uleb128 0xb
 1311 00d4 11       		.uleb128 0x11
 1312 00d5 01       		.uleb128 0x1
 1313 00d6 12       		.uleb128 0x12
 1314 00d7 01       		.uleb128 0x1
 1315 00d8 58       		.uleb128 0x58
 1316 00d9 0B       		.uleb128 0xb
 1317 00da 59       		.uleb128 0x59
 1318 00db 05       		.uleb128 0x5
 1319 00dc 57       		.uleb128 0x57
 1320 00dd 0B       		.uleb128 0xb
 1321 00de 01       		.uleb128 0x1
 1322 00df 13       		.uleb128 0x13
 1323 00e0 00       		.byte	0
 1324 00e1 00       		.byte	0
 1325 00e2 11       		.uleb128 0x11
 1326 00e3 05       		.uleb128 0x5
 1327 00e4 00       		.byte	0
 1328 00e5 31       		.uleb128 0x31
 1329 00e6 13       		.uleb128 0x13
 1330 00e7 02       		.uleb128 0x2
 1331 00e8 06       		.uleb128 0x6
 1332 00e9 B742     		.uleb128 0x2137
 1333 00eb 06       		.uleb128 0x6
 1334 00ec 00       		.byte	0
 1335 00ed 00       		.byte	0
 1336 00ee 12       		.uleb128 0x12
 1337 00ef 898201   		.uleb128 0x4109
 1338 00f2 00       		.byte	0
 1339 00f3 11       		.uleb128 0x11
 1340 00f4 01       		.uleb128 0x1
 1341 00f5 31       		.uleb128 0x31
 1342 00f6 13       		.uleb128 0x13
 1343 00f7 00       		.byte	0
 1344 00f8 00       		.byte	0
 1345 00f9 13       		.uleb128 0x13
 1346 00fa 2E       		.uleb128 0x2e
 1347 00fb 01       		.byte	0x1
 1348 00fc 3F       		.uleb128 0x3f
 1349 00fd 0C       		.uleb128 0xc
 1350 00fe 03       		.uleb128 0x3
 1351 00ff 0E       		.uleb128 0xe
 1352 0100 3A       		.uleb128 0x3a
 1353 0101 0B       		.uleb128 0xb
 1354 0102 3B       		.uleb128 0x3b
 1355 0103 05       		.uleb128 0x5
 1356 0104 39       		.uleb128 0x39
 1357 0105 0B       		.uleb128 0xb
 1358 0106 27       		.uleb128 0x27
 1359 0107 0C       		.uleb128 0xc
 1360 0108 11       		.uleb128 0x11
 1361 0109 01       		.uleb128 0x1
 1362 010a 12       		.uleb128 0x12
 1363 010b 01       		.uleb128 0x1
 1364 010c 40       		.uleb128 0x40
ARM GAS  /tmp/ccUMpXkT.s 			page 41


 1365 010d 0A       		.uleb128 0xa
 1366 010e 9742     		.uleb128 0x2117
 1367 0110 0C       		.uleb128 0xc
 1368 0111 01       		.uleb128 0x1
 1369 0112 13       		.uleb128 0x13
 1370 0113 00       		.byte	0
 1371 0114 00       		.byte	0
 1372 0115 14       		.uleb128 0x14
 1373 0116 1D       		.uleb128 0x1d
 1374 0117 01       		.byte	0x1
 1375 0118 31       		.uleb128 0x31
 1376 0119 13       		.uleb128 0x13
 1377 011a 52       		.uleb128 0x52
 1378 011b 01       		.uleb128 0x1
 1379 011c B842     		.uleb128 0x2138
 1380 011e 0B       		.uleb128 0xb
 1381 011f 11       		.uleb128 0x11
 1382 0120 01       		.uleb128 0x1
 1383 0121 12       		.uleb128 0x12
 1384 0122 01       		.uleb128 0x1
 1385 0123 58       		.uleb128 0x58
 1386 0124 0B       		.uleb128 0xb
 1387 0125 59       		.uleb128 0x59
 1388 0126 05       		.uleb128 0x5
 1389 0127 57       		.uleb128 0x57
 1390 0128 0B       		.uleb128 0xb
 1391 0129 00       		.byte	0
 1392 012a 00       		.byte	0
 1393 012b 15       		.uleb128 0x15
 1394 012c 2E       		.uleb128 0x2e
 1395 012d 01       		.byte	0x1
 1396 012e 3F       		.uleb128 0x3f
 1397 012f 0C       		.uleb128 0xc
 1398 0130 03       		.uleb128 0x3
 1399 0131 0E       		.uleb128 0xe
 1400 0132 3A       		.uleb128 0x3a
 1401 0133 0B       		.uleb128 0xb
 1402 0134 3B       		.uleb128 0x3b
 1403 0135 05       		.uleb128 0x5
 1404 0136 39       		.uleb128 0x39
 1405 0137 0B       		.uleb128 0xb
 1406 0138 27       		.uleb128 0x27
 1407 0139 0C       		.uleb128 0xc
 1408 013a 49       		.uleb128 0x49
 1409 013b 13       		.uleb128 0x13
 1410 013c 11       		.uleb128 0x11
 1411 013d 01       		.uleb128 0x1
 1412 013e 12       		.uleb128 0x12
 1413 013f 01       		.uleb128 0x1
 1414 0140 40       		.uleb128 0x40
 1415 0141 06       		.uleb128 0x6
 1416 0142 9742     		.uleb128 0x2117
 1417 0144 0C       		.uleb128 0xc
 1418 0145 01       		.uleb128 0x1
 1419 0146 13       		.uleb128 0x13
 1420 0147 00       		.byte	0
 1421 0148 00       		.byte	0
ARM GAS  /tmp/ccUMpXkT.s 			page 42


 1422 0149 16       		.uleb128 0x16
 1423 014a 2E       		.uleb128 0x2e
 1424 014b 00       		.byte	0
 1425 014c 03       		.uleb128 0x3
 1426 014d 0E       		.uleb128 0xe
 1427 014e 3A       		.uleb128 0x3a
 1428 014f 0B       		.uleb128 0xb
 1429 0150 3B       		.uleb128 0x3b
 1430 0151 0B       		.uleb128 0xb
 1431 0152 39       		.uleb128 0x39
 1432 0153 0B       		.uleb128 0xb
 1433 0154 27       		.uleb128 0x27
 1434 0155 0C       		.uleb128 0xc
 1435 0156 11       		.uleb128 0x11
 1436 0157 01       		.uleb128 0x1
 1437 0158 12       		.uleb128 0x12
 1438 0159 01       		.uleb128 0x1
 1439 015a 40       		.uleb128 0x40
 1440 015b 0A       		.uleb128 0xa
 1441 015c 9742     		.uleb128 0x2117
 1442 015e 0C       		.uleb128 0xc
 1443 015f 00       		.byte	0
 1444 0160 00       		.byte	0
 1445 0161 17       		.uleb128 0x17
 1446 0162 2E       		.uleb128 0x2e
 1447 0163 00       		.byte	0
 1448 0164 3F       		.uleb128 0x3f
 1449 0165 0C       		.uleb128 0xc
 1450 0166 03       		.uleb128 0x3
 1451 0167 0E       		.uleb128 0xe
 1452 0168 3A       		.uleb128 0x3a
 1453 0169 0B       		.uleb128 0xb
 1454 016a 3B       		.uleb128 0x3b
 1455 016b 0B       		.uleb128 0xb
 1456 016c 39       		.uleb128 0x39
 1457 016d 0B       		.uleb128 0xb
 1458 016e 27       		.uleb128 0x27
 1459 016f 0C       		.uleb128 0xc
 1460 0170 11       		.uleb128 0x11
 1461 0171 01       		.uleb128 0x1
 1462 0172 12       		.uleb128 0x12
 1463 0173 01       		.uleb128 0x1
 1464 0174 40       		.uleb128 0x40
 1465 0175 0A       		.uleb128 0xa
 1466 0176 9742     		.uleb128 0x2117
 1467 0178 0C       		.uleb128 0xc
 1468 0179 00       		.byte	0
 1469 017a 00       		.byte	0
 1470 017b 18       		.uleb128 0x18
 1471 017c 2E       		.uleb128 0x2e
 1472 017d 01       		.byte	0x1
 1473 017e 03       		.uleb128 0x3
 1474 017f 0E       		.uleb128 0xe
 1475 0180 3A       		.uleb128 0x3a
 1476 0181 0B       		.uleb128 0xb
 1477 0182 3B       		.uleb128 0x3b
 1478 0183 0B       		.uleb128 0xb
ARM GAS  /tmp/ccUMpXkT.s 			page 43


 1479 0184 39       		.uleb128 0x39
 1480 0185 0B       		.uleb128 0xb
 1481 0186 27       		.uleb128 0x27
 1482 0187 0C       		.uleb128 0xc
 1483 0188 11       		.uleb128 0x11
 1484 0189 01       		.uleb128 0x1
 1485 018a 12       		.uleb128 0x12
 1486 018b 01       		.uleb128 0x1
 1487 018c 40       		.uleb128 0x40
 1488 018d 06       		.uleb128 0x6
 1489 018e 9742     		.uleb128 0x2117
 1490 0190 0C       		.uleb128 0xc
 1491 0191 01       		.uleb128 0x1
 1492 0192 13       		.uleb128 0x13
 1493 0193 00       		.byte	0
 1494 0194 00       		.byte	0
 1495 0195 19       		.uleb128 0x19
 1496 0196 1D       		.uleb128 0x1d
 1497 0197 01       		.byte	0x1
 1498 0198 31       		.uleb128 0x31
 1499 0199 13       		.uleb128 0x13
 1500 019a 52       		.uleb128 0x52
 1501 019b 01       		.uleb128 0x1
 1502 019c B842     		.uleb128 0x2138
 1503 019e 0B       		.uleb128 0xb
 1504 019f 11       		.uleb128 0x11
 1505 01a0 01       		.uleb128 0x1
 1506 01a1 12       		.uleb128 0x12
 1507 01a2 01       		.uleb128 0x1
 1508 01a3 58       		.uleb128 0x58
 1509 01a4 0B       		.uleb128 0xb
 1510 01a5 59       		.uleb128 0x59
 1511 01a6 0B       		.uleb128 0xb
 1512 01a7 57       		.uleb128 0x57
 1513 01a8 0B       		.uleb128 0xb
 1514 01a9 00       		.byte	0
 1515 01aa 00       		.byte	0
 1516 01ab 1A       		.uleb128 0x1a
 1517 01ac 2E       		.uleb128 0x2e
 1518 01ad 01       		.byte	0x1
 1519 01ae 3F       		.uleb128 0x3f
 1520 01af 0C       		.uleb128 0xc
 1521 01b0 03       		.uleb128 0x3
 1522 01b1 0E       		.uleb128 0xe
 1523 01b2 3A       		.uleb128 0x3a
 1524 01b3 0B       		.uleb128 0xb
 1525 01b4 3B       		.uleb128 0x3b
 1526 01b5 0B       		.uleb128 0xb
 1527 01b6 39       		.uleb128 0x39
 1528 01b7 0B       		.uleb128 0xb
 1529 01b8 27       		.uleb128 0x27
 1530 01b9 0C       		.uleb128 0xc
 1531 01ba 49       		.uleb128 0x49
 1532 01bb 13       		.uleb128 0x13
 1533 01bc 11       		.uleb128 0x11
 1534 01bd 01       		.uleb128 0x1
 1535 01be 12       		.uleb128 0x12
ARM GAS  /tmp/ccUMpXkT.s 			page 44


 1536 01bf 01       		.uleb128 0x1
 1537 01c0 40       		.uleb128 0x40
 1538 01c1 0A       		.uleb128 0xa
 1539 01c2 9742     		.uleb128 0x2117
 1540 01c4 0C       		.uleb128 0xc
 1541 01c5 01       		.uleb128 0x1
 1542 01c6 13       		.uleb128 0x13
 1543 01c7 00       		.byte	0
 1544 01c8 00       		.byte	0
 1545 01c9 1B       		.uleb128 0x1b
 1546 01ca 05       		.uleb128 0x5
 1547 01cb 00       		.byte	0
 1548 01cc 03       		.uleb128 0x3
 1549 01cd 0E       		.uleb128 0xe
 1550 01ce 3A       		.uleb128 0x3a
 1551 01cf 0B       		.uleb128 0xb
 1552 01d0 3B       		.uleb128 0x3b
 1553 01d1 0B       		.uleb128 0xb
 1554 01d2 39       		.uleb128 0x39
 1555 01d3 0B       		.uleb128 0xb
 1556 01d4 49       		.uleb128 0x49
 1557 01d5 13       		.uleb128 0x13
 1558 01d6 02       		.uleb128 0x2
 1559 01d7 06       		.uleb128 0x6
 1560 01d8 B742     		.uleb128 0x2137
 1561 01da 06       		.uleb128 0x6
 1562 01db 00       		.byte	0
 1563 01dc 00       		.byte	0
 1564 01dd 1C       		.uleb128 0x1c
 1565 01de 05       		.uleb128 0x5
 1566 01df 00       		.byte	0
 1567 01e0 03       		.uleb128 0x3
 1568 01e1 0E       		.uleb128 0xe
 1569 01e2 3A       		.uleb128 0x3a
 1570 01e3 0B       		.uleb128 0xb
 1571 01e4 3B       		.uleb128 0x3b
 1572 01e5 0B       		.uleb128 0xb
 1573 01e6 39       		.uleb128 0x39
 1574 01e7 0B       		.uleb128 0xb
 1575 01e8 49       		.uleb128 0x49
 1576 01e9 13       		.uleb128 0x13
 1577 01ea 02       		.uleb128 0x2
 1578 01eb 0A       		.uleb128 0xa
 1579 01ec 00       		.byte	0
 1580 01ed 00       		.byte	0
 1581 01ee 1D       		.uleb128 0x1d
 1582 01ef 2E       		.uleb128 0x2e
 1583 01f0 01       		.byte	0x1
 1584 01f1 03       		.uleb128 0x3
 1585 01f2 0E       		.uleb128 0xe
 1586 01f3 3A       		.uleb128 0x3a
 1587 01f4 0B       		.uleb128 0xb
 1588 01f5 3B       		.uleb128 0x3b
 1589 01f6 0B       		.uleb128 0xb
 1590 01f7 39       		.uleb128 0x39
 1591 01f8 0B       		.uleb128 0xb
 1592 01f9 27       		.uleb128 0x27
ARM GAS  /tmp/ccUMpXkT.s 			page 45


 1593 01fa 0C       		.uleb128 0xc
 1594 01fb 20       		.uleb128 0x20
 1595 01fc 0B       		.uleb128 0xb
 1596 01fd 01       		.uleb128 0x1
 1597 01fe 13       		.uleb128 0x13
 1598 01ff 00       		.byte	0
 1599 0200 00       		.byte	0
 1600 0201 1E       		.uleb128 0x1e
 1601 0202 05       		.uleb128 0x5
 1602 0203 00       		.byte	0
 1603 0204 03       		.uleb128 0x3
 1604 0205 0E       		.uleb128 0xe
 1605 0206 3A       		.uleb128 0x3a
 1606 0207 0B       		.uleb128 0xb
 1607 0208 3B       		.uleb128 0x3b
 1608 0209 0B       		.uleb128 0xb
 1609 020a 39       		.uleb128 0x39
 1610 020b 0B       		.uleb128 0xb
 1611 020c 49       		.uleb128 0x49
 1612 020d 13       		.uleb128 0x13
 1613 020e 00       		.byte	0
 1614 020f 00       		.byte	0
 1615 0210 1F       		.uleb128 0x1f
 1616 0211 34       		.uleb128 0x34
 1617 0212 00       		.byte	0
 1618 0213 03       		.uleb128 0x3
 1619 0214 0E       		.uleb128 0xe
 1620 0215 3A       		.uleb128 0x3a
 1621 0216 0B       		.uleb128 0xb
 1622 0217 3B       		.uleb128 0x3b
 1623 0218 0B       		.uleb128 0xb
 1624 0219 39       		.uleb128 0x39
 1625 021a 0B       		.uleb128 0xb
 1626 021b 49       		.uleb128 0x49
 1627 021c 13       		.uleb128 0x13
 1628 021d 00       		.byte	0
 1629 021e 00       		.byte	0
 1630 021f 20       		.uleb128 0x20
 1631 0220 2E       		.uleb128 0x2e
 1632 0221 00       		.byte	0
 1633 0222 3F       		.uleb128 0x3f
 1634 0223 0C       		.uleb128 0xc
 1635 0224 3C       		.uleb128 0x3c
 1636 0225 0C       		.uleb128 0xc
 1637 0226 8740     		.uleb128 0x2007
 1638 0228 0E       		.uleb128 0xe
 1639 0229 03       		.uleb128 0x3
 1640 022a 0E       		.uleb128 0xe
 1641 022b 3A       		.uleb128 0x3a
 1642 022c 0B       		.uleb128 0xb
 1643 022d 3B       		.uleb128 0x3b
 1644 022e 05       		.uleb128 0x5
 1645 022f 39       		.uleb128 0x39
 1646 0230 0B       		.uleb128 0xb
 1647 0231 00       		.byte	0
 1648 0232 00       		.byte	0
 1649 0233 00       		.byte	0
ARM GAS  /tmp/ccUMpXkT.s 			page 46


 1650              		.section	.debug_loc,"",%progbits
 1651              	.Ldebug_loc0:
 1652              	.LLST4:
 1653 0000 04010000 		.4byte	.LFB14-.Ltext0
 1654 0004 06010000 		.4byte	.LCFI2-.Ltext0
 1655 0008 0200     		.2byte	0x2
 1656 000a 7D       		.byte	0x7d
 1657 000b 00       		.sleb128 0
 1658 000c 06010000 		.4byte	.LCFI2-.Ltext0
 1659 0010 30010000 		.4byte	.LFE14-.Ltext0
 1660 0014 0200     		.2byte	0x2
 1661 0016 7D       		.byte	0x7d
 1662 0017 08       		.sleb128 8
 1663 0018 00000000 		.4byte	0
 1664 001c 00000000 		.4byte	0
 1665              	.LVUS5:
 1666 0020 01       		.uleb128 .LVU81
 1667 0021 00       		.uleb128 .LVU83
 1668              	.LLST5:
 1669 0022 28010000 		.4byte	.LVL11-.Ltext0
 1670 0026 2E010000 		.4byte	.LVL12-.Ltext0
 1671 002a 0200     		.2byte	0x2
 1672 002c 30       		.byte	0x30
 1673 002d 9F       		.byte	0x9f
 1674 002e 00000000 		.4byte	0
 1675 0032 00000000 		.4byte	0
 1676              	.LVUS3:
 1677 0036 01       		.uleb128 .LVU61
 1678 0037 00       		.uleb128 .LVU63
 1679              	.LLST3:
 1680 0038 AE000000 		.4byte	.LVL8-.Ltext0
 1681 003c B2000000 		.4byte	.LVL9-.Ltext0
 1682 0040 0200     		.2byte	0x2
 1683 0042 30       		.byte	0x30
 1684 0043 9F       		.byte	0x9f
 1685 0044 00000000 		.4byte	0
 1686 0048 00000000 		.4byte	0
 1687              	.LLST6:
 1688 004c 48010000 		.4byte	.LFB9-.Ltext0
 1689 0050 4E010000 		.4byte	.LCFI3-.Ltext0
 1690 0054 0200     		.2byte	0x2
 1691 0056 7D       		.byte	0x7d
 1692 0057 00       		.sleb128 0
 1693 0058 4E010000 		.4byte	.LCFI3-.Ltext0
 1694 005c 84010000 		.4byte	.LFE9-.Ltext0
 1695 0060 0200     		.2byte	0x2
 1696 0062 7D       		.byte	0x7d
 1697 0063 08       		.sleb128 8
 1698 0064 00000000 		.4byte	0
 1699 0068 00000000 		.4byte	0
 1700              	.LLST0:
 1701 006c 00000000 		.4byte	.LFB6-.Ltext0
 1702 0070 04000000 		.4byte	.LCFI0-.Ltext0
 1703 0074 0200     		.2byte	0x2
 1704 0076 7D       		.byte	0x7d
 1705 0077 00       		.sleb128 0
 1706 0078 04000000 		.4byte	.LCFI0-.Ltext0
ARM GAS  /tmp/ccUMpXkT.s 			page 47


 1707 007c 1E000000 		.4byte	.LCFI1-.Ltext0
 1708 0080 0200     		.2byte	0x2
 1709 0082 7D       		.byte	0x7d
 1710 0083 08       		.sleb128 8
 1711 0084 1E000000 		.4byte	.LCFI1-.Ltext0
 1712 0088 20000000 		.4byte	.LFE6-.Ltext0
 1713 008c 0200     		.2byte	0x2
 1714 008e 7D       		.byte	0x7d
 1715 008f 00       		.sleb128 0
 1716 0090 00000000 		.4byte	0
 1717 0094 00000000 		.4byte	0
 1718              	.LVUS1:
 1719 0098 00       		.uleb128 0
 1720 0099 02       		.uleb128 .LVU21
 1721 009a 02       		.uleb128 .LVU21
 1722 009b 01       		.uleb128 .LVU24
 1723 009c 01       		.uleb128 .LVU24
 1724 009d 01       		.uleb128 .LVU29
 1725 009e 01       		.uleb128 .LVU29
 1726 009f 01       		.uleb128 .LVU32
 1727 00a0 01       		.uleb128 .LVU32
 1728 00a1 01       		.uleb128 .LVU35
 1729 00a2 01       		.uleb128 .LVU35
 1730 00a3 00       		.uleb128 .LVU37
 1731 00a4 00       		.uleb128 .LVU37
 1732 00a5 00       		.uleb128 0
 1733              	.LLST1:
 1734 00a6 3A000000 		.4byte	.LVL1-.Ltext0
 1735 00aa 3A000000 		.4byte	.LVL1-.Ltext0
 1736 00ae 0100     		.2byte	0x1
 1737 00b0 50       		.byte	0x50
 1738 00b1 3A000000 		.4byte	.LVL1-.Ltext0
 1739 00b5 42000000 		.4byte	.LVL2-.Ltext0
 1740 00b9 0300     		.2byte	0x3
 1741 00bb 70       		.byte	0x70
 1742 00bc 7C       		.sleb128 -4
 1743 00bd 9F       		.byte	0x9f
 1744 00be 42000000 		.4byte	.LVL2-.Ltext0
 1745 00c2 4C000000 		.4byte	.LVL4-.Ltext0
 1746 00c6 0300     		.2byte	0x3
 1747 00c8 70       		.byte	0x70
 1748 00c9 78       		.sleb128 -8
 1749 00ca 9F       		.byte	0x9f
 1750 00cb 4C000000 		.4byte	.LVL4-.Ltext0
 1751 00cf 50000000 		.4byte	.LVL5-.Ltext0
 1752 00d3 0300     		.2byte	0x3
 1753 00d5 70       		.byte	0x70
 1754 00d6 74       		.sleb128 -12
 1755 00d7 9F       		.byte	0x9f
 1756 00d8 50000000 		.4byte	.LVL5-.Ltext0
 1757 00dc 54000000 		.4byte	.LVL6-.Ltext0
 1758 00e0 0300     		.2byte	0x3
 1759 00e2 70       		.byte	0x70
 1760 00e3 60       		.sleb128 -32
 1761 00e4 9F       		.byte	0x9f
 1762 00e5 54000000 		.4byte	.LVL6-.Ltext0
 1763 00e9 56000000 		.4byte	.LVL7-.Ltext0
ARM GAS  /tmp/ccUMpXkT.s 			page 48


 1764 00ed 0300     		.2byte	0x3
 1765 00ef 70       		.byte	0x70
 1766 00f0 40       		.sleb128 -64
 1767 00f1 9F       		.byte	0x9f
 1768 00f2 56000000 		.4byte	.LVL7-.Ltext0
 1769 00f6 5C000000 		.4byte	.LFE5-.Ltext0
 1770 00fa 0100     		.2byte	0x1
 1771 00fc 50       		.byte	0x50
 1772 00fd 00000000 		.4byte	0
 1773 0101 00000000 		.4byte	0
 1774              	.LVUS2:
 1775 0105 00       		.uleb128 0
 1776 0106 00       		.uleb128 .LVU27
 1777 0107 00       		.uleb128 .LVU27
 1778 0108 00       		.uleb128 0
 1779              	.LLST2:
 1780 0109 3A000000 		.4byte	.LVL1-.Ltext0
 1781 010d 48000000 		.4byte	.LVL3-.Ltext0
 1782 0111 0100     		.2byte	0x1
 1783 0113 51       		.byte	0x51
 1784 0114 48000000 		.4byte	.LVL3-.Ltext0
 1785 0118 5C000000 		.4byte	.LFE5-.Ltext0
 1786 011c 0400     		.2byte	0x4
 1787 011e F3       		.byte	0xf3
 1788 011f 01       		.uleb128 0x1
 1789 0120 51       		.byte	0x51
 1790 0121 9F       		.byte	0x9f
 1791 0122 00000000 		.4byte	0
 1792 0126 00000000 		.4byte	0
 1793              		.section	.debug_aranges,"",%progbits
 1794 0000 1C000000 		.4byte	0x1c
 1795 0004 0200     		.2byte	0x2
 1796 0006 00000000 		.4byte	.Ldebug_info0
 1797 000a 04       		.byte	0x4
 1798 000b 00       		.byte	0
 1799 000c 0000     		.2byte	0
 1800 000e 0000     		.2byte	0
 1801 0010 00000000 		.4byte	.Ltext0
 1802 0014 84010000 		.4byte	.Letext0-.Ltext0
 1803 0018 00000000 		.4byte	0
 1804 001c 00000000 		.4byte	0
 1805              		.section	.debug_ranges,"",%progbits
 1806              	.Ldebug_ranges0:
 1807 0000 04010000 		.4byte	.LBB18-.Ltext0
 1808 0004 04010000 		.4byte	.LBE18-.Ltext0
 1809 0008 06010000 		.4byte	.LBB21-.Ltext0
 1810 000c 16010000 		.4byte	.LBE21-.Ltext0
 1811 0010 00000000 		.4byte	0
 1812 0014 00000000 		.4byte	0
 1813              		.section	.debug_line,"",%progbits
 1814              	.Ldebug_line0:
 1815 0000 00030000 		.section	.debug_str,"MS",%progbits,1
 1815      0300DC00 
 1815      00000201 
 1815      FB0E0D00 
 1815      01010101 
 1816              	.LASF37:
ARM GAS  /tmp/ccUMpXkT.s 			page 49


 1817 0000 2F686F6D 		.ascii	"/home/junior/Codigos/6-Stm32_GCC_FreeRTOS10.2.1/3-C"
 1817      652F6A75 
 1817      6E696F72 
 1817      2F436F64 
 1817      69676F73 
 1818 0033 6F6D5072 		.ascii	"omProcessos\000"
 1818      6F636573 
 1818      736F7300 
 1819              	.LASF25:
 1820 003f 75784372 		.ascii	"uxCriticalNesting\000"
 1820      69746963 
 1820      616C4E65 
 1820      7374696E 
 1820      6700
 1821              	.LASF22:
 1822 0051 76506F72 		.ascii	"vPortEnterCritical\000"
 1822      74456E74 
 1822      65724372 
 1822      69746963 
 1822      616C00
 1823              	.LASF30:
 1824 0064 7078436F 		.ascii	"pxCode\000"
 1824      646500
 1825              	.LASF23:
 1826 006b 76506F72 		.ascii	"vPortEndScheduler\000"
 1826      74456E64 
 1826      53636865 
 1826      64756C65 
 1826      7200
 1827              	.LASF16:
 1828 007d 5469636B 		.ascii	"TickType_t\000"
 1828      54797065 
 1828      5F7400
 1829              	.LASF34:
 1830 0088 76546173 		.ascii	"vTaskSwitchContext\000"
 1830      6B537769 
 1830      74636843 
 1830      6F6E7465 
 1830      787400
 1831              	.LASF20:
 1832 009b 53797354 		.ascii	"SysTick_Handler\000"
 1832      69636B5F 
 1832      48616E64 
 1832      6C657200 
 1833              	.LASF7:
 1834 00ab 6C6F6E67 		.ascii	"long int\000"
 1834      20696E74 
 1834      00
 1835              	.LASF5:
 1836 00b4 73686F72 		.ascii	"short int\000"
 1836      7420696E 
 1836      7400
 1837              	.LASF36:
 1838 00be 2E2E2F66 		.ascii	"../freertos/portable/GCC/ARM_CM3/port.c\000"
 1838      72656572 
 1838      746F732F 
 1838      706F7274 
ARM GAS  /tmp/ccUMpXkT.s 			page 50


 1838      61626C65 
 1839              	.LASF39:
 1840 00e6 70727654 		.ascii	"prvTaskExitError\000"
 1840      61736B45 
 1840      78697445 
 1840      72726F72 
 1840      00
 1841              	.LASF12:
 1842 00f7 5461736B 		.ascii	"TaskFunction_t\000"
 1842      46756E63 
 1842      74696F6E 
 1842      5F7400
 1843              	.LASF26:
 1844 0106 756C4475 		.ascii	"ulDummy\000"
 1844      6D6D7900 
 1845              	.LASF4:
 1846 010e 756E7369 		.ascii	"unsigned char\000"
 1846      676E6564 
 1846      20636861 
 1846      7200
 1847              	.LASF8:
 1848 011c 6C6F6E67 		.ascii	"long unsigned int\000"
 1848      20756E73 
 1848      69676E65 
 1848      6420696E 
 1848      7400
 1849              	.LASF6:
 1850 012e 73686F72 		.ascii	"short unsigned int\000"
 1850      7420756E 
 1850      7369676E 
 1850      65642069 
 1850      6E7400
 1851              	.LASF10:
 1852 0141 5F5F7569 		.ascii	"__uint32_t\000"
 1852      6E743332 
 1852      5F7400
 1853              	.LASF42:
 1854 014c 756C4E65 		.ascii	"ulNewBASEPRI\000"
 1854      77424153 
 1854      45505249 
 1854      00
 1855              	.LASF28:
 1856 0159 7078506F 		.ascii	"pxPortInitialiseStack\000"
 1856      7274496E 
 1856      69746961 
 1856      6C697365 
 1856      53746163 
 1857              	.LASF33:
 1858 016f 78546173 		.ascii	"xTaskIncrementTick\000"
 1858      6B496E63 
 1858      72656D65 
 1858      6E745469 
 1858      636B00
 1859              	.LASF31:
 1860 0182 76506F72 		.ascii	"vPortSetBASEPRI\000"
 1860      74536574 
 1860      42415345 
ARM GAS  /tmp/ccUMpXkT.s 			page 51


 1860      50524900 
 1861              	.LASF13:
 1862 0192 53746163 		.ascii	"StackType_t\000"
 1862      6B547970 
 1862      655F7400 
 1863              	.LASF0:
 1864 019e 756E7369 		.ascii	"unsigned int\000"
 1864      676E6564 
 1864      20696E74 
 1864      00
 1865              	.LASF9:
 1866 01ab 6C6F6E67 		.ascii	"long long unsigned int\000"
 1866      206C6F6E 
 1866      6720756E 
 1866      7369676E 
 1866      65642069 
 1867              	.LASF32:
 1868 01c2 76506F72 		.ascii	"vPortRaiseBASEPRI\000"
 1868      74526169 
 1868      73654241 
 1868      53455052 
 1868      4900
 1869              	.LASF35:
 1870 01d4 474E5520 		.ascii	"GNU C17 10.3.1 20210824 (release) -mcpu=cortex-m3 -"
 1870      43313720 
 1870      31302E33 
 1870      2E312032 
 1870      30323130 
 1871 0207 6D746875 		.ascii	"mthumb -mfloat-abi=soft -march=armv7-m -g -gdwarf-2"
 1871      6D62202D 
 1871      6D666C6F 
 1871      61742D61 
 1871      62693D73 
 1872 023a 202D4F73 		.ascii	" -Os -fomit-frame-pointer\000"
 1872      202D666F 
 1872      6D69742D 
 1872      6672616D 
 1872      652D706F 
 1873              	.LASF18:
 1874 0254 76506F72 		.ascii	"vPortSetupTimerInterrupt\000"
 1874      74536574 
 1874      75705469 
 1874      6D657249 
 1874      6E746572 
 1875              	.LASF1:
 1876 026d 6C6F6E67 		.ascii	"long long int\000"
 1876      206C6F6E 
 1876      6720696E 
 1876      7400
 1877              	.LASF24:
 1878 027b 5356435F 		.ascii	"SVC_Handler\000"
 1878      48616E64 
 1878      6C657200 
 1879              	.LASF40:
 1880 0287 70765061 		.ascii	"pvParameters\000"
 1880      72616D65 
 1880      74657273 
ARM GAS  /tmp/ccUMpXkT.s 			page 52


 1880      00
 1881              	.LASF29:
 1882 0294 7078546F 		.ascii	"pxTopOfStack\000"
 1882      704F6653 
 1882      7461636B 
 1882      00
 1883              	.LASF19:
 1884 02a1 50656E64 		.ascii	"PendSV_Handler\000"
 1884      53565F48 
 1884      616E646C 
 1884      657200
 1885              	.LASF21:
 1886 02b0 76506F72 		.ascii	"vPortExitCritical\000"
 1886      74457869 
 1886      74437269 
 1886      74696361 
 1886      6C00
 1887              	.LASF11:
 1888 02c2 75696E74 		.ascii	"uint32_t\000"
 1888      33325F74 
 1888      00
 1889              	.LASF41:
 1890 02cb 756C4E65 		.ascii	"ulNewMaskValue\000"
 1890      774D6173 
 1890      6B56616C 
 1890      756500
 1891              	.LASF17:
 1892 02da 63686172 		.ascii	"char\000"
 1892      00
 1893              	.LASF38:
 1894 02df 70727650 		.ascii	"prvPortStartFirstTask\000"
 1894      6F727453 
 1894      74617274 
 1894      46697273 
 1894      74546173 
 1895              	.LASF2:
 1896 02f5 6C6F6E67 		.ascii	"long double\000"
 1896      20646F75 
 1896      626C6500 
 1897              	.LASF3:
 1898 0301 7369676E 		.ascii	"signed char\000"
 1898      65642063 
 1898      68617200 
 1899              	.LASF27:
 1900 030d 78506F72 		.ascii	"xPortStartScheduler\000"
 1900      74537461 
 1900      72745363 
 1900      68656475 
 1900      6C657200 
 1901              	.LASF15:
 1902 0321 55426173 		.ascii	"UBaseType_t\000"
 1902      65547970 
 1902      655F7400 
 1903              	.LASF14:
 1904 032d 42617365 		.ascii	"BaseType_t\000"
 1904      54797065 
 1904      5F7400
ARM GAS  /tmp/ccUMpXkT.s 			page 53


 1905              		.ident	"GCC: (GNU Arm Embedded Toolchain 10.3-2021.10) 10.3.1 20210824 (release)"
ARM GAS  /tmp/ccUMpXkT.s 			page 54


DEFINED SYMBOLS
                            *ABS*:0000000000000000 port.c
     /tmp/ccUMpXkT.s:78     .text:0000000000000000 $t
     /tmp/ccUMpXkT.s:83     .text:0000000000000000 prvTaskExitError
     /tmp/ccUMpXkT.s:151    .text:0000000000000020 prvPortStartFirstTask
     /tmp/ccUMpXkT.s:186    .text:000000000000003a pxPortInitialiseStack
     /tmp/ccUMpXkT.s:237    .text:0000000000000058 $d
     /tmp/ccUMpXkT.s:241    .text:000000000000005c $t
     /tmp/ccUMpXkT.s:247    .text:000000000000005c SVC_Handler
     /tmp/ccUMpXkT.s:269    .text:0000000000000080 pxCurrentTCBConst2
     /tmp/ccUMpXkT.s:269    .text:0000000000000080 $d
     /tmp/ccUMpXkT.s:279    .text:0000000000000084 $t
     /tmp/ccUMpXkT.s:285    .text:0000000000000084 vPortEndScheduler
     /tmp/ccUMpXkT.s:305    .text:0000000000000086 vPortEnterCritical
     /tmp/ccUMpXkT.s:346    .text:00000000000000a0 $d
     /tmp/ccUMpXkT.s:350    .text:00000000000000a4 $t
     /tmp/ccUMpXkT.s:356    .text:00000000000000a4 vPortExitCritical
     /tmp/ccUMpXkT.s:399    .text:00000000000000b4 $d
     /tmp/ccUMpXkT.s:403    .text:00000000000000b8 $t
     /tmp/ccUMpXkT.s:409    .text:00000000000000b8 PendSV_Handler
     /tmp/ccUMpXkT.s:444    .text:0000000000000100 pxCurrentTCBConst
     /tmp/ccUMpXkT.s:444    .text:0000000000000100 $d
     /tmp/ccUMpXkT.s:454    .text:0000000000000104 $t
     /tmp/ccUMpXkT.s:460    .text:0000000000000104 SysTick_Handler
     /tmp/ccUMpXkT.s:543    .text:0000000000000130 vPortSetupTimerInterrupt
     /tmp/ccUMpXkT.s:576    .text:0000000000000144 $d
     /tmp/ccUMpXkT.s:580    .text:0000000000000148 $t
     /tmp/ccUMpXkT.s:586    .text:0000000000000148 xPortStartScheduler
     /tmp/ccUMpXkT.s:643    .text:0000000000000180 $d
     /tmp/ccUMpXkT.s:648    .data:0000000000000000 $d
     /tmp/ccUMpXkT.s:652    .data:0000000000000000 uxCriticalNesting
     /tmp/ccUMpXkT.s:1905   .text:0000000000000184 $d

UNDEFINED SYMBOLS
pxCurrentTCB
vTaskSwitchContext
xTaskIncrementTick
