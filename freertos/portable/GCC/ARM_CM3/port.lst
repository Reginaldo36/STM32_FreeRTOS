ARM GAS  /tmp/ccVTlJpC.s 			page 1


   1              		.cpu cortex-m3
   2              		.arch armv7-m
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1	@ Tag_ABI_FP_denormal
   5              		.eabi_attribute 21, 1	@ Tag_ABI_FP_exceptions
   6              		.eabi_attribute 23, 3	@ Tag_ABI_FP_number_model
   7              		.eabi_attribute 24, 1	@ Tag_ABI_align8_needed
   8              		.eabi_attribute 25, 1	@ Tag_ABI_align8_preserved
   9              		.eabi_attribute 26, 1	@ Tag_ABI_enum_size
  10              		.eabi_attribute 30, 4	@ Tag_ABI_optimization_goals
  11              		.eabi_attribute 34, 1	@ Tag_CPU_unaligned_access
  12              		.eabi_attribute 18, 4	@ Tag_ABI_PCS_wchar_t
  13              		.file	"port.c"
  14              	@ GNU C17 (GNU Arm Embedded Toolchain 10.3-2021.10) version 10.3.1 20210824 (release) (arm-none-eab
  15              	@	compiled by GNU C version 4.8.4, GMP version 6.1.0, MPFR version 3.1.4, MPC version 1.0.3, isl ve
  16              	
  17              	@ GGC heuristics: --param ggc-min-expand=100 --param ggc-min-heapsize=131072
  18              	@ options passed:  -I . -I ../5-TempR_LCD_Serial
  19              	@ -I ../stm32f10x_lib/CMSIS/CM3/CoreSupport
  20              	@ -I ../stm32f10x_lib/CMSIS/CM3/DeviceSupport/ST/STM32F10x
  21              	@ -I ../stm32f10x_lib/STM32F10x_StdPeriph_Driver/inc
  22              	@ -I ../stm32f10x_lib/STM32F10x_StdPeriph_Driver -I ../freertos/include
  23              	@ -I ../freertos/portable/GCC/ARM_CM3 -imultilib thumb/v7-m/nofp
  24              	@ -iprefix /usr/bin/../lib/gcc/arm-none-eabi/10.3.1/
  25              	@ -isysroot /usr/bin/../arm-none-eabi -D__USES_INITFINI__ -D STM32F10X_MD
  26              	@ -D USE_STDPERIPH_DRIVER -D HSE_VALUE=8000000 -D RUN_FROM_FLASH=1
  27              	@ ../freertos/portable/GCC/ARM_CM3/port.c -mcpu=cortex-m3 -mthumb
  28              	@ -mfloat-abi=soft -mlibarch=armv7-m -march=armv7-m
  29              	@ -auxbase-strip ../freertos/portable/GCC/ARM_CM3/port.o -g -gdwarf-2 -Os
  30              	@ -Wall -fomit-frame-pointer -fverbose-asm
  31              	@ options enabled:  -faggressive-loop-optimizations -fallocation-dce
  32              	@ -fauto-inc-dec -fbranch-count-reg -fcaller-saves -fcode-hoisting
  33              	@ -fcombine-stack-adjustments -fcompare-elim -fcprop-registers
  34              	@ -fcrossjumping -fcse-follow-jumps -fdefer-pop
  35              	@ -fdelete-null-pointer-checks -fdevirtualize -fdevirtualize-speculatively
  36              	@ -fdwarf2-cfi-asm -fearly-inlining -feliminate-unused-debug-symbols
  37              	@ -feliminate-unused-debug-types -fexpensive-optimizations
  38              	@ -fforward-propagate -ffp-int-builtin-inexact -ffunction-cse -fgcse
  39              	@ -fgcse-lm -fgnu-unique -fguess-branch-probability -fhoist-adjacent-loads
  40              	@ -fident -fif-conversion -fif-conversion2 -findirect-inlining -finline
  41              	@ -finline-atomics -finline-functions -finline-functions-called-once
  42              	@ -finline-small-functions -fipa-bit-cp -fipa-cp -fipa-icf
  43              	@ -fipa-icf-functions -fipa-icf-variables -fipa-profile -fipa-pure-const
  44              	@ -fipa-ra -fipa-reference -fipa-reference-addressable -fipa-sra
  45              	@ -fipa-stack-alignment -fipa-vrp -fira-hoist-pressure
  46              	@ -fira-share-save-slots -fira-share-spill-slots
  47              	@ -fisolate-erroneous-paths-dereference -fivopts -fkeep-static-consts
  48              	@ -fleading-underscore -flifetime-dse -flra-remat -fmath-errno
  49              	@ -fmerge-constants -fmerge-debug-strings -fmove-loop-invariants
  50              	@ -fomit-frame-pointer -foptimize-sibling-calls -fpartial-inlining
  51              	@ -fpeephole -fpeephole2 -fplt -fprefetch-loop-arrays -freg-struct-return
  52              	@ -freorder-blocks -freorder-functions -frerun-cse-after-loop
  53              	@ -fsched-critical-path-heuristic -fsched-dep-count-heuristic
  54              	@ -fsched-group-heuristic -fsched-interblock -fsched-last-insn-heuristic
  55              	@ -fsched-pressure -fsched-rank-heuristic -fsched-spec
  56              	@ -fsched-spec-insn-heuristic -fsched-stalled-insns-dep -fschedule-insns2
  57              	@ -fsection-anchors -fsemantic-interposition -fshow-column
ARM GAS  /tmp/ccVTlJpC.s 			page 2


  58              	@ -fshrink-wrap-separate -fsigned-zeros -fsplit-ivs-in-unroller
  59              	@ -fsplit-wide-types -fssa-backprop -fssa-phiopt -fstdarg-opt
  60              	@ -fstore-merging -fstrict-aliasing -fstrict-volatile-bitfields
  61              	@ -fsync-libcalls -fthread-jumps -ftoplevel-reorder -ftrapping-math
  62              	@ -ftree-bit-ccp -ftree-builtin-call-dce -ftree-ccp -ftree-ch
  63              	@ -ftree-coalesce-vars -ftree-copy-prop -ftree-cselim -ftree-dce
  64              	@ -ftree-dominator-opts -ftree-dse -ftree-forwprop -ftree-fre
  65              	@ -ftree-loop-distribute-patterns -ftree-loop-if-convert -ftree-loop-im
  66              	@ -ftree-loop-ivcanon -ftree-loop-optimize -ftree-parallelize-loops=
  67              	@ -ftree-phiprop -ftree-pre -ftree-pta -ftree-reassoc -ftree-scev-cprop
  68              	@ -ftree-sink -ftree-slsr -ftree-sra -ftree-switch-conversion
  69              	@ -ftree-tail-merge -ftree-ter -ftree-vrp -funit-at-a-time -fvar-tracking
  70              	@ -fvar-tracking-assignments -fverbose-asm -fzero-initialized-in-bss
  71              	@ -masm-syntax-unified -mbe32 -mfix-cortex-m3-ldrd -mlittle-endian
  72              	@ -mpic-data-is-text-relative -msched-prolog -mthumb -munaligned-access
  73              	@ -mvectorize-with-neon-quad
  74              	
  75              		.text
  76              	.Ltext0:
  77              		.cfi_sections	.debug_frame
  78              		.align	1
  79              		.syntax unified
  80              		.thumb
  81              		.thumb_func
  82              		.type	prvTaskExitError, %function
  83              	prvTaskExitError:
  84              	.LFB6:
  85              		.file 1 "../freertos/portable/GCC/ARM_CM3/port.c"
   1:../freertos/portable/GCC/ARM_CM3/port.c **** /*
   2:../freertos/portable/GCC/ARM_CM3/port.c ****  * FreeRTOS Kernel V10.2.1
   3:../freertos/portable/GCC/ARM_CM3/port.c ****  * Copyright (C) 2019 Amazon.com, Inc. or its affiliates.  All Rights Reserved.
   4:../freertos/portable/GCC/ARM_CM3/port.c ****  *
   5:../freertos/portable/GCC/ARM_CM3/port.c ****  * Permission is hereby granted, free of charge, to any person obtaining a copy of
   6:../freertos/portable/GCC/ARM_CM3/port.c ****  * this software and associated documentation files (the "Software"), to deal in
   7:../freertos/portable/GCC/ARM_CM3/port.c ****  * the Software without restriction, including without limitation the rights to
   8:../freertos/portable/GCC/ARM_CM3/port.c ****  * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of
   9:../freertos/portable/GCC/ARM_CM3/port.c ****  * the Software, and to permit persons to whom the Software is furnished to do so,
  10:../freertos/portable/GCC/ARM_CM3/port.c ****  * subject to the following conditions:
  11:../freertos/portable/GCC/ARM_CM3/port.c ****  *
  12:../freertos/portable/GCC/ARM_CM3/port.c ****  * The above copyright notice and this permission notice shall be included in all
  13:../freertos/portable/GCC/ARM_CM3/port.c ****  * copies or substantial portions of the Software.
  14:../freertos/portable/GCC/ARM_CM3/port.c ****  *
  15:../freertos/portable/GCC/ARM_CM3/port.c ****  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  16:../freertos/portable/GCC/ARM_CM3/port.c ****  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
  17:../freertos/portable/GCC/ARM_CM3/port.c ****  * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
  18:../freertos/portable/GCC/ARM_CM3/port.c ****  * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
  19:../freertos/portable/GCC/ARM_CM3/port.c ****  * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
  20:../freertos/portable/GCC/ARM_CM3/port.c ****  * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
  21:../freertos/portable/GCC/ARM_CM3/port.c ****  *
  22:../freertos/portable/GCC/ARM_CM3/port.c ****  * http://www.FreeRTOS.org
  23:../freertos/portable/GCC/ARM_CM3/port.c ****  * http://aws.amazon.com/freertos
  24:../freertos/portable/GCC/ARM_CM3/port.c ****  *
  25:../freertos/portable/GCC/ARM_CM3/port.c ****  * 1 tab == 4 spaces!
  26:../freertos/portable/GCC/ARM_CM3/port.c ****  */
  27:../freertos/portable/GCC/ARM_CM3/port.c **** 
  28:../freertos/portable/GCC/ARM_CM3/port.c **** /*-----------------------------------------------------------
  29:../freertos/portable/GCC/ARM_CM3/port.c ****  * Implementation of functions defined in portable.h for the ARM CM3 port.
ARM GAS  /tmp/ccVTlJpC.s 			page 3


  30:../freertos/portable/GCC/ARM_CM3/port.c ****  *----------------------------------------------------------*/
  31:../freertos/portable/GCC/ARM_CM3/port.c **** 
  32:../freertos/portable/GCC/ARM_CM3/port.c **** /* Scheduler includes. */
  33:../freertos/portable/GCC/ARM_CM3/port.c **** #include "FreeRTOS.h"
  34:../freertos/portable/GCC/ARM_CM3/port.c **** #include "task.h"
  35:../freertos/portable/GCC/ARM_CM3/port.c **** 
  36:../freertos/portable/GCC/ARM_CM3/port.c **** /* For backward compatibility, ensure configKERNEL_INTERRUPT_PRIORITY is
  37:../freertos/portable/GCC/ARM_CM3/port.c **** defined.  The value should also ensure backward compatibility.
  38:../freertos/portable/GCC/ARM_CM3/port.c **** FreeRTOS.org versions prior to V4.4.0 did not include this definition. */
  39:../freertos/portable/GCC/ARM_CM3/port.c **** #ifndef configKERNEL_INTERRUPT_PRIORITY
  40:../freertos/portable/GCC/ARM_CM3/port.c **** 	#define configKERNEL_INTERRUPT_PRIORITY 255
  41:../freertos/portable/GCC/ARM_CM3/port.c **** #endif
  42:../freertos/portable/GCC/ARM_CM3/port.c **** 
  43:../freertos/portable/GCC/ARM_CM3/port.c **** #ifndef configSYSTICK_CLOCK_HZ
  44:../freertos/portable/GCC/ARM_CM3/port.c **** 	#define configSYSTICK_CLOCK_HZ configCPU_CLOCK_HZ
  45:../freertos/portable/GCC/ARM_CM3/port.c **** 	/* Ensure the SysTick is clocked at the same frequency as the core. */
  46:../freertos/portable/GCC/ARM_CM3/port.c **** 	#define portNVIC_SYSTICK_CLK_BIT	( 1UL << 2UL )
  47:../freertos/portable/GCC/ARM_CM3/port.c **** #else
  48:../freertos/portable/GCC/ARM_CM3/port.c **** 	/* The way the SysTick is clocked is not modified in case it is not the same
  49:../freertos/portable/GCC/ARM_CM3/port.c **** 	as the core. */
  50:../freertos/portable/GCC/ARM_CM3/port.c **** 	#define portNVIC_SYSTICK_CLK_BIT	( 0 )
  51:../freertos/portable/GCC/ARM_CM3/port.c **** #endif
  52:../freertos/portable/GCC/ARM_CM3/port.c **** 
  53:../freertos/portable/GCC/ARM_CM3/port.c **** /* Constants required to manipulate the core.  Registers first... */
  54:../freertos/portable/GCC/ARM_CM3/port.c **** #define portNVIC_SYSTICK_CTRL_REG			( * ( ( volatile uint32_t * ) 0xe000e010 ) )
  55:../freertos/portable/GCC/ARM_CM3/port.c **** #define portNVIC_SYSTICK_LOAD_REG			( * ( ( volatile uint32_t * ) 0xe000e014 ) )
  56:../freertos/portable/GCC/ARM_CM3/port.c **** #define portNVIC_SYSTICK_CURRENT_VALUE_REG	( * ( ( volatile uint32_t * ) 0xe000e018 ) )
  57:../freertos/portable/GCC/ARM_CM3/port.c **** #define portNVIC_SYSPRI2_REG				( * ( ( volatile uint32_t * ) 0xe000ed20 ) )
  58:../freertos/portable/GCC/ARM_CM3/port.c **** /* ...then bits in the registers. */
  59:../freertos/portable/GCC/ARM_CM3/port.c **** #define portNVIC_SYSTICK_INT_BIT			( 1UL << 1UL )
  60:../freertos/portable/GCC/ARM_CM3/port.c **** #define portNVIC_SYSTICK_ENABLE_BIT			( 1UL << 0UL )
  61:../freertos/portable/GCC/ARM_CM3/port.c **** #define portNVIC_SYSTICK_COUNT_FLAG_BIT		( 1UL << 16UL )
  62:../freertos/portable/GCC/ARM_CM3/port.c **** #define portNVIC_PENDSVCLEAR_BIT 			( 1UL << 27UL )
  63:../freertos/portable/GCC/ARM_CM3/port.c **** #define portNVIC_PEND_SYSTICK_CLEAR_BIT		( 1UL << 25UL )
  64:../freertos/portable/GCC/ARM_CM3/port.c **** 
  65:../freertos/portable/GCC/ARM_CM3/port.c **** #define portNVIC_PENDSV_PRI					( ( ( uint32_t ) configKERNEL_INTERRUPT_PRIORITY ) << 16UL )
  66:../freertos/portable/GCC/ARM_CM3/port.c **** #define portNVIC_SYSTICK_PRI				( ( ( uint32_t ) configKERNEL_INTERRUPT_PRIORITY ) << 24UL )
  67:../freertos/portable/GCC/ARM_CM3/port.c **** 
  68:../freertos/portable/GCC/ARM_CM3/port.c **** /* Constants required to check the validity of an interrupt priority. */
  69:../freertos/portable/GCC/ARM_CM3/port.c **** #define portFIRST_USER_INTERRUPT_NUMBER		( 16 )
  70:../freertos/portable/GCC/ARM_CM3/port.c **** #define portNVIC_IP_REGISTERS_OFFSET_16 	( 0xE000E3F0 )
  71:../freertos/portable/GCC/ARM_CM3/port.c **** #define portAIRCR_REG						( * ( ( volatile uint32_t * ) 0xE000ED0C ) )
  72:../freertos/portable/GCC/ARM_CM3/port.c **** #define portMAX_8_BIT_VALUE					( ( uint8_t ) 0xff )
  73:../freertos/portable/GCC/ARM_CM3/port.c **** #define portTOP_BIT_OF_BYTE					( ( uint8_t ) 0x80 )
  74:../freertos/portable/GCC/ARM_CM3/port.c **** #define portMAX_PRIGROUP_BITS				( ( uint8_t ) 7 )
  75:../freertos/portable/GCC/ARM_CM3/port.c **** #define portPRIORITY_GROUP_MASK				( 0x07UL << 8UL )
  76:../freertos/portable/GCC/ARM_CM3/port.c **** #define portPRIGROUP_SHIFT					( 8UL )
  77:../freertos/portable/GCC/ARM_CM3/port.c **** 
  78:../freertos/portable/GCC/ARM_CM3/port.c **** /* Masks off all bits but the VECTACTIVE bits in the ICSR register. */
  79:../freertos/portable/GCC/ARM_CM3/port.c **** #define portVECTACTIVE_MASK					( 0xFFUL )
  80:../freertos/portable/GCC/ARM_CM3/port.c **** 
  81:../freertos/portable/GCC/ARM_CM3/port.c **** /* Constants required to set up the initial stack. */
  82:../freertos/portable/GCC/ARM_CM3/port.c **** #define portINITIAL_XPSR					( 0x01000000UL )
  83:../freertos/portable/GCC/ARM_CM3/port.c **** 
  84:../freertos/portable/GCC/ARM_CM3/port.c **** /* The systick is a 24-bit counter. */
  85:../freertos/portable/GCC/ARM_CM3/port.c **** #define portMAX_24_BIT_NUMBER				( 0xffffffUL )
  86:../freertos/portable/GCC/ARM_CM3/port.c **** 
ARM GAS  /tmp/ccVTlJpC.s 			page 4


  87:../freertos/portable/GCC/ARM_CM3/port.c **** /* A fiddle factor to estimate the number of SysTick counts that would have
  88:../freertos/portable/GCC/ARM_CM3/port.c **** occurred while the SysTick counter is stopped during tickless idle
  89:../freertos/portable/GCC/ARM_CM3/port.c **** calculations. */
  90:../freertos/portable/GCC/ARM_CM3/port.c **** #define portMISSED_COUNTS_FACTOR			( 45UL )
  91:../freertos/portable/GCC/ARM_CM3/port.c **** 
  92:../freertos/portable/GCC/ARM_CM3/port.c **** /* For strict compliance with the Cortex-M spec the task start address should
  93:../freertos/portable/GCC/ARM_CM3/port.c **** have bit-0 clear, as it is loaded into the PC on exit from an ISR. */
  94:../freertos/portable/GCC/ARM_CM3/port.c **** #define portSTART_ADDRESS_MASK				( ( StackType_t ) 0xfffffffeUL )
  95:../freertos/portable/GCC/ARM_CM3/port.c **** 
  96:../freertos/portable/GCC/ARM_CM3/port.c **** /* Let the user override the pre-loading of the initial LR with the address of
  97:../freertos/portable/GCC/ARM_CM3/port.c **** prvTaskExitError() in case it messes up unwinding of the stack in the
  98:../freertos/portable/GCC/ARM_CM3/port.c **** debugger. */
  99:../freertos/portable/GCC/ARM_CM3/port.c **** #ifdef configTASK_RETURN_ADDRESS
 100:../freertos/portable/GCC/ARM_CM3/port.c **** 	#define portTASK_RETURN_ADDRESS	configTASK_RETURN_ADDRESS
 101:../freertos/portable/GCC/ARM_CM3/port.c **** #else
 102:../freertos/portable/GCC/ARM_CM3/port.c **** 	#define portTASK_RETURN_ADDRESS	prvTaskExitError
 103:../freertos/portable/GCC/ARM_CM3/port.c **** #endif
 104:../freertos/portable/GCC/ARM_CM3/port.c **** 
 105:../freertos/portable/GCC/ARM_CM3/port.c **** /*
 106:../freertos/portable/GCC/ARM_CM3/port.c ****  * Setup the timer to generate the tick interrupts.  The implementation in this
 107:../freertos/portable/GCC/ARM_CM3/port.c ****  * file is weak to allow application writers to change the timer used to
 108:../freertos/portable/GCC/ARM_CM3/port.c ****  * generate the tick interrupt.
 109:../freertos/portable/GCC/ARM_CM3/port.c ****  */
 110:../freertos/portable/GCC/ARM_CM3/port.c **** void vPortSetupTimerInterrupt( void );
 111:../freertos/portable/GCC/ARM_CM3/port.c **** 
 112:../freertos/portable/GCC/ARM_CM3/port.c **** /*
 113:../freertos/portable/GCC/ARM_CM3/port.c ****  * Exception handlers.
 114:../freertos/portable/GCC/ARM_CM3/port.c ****  */
 115:../freertos/portable/GCC/ARM_CM3/port.c **** void xPortPendSVHandler( void ) __attribute__ (( naked ));
 116:../freertos/portable/GCC/ARM_CM3/port.c **** void xPortSysTickHandler( void );
 117:../freertos/portable/GCC/ARM_CM3/port.c **** void vPortSVCHandler( void ) __attribute__ (( naked ));
 118:../freertos/portable/GCC/ARM_CM3/port.c **** 
 119:../freertos/portable/GCC/ARM_CM3/port.c **** /*
 120:../freertos/portable/GCC/ARM_CM3/port.c ****  * Start first task is a separate function so it can be tested in isolation.
 121:../freertos/portable/GCC/ARM_CM3/port.c ****  */
 122:../freertos/portable/GCC/ARM_CM3/port.c **** static void prvPortStartFirstTask( void ) __attribute__ (( naked ));
 123:../freertos/portable/GCC/ARM_CM3/port.c **** 
 124:../freertos/portable/GCC/ARM_CM3/port.c **** /*
 125:../freertos/portable/GCC/ARM_CM3/port.c ****  * Used to catch tasks that attempt to return from their implementing function.
 126:../freertos/portable/GCC/ARM_CM3/port.c ****  */
 127:../freertos/portable/GCC/ARM_CM3/port.c **** static void prvTaskExitError( void );
 128:../freertos/portable/GCC/ARM_CM3/port.c **** 
 129:../freertos/portable/GCC/ARM_CM3/port.c **** /*-----------------------------------------------------------*/
 130:../freertos/portable/GCC/ARM_CM3/port.c **** 
 131:../freertos/portable/GCC/ARM_CM3/port.c **** /* Each task maintains its own interrupt status in the critical nesting
 132:../freertos/portable/GCC/ARM_CM3/port.c **** variable. */
 133:../freertos/portable/GCC/ARM_CM3/port.c **** static UBaseType_t uxCriticalNesting = 0xaaaaaaaa;
 134:../freertos/portable/GCC/ARM_CM3/port.c **** 
 135:../freertos/portable/GCC/ARM_CM3/port.c **** /*
 136:../freertos/portable/GCC/ARM_CM3/port.c ****  * The number of SysTick increments that make up one tick period.
 137:../freertos/portable/GCC/ARM_CM3/port.c ****  */
 138:../freertos/portable/GCC/ARM_CM3/port.c **** #if( configUSE_TICKLESS_IDLE == 1 )
 139:../freertos/portable/GCC/ARM_CM3/port.c **** 	static uint32_t ulTimerCountsForOneTick = 0;
 140:../freertos/portable/GCC/ARM_CM3/port.c **** #endif /* configUSE_TICKLESS_IDLE */
 141:../freertos/portable/GCC/ARM_CM3/port.c **** 
 142:../freertos/portable/GCC/ARM_CM3/port.c **** /*
 143:../freertos/portable/GCC/ARM_CM3/port.c ****  * The maximum number of tick periods that can be suppressed is limited by the
ARM GAS  /tmp/ccVTlJpC.s 			page 5


 144:../freertos/portable/GCC/ARM_CM3/port.c ****  * 24 bit resolution of the SysTick timer.
 145:../freertos/portable/GCC/ARM_CM3/port.c ****  */
 146:../freertos/portable/GCC/ARM_CM3/port.c **** #if( configUSE_TICKLESS_IDLE == 1 )
 147:../freertos/portable/GCC/ARM_CM3/port.c **** 	static uint32_t xMaximumPossibleSuppressedTicks = 0;
 148:../freertos/portable/GCC/ARM_CM3/port.c **** #endif /* configUSE_TICKLESS_IDLE */
 149:../freertos/portable/GCC/ARM_CM3/port.c **** 
 150:../freertos/portable/GCC/ARM_CM3/port.c **** /*
 151:../freertos/portable/GCC/ARM_CM3/port.c ****  * Compensate for the CPU cycles that pass while the SysTick is stopped (low
 152:../freertos/portable/GCC/ARM_CM3/port.c ****  * power functionality only.
 153:../freertos/portable/GCC/ARM_CM3/port.c ****  */
 154:../freertos/portable/GCC/ARM_CM3/port.c **** #if( configUSE_TICKLESS_IDLE == 1 )
 155:../freertos/portable/GCC/ARM_CM3/port.c **** 	static uint32_t ulStoppedTimerCompensation = 0;
 156:../freertos/portable/GCC/ARM_CM3/port.c **** #endif /* configUSE_TICKLESS_IDLE */
 157:../freertos/portable/GCC/ARM_CM3/port.c **** 
 158:../freertos/portable/GCC/ARM_CM3/port.c **** /*
 159:../freertos/portable/GCC/ARM_CM3/port.c ****  * Used by the portASSERT_IF_INTERRUPT_PRIORITY_INVALID() macro to ensure
 160:../freertos/portable/GCC/ARM_CM3/port.c ****  * FreeRTOS API functions are not called from interrupts that have been assigned
 161:../freertos/portable/GCC/ARM_CM3/port.c ****  * a priority above configMAX_SYSCALL_INTERRUPT_PRIORITY.
 162:../freertos/portable/GCC/ARM_CM3/port.c ****  */
 163:../freertos/portable/GCC/ARM_CM3/port.c **** #if( configASSERT_DEFINED == 1 )
 164:../freertos/portable/GCC/ARM_CM3/port.c **** 	 static uint8_t ucMaxSysCallPriority = 0;
 165:../freertos/portable/GCC/ARM_CM3/port.c **** 	 static uint32_t ulMaxPRIGROUPValue = 0;
 166:../freertos/portable/GCC/ARM_CM3/port.c **** 	 static const volatile uint8_t * const pcInterruptPriorityRegisters = ( const volatile uint8_t * c
 167:../freertos/portable/GCC/ARM_CM3/port.c **** #endif /* configASSERT_DEFINED */
 168:../freertos/portable/GCC/ARM_CM3/port.c **** 
 169:../freertos/portable/GCC/ARM_CM3/port.c **** /*-----------------------------------------------------------*/
 170:../freertos/portable/GCC/ARM_CM3/port.c **** 
 171:../freertos/portable/GCC/ARM_CM3/port.c **** /*
 172:../freertos/portable/GCC/ARM_CM3/port.c ****  * See header file for description.
 173:../freertos/portable/GCC/ARM_CM3/port.c ****  */
 174:../freertos/portable/GCC/ARM_CM3/port.c **** StackType_t *pxPortInitialiseStack( StackType_t *pxTopOfStack, TaskFunction_t pxCode, void *pvParam
 175:../freertos/portable/GCC/ARM_CM3/port.c **** {
 176:../freertos/portable/GCC/ARM_CM3/port.c **** 	/* Simulate the stack frame as it would be created by a context switch
 177:../freertos/portable/GCC/ARM_CM3/port.c **** 	interrupt. */
 178:../freertos/portable/GCC/ARM_CM3/port.c **** 	pxTopOfStack--; /* Offset added to account for the way the MCU uses the stack on entry/exit of int
 179:../freertos/portable/GCC/ARM_CM3/port.c **** 	*pxTopOfStack = portINITIAL_XPSR;	/* xPSR */
 180:../freertos/portable/GCC/ARM_CM3/port.c **** 	pxTopOfStack--;
 181:../freertos/portable/GCC/ARM_CM3/port.c **** 	*pxTopOfStack = ( ( StackType_t ) pxCode ) & portSTART_ADDRESS_MASK;	/* PC */
 182:../freertos/portable/GCC/ARM_CM3/port.c **** 	pxTopOfStack--;
 183:../freertos/portable/GCC/ARM_CM3/port.c **** 	*pxTopOfStack = ( StackType_t ) portTASK_RETURN_ADDRESS;	/* LR */
 184:../freertos/portable/GCC/ARM_CM3/port.c **** 	pxTopOfStack -= 5;	/* R12, R3, R2 and R1. */
 185:../freertos/portable/GCC/ARM_CM3/port.c **** 	*pxTopOfStack = ( StackType_t ) pvParameters;	/* R0 */
 186:../freertos/portable/GCC/ARM_CM3/port.c **** 	pxTopOfStack -= 8;	/* R11, R10, R9, R8, R7, R6, R5 and R4. */
 187:../freertos/portable/GCC/ARM_CM3/port.c **** 
 188:../freertos/portable/GCC/ARM_CM3/port.c **** 	return pxTopOfStack;
 189:../freertos/portable/GCC/ARM_CM3/port.c **** }
 190:../freertos/portable/GCC/ARM_CM3/port.c **** /*-----------------------------------------------------------*/
 191:../freertos/portable/GCC/ARM_CM3/port.c **** 
 192:../freertos/portable/GCC/ARM_CM3/port.c **** static void prvTaskExitError( void )
 193:../freertos/portable/GCC/ARM_CM3/port.c **** {
  86              		.loc 1 193 1 view -0
  87              		.cfi_startproc
  88              		@ args = 0, pretend = 0, frame = 8
  89              		@ frame_needed = 0, uses_anonymous_args = 0
  90              		@ link register save eliminated.
 194:../freertos/portable/GCC/ARM_CM3/port.c **** volatile uint32_t ulDummy = 0UL;
  91              		.loc 1 194 1 view .LVU1
ARM GAS  /tmp/ccVTlJpC.s 			page 6


  92              	@ ../freertos/portable/GCC/ARM_CM3/port.c:194: volatile uint32_t ulDummy = 0UL;
  93              		.loc 1 194 19 is_stmt 0 view .LVU2
  94 0000 0023     		movs	r3, #0	@ tmp115,
  95              	@ ../freertos/portable/GCC/ARM_CM3/port.c:193: {
 193:../freertos/portable/GCC/ARM_CM3/port.c **** volatile uint32_t ulDummy = 0UL;
  96              		.loc 1 193 1 view .LVU3
  97 0002 82B0     		sub	sp, sp, #8	@,,
  98              	.LCFI0:
  99              		.cfi_def_cfa_offset 8
 100              	@ ../freertos/portable/GCC/ARM_CM3/port.c:194: volatile uint32_t ulDummy = 0UL;
 101              		.loc 1 194 19 view .LVU4
 102 0004 0193     		str	r3, [sp, #4]	@ tmp115, ulDummy
 195:../freertos/portable/GCC/ARM_CM3/port.c **** 
 196:../freertos/portable/GCC/ARM_CM3/port.c **** 	/* A function that implements a task must not exit or attempt to return to
 197:../freertos/portable/GCC/ARM_CM3/port.c **** 	its caller as there is nothing to return to.  If a task wants to exit it
 198:../freertos/portable/GCC/ARM_CM3/port.c **** 	should instead call vTaskDelete( NULL ).
 199:../freertos/portable/GCC/ARM_CM3/port.c **** 
 200:../freertos/portable/GCC/ARM_CM3/port.c **** 	Artificially force an assert() to be triggered if configASSERT() is
 201:../freertos/portable/GCC/ARM_CM3/port.c **** 	defined, then stop here so application writers can catch the error. */
 202:../freertos/portable/GCC/ARM_CM3/port.c **** 	configASSERT( uxCriticalNesting == ~0UL );
 103              		.loc 1 202 43 is_stmt 1 view .LVU5
 203:../freertos/portable/GCC/ARM_CM3/port.c **** 	portDISABLE_INTERRUPTS();
 104              		.loc 1 203 2 view .LVU6
 105              	.LBB12:
 106              	.LBI12:
 107              		.file 2 "../freertos/portable/GCC/ARM_CM3/portmacro.h"
   1:../freertos/portable/GCC/ARM_CM3/portmacro.h **** /*
   2:../freertos/portable/GCC/ARM_CM3/portmacro.h ****  * FreeRTOS Kernel V10.2.1
   3:../freertos/portable/GCC/ARM_CM3/portmacro.h ****  * Copyright (C) 2019 Amazon.com, Inc. or its affiliates.  All Rights Reserved.
   4:../freertos/portable/GCC/ARM_CM3/portmacro.h ****  *
   5:../freertos/portable/GCC/ARM_CM3/portmacro.h ****  * Permission is hereby granted, free of charge, to any person obtaining a copy of
   6:../freertos/portable/GCC/ARM_CM3/portmacro.h ****  * this software and associated documentation files (the "Software"), to deal in
   7:../freertos/portable/GCC/ARM_CM3/portmacro.h ****  * the Software without restriction, including without limitation the rights to
   8:../freertos/portable/GCC/ARM_CM3/portmacro.h ****  * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of
   9:../freertos/portable/GCC/ARM_CM3/portmacro.h ****  * the Software, and to permit persons to whom the Software is furnished to do so,
  10:../freertos/portable/GCC/ARM_CM3/portmacro.h ****  * subject to the following conditions:
  11:../freertos/portable/GCC/ARM_CM3/portmacro.h ****  *
  12:../freertos/portable/GCC/ARM_CM3/portmacro.h ****  * The above copyright notice and this permission notice shall be included in all
  13:../freertos/portable/GCC/ARM_CM3/portmacro.h ****  * copies or substantial portions of the Software.
  14:../freertos/portable/GCC/ARM_CM3/portmacro.h ****  *
  15:../freertos/portable/GCC/ARM_CM3/portmacro.h ****  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  16:../freertos/portable/GCC/ARM_CM3/portmacro.h ****  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
  17:../freertos/portable/GCC/ARM_CM3/portmacro.h ****  * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
  18:../freertos/portable/GCC/ARM_CM3/portmacro.h ****  * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
  19:../freertos/portable/GCC/ARM_CM3/portmacro.h ****  * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
  20:../freertos/portable/GCC/ARM_CM3/portmacro.h ****  * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
  21:../freertos/portable/GCC/ARM_CM3/portmacro.h ****  *
  22:../freertos/portable/GCC/ARM_CM3/portmacro.h ****  * http://www.FreeRTOS.org
  23:../freertos/portable/GCC/ARM_CM3/portmacro.h ****  * http://aws.amazon.com/freertos
  24:../freertos/portable/GCC/ARM_CM3/portmacro.h ****  *
  25:../freertos/portable/GCC/ARM_CM3/portmacro.h ****  * 1 tab == 4 spaces!
  26:../freertos/portable/GCC/ARM_CM3/portmacro.h ****  */
  27:../freertos/portable/GCC/ARM_CM3/portmacro.h **** 
  28:../freertos/portable/GCC/ARM_CM3/portmacro.h **** 
  29:../freertos/portable/GCC/ARM_CM3/portmacro.h **** #ifndef PORTMACRO_H
  30:../freertos/portable/GCC/ARM_CM3/portmacro.h **** #define PORTMACRO_H
  31:../freertos/portable/GCC/ARM_CM3/portmacro.h **** 
ARM GAS  /tmp/ccVTlJpC.s 			page 7


  32:../freertos/portable/GCC/ARM_CM3/portmacro.h **** #ifdef __cplusplus
  33:../freertos/portable/GCC/ARM_CM3/portmacro.h **** extern "C" {
  34:../freertos/portable/GCC/ARM_CM3/portmacro.h **** #endif
  35:../freertos/portable/GCC/ARM_CM3/portmacro.h **** 
  36:../freertos/portable/GCC/ARM_CM3/portmacro.h **** /*-----------------------------------------------------------
  37:../freertos/portable/GCC/ARM_CM3/portmacro.h ****  * Port specific definitions.
  38:../freertos/portable/GCC/ARM_CM3/portmacro.h ****  *
  39:../freertos/portable/GCC/ARM_CM3/portmacro.h ****  * The settings in this file configure FreeRTOS correctly for the
  40:../freertos/portable/GCC/ARM_CM3/portmacro.h ****  * given hardware and compiler.
  41:../freertos/portable/GCC/ARM_CM3/portmacro.h ****  *
  42:../freertos/portable/GCC/ARM_CM3/portmacro.h ****  * These settings should not be altered.
  43:../freertos/portable/GCC/ARM_CM3/portmacro.h ****  *-----------------------------------------------------------
  44:../freertos/portable/GCC/ARM_CM3/portmacro.h ****  */
  45:../freertos/portable/GCC/ARM_CM3/portmacro.h **** 
  46:../freertos/portable/GCC/ARM_CM3/portmacro.h **** /* Type definitions. */
  47:../freertos/portable/GCC/ARM_CM3/portmacro.h **** #define portCHAR		char
  48:../freertos/portable/GCC/ARM_CM3/portmacro.h **** #define portFLOAT		float
  49:../freertos/portable/GCC/ARM_CM3/portmacro.h **** #define portDOUBLE		double
  50:../freertos/portable/GCC/ARM_CM3/portmacro.h **** #define portLONG		long
  51:../freertos/portable/GCC/ARM_CM3/portmacro.h **** #define portSHORT		short
  52:../freertos/portable/GCC/ARM_CM3/portmacro.h **** #define portSTACK_TYPE	uint32_t
  53:../freertos/portable/GCC/ARM_CM3/portmacro.h **** #define portBASE_TYPE	long
  54:../freertos/portable/GCC/ARM_CM3/portmacro.h **** 
  55:../freertos/portable/GCC/ARM_CM3/portmacro.h **** typedef portSTACK_TYPE StackType_t;
  56:../freertos/portable/GCC/ARM_CM3/portmacro.h **** typedef long BaseType_t;
  57:../freertos/portable/GCC/ARM_CM3/portmacro.h **** typedef unsigned long UBaseType_t;
  58:../freertos/portable/GCC/ARM_CM3/portmacro.h **** 
  59:../freertos/portable/GCC/ARM_CM3/portmacro.h **** #if( configUSE_16_BIT_TICKS == 1 )
  60:../freertos/portable/GCC/ARM_CM3/portmacro.h **** 	typedef uint16_t TickType_t;
  61:../freertos/portable/GCC/ARM_CM3/portmacro.h **** 	#define portMAX_DELAY ( TickType_t ) 0xffff
  62:../freertos/portable/GCC/ARM_CM3/portmacro.h **** #else
  63:../freertos/portable/GCC/ARM_CM3/portmacro.h **** 	typedef uint32_t TickType_t;
  64:../freertos/portable/GCC/ARM_CM3/portmacro.h **** 	#define portMAX_DELAY ( TickType_t ) 0xffffffffUL
  65:../freertos/portable/GCC/ARM_CM3/portmacro.h **** 
  66:../freertos/portable/GCC/ARM_CM3/portmacro.h **** 	/* 32-bit tick type on a 32-bit architecture, so reads of the tick count do
  67:../freertos/portable/GCC/ARM_CM3/portmacro.h **** 	not need to be guarded with a critical section. */
  68:../freertos/portable/GCC/ARM_CM3/portmacro.h **** 	#define portTICK_TYPE_IS_ATOMIC 1
  69:../freertos/portable/GCC/ARM_CM3/portmacro.h **** #endif
  70:../freertos/portable/GCC/ARM_CM3/portmacro.h **** /*-----------------------------------------------------------*/
  71:../freertos/portable/GCC/ARM_CM3/portmacro.h **** 
  72:../freertos/portable/GCC/ARM_CM3/portmacro.h **** /* Architecture specifics. */
  73:../freertos/portable/GCC/ARM_CM3/portmacro.h **** #define portSTACK_GROWTH			( -1 )
  74:../freertos/portable/GCC/ARM_CM3/portmacro.h **** #define portTICK_PERIOD_MS			( ( TickType_t ) 1000 / configTICK_RATE_HZ )
  75:../freertos/portable/GCC/ARM_CM3/portmacro.h **** #define portBYTE_ALIGNMENT			8
  76:../freertos/portable/GCC/ARM_CM3/portmacro.h **** /*-----------------------------------------------------------*/
  77:../freertos/portable/GCC/ARM_CM3/portmacro.h **** 
  78:../freertos/portable/GCC/ARM_CM3/portmacro.h **** /* Scheduler utilities. */
  79:../freertos/portable/GCC/ARM_CM3/portmacro.h **** #define portYIELD() 															\
  80:../freertos/portable/GCC/ARM_CM3/portmacro.h **** {																				\
  81:../freertos/portable/GCC/ARM_CM3/portmacro.h **** 	/* Set a PendSV to request a context switch. */								\
  82:../freertos/portable/GCC/ARM_CM3/portmacro.h **** 	portNVIC_INT_CTRL_REG = portNVIC_PENDSVSET_BIT;								\
  83:../freertos/portable/GCC/ARM_CM3/portmacro.h **** 																				\
  84:../freertos/portable/GCC/ARM_CM3/portmacro.h **** 	/* Barriers are normally not required but do ensure the code is completely	\
  85:../freertos/portable/GCC/ARM_CM3/portmacro.h **** 	within the specified behaviour for the architecture. */						\
  86:../freertos/portable/GCC/ARM_CM3/portmacro.h **** 	__asm volatile( "dsb" ::: "memory" );										\
  87:../freertos/portable/GCC/ARM_CM3/portmacro.h **** 	__asm volatile( "isb" );													\
  88:../freertos/portable/GCC/ARM_CM3/portmacro.h **** }
ARM GAS  /tmp/ccVTlJpC.s 			page 8


  89:../freertos/portable/GCC/ARM_CM3/portmacro.h **** 
  90:../freertos/portable/GCC/ARM_CM3/portmacro.h **** #define portNVIC_INT_CTRL_REG		( * ( ( volatile uint32_t * ) 0xe000ed04 ) )
  91:../freertos/portable/GCC/ARM_CM3/portmacro.h **** #define portNVIC_PENDSVSET_BIT		( 1UL << 28UL )
  92:../freertos/portable/GCC/ARM_CM3/portmacro.h **** #define portEND_SWITCHING_ISR( xSwitchRequired ) if( xSwitchRequired != pdFALSE ) portYIELD()
  93:../freertos/portable/GCC/ARM_CM3/portmacro.h **** #define portYIELD_FROM_ISR( x ) portEND_SWITCHING_ISR( x )
  94:../freertos/portable/GCC/ARM_CM3/portmacro.h **** /*-----------------------------------------------------------*/
  95:../freertos/portable/GCC/ARM_CM3/portmacro.h **** 
  96:../freertos/portable/GCC/ARM_CM3/portmacro.h **** /* Critical section management. */
  97:../freertos/portable/GCC/ARM_CM3/portmacro.h **** extern void vPortEnterCritical( void );
  98:../freertos/portable/GCC/ARM_CM3/portmacro.h **** extern void vPortExitCritical( void );
  99:../freertos/portable/GCC/ARM_CM3/portmacro.h **** #define portSET_INTERRUPT_MASK_FROM_ISR()		ulPortRaiseBASEPRI()
 100:../freertos/portable/GCC/ARM_CM3/portmacro.h **** #define portCLEAR_INTERRUPT_MASK_FROM_ISR(x)	vPortSetBASEPRI(x)
 101:../freertos/portable/GCC/ARM_CM3/portmacro.h **** #define portDISABLE_INTERRUPTS()				vPortRaiseBASEPRI()
 102:../freertos/portable/GCC/ARM_CM3/portmacro.h **** #define portENABLE_INTERRUPTS()					vPortSetBASEPRI(0)
 103:../freertos/portable/GCC/ARM_CM3/portmacro.h **** #define portENTER_CRITICAL()					vPortEnterCritical()
 104:../freertos/portable/GCC/ARM_CM3/portmacro.h **** #define portEXIT_CRITICAL()						vPortExitCritical()
 105:../freertos/portable/GCC/ARM_CM3/portmacro.h **** 
 106:../freertos/portable/GCC/ARM_CM3/portmacro.h **** /*-----------------------------------------------------------*/
 107:../freertos/portable/GCC/ARM_CM3/portmacro.h **** 
 108:../freertos/portable/GCC/ARM_CM3/portmacro.h **** /* Task function macros as described on the FreeRTOS.org WEB site.  These are
 109:../freertos/portable/GCC/ARM_CM3/portmacro.h **** not necessary for to use this port.  They are defined so the common demo files
 110:../freertos/portable/GCC/ARM_CM3/portmacro.h **** (which build with all the ports) will build. */
 111:../freertos/portable/GCC/ARM_CM3/portmacro.h **** #define portTASK_FUNCTION_PROTO( vFunction, pvParameters ) void vFunction( void *pvParameters )
 112:../freertos/portable/GCC/ARM_CM3/portmacro.h **** #define portTASK_FUNCTION( vFunction, pvParameters ) void vFunction( void *pvParameters )
 113:../freertos/portable/GCC/ARM_CM3/portmacro.h **** /*-----------------------------------------------------------*/
 114:../freertos/portable/GCC/ARM_CM3/portmacro.h **** 
 115:../freertos/portable/GCC/ARM_CM3/portmacro.h **** /* Tickless idle/low power functionality. */
 116:../freertos/portable/GCC/ARM_CM3/portmacro.h **** #ifndef portSUPPRESS_TICKS_AND_SLEEP
 117:../freertos/portable/GCC/ARM_CM3/portmacro.h **** 	extern void vPortSuppressTicksAndSleep( TickType_t xExpectedIdleTime );
 118:../freertos/portable/GCC/ARM_CM3/portmacro.h **** 	#define portSUPPRESS_TICKS_AND_SLEEP( xExpectedIdleTime ) vPortSuppressTicksAndSleep( xExpectedIdl
 119:../freertos/portable/GCC/ARM_CM3/portmacro.h **** #endif
 120:../freertos/portable/GCC/ARM_CM3/portmacro.h **** /*-----------------------------------------------------------*/
 121:../freertos/portable/GCC/ARM_CM3/portmacro.h **** 
 122:../freertos/portable/GCC/ARM_CM3/portmacro.h **** /* Architecture specific optimisations. */
 123:../freertos/portable/GCC/ARM_CM3/portmacro.h **** #ifndef configUSE_PORT_OPTIMISED_TASK_SELECTION
 124:../freertos/portable/GCC/ARM_CM3/portmacro.h **** 	#define configUSE_PORT_OPTIMISED_TASK_SELECTION 1
 125:../freertos/portable/GCC/ARM_CM3/portmacro.h **** #endif
 126:../freertos/portable/GCC/ARM_CM3/portmacro.h **** 
 127:../freertos/portable/GCC/ARM_CM3/portmacro.h **** #if configUSE_PORT_OPTIMISED_TASK_SELECTION == 1
 128:../freertos/portable/GCC/ARM_CM3/portmacro.h **** 
 129:../freertos/portable/GCC/ARM_CM3/portmacro.h **** 	/* Generic helper function. */
 130:../freertos/portable/GCC/ARM_CM3/portmacro.h **** 	__attribute__( ( always_inline ) ) static inline uint8_t ucPortCountLeadingZeros( uint32_t ulBitma
 131:../freertos/portable/GCC/ARM_CM3/portmacro.h **** 	{
 132:../freertos/portable/GCC/ARM_CM3/portmacro.h **** 	uint8_t ucReturn;
 133:../freertos/portable/GCC/ARM_CM3/portmacro.h **** 
 134:../freertos/portable/GCC/ARM_CM3/portmacro.h **** 		__asm volatile ( "clz %0, %1" : "=r" ( ucReturn ) : "r" ( ulBitmap ) : "memory" );
 135:../freertos/portable/GCC/ARM_CM3/portmacro.h **** 		return ucReturn;
 136:../freertos/portable/GCC/ARM_CM3/portmacro.h **** 	}
 137:../freertos/portable/GCC/ARM_CM3/portmacro.h **** 
 138:../freertos/portable/GCC/ARM_CM3/portmacro.h **** 	/* Check the configuration. */
 139:../freertos/portable/GCC/ARM_CM3/portmacro.h **** 	#if( configMAX_PRIORITIES > 32 )
 140:../freertos/portable/GCC/ARM_CM3/portmacro.h **** 		#error configUSE_PORT_OPTIMISED_TASK_SELECTION can only be set to 1 when configMAX_PRIORITIES is 
 141:../freertos/portable/GCC/ARM_CM3/portmacro.h **** 	#endif
 142:../freertos/portable/GCC/ARM_CM3/portmacro.h **** 
 143:../freertos/portable/GCC/ARM_CM3/portmacro.h **** 	/* Store/clear the ready priorities in a bit map. */
 144:../freertos/portable/GCC/ARM_CM3/portmacro.h **** 	#define portRECORD_READY_PRIORITY( uxPriority, uxReadyPriorities ) ( uxReadyPriorities ) |= ( 1UL 
 145:../freertos/portable/GCC/ARM_CM3/portmacro.h **** 	#define portRESET_READY_PRIORITY( uxPriority, uxReadyPriorities ) ( uxReadyPriorities ) &= ~( 1UL 
ARM GAS  /tmp/ccVTlJpC.s 			page 9


 146:../freertos/portable/GCC/ARM_CM3/portmacro.h **** 
 147:../freertos/portable/GCC/ARM_CM3/portmacro.h **** 	/*-----------------------------------------------------------*/
 148:../freertos/portable/GCC/ARM_CM3/portmacro.h **** 
 149:../freertos/portable/GCC/ARM_CM3/portmacro.h **** 	#define portGET_HIGHEST_PRIORITY( uxTopPriority, uxReadyPriorities ) uxTopPriority = ( 31UL - ( ui
 150:../freertos/portable/GCC/ARM_CM3/portmacro.h **** 
 151:../freertos/portable/GCC/ARM_CM3/portmacro.h **** #endif /* configUSE_PORT_OPTIMISED_TASK_SELECTION */
 152:../freertos/portable/GCC/ARM_CM3/portmacro.h **** 
 153:../freertos/portable/GCC/ARM_CM3/portmacro.h **** /*-----------------------------------------------------------*/
 154:../freertos/portable/GCC/ARM_CM3/portmacro.h **** 
 155:../freertos/portable/GCC/ARM_CM3/portmacro.h **** #ifdef configASSERT
 156:../freertos/portable/GCC/ARM_CM3/portmacro.h **** 	void vPortValidateInterruptPriority( void );
 157:../freertos/portable/GCC/ARM_CM3/portmacro.h **** 	#define portASSERT_IF_INTERRUPT_PRIORITY_INVALID() 	vPortValidateInterruptPriority()
 158:../freertos/portable/GCC/ARM_CM3/portmacro.h **** #endif
 159:../freertos/portable/GCC/ARM_CM3/portmacro.h **** 
 160:../freertos/portable/GCC/ARM_CM3/portmacro.h **** /* portNOP() is not required by this port. */
 161:../freertos/portable/GCC/ARM_CM3/portmacro.h **** #define portNOP()
 162:../freertos/portable/GCC/ARM_CM3/portmacro.h **** 
 163:../freertos/portable/GCC/ARM_CM3/portmacro.h **** #define portINLINE	__inline
 164:../freertos/portable/GCC/ARM_CM3/portmacro.h **** 
 165:../freertos/portable/GCC/ARM_CM3/portmacro.h **** #ifndef portFORCE_INLINE
 166:../freertos/portable/GCC/ARM_CM3/portmacro.h **** 	#define portFORCE_INLINE inline __attribute__(( always_inline))
 167:../freertos/portable/GCC/ARM_CM3/portmacro.h **** #endif
 168:../freertos/portable/GCC/ARM_CM3/portmacro.h **** 
 169:../freertos/portable/GCC/ARM_CM3/portmacro.h **** portFORCE_INLINE static BaseType_t xPortIsInsideInterrupt( void )
 170:../freertos/portable/GCC/ARM_CM3/portmacro.h **** {
 171:../freertos/portable/GCC/ARM_CM3/portmacro.h **** uint32_t ulCurrentInterrupt;
 172:../freertos/portable/GCC/ARM_CM3/portmacro.h **** BaseType_t xReturn;
 173:../freertos/portable/GCC/ARM_CM3/portmacro.h **** 
 174:../freertos/portable/GCC/ARM_CM3/portmacro.h **** 	/* Obtain the number of the currently executing interrupt. */
 175:../freertos/portable/GCC/ARM_CM3/portmacro.h **** 	__asm volatile( "mrs %0, ipsr" : "=r"( ulCurrentInterrupt ) :: "memory" );
 176:../freertos/portable/GCC/ARM_CM3/portmacro.h **** 
 177:../freertos/portable/GCC/ARM_CM3/portmacro.h **** 	if( ulCurrentInterrupt == 0 )
 178:../freertos/portable/GCC/ARM_CM3/portmacro.h **** 	{
 179:../freertos/portable/GCC/ARM_CM3/portmacro.h **** 		xReturn = pdFALSE;
 180:../freertos/portable/GCC/ARM_CM3/portmacro.h **** 	}
 181:../freertos/portable/GCC/ARM_CM3/portmacro.h **** 	else
 182:../freertos/portable/GCC/ARM_CM3/portmacro.h **** 	{
 183:../freertos/portable/GCC/ARM_CM3/portmacro.h **** 		xReturn = pdTRUE;
 184:../freertos/portable/GCC/ARM_CM3/portmacro.h **** 	}
 185:../freertos/portable/GCC/ARM_CM3/portmacro.h **** 
 186:../freertos/portable/GCC/ARM_CM3/portmacro.h **** 	return xReturn;
 187:../freertos/portable/GCC/ARM_CM3/portmacro.h **** }
 188:../freertos/portable/GCC/ARM_CM3/portmacro.h **** 
 189:../freertos/portable/GCC/ARM_CM3/portmacro.h **** /*-----------------------------------------------------------*/
 190:../freertos/portable/GCC/ARM_CM3/portmacro.h **** 
 191:../freertos/portable/GCC/ARM_CM3/portmacro.h **** portFORCE_INLINE static void vPortRaiseBASEPRI( void )
 108              		.loc 2 191 30 view .LVU7
 109              	.LBB13:
 192:../freertos/portable/GCC/ARM_CM3/portmacro.h **** {
 193:../freertos/portable/GCC/ARM_CM3/portmacro.h **** uint32_t ulNewBASEPRI;
 110              		.loc 2 193 1 view .LVU8
 194:../freertos/portable/GCC/ARM_CM3/portmacro.h **** 
 195:../freertos/portable/GCC/ARM_CM3/portmacro.h **** 	__asm volatile
 111              		.loc 2 195 2 view .LVU9
 112              		.syntax unified
 113              	@ 195 "../freertos/portable/GCC/ARM_CM3/portmacro.h" 1
 114 0006 4FF01003 			mov r3, #16													@ ulNewBASEPRI,
ARM GAS  /tmp/ccVTlJpC.s 			page 10


 115 000a 83F31188 		msr basepri, r3												@ ulNewBASEPRI
 116 000e BFF36F8F 		isb														
 117 0012 BFF34F8F 		dsb														
 118              	
 119              	@ 0 "" 2
 120              	.LVL0:
 121              		.thumb
 122              		.syntax unified
 123              	.L2:
 124              		.loc 2 195 2 is_stmt 0 view .LVU10
 125              	.LBE13:
 126              	.LBE12:
 204:../freertos/portable/GCC/ARM_CM3/port.c **** 	while( ulDummy == 0 )
 205:../freertos/portable/GCC/ARM_CM3/port.c **** 	{
 206:../freertos/portable/GCC/ARM_CM3/port.c **** 		/* This file calls prvTaskExitError() after the scheduler has been
 207:../freertos/portable/GCC/ARM_CM3/port.c **** 		started to remove a compiler warning about the function being defined
 208:../freertos/portable/GCC/ARM_CM3/port.c **** 		but never called.  ulDummy is used purely to quieten other warnings
 209:../freertos/portable/GCC/ARM_CM3/port.c **** 		about code appearing after this function is called - making ulDummy
 210:../freertos/portable/GCC/ARM_CM3/port.c **** 		volatile makes the compiler think the function could return and
 211:../freertos/portable/GCC/ARM_CM3/port.c **** 		therefore not output an 'unreachable code' warning for code that appears
 212:../freertos/portable/GCC/ARM_CM3/port.c **** 		after it. */
 213:../freertos/portable/GCC/ARM_CM3/port.c **** 	}
 127              		.loc 1 213 2 is_stmt 1 discriminator 1 view .LVU11
 204:../freertos/portable/GCC/ARM_CM3/port.c **** 	while( ulDummy == 0 )
 128              		.loc 1 204 7 discriminator 1 view .LVU12
 129              	@ ../freertos/portable/GCC/ARM_CM3/port.c:204: 	while( ulDummy == 0 )
 204:../freertos/portable/GCC/ARM_CM3/port.c **** 	while( ulDummy == 0 )
 130              		.loc 1 204 17 is_stmt 0 discriminator 1 view .LVU13
 131 0016 019B     		ldr	r3, [sp, #4]	@ ulDummy.3_1, ulDummy
 132              	@ ../freertos/portable/GCC/ARM_CM3/port.c:204: 	while( ulDummy == 0 )
 204:../freertos/portable/GCC/ARM_CM3/port.c **** 	while( ulDummy == 0 )
 133              		.loc 1 204 7 discriminator 1 view .LVU14
 134 0018 002B     		cmp	r3, #0	@ ulDummy.3_1
 135 001a FCD0     		beq	.L2	@
 136              	@ ../freertos/portable/GCC/ARM_CM3/port.c:214: }
 214:../freertos/portable/GCC/ARM_CM3/port.c **** }
 137              		.loc 1 214 1 view .LVU15
 138 001c 02B0     		add	sp, sp, #8	@,,
 139              	.LCFI1:
 140              		.cfi_def_cfa_offset 0
 141              		@ sp needed	@
 142 001e 7047     		bx	lr	@
 143              		.cfi_endproc
 144              	.LFE6:
 145              		.size	prvTaskExitError, .-prvTaskExitError
 146              		.align	1
 147              		.syntax unified
 148              		.thumb
 149              		.thumb_func
 150              		.type	prvPortStartFirstTask, %function
 151              	prvPortStartFirstTask:
 152              	.LFB8:
 215:../freertos/portable/GCC/ARM_CM3/port.c **** /*-----------------------------------------------------------*/
 216:../freertos/portable/GCC/ARM_CM3/port.c **** 
 217:../freertos/portable/GCC/ARM_CM3/port.c **** void vPortSVCHandler( void )
 218:../freertos/portable/GCC/ARM_CM3/port.c **** {
 219:../freertos/portable/GCC/ARM_CM3/port.c **** 	__asm volatile (
ARM GAS  /tmp/ccVTlJpC.s 			page 11


 220:../freertos/portable/GCC/ARM_CM3/port.c **** 					"	ldr	r3, pxCurrentTCBConst2		\n" /* Restore the context. */
 221:../freertos/portable/GCC/ARM_CM3/port.c **** 					"	ldr r1, [r3]					\n" /* Use pxCurrentTCBConst to get the pxCurrentTCB address. */
 222:../freertos/portable/GCC/ARM_CM3/port.c **** 					"	ldr r0, [r1]					\n" /* The first item in pxCurrentTCB is the task top of stack. */
 223:../freertos/portable/GCC/ARM_CM3/port.c **** 					"	ldmia r0!, {r4-r11}				\n" /* Pop the registers that are not automatically saved on exceptio
 224:../freertos/portable/GCC/ARM_CM3/port.c **** 					"	msr psp, r0						\n" /* Restore the task stack pointer. */
 225:../freertos/portable/GCC/ARM_CM3/port.c **** 					"	isb								\n"
 226:../freertos/portable/GCC/ARM_CM3/port.c **** 					"	mov r0, #0 						\n"
 227:../freertos/portable/GCC/ARM_CM3/port.c **** 					"	msr	basepri, r0					\n"
 228:../freertos/portable/GCC/ARM_CM3/port.c **** 					"	orr r14, #0xd					\n"
 229:../freertos/portable/GCC/ARM_CM3/port.c **** 					"	bx r14							\n"
 230:../freertos/portable/GCC/ARM_CM3/port.c **** 					"									\n"
 231:../freertos/portable/GCC/ARM_CM3/port.c **** 					"	.align 4						\n"
 232:../freertos/portable/GCC/ARM_CM3/port.c **** 					"pxCurrentTCBConst2: .word pxCurrentTCB				\n"
 233:../freertos/portable/GCC/ARM_CM3/port.c **** 				);
 234:../freertos/portable/GCC/ARM_CM3/port.c **** }
 235:../freertos/portable/GCC/ARM_CM3/port.c **** /*-----------------------------------------------------------*/
 236:../freertos/portable/GCC/ARM_CM3/port.c **** 
 237:../freertos/portable/GCC/ARM_CM3/port.c **** static void prvPortStartFirstTask( void )
 238:../freertos/portable/GCC/ARM_CM3/port.c **** {
 153              		.loc 1 238 1 is_stmt 1 view -0
 154              		.cfi_startproc
 155              		@ Naked Function: prologue and epilogue provided by programmer.
 156              		@ args = 0, pretend = 0, frame = 0
 157              		@ frame_needed = 0, uses_anonymous_args = 0
 239:../freertos/portable/GCC/ARM_CM3/port.c **** 	__asm volatile(
 158              		.loc 1 239 2 view .LVU17
 159              		.syntax unified
 160              	@ 239 "../freertos/portable/GCC/ARM_CM3/port.c" 1
 161 0020 5848     		 ldr r0, =0xE000ED08 	
 162 0022 0068     	 ldr r0, [r0] 			
 163 0024 0068     	 ldr r0, [r0] 			
 164 0026 80F30888 	 msr msp, r0			
 165 002a 62B6     	 cpsie i				
 166 002c 61B6     	 cpsie f				
 167 002e BFF34F8F 	 dsb					
 168 0032 BFF36F8F 	 isb					
 169 0036 00DF     	 svc 0					
 170 0038 00BF     	 nop					
 171              	
 172              	@ 0 "" 2
 173              	@ ../freertos/portable/GCC/ARM_CM3/port.c:251: }
 240:../freertos/portable/GCC/ARM_CM3/port.c **** 					" ldr r0, =0xE000ED08 	\n" /* Use the NVIC offset register to locate the stack. */
 241:../freertos/portable/GCC/ARM_CM3/port.c **** 					" ldr r0, [r0] 			\n"
 242:../freertos/portable/GCC/ARM_CM3/port.c **** 					" ldr r0, [r0] 			\n"
 243:../freertos/portable/GCC/ARM_CM3/port.c **** 					" msr msp, r0			\n" /* Set the msp back to the start of the stack. */
 244:../freertos/portable/GCC/ARM_CM3/port.c **** 					" cpsie i				\n" /* Globally enable interrupts. */
 245:../freertos/portable/GCC/ARM_CM3/port.c **** 					" cpsie f				\n"
 246:../freertos/portable/GCC/ARM_CM3/port.c **** 					" dsb					\n"
 247:../freertos/portable/GCC/ARM_CM3/port.c **** 					" isb					\n"
 248:../freertos/portable/GCC/ARM_CM3/port.c **** 					" svc 0					\n" /* System call to start first task. */
 249:../freertos/portable/GCC/ARM_CM3/port.c **** 					" nop					\n"
 250:../freertos/portable/GCC/ARM_CM3/port.c **** 				);
 251:../freertos/portable/GCC/ARM_CM3/port.c **** }
 174              		.loc 1 251 1 is_stmt 0 view .LVU18
 175              		.thumb
 176              		.syntax unified
 177              		.cfi_endproc
ARM GAS  /tmp/ccVTlJpC.s 			page 12


 178              	.LFE8:
 179              		.size	prvPortStartFirstTask, .-prvPortStartFirstTask
 180              		.align	1
 181              		.global	pxPortInitialiseStack
 182              		.syntax unified
 183              		.thumb
 184              		.thumb_func
 185              		.type	pxPortInitialiseStack, %function
 186              	pxPortInitialiseStack:
 187              	.LVL1:
 188              	.LFB5:
 175:../freertos/portable/GCC/ARM_CM3/port.c **** 	/* Simulate the stack frame as it would be created by a context switch
 189              		.loc 1 175 1 is_stmt 1 view -0
 190              		.cfi_startproc
 191              		@ args = 0, pretend = 0, frame = 0
 192              		@ frame_needed = 0, uses_anonymous_args = 0
 193              		@ link register save eliminated.
 178:../freertos/portable/GCC/ARM_CM3/port.c **** 	*pxTopOfStack = portINITIAL_XPSR;	/* xPSR */
 194              		.loc 1 178 2 view .LVU20
 179:../freertos/portable/GCC/ARM_CM3/port.c **** 	pxTopOfStack--;
 195              		.loc 1 179 2 view .LVU21
 196              	@ ../freertos/portable/GCC/ARM_CM3/port.c:179: 	*pxTopOfStack = portINITIAL_XPSR;	/* xPSR */
 179:../freertos/portable/GCC/ARM_CM3/port.c **** 	pxTopOfStack--;
 197              		.loc 1 179 16 is_stmt 0 view .LVU22
 198 003a 4FF08073 		mov	r3, #16777216	@ tmp121,
 199 003e 40F8043C 		str	r3, [r0, #-4]	@ tmp121, MEM[(StackType_t *)pxTopOfStack_5(D) + 4294967292B]
 180:../freertos/portable/GCC/ARM_CM3/port.c **** 	*pxTopOfStack = ( ( StackType_t ) pxCode ) & portSTART_ADDRESS_MASK;	/* PC */
 200              		.loc 1 180 2 is_stmt 1 view .LVU23
 201              	.LVL2:
 181:../freertos/portable/GCC/ARM_CM3/port.c **** 	pxTopOfStack--;
 202              		.loc 1 181 2 view .LVU24
 203              	@ ../freertos/portable/GCC/ARM_CM3/port.c:183: 	*pxTopOfStack = ( StackType_t ) portTASK_RETURN_ADD
 183:../freertos/portable/GCC/ARM_CM3/port.c **** 	pxTopOfStack -= 5;	/* R12, R3, R2 and R1. */
 204              		.loc 1 183 16 is_stmt 0 view .LVU25
 205 0042 054B     		ldr	r3, .L7	@ tmp123,
 206              	@ ../freertos/portable/GCC/ARM_CM3/port.c:181: 	*pxTopOfStack = ( ( StackType_t ) pxCode ) & portST
 181:../freertos/portable/GCC/ARM_CM3/port.c **** 	pxTopOfStack--;
 207              		.loc 1 181 45 view .LVU26
 208 0044 21F00101 		bic	r1, r1, #1	@ tmp122, tmp126,
 209              	.LVL3:
 210              	@ ../freertos/portable/GCC/ARM_CM3/port.c:181: 	*pxTopOfStack = ( ( StackType_t ) pxCode ) & portST
 181:../freertos/portable/GCC/ARM_CM3/port.c **** 	pxTopOfStack--;
 211              		.loc 1 181 16 view .LVU27
 212 0048 40F8081C 		str	r1, [r0, #-8]	@ tmp122, MEM[(StackType_t *)pxTopOfStack_5(D) + 4294967288B]
 182:../freertos/portable/GCC/ARM_CM3/port.c **** 	*pxTopOfStack = ( StackType_t ) portTASK_RETURN_ADDRESS;	/* LR */
 213              		.loc 1 182 2 is_stmt 1 view .LVU28
 214              	.LVL4:
 183:../freertos/portable/GCC/ARM_CM3/port.c **** 	pxTopOfStack -= 5;	/* R12, R3, R2 and R1. */
 215              		.loc 1 183 2 view .LVU29
 216              	@ ../freertos/portable/GCC/ARM_CM3/port.c:183: 	*pxTopOfStack = ( StackType_t ) portTASK_RETURN_ADD
 183:../freertos/portable/GCC/ARM_CM3/port.c **** 	pxTopOfStack -= 5;	/* R12, R3, R2 and R1. */
 217              		.loc 1 183 16 is_stmt 0 view .LVU30
 218 004c 40F80C3C 		str	r3, [r0, #-12]	@ tmp123, MEM[(StackType_t *)pxTopOfStack_5(D) + 4294967284B]
 184:../freertos/portable/GCC/ARM_CM3/port.c **** 	*pxTopOfStack = ( StackType_t ) pvParameters;	/* R0 */
 219              		.loc 1 184 2 is_stmt 1 view .LVU31
 220              	.LVL5:
 185:../freertos/portable/GCC/ARM_CM3/port.c **** 	pxTopOfStack -= 8;	/* R11, R10, R9, R8, R7, R6, R5 and R4. */
ARM GAS  /tmp/ccVTlJpC.s 			page 13


 221              		.loc 1 185 2 view .LVU32
 222              	@ ../freertos/portable/GCC/ARM_CM3/port.c:185: 	*pxTopOfStack = ( StackType_t ) pvParameters;	/* R0
 185:../freertos/portable/GCC/ARM_CM3/port.c **** 	pxTopOfStack -= 8;	/* R11, R10, R9, R8, R7, R6, R5 and R4. */
 223              		.loc 1 185 16 is_stmt 0 view .LVU33
 224 0050 40F8202C 		str	r2, [r0, #-32]	@ tmp127, MEM[(StackType_t *)pxTopOfStack_5(D) + 4294967264B]
 186:../freertos/portable/GCC/ARM_CM3/port.c **** 
 225              		.loc 1 186 2 is_stmt 1 view .LVU34
 226              	.LVL6:
 188:../freertos/portable/GCC/ARM_CM3/port.c **** }
 227              		.loc 1 188 2 view .LVU35
 228              	@ ../freertos/portable/GCC/ARM_CM3/port.c:189: }
 189:../freertos/portable/GCC/ARM_CM3/port.c **** /*-----------------------------------------------------------*/
 229              		.loc 1 189 1 is_stmt 0 view .LVU36
 230 0054 4038     		subs	r0, r0, #64	@, pxTopOfStack,
 231              	.LVL7:
 189:../freertos/portable/GCC/ARM_CM3/port.c **** /*-----------------------------------------------------------*/
 232              		.loc 1 189 1 view .LVU37
 233 0056 7047     		bx	lr	@
 234              	.L8:
 235              		.align	2
 236              	.L7:
 237 0058 00000000 		.word	prvTaskExitError
 238              		.cfi_endproc
 239              	.LFE5:
 240              		.size	pxPortInitialiseStack, .-pxPortInitialiseStack
 241              		.align	1
 242              		.global	SVC_Handler
 243              		.syntax unified
 244              		.thumb
 245              		.thumb_func
 246              		.type	SVC_Handler, %function
 247              	SVC_Handler:
 248              	.LFB7:
 218:../freertos/portable/GCC/ARM_CM3/port.c **** 	__asm volatile (
 249              		.loc 1 218 1 is_stmt 1 view -0
 250              		.cfi_startproc
 251              		@ Naked Function: prologue and epilogue provided by programmer.
 252              		@ args = 0, pretend = 0, frame = 0
 253              		@ frame_needed = 0, uses_anonymous_args = 0
 219:../freertos/portable/GCC/ARM_CM3/port.c **** 					"	ldr	r3, pxCurrentTCBConst2		\n" /* Restore the context. */
 254              		.loc 1 219 2 view .LVU39
 255              		.syntax unified
 256              	@ 219 "../freertos/portable/GCC/ARM_CM3/port.c" 1
 257 005c 084B     			ldr	r3, pxCurrentTCBConst2		
 258 005e 1968     		ldr r1, [r3]					
 259 0060 0868     		ldr r0, [r1]					
 260 0062 B0E8F00F 		ldmia r0!, {r4-r11}				
 261 0066 80F30988 		msr psp, r0						
 262 006a BFF36F8F 		isb								
 263 006e 4FF00000 		mov r0, #0 						
 264 0072 80F31188 		msr	basepri, r0					
 265 0076 4EF00D0E 		orr r14, #0xd					
 266 007a 7047     		bx r14							
 267              										
 268 007c AFF30080 		.align 4						
 269 0080 00000000 	pxCurrentTCBConst2: .word pxCurrentTCB				
 270              	
ARM GAS  /tmp/ccVTlJpC.s 			page 14


 271              	@ 0 "" 2
 272              	@ ../freertos/portable/GCC/ARM_CM3/port.c:234: }
 234:../freertos/portable/GCC/ARM_CM3/port.c **** /*-----------------------------------------------------------*/
 273              		.loc 1 234 1 is_stmt 0 view .LVU40
 274              		.thumb
 275              		.syntax unified
 276              		.cfi_endproc
 277              	.LFE7:
 278              		.size	SVC_Handler, .-SVC_Handler
 279              		.align	1
 280              		.global	vPortEndScheduler
 281              		.syntax unified
 282              		.thumb
 283              		.thumb_func
 284              		.type	vPortEndScheduler, %function
 285              	vPortEndScheduler:
 286              	.LFB10:
 252:../freertos/portable/GCC/ARM_CM3/port.c **** /*-----------------------------------------------------------*/
 253:../freertos/portable/GCC/ARM_CM3/port.c **** 
 254:../freertos/portable/GCC/ARM_CM3/port.c **** /*
 255:../freertos/portable/GCC/ARM_CM3/port.c ****  * See header file for description.
 256:../freertos/portable/GCC/ARM_CM3/port.c ****  */
 257:../freertos/portable/GCC/ARM_CM3/port.c **** BaseType_t xPortStartScheduler( void )
 258:../freertos/portable/GCC/ARM_CM3/port.c **** {
 259:../freertos/portable/GCC/ARM_CM3/port.c **** 	/* configMAX_SYSCALL_INTERRUPT_PRIORITY must not be set to 0.
 260:../freertos/portable/GCC/ARM_CM3/port.c **** 	See http://www.FreeRTOS.org/RTOS-Cortex-M3-M4.html */
 261:../freertos/portable/GCC/ARM_CM3/port.c **** 	configASSERT( configMAX_SYSCALL_INTERRUPT_PRIORITY );
 262:../freertos/portable/GCC/ARM_CM3/port.c **** 
 263:../freertos/portable/GCC/ARM_CM3/port.c **** 	#if( configASSERT_DEFINED == 1 )
 264:../freertos/portable/GCC/ARM_CM3/port.c **** 	{
 265:../freertos/portable/GCC/ARM_CM3/port.c **** 		volatile uint32_t ulOriginalPriority;
 266:../freertos/portable/GCC/ARM_CM3/port.c **** 		volatile uint8_t * const pucFirstUserPriorityRegister = ( volatile uint8_t * const ) ( portNVIC_I
 267:../freertos/portable/GCC/ARM_CM3/port.c **** 		volatile uint8_t ucMaxPriorityValue;
 268:../freertos/portable/GCC/ARM_CM3/port.c **** 
 269:../freertos/portable/GCC/ARM_CM3/port.c **** 		/* Determine the maximum priority from which ISR safe FreeRTOS API
 270:../freertos/portable/GCC/ARM_CM3/port.c **** 		functions can be called.  ISR safe functions are those that end in
 271:../freertos/portable/GCC/ARM_CM3/port.c **** 		"FromISR".  FreeRTOS maintains separate thread and ISR API functions to
 272:../freertos/portable/GCC/ARM_CM3/port.c **** 		ensure interrupt entry is as fast and simple as possible.
 273:../freertos/portable/GCC/ARM_CM3/port.c **** 
 274:../freertos/portable/GCC/ARM_CM3/port.c **** 		Save the interrupt priority value that is about to be clobbered. */
 275:../freertos/portable/GCC/ARM_CM3/port.c **** 		ulOriginalPriority = *pucFirstUserPriorityRegister;
 276:../freertos/portable/GCC/ARM_CM3/port.c **** 
 277:../freertos/portable/GCC/ARM_CM3/port.c **** 		/* Determine the number of priority bits available.  First write to all
 278:../freertos/portable/GCC/ARM_CM3/port.c **** 		possible bits. */
 279:../freertos/portable/GCC/ARM_CM3/port.c **** 		*pucFirstUserPriorityRegister = portMAX_8_BIT_VALUE;
 280:../freertos/portable/GCC/ARM_CM3/port.c **** 
 281:../freertos/portable/GCC/ARM_CM3/port.c **** 		/* Read the value back to see how many bits stuck. */
 282:../freertos/portable/GCC/ARM_CM3/port.c **** 		ucMaxPriorityValue = *pucFirstUserPriorityRegister;
 283:../freertos/portable/GCC/ARM_CM3/port.c **** 
 284:../freertos/portable/GCC/ARM_CM3/port.c **** 		/* Use the same mask on the maximum system call priority. */
 285:../freertos/portable/GCC/ARM_CM3/port.c **** 		ucMaxSysCallPriority = configMAX_SYSCALL_INTERRUPT_PRIORITY & ucMaxPriorityValue;
 286:../freertos/portable/GCC/ARM_CM3/port.c **** 
 287:../freertos/portable/GCC/ARM_CM3/port.c **** 		/* Calculate the maximum acceptable priority group value for the number
 288:../freertos/portable/GCC/ARM_CM3/port.c **** 		of bits read back. */
 289:../freertos/portable/GCC/ARM_CM3/port.c **** 		ulMaxPRIGROUPValue = portMAX_PRIGROUP_BITS;
 290:../freertos/portable/GCC/ARM_CM3/port.c **** 		while( ( ucMaxPriorityValue & portTOP_BIT_OF_BYTE ) == portTOP_BIT_OF_BYTE )
 291:../freertos/portable/GCC/ARM_CM3/port.c **** 		{
ARM GAS  /tmp/ccVTlJpC.s 			page 15


 292:../freertos/portable/GCC/ARM_CM3/port.c **** 			ulMaxPRIGROUPValue--;
 293:../freertos/portable/GCC/ARM_CM3/port.c **** 			ucMaxPriorityValue <<= ( uint8_t ) 0x01;
 294:../freertos/portable/GCC/ARM_CM3/port.c **** 		}
 295:../freertos/portable/GCC/ARM_CM3/port.c **** 
 296:../freertos/portable/GCC/ARM_CM3/port.c **** 		#ifdef __NVIC_PRIO_BITS
 297:../freertos/portable/GCC/ARM_CM3/port.c **** 		{
 298:../freertos/portable/GCC/ARM_CM3/port.c **** 			/* Check the CMSIS configuration that defines the number of
 299:../freertos/portable/GCC/ARM_CM3/port.c **** 			priority bits matches the number of priority bits actually queried
 300:../freertos/portable/GCC/ARM_CM3/port.c **** 			from the hardware. */
 301:../freertos/portable/GCC/ARM_CM3/port.c **** 			configASSERT( ( portMAX_PRIGROUP_BITS - ulMaxPRIGROUPValue ) == __NVIC_PRIO_BITS );
 302:../freertos/portable/GCC/ARM_CM3/port.c **** 		}
 303:../freertos/portable/GCC/ARM_CM3/port.c **** 		#endif
 304:../freertos/portable/GCC/ARM_CM3/port.c **** 
 305:../freertos/portable/GCC/ARM_CM3/port.c **** 		#ifdef configPRIO_BITS
 306:../freertos/portable/GCC/ARM_CM3/port.c **** 		{
 307:../freertos/portable/GCC/ARM_CM3/port.c **** 			/* Check the FreeRTOS configuration that defines the number of
 308:../freertos/portable/GCC/ARM_CM3/port.c **** 			priority bits matches the number of priority bits actually queried
 309:../freertos/portable/GCC/ARM_CM3/port.c **** 			from the hardware. */
 310:../freertos/portable/GCC/ARM_CM3/port.c **** 			configASSERT( ( portMAX_PRIGROUP_BITS - ulMaxPRIGROUPValue ) == configPRIO_BITS );
 311:../freertos/portable/GCC/ARM_CM3/port.c **** 		}
 312:../freertos/portable/GCC/ARM_CM3/port.c **** 		#endif
 313:../freertos/portable/GCC/ARM_CM3/port.c **** 
 314:../freertos/portable/GCC/ARM_CM3/port.c **** 		/* Shift the priority group value back to its position within the AIRCR
 315:../freertos/portable/GCC/ARM_CM3/port.c **** 		register. */
 316:../freertos/portable/GCC/ARM_CM3/port.c **** 		ulMaxPRIGROUPValue <<= portPRIGROUP_SHIFT;
 317:../freertos/portable/GCC/ARM_CM3/port.c **** 		ulMaxPRIGROUPValue &= portPRIORITY_GROUP_MASK;
 318:../freertos/portable/GCC/ARM_CM3/port.c **** 
 319:../freertos/portable/GCC/ARM_CM3/port.c **** 		/* Restore the clobbered interrupt priority register to its original
 320:../freertos/portable/GCC/ARM_CM3/port.c **** 		value. */
 321:../freertos/portable/GCC/ARM_CM3/port.c **** 		*pucFirstUserPriorityRegister = ulOriginalPriority;
 322:../freertos/portable/GCC/ARM_CM3/port.c **** 	}
 323:../freertos/portable/GCC/ARM_CM3/port.c **** 	#endif /* conifgASSERT_DEFINED */
 324:../freertos/portable/GCC/ARM_CM3/port.c **** 
 325:../freertos/portable/GCC/ARM_CM3/port.c **** 	/* Make PendSV and SysTick the lowest priority interrupts. */
 326:../freertos/portable/GCC/ARM_CM3/port.c **** 	portNVIC_SYSPRI2_REG |= portNVIC_PENDSV_PRI;
 327:../freertos/portable/GCC/ARM_CM3/port.c **** 	portNVIC_SYSPRI2_REG |= portNVIC_SYSTICK_PRI;
 328:../freertos/portable/GCC/ARM_CM3/port.c **** 
 329:../freertos/portable/GCC/ARM_CM3/port.c **** 	/* Start the timer that generates the tick ISR.  Interrupts are disabled
 330:../freertos/portable/GCC/ARM_CM3/port.c **** 	here already. */
 331:../freertos/portable/GCC/ARM_CM3/port.c **** 	vPortSetupTimerInterrupt();
 332:../freertos/portable/GCC/ARM_CM3/port.c **** 
 333:../freertos/portable/GCC/ARM_CM3/port.c **** 	/* Initialise the critical nesting count ready for the first task. */
 334:../freertos/portable/GCC/ARM_CM3/port.c **** 	uxCriticalNesting = 0;
 335:../freertos/portable/GCC/ARM_CM3/port.c **** 
 336:../freertos/portable/GCC/ARM_CM3/port.c **** 	/* Start the first task. */
 337:../freertos/portable/GCC/ARM_CM3/port.c **** 	prvPortStartFirstTask();
 338:../freertos/portable/GCC/ARM_CM3/port.c **** 
 339:../freertos/portable/GCC/ARM_CM3/port.c **** 	/* Should never get here as the tasks will now be executing!  Call the task
 340:../freertos/portable/GCC/ARM_CM3/port.c **** 	exit error function to prevent compiler warnings about a static function
 341:../freertos/portable/GCC/ARM_CM3/port.c **** 	not being called in the case that the application writer overrides this
 342:../freertos/portable/GCC/ARM_CM3/port.c **** 	functionality by defining configTASK_RETURN_ADDRESS.  Call
 343:../freertos/portable/GCC/ARM_CM3/port.c **** 	vTaskSwitchContext() so link time optimisation does not remove the
 344:../freertos/portable/GCC/ARM_CM3/port.c **** 	symbol. */
 345:../freertos/portable/GCC/ARM_CM3/port.c **** 	vTaskSwitchContext();
 346:../freertos/portable/GCC/ARM_CM3/port.c **** 	prvTaskExitError();
 347:../freertos/portable/GCC/ARM_CM3/port.c **** 
 348:../freertos/portable/GCC/ARM_CM3/port.c **** 	/* Should not get here! */
ARM GAS  /tmp/ccVTlJpC.s 			page 16


 349:../freertos/portable/GCC/ARM_CM3/port.c **** 	return 0;
 350:../freertos/portable/GCC/ARM_CM3/port.c **** }
 351:../freertos/portable/GCC/ARM_CM3/port.c **** /*-----------------------------------------------------------*/
 352:../freertos/portable/GCC/ARM_CM3/port.c **** 
 353:../freertos/portable/GCC/ARM_CM3/port.c **** void vPortEndScheduler( void )
 354:../freertos/portable/GCC/ARM_CM3/port.c **** {
 287              		.loc 1 354 1 is_stmt 1 view -0
 288              		.cfi_startproc
 289              		@ args = 0, pretend = 0, frame = 0
 290              		@ frame_needed = 0, uses_anonymous_args = 0
 291              		@ link register save eliminated.
 355:../freertos/portable/GCC/ARM_CM3/port.c **** 	/* Not implemented in ports where there is nothing to return to.
 356:../freertos/portable/GCC/ARM_CM3/port.c **** 	Artificially force an assert. */
 357:../freertos/portable/GCC/ARM_CM3/port.c **** 	configASSERT( uxCriticalNesting == 1000UL );
 292              		.loc 1 357 45 view .LVU42
 293              	@ ../freertos/portable/GCC/ARM_CM3/port.c:358: }
 358:../freertos/portable/GCC/ARM_CM3/port.c **** }
 294              		.loc 1 358 1 is_stmt 0 view .LVU43
 295 0084 7047     		bx	lr	@
 296              		.cfi_endproc
 297              	.LFE10:
 298              		.size	vPortEndScheduler, .-vPortEndScheduler
 299              		.align	1
 300              		.global	vPortEnterCritical
 301              		.syntax unified
 302              		.thumb
 303              		.thumb_func
 304              		.type	vPortEnterCritical, %function
 305              	vPortEnterCritical:
 306              	.LFB11:
 359:../freertos/portable/GCC/ARM_CM3/port.c **** /*-----------------------------------------------------------*/
 360:../freertos/portable/GCC/ARM_CM3/port.c **** 
 361:../freertos/portable/GCC/ARM_CM3/port.c **** void vPortEnterCritical( void )
 362:../freertos/portable/GCC/ARM_CM3/port.c **** {
 307              		.loc 1 362 1 is_stmt 1 view -0
 308              		.cfi_startproc
 309              		@ args = 0, pretend = 0, frame = 0
 310              		@ frame_needed = 0, uses_anonymous_args = 0
 311              		@ link register save eliminated.
 363:../freertos/portable/GCC/ARM_CM3/port.c **** 	portDISABLE_INTERRUPTS();
 312              		.loc 1 363 2 view .LVU45
 313              	.LBB14:
 314              	.LBI14:
 191:../freertos/portable/GCC/ARM_CM3/portmacro.h **** {
 315              		.loc 2 191 30 view .LVU46
 316              	.LBB15:
 193:../freertos/portable/GCC/ARM_CM3/portmacro.h **** 
 317              		.loc 2 193 1 view .LVU47
 318              		.loc 2 195 2 view .LVU48
 319              		.syntax unified
 320              	@ 195 "../freertos/portable/GCC/ARM_CM3/portmacro.h" 1
 321 0086 4FF01003 			mov r3, #16													@ ulNewBASEPRI,
 322 008a 83F31188 		msr basepri, r3												@ ulNewBASEPRI
 323 008e BFF36F8F 		isb														
 324 0092 BFF34F8F 		dsb														
 325              	
 326              	@ 0 "" 2
ARM GAS  /tmp/ccVTlJpC.s 			page 17


 327              		.thumb
 328              		.syntax unified
 329              	.LBE15:
 330              	.LBE14:
 364:../freertos/portable/GCC/ARM_CM3/port.c **** 	uxCriticalNesting++;
 331              		.loc 1 364 2 view .LVU49
 332              	@ ../freertos/portable/GCC/ARM_CM3/port.c:364: 	uxCriticalNesting++;
 333              		.loc 1 364 19 is_stmt 0 view .LVU50
 334 0096 024A     		ldr	r2, .L12	@ tmp117,
 335 0098 1368     		ldr	r3, [r2]	@ uxCriticalNesting, uxCriticalNesting
 336 009a 0133     		adds	r3, r3, #1	@ tmp119, uxCriticalNesting,
 337 009c 1360     		str	r3, [r2]	@ tmp119, uxCriticalNesting
 365:../freertos/portable/GCC/ARM_CM3/port.c **** 
 366:../freertos/portable/GCC/ARM_CM3/port.c **** 	/* This is not the interrupt safe version of the enter critical function so
 367:../freertos/portable/GCC/ARM_CM3/port.c **** 	assert() if it is being called from an interrupt context.  Only API
 368:../freertos/portable/GCC/ARM_CM3/port.c **** 	functions that end in "FromISR" can be used in an interrupt.  Only assert if
 369:../freertos/portable/GCC/ARM_CM3/port.c **** 	the critical nesting count is 1 to protect against recursive calls if the
 370:../freertos/portable/GCC/ARM_CM3/port.c **** 	assert function also uses a critical section. */
 371:../freertos/portable/GCC/ARM_CM3/port.c **** 	if( uxCriticalNesting == 1 )
 338              		.loc 1 371 2 is_stmt 1 view .LVU51
 372:../freertos/portable/GCC/ARM_CM3/port.c **** 	{
 373:../freertos/portable/GCC/ARM_CM3/port.c **** 		configASSERT( ( portNVIC_INT_CTRL_REG & portVECTACTIVE_MASK ) == 0 );
 339              		.loc 1 373 71 view .LVU52
 340              	@ ../freertos/portable/GCC/ARM_CM3/port.c:375: }
 374:../freertos/portable/GCC/ARM_CM3/port.c **** 	}
 375:../freertos/portable/GCC/ARM_CM3/port.c **** }
 341              		.loc 1 375 1 is_stmt 0 view .LVU53
 342 009e 7047     		bx	lr	@
 343              	.L13:
 344              		.align	2
 345              	.L12:
 346 00a0 00000000 		.word	.LANCHOR0
 347              		.cfi_endproc
 348              	.LFE11:
 349              		.size	vPortEnterCritical, .-vPortEnterCritical
 350              		.align	1
 351              		.global	vPortExitCritical
 352              		.syntax unified
 353              		.thumb
 354              		.thumb_func
 355              		.type	vPortExitCritical, %function
 356              	vPortExitCritical:
 357              	.LFB12:
 376:../freertos/portable/GCC/ARM_CM3/port.c **** /*-----------------------------------------------------------*/
 377:../freertos/portable/GCC/ARM_CM3/port.c **** 
 378:../freertos/portable/GCC/ARM_CM3/port.c **** void vPortExitCritical( void )
 379:../freertos/portable/GCC/ARM_CM3/port.c **** {
 358              		.loc 1 379 1 is_stmt 1 view -0
 359              		.cfi_startproc
 360              		@ args = 0, pretend = 0, frame = 0
 361              		@ frame_needed = 0, uses_anonymous_args = 0
 362              		@ link register save eliminated.
 380:../freertos/portable/GCC/ARM_CM3/port.c **** 	configASSERT( uxCriticalNesting );
 363              		.loc 1 380 35 view .LVU55
 381:../freertos/portable/GCC/ARM_CM3/port.c **** 	uxCriticalNesting--;
 364              		.loc 1 381 2 view .LVU56
 365              	@ ../freertos/portable/GCC/ARM_CM3/port.c:381: 	uxCriticalNesting--;
ARM GAS  /tmp/ccVTlJpC.s 			page 18


 366              		.loc 1 381 19 is_stmt 0 view .LVU57
 367 00a4 034A     		ldr	r2, .L16	@ tmp115,
 368 00a6 1368     		ldr	r3, [r2]	@ uxCriticalNesting, uxCriticalNesting
 369 00a8 013B     		subs	r3, r3, #1	@ _2, uxCriticalNesting,
 370 00aa 1360     		str	r3, [r2]	@ _2, uxCriticalNesting
 382:../freertos/portable/GCC/ARM_CM3/port.c **** 	if( uxCriticalNesting == 0 )
 371              		.loc 1 382 2 is_stmt 1 view .LVU58
 372              	@ ../freertos/portable/GCC/ARM_CM3/port.c:382: 	if( uxCriticalNesting == 0 )
 373              		.loc 1 382 4 is_stmt 0 view .LVU59
 374 00ac 0BB9     		cbnz	r3, .L14	@ _2,
 383:../freertos/portable/GCC/ARM_CM3/port.c **** 	{
 384:../freertos/portable/GCC/ARM_CM3/port.c **** 		portENABLE_INTERRUPTS();
 375              		.loc 1 384 3 is_stmt 1 view .LVU60
 376              	.LVL8:
 377              	.LBB16:
 378              	.LBI16:
 196:../freertos/portable/GCC/ARM_CM3/portmacro.h **** 	(
 197:../freertos/portable/GCC/ARM_CM3/portmacro.h **** 		"	mov %0, %1												\n" \
 198:../freertos/portable/GCC/ARM_CM3/portmacro.h **** 		"	msr basepri, %0											\n" \
 199:../freertos/portable/GCC/ARM_CM3/portmacro.h **** 		"	isb														\n" \
 200:../freertos/portable/GCC/ARM_CM3/portmacro.h **** 		"	dsb														\n" \
 201:../freertos/portable/GCC/ARM_CM3/portmacro.h **** 		:"=r" (ulNewBASEPRI) : "i" ( configMAX_SYSCALL_INTERRUPT_PRIORITY ) : "memory"
 202:../freertos/portable/GCC/ARM_CM3/portmacro.h **** 	);
 203:../freertos/portable/GCC/ARM_CM3/portmacro.h **** }
 204:../freertos/portable/GCC/ARM_CM3/portmacro.h **** 
 205:../freertos/portable/GCC/ARM_CM3/portmacro.h **** /*-----------------------------------------------------------*/
 206:../freertos/portable/GCC/ARM_CM3/portmacro.h **** 
 207:../freertos/portable/GCC/ARM_CM3/portmacro.h **** portFORCE_INLINE static uint32_t ulPortRaiseBASEPRI( void )
 208:../freertos/portable/GCC/ARM_CM3/portmacro.h **** {
 209:../freertos/portable/GCC/ARM_CM3/portmacro.h **** uint32_t ulOriginalBASEPRI, ulNewBASEPRI;
 210:../freertos/portable/GCC/ARM_CM3/portmacro.h **** 
 211:../freertos/portable/GCC/ARM_CM3/portmacro.h **** 	__asm volatile
 212:../freertos/portable/GCC/ARM_CM3/portmacro.h **** 	(
 213:../freertos/portable/GCC/ARM_CM3/portmacro.h **** 		"	mrs %0, basepri											\n" \
 214:../freertos/portable/GCC/ARM_CM3/portmacro.h **** 		"	mov %1, %2												\n" \
 215:../freertos/portable/GCC/ARM_CM3/portmacro.h **** 		"	msr basepri, %1											\n" \
 216:../freertos/portable/GCC/ARM_CM3/portmacro.h **** 		"	isb														\n" \
 217:../freertos/portable/GCC/ARM_CM3/portmacro.h **** 		"	dsb														\n" \
 218:../freertos/portable/GCC/ARM_CM3/portmacro.h **** 		:"=r" (ulOriginalBASEPRI), "=r" (ulNewBASEPRI) : "i" ( configMAX_SYSCALL_INTERRUPT_PRIORITY ) : "
 219:../freertos/portable/GCC/ARM_CM3/portmacro.h **** 	);
 220:../freertos/portable/GCC/ARM_CM3/portmacro.h **** 
 221:../freertos/portable/GCC/ARM_CM3/portmacro.h **** 	/* This return will not be reached but is necessary to prevent compiler
 222:../freertos/portable/GCC/ARM_CM3/portmacro.h **** 	warnings. */
 223:../freertos/portable/GCC/ARM_CM3/portmacro.h **** 	return ulOriginalBASEPRI;
 224:../freertos/portable/GCC/ARM_CM3/portmacro.h **** }
 225:../freertos/portable/GCC/ARM_CM3/portmacro.h **** /*-----------------------------------------------------------*/
 226:../freertos/portable/GCC/ARM_CM3/portmacro.h **** 
 227:../freertos/portable/GCC/ARM_CM3/portmacro.h **** portFORCE_INLINE static void vPortSetBASEPRI( uint32_t ulNewMaskValue )
 379              		.loc 2 227 30 view .LVU61
 380              	.LBB17:
 228:../freertos/portable/GCC/ARM_CM3/portmacro.h **** {
 229:../freertos/portable/GCC/ARM_CM3/portmacro.h **** 	__asm volatile
 381              		.loc 2 229 2 view .LVU62
 382              		.syntax unified
 383              	@ 229 "../freertos/portable/GCC/ARM_CM3/portmacro.h" 1
 384 00ae 83F31188 			msr basepri, r3		@ _2
 385              	@ 0 "" 2
ARM GAS  /tmp/ccVTlJpC.s 			page 19


 386              	.LVL9:
 387              		.thumb
 388              		.syntax unified
 389              	.L14:
 390              		.loc 2 229 2 is_stmt 0 view .LVU63
 391              	.LBE17:
 392              	.LBE16:
 393              	@ ../freertos/portable/GCC/ARM_CM3/port.c:386: }
 385:../freertos/portable/GCC/ARM_CM3/port.c **** 	}
 386:../freertos/portable/GCC/ARM_CM3/port.c **** }
 394              		.loc 1 386 1 view .LVU64
 395 00b2 7047     		bx	lr	@
 396              	.L17:
 397              		.align	2
 398              	.L16:
 399 00b4 00000000 		.word	.LANCHOR0
 400              		.cfi_endproc
 401              	.LFE12:
 402              		.size	vPortExitCritical, .-vPortExitCritical
 403              		.align	1
 404              		.global	PendSV_Handler
 405              		.syntax unified
 406              		.thumb
 407              		.thumb_func
 408              		.type	PendSV_Handler, %function
 409              	PendSV_Handler:
 410              	.LFB13:
 387:../freertos/portable/GCC/ARM_CM3/port.c **** /*-----------------------------------------------------------*/
 388:../freertos/portable/GCC/ARM_CM3/port.c **** 
 389:../freertos/portable/GCC/ARM_CM3/port.c **** void xPortPendSVHandler( void )
 390:../freertos/portable/GCC/ARM_CM3/port.c **** {
 411              		.loc 1 390 1 is_stmt 1 view -0
 412              		.cfi_startproc
 413              		@ Naked Function: prologue and epilogue provided by programmer.
 414              		@ args = 0, pretend = 0, frame = 0
 415              		@ frame_needed = 0, uses_anonymous_args = 0
 391:../freertos/portable/GCC/ARM_CM3/port.c **** 	/* This is a naked function. */
 392:../freertos/portable/GCC/ARM_CM3/port.c **** 
 393:../freertos/portable/GCC/ARM_CM3/port.c **** 	__asm volatile
 416              		.loc 1 393 2 view .LVU66
 417              		.syntax unified
 418              	@ 393 "../freertos/portable/GCC/ARM_CM3/port.c" 1
 419 00b8 EFF30980 			mrs r0, psp							
 420 00bc BFF36F8F 		isb									
 421              											
 422 00c0 0F4B     		ldr	r3, pxCurrentTCBConst			
 423 00c2 1A68     		ldr	r2, [r3]						
 424              											
 425 00c4 20E9F00F 		stmdb r0!, {r4-r11}					
 426 00c8 1060     		str r0, [r2]						
 427              											
 428 00ca 2DE90840 		stmdb sp!, {r3, r14}				
 429 00ce 4FF01000 		mov r0, #16								@
 430 00d2 80F31188 		msr basepri, r0						
 431 00d6 FFF7FEFF 		bl vTaskSwitchContext				
 432 00da 4FF00000 		mov r0, #0							
 433 00de 80F31188 		msr basepri, r0						
ARM GAS  /tmp/ccVTlJpC.s 			page 20


 434 00e2 BDE80840 		ldmia sp!, {r3, r14}				
 435              											
 436 00e6 1968     		ldr r1, [r3]						
 437 00e8 0868     		ldr r0, [r1]						
 438 00ea B0E8F00F 		ldmia r0!, {r4-r11}					
 439 00ee 80F30988 		msr psp, r0							
 440 00f2 BFF36F8F 		isb									
 441 00f6 7047     		bx r14								
 442              											
 443 00f8 AFF30080 		.align 4							
 443      AFF30080 
 444 0100 00000000 	pxCurrentTCBConst: .word pxCurrentTCB	
 445              	
 446              	@ 0 "" 2
 447              	@ ../freertos/portable/GCC/ARM_CM3/port.c:423: }
 394:../freertos/portable/GCC/ARM_CM3/port.c **** 	(
 395:../freertos/portable/GCC/ARM_CM3/port.c **** 	"	mrs r0, psp							\n"
 396:../freertos/portable/GCC/ARM_CM3/port.c **** 	"	isb									\n"
 397:../freertos/portable/GCC/ARM_CM3/port.c **** 	"										\n"
 398:../freertos/portable/GCC/ARM_CM3/port.c **** 	"	ldr	r3, pxCurrentTCBConst			\n" /* Get the location of the current TCB. */
 399:../freertos/portable/GCC/ARM_CM3/port.c **** 	"	ldr	r2, [r3]						\n"
 400:../freertos/portable/GCC/ARM_CM3/port.c **** 	"										\n"
 401:../freertos/portable/GCC/ARM_CM3/port.c **** 	"	stmdb r0!, {r4-r11}					\n" /* Save the remaining registers. */
 402:../freertos/portable/GCC/ARM_CM3/port.c **** 	"	str r0, [r2]						\n" /* Save the new top of stack into the first member of the TCB. */
 403:../freertos/portable/GCC/ARM_CM3/port.c **** 	"										\n"
 404:../freertos/portable/GCC/ARM_CM3/port.c **** 	"	stmdb sp!, {r3, r14}				\n"
 405:../freertos/portable/GCC/ARM_CM3/port.c **** 	"	mov r0, %0							\n"
 406:../freertos/portable/GCC/ARM_CM3/port.c **** 	"	msr basepri, r0						\n"
 407:../freertos/portable/GCC/ARM_CM3/port.c **** 	"	bl vTaskSwitchContext				\n"
 408:../freertos/portable/GCC/ARM_CM3/port.c **** 	"	mov r0, #0							\n"
 409:../freertos/portable/GCC/ARM_CM3/port.c **** 	"	msr basepri, r0						\n"
 410:../freertos/portable/GCC/ARM_CM3/port.c **** 	"	ldmia sp!, {r3, r14}				\n"
 411:../freertos/portable/GCC/ARM_CM3/port.c **** 	"										\n" /* Restore the context, including the critical nesting count. */
 412:../freertos/portable/GCC/ARM_CM3/port.c **** 	"	ldr r1, [r3]						\n"
 413:../freertos/portable/GCC/ARM_CM3/port.c **** 	"	ldr r0, [r1]						\n" /* The first item in pxCurrentTCB is the task top of stack. */
 414:../freertos/portable/GCC/ARM_CM3/port.c **** 	"	ldmia r0!, {r4-r11}					\n" /* Pop the registers. */
 415:../freertos/portable/GCC/ARM_CM3/port.c **** 	"	msr psp, r0							\n"
 416:../freertos/portable/GCC/ARM_CM3/port.c **** 	"	isb									\n"
 417:../freertos/portable/GCC/ARM_CM3/port.c **** 	"	bx r14								\n"
 418:../freertos/portable/GCC/ARM_CM3/port.c **** 	"										\n"
 419:../freertos/portable/GCC/ARM_CM3/port.c **** 	"	.align 4							\n"
 420:../freertos/portable/GCC/ARM_CM3/port.c **** 	"pxCurrentTCBConst: .word pxCurrentTCB	\n"
 421:../freertos/portable/GCC/ARM_CM3/port.c **** 	::"i"(configMAX_SYSCALL_INTERRUPT_PRIORITY)
 422:../freertos/portable/GCC/ARM_CM3/port.c **** 	);
 423:../freertos/portable/GCC/ARM_CM3/port.c **** }
 448              		.loc 1 423 1 is_stmt 0 view .LVU67
 449              		.thumb
 450              		.syntax unified
 451              		.cfi_endproc
 452              	.LFE13:
 453              		.size	PendSV_Handler, .-PendSV_Handler
 454              		.align	1
 455              		.global	SysTick_Handler
 456              		.syntax unified
 457              		.thumb
 458              		.thumb_func
 459              		.type	SysTick_Handler, %function
ARM GAS  /tmp/ccVTlJpC.s 			page 21


 460              	SysTick_Handler:
 461              	.LFB14:
 424:../freertos/portable/GCC/ARM_CM3/port.c **** /*-----------------------------------------------------------*/
 425:../freertos/portable/GCC/ARM_CM3/port.c **** 
 426:../freertos/portable/GCC/ARM_CM3/port.c **** void xPortSysTickHandler( void )
 427:../freertos/portable/GCC/ARM_CM3/port.c **** {
 462              		.loc 1 427 1 is_stmt 1 view -0
 463              		.cfi_startproc
 464              		@ args = 0, pretend = 0, frame = 0
 465              		@ frame_needed = 0, uses_anonymous_args = 0
 428:../freertos/portable/GCC/ARM_CM3/port.c **** 	/* The SysTick runs at the lowest interrupt priority, so when this interrupt
 429:../freertos/portable/GCC/ARM_CM3/port.c **** 	executes all interrupts must be unmasked.  There is therefore no need to
 430:../freertos/portable/GCC/ARM_CM3/port.c **** 	save and then restore the interrupt mask value as its value is already
 431:../freertos/portable/GCC/ARM_CM3/port.c **** 	known. */
 432:../freertos/portable/GCC/ARM_CM3/port.c **** 	portDISABLE_INTERRUPTS();
 466              		.loc 1 432 2 view .LVU69
 467              	.LBB18:
 468              	.LBI18:
 191:../freertos/portable/GCC/ARM_CM3/portmacro.h **** {
 469              		.loc 2 191 30 view .LVU70
 470              	.LBB19:
 193:../freertos/portable/GCC/ARM_CM3/portmacro.h **** 
 471              		.loc 2 193 1 view .LVU71
 195:../freertos/portable/GCC/ARM_CM3/portmacro.h **** 	(
 472              		.loc 2 195 2 view .LVU72
 473              	.LBE19:
 474              	.LBE18:
 475              	@ ../freertos/portable/GCC/ARM_CM3/port.c:427: {
 427:../freertos/portable/GCC/ARM_CM3/port.c **** 	/* The SysTick runs at the lowest interrupt priority, so when this interrupt
 476              		.loc 1 427 1 is_stmt 0 view .LVU73
 477 0104 08B5     		push	{r3, lr}	@
 478              	.LCFI2:
 479              		.cfi_def_cfa_offset 8
 480              		.cfi_offset 3, -8
 481              		.cfi_offset 14, -4
 482              	.LBB21:
 483              	.LBB20:
 484              	@ ../freertos/portable/GCC/ARM_CM3/portmacro.h:195: 	__asm volatile
 195:../freertos/portable/GCC/ARM_CM3/portmacro.h **** 	(
 485              		.loc 2 195 2 view .LVU74
 486              		.syntax unified
 487              	@ 195 "../freertos/portable/GCC/ARM_CM3/portmacro.h" 1
 488 0106 4FF01003 			mov r3, #16													@ ulNewBASEPRI,
 489 010a 83F31188 		msr basepri, r3												@ ulNewBASEPRI
 490 010e BFF36F8F 		isb														
 491 0112 BFF34F8F 		dsb														
 492              	
 493              	@ 0 "" 2
 494              		.thumb
 495              		.syntax unified
 496              	.LBE20:
 497              	.LBE21:
 433:../freertos/portable/GCC/ARM_CM3/port.c **** 	{
 434:../freertos/portable/GCC/ARM_CM3/port.c **** 		/* Increment the RTOS tick. */
 435:../freertos/portable/GCC/ARM_CM3/port.c **** 		if( xTaskIncrementTick() != pdFALSE )
 498              		.loc 1 435 3 is_stmt 1 view .LVU75
 499              	@ ../freertos/portable/GCC/ARM_CM3/port.c:435: 		if( xTaskIncrementTick() != pdFALSE )
ARM GAS  /tmp/ccVTlJpC.s 			page 22


 500              		.loc 1 435 7 is_stmt 0 view .LVU76
 501 0116 FFF7FEFF 		bl	xTaskIncrementTick		@
 502              	.LVL10:
 503              	@ ../freertos/portable/GCC/ARM_CM3/port.c:435: 		if( xTaskIncrementTick() != pdFALSE )
 504              		.loc 1 435 5 view .LVU77
 505 011a 28B1     		cbz	r0, .L20	@ tmp119,
 436:../freertos/portable/GCC/ARM_CM3/port.c **** 		{
 437:../freertos/portable/GCC/ARM_CM3/port.c **** 			/* A context switch is required.  Context switching is performed in
 438:../freertos/portable/GCC/ARM_CM3/port.c **** 			the PendSV interrupt.  Pend the PendSV interrupt. */
 439:../freertos/portable/GCC/ARM_CM3/port.c **** 			portNVIC_INT_CTRL_REG = portNVIC_PENDSVSET_BIT;
 506              		.loc 1 439 4 is_stmt 1 view .LVU78
 507              	@ ../freertos/portable/GCC/ARM_CM3/port.c:439: 			portNVIC_INT_CTRL_REG = portNVIC_PENDSVSET_BIT;
 508              		.loc 1 439 26 is_stmt 0 view .LVU79
 509 011c 4FF0E023 		mov	r3, #-536813568	@ tmp116,
 510 0120 4FF08052 		mov	r2, #268435456	@ tmp117,
 511 0124 C3F8042D 		str	r2, [r3, #3332]	@ tmp117, MEM[(volatile uint32_t *)3758157060B]
 512              	.L20:
 440:../freertos/portable/GCC/ARM_CM3/port.c **** 		}
 441:../freertos/portable/GCC/ARM_CM3/port.c **** 	}
 442:../freertos/portable/GCC/ARM_CM3/port.c **** 	portENABLE_INTERRUPTS();
 513              		.loc 1 442 2 is_stmt 1 view .LVU80
 514              	.LVL11:
 515              	.LBB22:
 516              	.LBI22:
 227:../freertos/portable/GCC/ARM_CM3/portmacro.h **** {
 517              		.loc 2 227 30 view .LVU81
 518              	.LBB23:
 519              		.loc 2 229 2 view .LVU82
 520 0128 0023     		movs	r3, #0	@ tmp118,
 521              		.syntax unified
 522              	@ 229 "../freertos/portable/GCC/ARM_CM3/portmacro.h" 1
 523 012a 83F31188 			msr basepri, r3		@ tmp118
 524              	@ 0 "" 2
 525              	.LVL12:
 526              		.loc 2 229 2 is_stmt 0 view .LVU83
 527              		.thumb
 528              		.syntax unified
 529              	.LBE23:
 530              	.LBE22:
 531              	@ ../freertos/portable/GCC/ARM_CM3/port.c:443: }
 443:../freertos/portable/GCC/ARM_CM3/port.c **** }
 532              		.loc 1 443 1 view .LVU84
 533 012e 08BD     		pop	{r3, pc}	@
 534              		.cfi_endproc
 535              	.LFE14:
 536              		.size	SysTick_Handler, .-SysTick_Handler
 537              		.align	1
 538              		.weak	vPortSetupTimerInterrupt
 539              		.syntax unified
 540              		.thumb
 541              		.thumb_func
 542              		.type	vPortSetupTimerInterrupt, %function
 543              	vPortSetupTimerInterrupt:
 544              	.LFB15:
 444:../freertos/portable/GCC/ARM_CM3/port.c **** /*-----------------------------------------------------------*/
 445:../freertos/portable/GCC/ARM_CM3/port.c **** 
 446:../freertos/portable/GCC/ARM_CM3/port.c **** #if( configUSE_TICKLESS_IDLE == 1 )
ARM GAS  /tmp/ccVTlJpC.s 			page 23


 447:../freertos/portable/GCC/ARM_CM3/port.c **** 
 448:../freertos/portable/GCC/ARM_CM3/port.c **** 	__attribute__((weak)) void vPortSuppressTicksAndSleep( TickType_t xExpectedIdleTime )
 449:../freertos/portable/GCC/ARM_CM3/port.c **** 	{
 450:../freertos/portable/GCC/ARM_CM3/port.c **** 	uint32_t ulReloadValue, ulCompleteTickPeriods, ulCompletedSysTickDecrements;
 451:../freertos/portable/GCC/ARM_CM3/port.c **** 	TickType_t xModifiableIdleTime;
 452:../freertos/portable/GCC/ARM_CM3/port.c **** 
 453:../freertos/portable/GCC/ARM_CM3/port.c **** 		/* Make sure the SysTick reload value does not overflow the counter. */
 454:../freertos/portable/GCC/ARM_CM3/port.c **** 		if( xExpectedIdleTime > xMaximumPossibleSuppressedTicks )
 455:../freertos/portable/GCC/ARM_CM3/port.c **** 		{
 456:../freertos/portable/GCC/ARM_CM3/port.c **** 			xExpectedIdleTime = xMaximumPossibleSuppressedTicks;
 457:../freertos/portable/GCC/ARM_CM3/port.c **** 		}
 458:../freertos/portable/GCC/ARM_CM3/port.c **** 
 459:../freertos/portable/GCC/ARM_CM3/port.c **** 		/* Stop the SysTick momentarily.  The time the SysTick is stopped for
 460:../freertos/portable/GCC/ARM_CM3/port.c **** 		is accounted for as best it can be, but using the tickless mode will
 461:../freertos/portable/GCC/ARM_CM3/port.c **** 		inevitably result in some tiny drift of the time maintained by the
 462:../freertos/portable/GCC/ARM_CM3/port.c **** 		kernel with respect to calendar time. */
 463:../freertos/portable/GCC/ARM_CM3/port.c **** 		portNVIC_SYSTICK_CTRL_REG &= ~portNVIC_SYSTICK_ENABLE_BIT;
 464:../freertos/portable/GCC/ARM_CM3/port.c **** 
 465:../freertos/portable/GCC/ARM_CM3/port.c **** 		/* Calculate the reload value required to wait xExpectedIdleTime
 466:../freertos/portable/GCC/ARM_CM3/port.c **** 		tick periods.  -1 is used because this code will execute part way
 467:../freertos/portable/GCC/ARM_CM3/port.c **** 		through one of the tick periods. */
 468:../freertos/portable/GCC/ARM_CM3/port.c **** 		ulReloadValue = portNVIC_SYSTICK_CURRENT_VALUE_REG + ( ulTimerCountsForOneTick * ( xExpectedIdleT
 469:../freertos/portable/GCC/ARM_CM3/port.c **** 		if( ulReloadValue > ulStoppedTimerCompensation )
 470:../freertos/portable/GCC/ARM_CM3/port.c **** 		{
 471:../freertos/portable/GCC/ARM_CM3/port.c **** 			ulReloadValue -= ulStoppedTimerCompensation;
 472:../freertos/portable/GCC/ARM_CM3/port.c **** 		}
 473:../freertos/portable/GCC/ARM_CM3/port.c **** 
 474:../freertos/portable/GCC/ARM_CM3/port.c **** 		/* Enter a critical section but don't use the taskENTER_CRITICAL()
 475:../freertos/portable/GCC/ARM_CM3/port.c **** 		method as that will mask interrupts that should exit sleep mode. */
 476:../freertos/portable/GCC/ARM_CM3/port.c **** 		__asm volatile( "cpsid i" ::: "memory" );
 477:../freertos/portable/GCC/ARM_CM3/port.c **** 		__asm volatile( "dsb" );
 478:../freertos/portable/GCC/ARM_CM3/port.c **** 		__asm volatile( "isb" );
 479:../freertos/portable/GCC/ARM_CM3/port.c **** 
 480:../freertos/portable/GCC/ARM_CM3/port.c **** 		/* If a context switch is pending or a task is waiting for the scheduler
 481:../freertos/portable/GCC/ARM_CM3/port.c **** 		to be unsuspended then abandon the low power entry. */
 482:../freertos/portable/GCC/ARM_CM3/port.c **** 		if( eTaskConfirmSleepModeStatus() == eAbortSleep )
 483:../freertos/portable/GCC/ARM_CM3/port.c **** 		{
 484:../freertos/portable/GCC/ARM_CM3/port.c **** 			/* Restart from whatever is left in the count register to complete
 485:../freertos/portable/GCC/ARM_CM3/port.c **** 			this tick period. */
 486:../freertos/portable/GCC/ARM_CM3/port.c **** 			portNVIC_SYSTICK_LOAD_REG = portNVIC_SYSTICK_CURRENT_VALUE_REG;
 487:../freertos/portable/GCC/ARM_CM3/port.c **** 
 488:../freertos/portable/GCC/ARM_CM3/port.c **** 			/* Restart SysTick. */
 489:../freertos/portable/GCC/ARM_CM3/port.c **** 			portNVIC_SYSTICK_CTRL_REG |= portNVIC_SYSTICK_ENABLE_BIT;
 490:../freertos/portable/GCC/ARM_CM3/port.c **** 
 491:../freertos/portable/GCC/ARM_CM3/port.c **** 			/* Reset the reload register to the value required for normal tick
 492:../freertos/portable/GCC/ARM_CM3/port.c **** 			periods. */
 493:../freertos/portable/GCC/ARM_CM3/port.c **** 			portNVIC_SYSTICK_LOAD_REG = ulTimerCountsForOneTick - 1UL;
 494:../freertos/portable/GCC/ARM_CM3/port.c **** 
 495:../freertos/portable/GCC/ARM_CM3/port.c **** 			/* Re-enable interrupts - see comments above the cpsid instruction()
 496:../freertos/portable/GCC/ARM_CM3/port.c **** 			above. */
 497:../freertos/portable/GCC/ARM_CM3/port.c **** 			__asm volatile( "cpsie i" ::: "memory" );
 498:../freertos/portable/GCC/ARM_CM3/port.c **** 		}
 499:../freertos/portable/GCC/ARM_CM3/port.c **** 		else
 500:../freertos/portable/GCC/ARM_CM3/port.c **** 		{
 501:../freertos/portable/GCC/ARM_CM3/port.c **** 			/* Set the new reload value. */
 502:../freertos/portable/GCC/ARM_CM3/port.c **** 			portNVIC_SYSTICK_LOAD_REG = ulReloadValue;
 503:../freertos/portable/GCC/ARM_CM3/port.c **** 
ARM GAS  /tmp/ccVTlJpC.s 			page 24


 504:../freertos/portable/GCC/ARM_CM3/port.c **** 			/* Clear the SysTick count flag and set the count value back to
 505:../freertos/portable/GCC/ARM_CM3/port.c **** 			zero. */
 506:../freertos/portable/GCC/ARM_CM3/port.c **** 			portNVIC_SYSTICK_CURRENT_VALUE_REG = 0UL;
 507:../freertos/portable/GCC/ARM_CM3/port.c **** 
 508:../freertos/portable/GCC/ARM_CM3/port.c **** 			/* Restart SysTick. */
 509:../freertos/portable/GCC/ARM_CM3/port.c **** 			portNVIC_SYSTICK_CTRL_REG |= portNVIC_SYSTICK_ENABLE_BIT;
 510:../freertos/portable/GCC/ARM_CM3/port.c **** 
 511:../freertos/portable/GCC/ARM_CM3/port.c **** 			/* Sleep until something happens.  configPRE_SLEEP_PROCESSING() can
 512:../freertos/portable/GCC/ARM_CM3/port.c **** 			set its parameter to 0 to indicate that its implementation contains
 513:../freertos/portable/GCC/ARM_CM3/port.c **** 			its own wait for interrupt or wait for event instruction, and so wfi
 514:../freertos/portable/GCC/ARM_CM3/port.c **** 			should not be executed again.  However, the original expected idle
 515:../freertos/portable/GCC/ARM_CM3/port.c **** 			time variable must remain unmodified, so a copy is taken. */
 516:../freertos/portable/GCC/ARM_CM3/port.c **** 			xModifiableIdleTime = xExpectedIdleTime;
 517:../freertos/portable/GCC/ARM_CM3/port.c **** 			configPRE_SLEEP_PROCESSING( xModifiableIdleTime );
 518:../freertos/portable/GCC/ARM_CM3/port.c **** 			if( xModifiableIdleTime > 0 )
 519:../freertos/portable/GCC/ARM_CM3/port.c **** 			{
 520:../freertos/portable/GCC/ARM_CM3/port.c **** 				__asm volatile( "dsb" ::: "memory" );
 521:../freertos/portable/GCC/ARM_CM3/port.c **** 				__asm volatile( "wfi" );
 522:../freertos/portable/GCC/ARM_CM3/port.c **** 				__asm volatile( "isb" );
 523:../freertos/portable/GCC/ARM_CM3/port.c **** 			}
 524:../freertos/portable/GCC/ARM_CM3/port.c **** 			configPOST_SLEEP_PROCESSING( xExpectedIdleTime );
 525:../freertos/portable/GCC/ARM_CM3/port.c **** 
 526:../freertos/portable/GCC/ARM_CM3/port.c **** 			/* Re-enable interrupts to allow the interrupt that brought the MCU
 527:../freertos/portable/GCC/ARM_CM3/port.c **** 			out of sleep mode to execute immediately.  see comments above
 528:../freertos/portable/GCC/ARM_CM3/port.c **** 			__disable_interrupt() call above. */
 529:../freertos/portable/GCC/ARM_CM3/port.c **** 			__asm volatile( "cpsie i" ::: "memory" );
 530:../freertos/portable/GCC/ARM_CM3/port.c **** 			__asm volatile( "dsb" );
 531:../freertos/portable/GCC/ARM_CM3/port.c **** 			__asm volatile( "isb" );
 532:../freertos/portable/GCC/ARM_CM3/port.c **** 
 533:../freertos/portable/GCC/ARM_CM3/port.c **** 			/* Disable interrupts again because the clock is about to be stopped
 534:../freertos/portable/GCC/ARM_CM3/port.c **** 			and interrupts that execute while the clock is stopped will increase
 535:../freertos/portable/GCC/ARM_CM3/port.c **** 			any slippage between the time maintained by the RTOS and calendar
 536:../freertos/portable/GCC/ARM_CM3/port.c **** 			time. */
 537:../freertos/portable/GCC/ARM_CM3/port.c **** 			__asm volatile( "cpsid i" ::: "memory" );
 538:../freertos/portable/GCC/ARM_CM3/port.c **** 			__asm volatile( "dsb" );
 539:../freertos/portable/GCC/ARM_CM3/port.c **** 			__asm volatile( "isb" );
 540:../freertos/portable/GCC/ARM_CM3/port.c **** 
 541:../freertos/portable/GCC/ARM_CM3/port.c **** 			/* Disable the SysTick clock without reading the
 542:../freertos/portable/GCC/ARM_CM3/port.c **** 			portNVIC_SYSTICK_CTRL_REG register to ensure the
 543:../freertos/portable/GCC/ARM_CM3/port.c **** 			portNVIC_SYSTICK_COUNT_FLAG_BIT is not cleared if it is set.  Again,
 544:../freertos/portable/GCC/ARM_CM3/port.c **** 			the time the SysTick is stopped for is accounted for as best it can
 545:../freertos/portable/GCC/ARM_CM3/port.c **** 			be, but using the tickless mode will inevitably result in some tiny
 546:../freertos/portable/GCC/ARM_CM3/port.c **** 			drift of the time maintained by the kernel with respect to calendar
 547:../freertos/portable/GCC/ARM_CM3/port.c **** 			time*/
 548:../freertos/portable/GCC/ARM_CM3/port.c **** 			portNVIC_SYSTICK_CTRL_REG = ( portNVIC_SYSTICK_CLK_BIT | portNVIC_SYSTICK_INT_BIT );
 549:../freertos/portable/GCC/ARM_CM3/port.c **** 
 550:../freertos/portable/GCC/ARM_CM3/port.c **** 			/* Determine if the SysTick clock has already counted to zero and
 551:../freertos/portable/GCC/ARM_CM3/port.c **** 			been set back to the current reload value (the reload back being
 552:../freertos/portable/GCC/ARM_CM3/port.c **** 			correct for the entire expected idle time) or if the SysTick is yet
 553:../freertos/portable/GCC/ARM_CM3/port.c **** 			to count to zero (in which case an interrupt other than the SysTick
 554:../freertos/portable/GCC/ARM_CM3/port.c **** 			must have brought the system out of sleep mode). */
 555:../freertos/portable/GCC/ARM_CM3/port.c **** 			if( ( portNVIC_SYSTICK_CTRL_REG & portNVIC_SYSTICK_COUNT_FLAG_BIT ) != 0 )
 556:../freertos/portable/GCC/ARM_CM3/port.c **** 			{
 557:../freertos/portable/GCC/ARM_CM3/port.c **** 				uint32_t ulCalculatedLoadValue;
 558:../freertos/portable/GCC/ARM_CM3/port.c **** 
 559:../freertos/portable/GCC/ARM_CM3/port.c **** 				/* The tick interrupt is already pending, and the SysTick count
 560:../freertos/portable/GCC/ARM_CM3/port.c **** 				reloaded with ulReloadValue.  Reset the
ARM GAS  /tmp/ccVTlJpC.s 			page 25


 561:../freertos/portable/GCC/ARM_CM3/port.c **** 				portNVIC_SYSTICK_LOAD_REG with whatever remains of this tick
 562:../freertos/portable/GCC/ARM_CM3/port.c **** 				period. */
 563:../freertos/portable/GCC/ARM_CM3/port.c **** 				ulCalculatedLoadValue = ( ulTimerCountsForOneTick - 1UL ) - ( ulReloadValue - portNVIC_SYSTICK_
 564:../freertos/portable/GCC/ARM_CM3/port.c **** 
 565:../freertos/portable/GCC/ARM_CM3/port.c **** 				/* Don't allow a tiny value, or values that have somehow
 566:../freertos/portable/GCC/ARM_CM3/port.c **** 				underflowed because the post sleep hook did something
 567:../freertos/portable/GCC/ARM_CM3/port.c **** 				that took too long. */
 568:../freertos/portable/GCC/ARM_CM3/port.c **** 				if( ( ulCalculatedLoadValue < ulStoppedTimerCompensation ) || ( ulCalculatedLoadValue > ulTimer
 569:../freertos/portable/GCC/ARM_CM3/port.c **** 				{
 570:../freertos/portable/GCC/ARM_CM3/port.c **** 					ulCalculatedLoadValue = ( ulTimerCountsForOneTick - 1UL );
 571:../freertos/portable/GCC/ARM_CM3/port.c **** 				}
 572:../freertos/portable/GCC/ARM_CM3/port.c **** 
 573:../freertos/portable/GCC/ARM_CM3/port.c **** 				portNVIC_SYSTICK_LOAD_REG = ulCalculatedLoadValue;
 574:../freertos/portable/GCC/ARM_CM3/port.c **** 
 575:../freertos/portable/GCC/ARM_CM3/port.c **** 				/* As the pending tick will be processed as soon as this
 576:../freertos/portable/GCC/ARM_CM3/port.c **** 				function exits, the tick value maintained by the tick is stepped
 577:../freertos/portable/GCC/ARM_CM3/port.c **** 				forward by one less than the time spent waiting. */
 578:../freertos/portable/GCC/ARM_CM3/port.c **** 				ulCompleteTickPeriods = xExpectedIdleTime - 1UL;
 579:../freertos/portable/GCC/ARM_CM3/port.c **** 			}
 580:../freertos/portable/GCC/ARM_CM3/port.c **** 			else
 581:../freertos/portable/GCC/ARM_CM3/port.c **** 			{
 582:../freertos/portable/GCC/ARM_CM3/port.c **** 				/* Something other than the tick interrupt ended the sleep.
 583:../freertos/portable/GCC/ARM_CM3/port.c **** 				Work out how long the sleep lasted rounded to complete tick
 584:../freertos/portable/GCC/ARM_CM3/port.c **** 				periods (not the ulReload value which accounted for part
 585:../freertos/portable/GCC/ARM_CM3/port.c **** 				ticks). */
 586:../freertos/portable/GCC/ARM_CM3/port.c **** 				ulCompletedSysTickDecrements = ( xExpectedIdleTime * ulTimerCountsForOneTick ) - portNVIC_SYSTI
 587:../freertos/portable/GCC/ARM_CM3/port.c **** 
 588:../freertos/portable/GCC/ARM_CM3/port.c **** 				/* How many complete tick periods passed while the processor
 589:../freertos/portable/GCC/ARM_CM3/port.c **** 				was waiting? */
 590:../freertos/portable/GCC/ARM_CM3/port.c **** 				ulCompleteTickPeriods = ulCompletedSysTickDecrements / ulTimerCountsForOneTick;
 591:../freertos/portable/GCC/ARM_CM3/port.c **** 
 592:../freertos/portable/GCC/ARM_CM3/port.c **** 				/* The reload value is set to whatever fraction of a single tick
 593:../freertos/portable/GCC/ARM_CM3/port.c **** 				period remains. */
 594:../freertos/portable/GCC/ARM_CM3/port.c **** 				portNVIC_SYSTICK_LOAD_REG = ( ( ulCompleteTickPeriods + 1UL ) * ulTimerCountsForOneTick ) - ulC
 595:../freertos/portable/GCC/ARM_CM3/port.c **** 			}
 596:../freertos/portable/GCC/ARM_CM3/port.c **** 
 597:../freertos/portable/GCC/ARM_CM3/port.c **** 			/* Restart SysTick so it runs from portNVIC_SYSTICK_LOAD_REG
 598:../freertos/portable/GCC/ARM_CM3/port.c **** 			again, then set portNVIC_SYSTICK_LOAD_REG back to its standard
 599:../freertos/portable/GCC/ARM_CM3/port.c **** 			value. */
 600:../freertos/portable/GCC/ARM_CM3/port.c **** 			portNVIC_SYSTICK_CURRENT_VALUE_REG = 0UL;
 601:../freertos/portable/GCC/ARM_CM3/port.c **** 			portNVIC_SYSTICK_CTRL_REG |= portNVIC_SYSTICK_ENABLE_BIT;
 602:../freertos/portable/GCC/ARM_CM3/port.c **** 			vTaskStepTick( ulCompleteTickPeriods );
 603:../freertos/portable/GCC/ARM_CM3/port.c **** 			portNVIC_SYSTICK_LOAD_REG = ulTimerCountsForOneTick - 1UL;
 604:../freertos/portable/GCC/ARM_CM3/port.c **** 
 605:../freertos/portable/GCC/ARM_CM3/port.c **** 			/* Exit with interrpts enabled. */
 606:../freertos/portable/GCC/ARM_CM3/port.c **** 			__asm volatile( "cpsie i" ::: "memory" );
 607:../freertos/portable/GCC/ARM_CM3/port.c **** 		}
 608:../freertos/portable/GCC/ARM_CM3/port.c **** 	}
 609:../freertos/portable/GCC/ARM_CM3/port.c **** 
 610:../freertos/portable/GCC/ARM_CM3/port.c **** #endif /* configUSE_TICKLESS_IDLE */
 611:../freertos/portable/GCC/ARM_CM3/port.c **** /*-----------------------------------------------------------*/
 612:../freertos/portable/GCC/ARM_CM3/port.c **** 
 613:../freertos/portable/GCC/ARM_CM3/port.c **** /*
 614:../freertos/portable/GCC/ARM_CM3/port.c ****  * Setup the systick timer to generate the tick interrupts at the required
 615:../freertos/portable/GCC/ARM_CM3/port.c ****  * frequency.
 616:../freertos/portable/GCC/ARM_CM3/port.c ****  */
 617:../freertos/portable/GCC/ARM_CM3/port.c **** __attribute__(( weak )) void vPortSetupTimerInterrupt( void )
ARM GAS  /tmp/ccVTlJpC.s 			page 26


 618:../freertos/portable/GCC/ARM_CM3/port.c **** {
 545              		.loc 1 618 1 is_stmt 1 view -0
 546              		.cfi_startproc
 547              		@ args = 0, pretend = 0, frame = 0
 548              		@ frame_needed = 0, uses_anonymous_args = 0
 549              		@ link register save eliminated.
 619:../freertos/portable/GCC/ARM_CM3/port.c **** 	/* Calculate the constants required to configure the tick interrupt. */
 620:../freertos/portable/GCC/ARM_CM3/port.c **** 	#if( configUSE_TICKLESS_IDLE == 1 )
 621:../freertos/portable/GCC/ARM_CM3/port.c **** 	{
 622:../freertos/portable/GCC/ARM_CM3/port.c **** 		ulTimerCountsForOneTick = ( configSYSTICK_CLOCK_HZ / configTICK_RATE_HZ );
 623:../freertos/portable/GCC/ARM_CM3/port.c **** 		xMaximumPossibleSuppressedTicks = portMAX_24_BIT_NUMBER / ulTimerCountsForOneTick;
 624:../freertos/portable/GCC/ARM_CM3/port.c **** 		ulStoppedTimerCompensation = portMISSED_COUNTS_FACTOR / ( configCPU_CLOCK_HZ / configSYSTICK_CLOC
 625:../freertos/portable/GCC/ARM_CM3/port.c **** 	}
 626:../freertos/portable/GCC/ARM_CM3/port.c **** 	#endif /* configUSE_TICKLESS_IDLE */
 627:../freertos/portable/GCC/ARM_CM3/port.c **** 
 628:../freertos/portable/GCC/ARM_CM3/port.c **** 	/* Stop and clear the SysTick. */
 629:../freertos/portable/GCC/ARM_CM3/port.c **** 	portNVIC_SYSTICK_CTRL_REG = 0UL;
 550              		.loc 1 629 2 view .LVU86
 551              	@ ../freertos/portable/GCC/ARM_CM3/port.c:629: 	portNVIC_SYSTICK_CTRL_REG = 0UL;
 552              		.loc 1 629 28 is_stmt 0 view .LVU87
 553 0130 4FF0E023 		mov	r3, #-536813568	@ tmp113,
 554 0134 0022     		movs	r2, #0	@ tmp114,
 555 0136 1A61     		str	r2, [r3, #16]	@ tmp114, MEM[(volatile uint32_t *)3758153744B]
 630:../freertos/portable/GCC/ARM_CM3/port.c **** 	portNVIC_SYSTICK_CURRENT_VALUE_REG = 0UL;
 556              		.loc 1 630 2 is_stmt 1 view .LVU88
 557              	@ ../freertos/portable/GCC/ARM_CM3/port.c:630: 	portNVIC_SYSTICK_CURRENT_VALUE_REG = 0UL;
 558              		.loc 1 630 37 is_stmt 0 view .LVU89
 559 0138 9A61     		str	r2, [r3, #24]	@ tmp114, MEM[(volatile uint32_t *)3758153752B]
 631:../freertos/portable/GCC/ARM_CM3/port.c **** 
 632:../freertos/portable/GCC/ARM_CM3/port.c **** 	/* Configure SysTick to interrupt at the requested rate. */
 633:../freertos/portable/GCC/ARM_CM3/port.c **** 	portNVIC_SYSTICK_LOAD_REG = ( configSYSTICK_CLOCK_HZ / configTICK_RATE_HZ ) - 1UL;
 560              		.loc 1 633 2 is_stmt 1 view .LVU90
 561              	@ ../freertos/portable/GCC/ARM_CM3/port.c:633: 	portNVIC_SYSTICK_LOAD_REG = ( configSYSTICK_CLOCK_H
 562              		.loc 1 633 28 is_stmt 0 view .LVU91
 563 013a 40F2CF22 		movw	r2, #719	@ tmp118,
 564 013e 5A61     		str	r2, [r3, #20]	@ tmp118, MEM[(volatile uint32_t *)3758153748B]
 634:../freertos/portable/GCC/ARM_CM3/port.c **** 	portNVIC_SYSTICK_CTRL_REG = ( portNVIC_SYSTICK_CLK_BIT | portNVIC_SYSTICK_INT_BIT | portNVIC_SYSTI
 565              		.loc 1 634 2 is_stmt 1 view .LVU92
 566              	@ ../freertos/portable/GCC/ARM_CM3/port.c:634: 	portNVIC_SYSTICK_CTRL_REG = ( portNVIC_SYSTICK_CLK_
 567              		.loc 1 634 28 is_stmt 0 view .LVU93
 568 0140 0722     		movs	r2, #7	@ tmp120,
 569 0142 1A61     		str	r2, [r3, #16]	@ tmp120, MEM[(volatile uint32_t *)3758153744B]
 570              	@ ../freertos/portable/GCC/ARM_CM3/port.c:635: }
 635:../freertos/portable/GCC/ARM_CM3/port.c **** }
 571              		.loc 1 635 1 view .LVU94
 572 0144 7047     		bx	lr	@
 573              		.cfi_endproc
 574              	.LFE15:
 575              		.size	vPortSetupTimerInterrupt, .-vPortSetupTimerInterrupt
 576              		.align	1
 577              		.global	xPortStartScheduler
 578              		.syntax unified
 579              		.thumb
 580              		.thumb_func
 581              		.type	xPortStartScheduler, %function
 582              	xPortStartScheduler:
 583              	.LFB9:
ARM GAS  /tmp/ccVTlJpC.s 			page 27


 258:../freertos/portable/GCC/ARM_CM3/port.c **** 	/* configMAX_SYSCALL_INTERRUPT_PRIORITY must not be set to 0.
 584              		.loc 1 258 1 is_stmt 1 view -0
 585              		.cfi_startproc
 586              		@ args = 0, pretend = 0, frame = 0
 587              		@ frame_needed = 0, uses_anonymous_args = 0
 261:../freertos/portable/GCC/ARM_CM3/port.c **** 
 588              		.loc 1 261 54 view .LVU96
 326:../freertos/portable/GCC/ARM_CM3/port.c **** 	portNVIC_SYSPRI2_REG |= portNVIC_SYSTICK_PRI;
 589              		.loc 1 326 2 view .LVU97
 590              	@ ../freertos/portable/GCC/ARM_CM3/port.c:326: 	portNVIC_SYSPRI2_REG |= portNVIC_PENDSV_PRI;
 326:../freertos/portable/GCC/ARM_CM3/port.c **** 	portNVIC_SYSPRI2_REG |= portNVIC_SYSTICK_PRI;
 591              		.loc 1 326 23 is_stmt 0 view .LVU98
 592 0146 4FF0E023 		mov	r3, #-536813568	@ tmp118,
 593              	@ ../freertos/portable/GCC/ARM_CM3/port.c:258: {
 258:../freertos/portable/GCC/ARM_CM3/port.c **** 	/* configMAX_SYSCALL_INTERRUPT_PRIORITY must not be set to 0.
 594              		.loc 1 258 1 view .LVU99
 595 014a 10B5     		push	{r4, lr}	@
 596              	.LCFI3:
 597              		.cfi_def_cfa_offset 8
 598              		.cfi_offset 4, -8
 599              		.cfi_offset 14, -4
 600              	@ ../freertos/portable/GCC/ARM_CM3/port.c:334: 	uxCriticalNesting = 0;
 334:../freertos/portable/GCC/ARM_CM3/port.c **** 
 601              		.loc 1 334 20 view .LVU100
 602 014c 0024     		movs	r4, #0	@ tmp123,
 603              	@ ../freertos/portable/GCC/ARM_CM3/port.c:326: 	portNVIC_SYSPRI2_REG |= portNVIC_PENDSV_PRI;
 326:../freertos/portable/GCC/ARM_CM3/port.c **** 	portNVIC_SYSPRI2_REG |= portNVIC_SYSTICK_PRI;
 604              		.loc 1 326 23 view .LVU101
 605 014e D3F8202D 		ldr	r2, [r3, #3360]	@ _1, MEM[(volatile uint32_t *)3758157088B]
 606 0152 42F47002 		orr	r2, r2, #15728640	@ _2, _1,
 607 0156 C3F8202D 		str	r2, [r3, #3360]	@ _2, MEM[(volatile uint32_t *)3758157088B]
 327:../freertos/portable/GCC/ARM_CM3/port.c **** 
 608              		.loc 1 327 2 is_stmt 1 view .LVU102
 609              	@ ../freertos/portable/GCC/ARM_CM3/port.c:327: 	portNVIC_SYSPRI2_REG |= portNVIC_SYSTICK_PRI;
 327:../freertos/portable/GCC/ARM_CM3/port.c **** 
 610              		.loc 1 327 23 is_stmt 0 view .LVU103
 611 015a D3F8202D 		ldr	r2, [r3, #3360]	@ _3, MEM[(volatile uint32_t *)3758157088B]
 612 015e 42F07042 		orr	r2, r2, #-268435456	@ _4, _3,
 613 0162 C3F8202D 		str	r2, [r3, #3360]	@ _4, MEM[(volatile uint32_t *)3758157088B]
 331:../freertos/portable/GCC/ARM_CM3/port.c **** 
 614              		.loc 1 331 2 is_stmt 1 view .LVU104
 615 0166 FFF7FEFF 		bl	vPortSetupTimerInterrupt		@
 616              	.LVL13:
 334:../freertos/portable/GCC/ARM_CM3/port.c **** 
 617              		.loc 1 334 2 view .LVU105
 618              	@ ../freertos/portable/GCC/ARM_CM3/port.c:334: 	uxCriticalNesting = 0;
 334:../freertos/portable/GCC/ARM_CM3/port.c **** 
 619              		.loc 1 334 20 is_stmt 0 view .LVU106
 620 016a 054B     		ldr	r3, .L26	@ tmp122,
 621 016c 1C60     		str	r4, [r3]	@ tmp123, uxCriticalNesting
 337:../freertos/portable/GCC/ARM_CM3/port.c **** 
 622              		.loc 1 337 2 is_stmt 1 view .LVU107
 623 016e FFF757FF 		bl	prvPortStartFirstTask		@
 624              	.LVL14:
 345:../freertos/portable/GCC/ARM_CM3/port.c **** 	prvTaskExitError();
 625              		.loc 1 345 2 view .LVU108
 626 0172 FFF7FEFF 		bl	vTaskSwitchContext		@
ARM GAS  /tmp/ccVTlJpC.s 			page 28


 627              	.LVL15:
 346:../freertos/portable/GCC/ARM_CM3/port.c **** 
 628              		.loc 1 346 2 view .LVU109
 629 0176 FFF743FF 		bl	prvTaskExitError		@
 630              	.LVL16:
 349:../freertos/portable/GCC/ARM_CM3/port.c **** }
 631              		.loc 1 349 2 view .LVU110
 632              	@ ../freertos/portable/GCC/ARM_CM3/port.c:350: }
 350:../freertos/portable/GCC/ARM_CM3/port.c **** /*-----------------------------------------------------------*/
 633              		.loc 1 350 1 is_stmt 0 view .LVU111
 634 017a 2046     		mov	r0, r4	@, tmp123
 635 017c 10BD     		pop	{r4, pc}	@
 636              	.L27:
 637 017e 00BF     		.align	2
 638              	.L26:
 639 0180 00000000 		.word	.LANCHOR0
 640              		.cfi_endproc
 641              	.LFE9:
 642              		.size	xPortStartScheduler, .-xPortStartScheduler
 643              		.data
 644              		.align	2
 645              		.set	.LANCHOR0,. + 0
 646              		.type	uxCriticalNesting, %object
 647              		.size	uxCriticalNesting, 4
 648              	uxCriticalNesting:
 649 0000 AAAAAAAA 		.word	-1431655766
 650              		.text
 651              	.Letext0:
 652              		.file 3 "/usr/arm-none-eabi/include/machine/_default_types.h"
 653              		.file 4 "/usr/arm-none-eabi/include/sys/_stdint.h"
 654              		.file 5 "../freertos/include/projdefs.h"
 655              		.file 6 "../freertos/include/task.h"
 656              		.section	.debug_info,"",%progbits
 657              	.Ldebug_info0:
 658 0000 86030000 		.4byte	0x386
 659 0004 0200     		.2byte	0x2
 660 0006 00000000 		.4byte	.Ldebug_abbrev0
 661 000a 04       		.byte	0x4
 662 000b 01       		.uleb128 0x1
 663 000c D8010000 		.4byte	.LASF35
 664 0010 0C       		.byte	0xc
 665 0011 7F000000 		.4byte	.LASF36
 666 0015 95010000 		.4byte	.LASF37
 667 0019 00000000 		.4byte	.Ltext0
 668 001d 84010000 		.4byte	.Letext0
 669 0021 00000000 		.4byte	.Ldebug_line0
 670 0025 02       		.uleb128 0x2
 671 0026 04       		.byte	0x4
 672 0027 05       		.byte	0x5
 673 0028 696E7400 		.ascii	"int\000"
 674 002c 03       		.uleb128 0x3
 675 002d 04       		.byte	0x4
 676 002e 07       		.byte	0x7
 677 002f 5F010000 		.4byte	.LASF0
 678 0033 03       		.uleb128 0x3
 679 0034 08       		.byte	0x8
 680 0035 05       		.byte	0x5
ARM GAS  /tmp/ccVTlJpC.s 			page 29


 681 0036 71020000 		.4byte	.LASF1
 682 003a 03       		.uleb128 0x3
 683 003b 08       		.byte	0x8
 684 003c 04       		.byte	0x4
 685 003d F9020000 		.4byte	.LASF2
 686 0041 03       		.uleb128 0x3
 687 0042 01       		.byte	0x1
 688 0043 06       		.byte	0x6
 689 0044 05030000 		.4byte	.LASF3
 690 0048 03       		.uleb128 0x3
 691 0049 01       		.byte	0x1
 692 004a 08       		.byte	0x8
 693 004b CF000000 		.4byte	.LASF4
 694 004f 03       		.uleb128 0x3
 695 0050 02       		.byte	0x2
 696 0051 05       		.byte	0x5
 697 0052 75000000 		.4byte	.LASF5
 698 0056 03       		.uleb128 0x3
 699 0057 02       		.byte	0x2
 700 0058 07       		.byte	0x7
 701 0059 EF000000 		.4byte	.LASF6
 702 005d 03       		.uleb128 0x3
 703 005e 04       		.byte	0x4
 704 005f 05       		.byte	0x5
 705 0060 6C000000 		.4byte	.LASF7
 706 0064 04       		.uleb128 0x4
 707 0065 02010000 		.4byte	.LASF10
 708 0069 03       		.byte	0x3
 709 006a 4F       		.byte	0x4f
 710 006b 19       		.byte	0x19
 711 006c 70000000 		.4byte	0x70
 712 0070 03       		.uleb128 0x3
 713 0071 04       		.byte	0x4
 714 0072 07       		.byte	0x7
 715 0073 DD000000 		.4byte	.LASF8
 716 0077 03       		.uleb128 0x3
 717 0078 08       		.byte	0x8
 718 0079 07       		.byte	0x7
 719 007a 6C010000 		.4byte	.LASF9
 720 007e 04       		.uleb128 0x4
 721 007f C6020000 		.4byte	.LASF11
 722 0083 04       		.byte	0x4
 723 0084 30       		.byte	0x30
 724 0085 14       		.byte	0x14
 725 0086 64000000 		.4byte	0x64
 726 008a 05       		.uleb128 0x5
 727 008b 7E000000 		.4byte	0x7e
 728 008f 04       		.uleb128 0x4
 729 0090 B8000000 		.4byte	.LASF12
 730 0094 05       		.byte	0x5
 731 0095 23       		.byte	0x23
 732 0096 10       		.byte	0x10
 733 0097 9B000000 		.4byte	0x9b
 734 009b 06       		.uleb128 0x6
 735 009c 04       		.byte	0x4
 736 009d A1000000 		.4byte	0xa1
 737 00a1 07       		.uleb128 0x7
ARM GAS  /tmp/ccVTlJpC.s 			page 30


 738 00a2 01       		.byte	0x1
 739 00a3 AD000000 		.4byte	0xad
 740 00a7 08       		.uleb128 0x8
 741 00a8 AD000000 		.4byte	0xad
 742 00ac 00       		.byte	0
 743 00ad 09       		.uleb128 0x9
 744 00ae 04       		.byte	0x4
 745 00af 04       		.uleb128 0x4
 746 00b0 53010000 		.4byte	.LASF13
 747 00b4 02       		.byte	0x2
 748 00b5 37       		.byte	0x37
 749 00b6 18       		.byte	0x18
 750 00b7 7E000000 		.4byte	0x7e
 751 00bb 04       		.uleb128 0x4
 752 00bc 31030000 		.4byte	.LASF14
 753 00c0 02       		.byte	0x2
 754 00c1 38       		.byte	0x38
 755 00c2 0E       		.byte	0xe
 756 00c3 5D000000 		.4byte	0x5d
 757 00c7 04       		.uleb128 0x4
 758 00c8 25030000 		.4byte	.LASF15
 759 00cc 02       		.byte	0x2
 760 00cd 39       		.byte	0x39
 761 00ce 17       		.byte	0x17
 762 00cf 70000000 		.4byte	0x70
 763 00d3 04       		.uleb128 0x4
 764 00d4 3E000000 		.4byte	.LASF16
 765 00d8 02       		.byte	0x2
 766 00d9 3F       		.byte	0x3f
 767 00da 13       		.byte	0x13
 768 00db 7E000000 		.4byte	0x7e
 769 00df 03       		.uleb128 0x3
 770 00e0 01       		.byte	0x1
 771 00e1 08       		.byte	0x8
 772 00e2 DE020000 		.4byte	.LASF17
 773 00e6 06       		.uleb128 0x6
 774 00e7 04       		.byte	0x4
 775 00e8 AF000000 		.4byte	0xaf
 776 00ec 0A       		.uleb128 0xa
 777 00ed 00000000 		.4byte	.LASF25
 778 00f1 01       		.byte	0x1
 779 00f2 85       		.byte	0x85
 780 00f3 14       		.byte	0x14
 781 00f4 C7000000 		.4byte	0xc7
 782 00f8 05       		.byte	0x5
 783 00f9 03       		.byte	0x3
 784 00fa 00000000 		.4byte	uxCriticalNesting
 785 00fe 0B       		.uleb128 0xb
 786 00ff 01       		.byte	0x1
 787 0100 58020000 		.4byte	.LASF18
 788 0104 01       		.byte	0x1
 789 0105 6902     		.2byte	0x269
 790 0107 1E       		.byte	0x1e
 791 0108 01       		.byte	0x1
 792 0109 30010000 		.4byte	.LFB15
 793 010d 46010000 		.4byte	.LFE15
 794 0111 02       		.byte	0x2
ARM GAS  /tmp/ccVTlJpC.s 			page 31


 795 0112 7D       		.byte	0x7d
 796 0113 00       		.sleb128 0
 797 0114 01       		.byte	0x1
 798 0115 0C       		.uleb128 0xc
 799 0116 01       		.byte	0x1
 800 0117 5C000000 		.4byte	.LASF20
 801 011b 01       		.byte	0x1
 802 011c AA01     		.2byte	0x1aa
 803 011e 06       		.byte	0x6
 804 011f 01       		.byte	0x1
 805 0120 04010000 		.4byte	.LFB14
 806 0124 30010000 		.4byte	.LFE14
 807 0128 00000000 		.4byte	.LLST4
 808 012c 01       		.byte	0x1
 809 012d 85010000 		.4byte	0x185
 810 0131 0D       		.uleb128 0xd
 811 0132 50030000 		.4byte	0x350
 812 0136 04010000 		.4byte	.LBI18
 813 013a 02       		.byte	.LVU70
 814 013b 00000000 		.4byte	.Ldebug_ranges0+0
 815 013f 01       		.byte	0x1
 816 0140 B001     		.2byte	0x1b0
 817 0142 02       		.byte	0x2
 818 0143 53010000 		.4byte	0x153
 819 0147 0E       		.uleb128 0xe
 820 0148 00000000 		.4byte	.Ldebug_ranges0+0
 821 014c 0F       		.uleb128 0xf
 822 014d 5E030000 		.4byte	0x35e
 823 0151 00       		.byte	0
 824 0152 00       		.byte	0
 825 0153 10       		.uleb128 0x10
 826 0154 35030000 		.4byte	0x335
 827 0158 28010000 		.4byte	.LBI22
 828 015c 01       		.byte	.LVU81
 829 015d 28010000 		.4byte	.LBB22
 830 0161 2E010000 		.4byte	.LBE22
 831 0165 01       		.byte	0x1
 832 0166 BA01     		.2byte	0x1ba
 833 0168 02       		.byte	0x2
 834 0169 7B010000 		.4byte	0x17b
 835 016d 11       		.uleb128 0x11
 836 016e 43030000 		.4byte	0x343
 837 0172 22000000 		.4byte	.LLST5
 838 0176 20000000 		.4byte	.LVUS5
 839 017a 00       		.byte	0
 840 017b 12       		.uleb128 0x12
 841 017c 1A010000 		.4byte	.LVL10
 842 0180 6B030000 		.4byte	0x36b
 843 0184 00       		.byte	0
 844 0185 0B       		.uleb128 0xb
 845 0186 01       		.byte	0x1
 846 0187 A5020000 		.4byte	.LASF19
 847 018b 01       		.byte	0x1
 848 018c 8501     		.2byte	0x185
 849 018e 06       		.byte	0x6
 850 018f 01       		.byte	0x1
 851 0190 B8000000 		.4byte	.LFB13
ARM GAS  /tmp/ccVTlJpC.s 			page 32


 852 0194 04010000 		.4byte	.LFE13
 853 0198 02       		.byte	0x2
 854 0199 7D       		.byte	0x7d
 855 019a 00       		.sleb128 0
 856 019b 01       		.byte	0x1
 857 019c 13       		.uleb128 0x13
 858 019d 01       		.byte	0x1
 859 019e B4020000 		.4byte	.LASF21
 860 01a2 01       		.byte	0x1
 861 01a3 7A01     		.2byte	0x17a
 862 01a5 06       		.byte	0x6
 863 01a6 01       		.byte	0x1
 864 01a7 A4000000 		.4byte	.LFB12
 865 01ab B8000000 		.4byte	.LFE12
 866 01af 02       		.byte	0x2
 867 01b0 7D       		.byte	0x7d
 868 01b1 00       		.sleb128 0
 869 01b2 01       		.byte	0x1
 870 01b3 DC010000 		.4byte	0x1dc
 871 01b7 14       		.uleb128 0x14
 872 01b8 35030000 		.4byte	0x335
 873 01bc AE000000 		.4byte	.LBI16
 874 01c0 01       		.byte	.LVU61
 875 01c1 AE000000 		.4byte	.LBB16
 876 01c5 B2000000 		.4byte	.LBE16
 877 01c9 01       		.byte	0x1
 878 01ca 8001     		.2byte	0x180
 879 01cc 03       		.byte	0x3
 880 01cd 11       		.uleb128 0x11
 881 01ce 43030000 		.4byte	0x343
 882 01d2 38000000 		.4byte	.LLST3
 883 01d6 36000000 		.4byte	.LVUS3
 884 01da 00       		.byte	0
 885 01db 00       		.byte	0
 886 01dc 13       		.uleb128 0x13
 887 01dd 01       		.byte	0x1
 888 01de 12000000 		.4byte	.LASF22
 889 01e2 01       		.byte	0x1
 890 01e3 6901     		.2byte	0x169
 891 01e5 06       		.byte	0x6
 892 01e6 01       		.byte	0x1
 893 01e7 86000000 		.4byte	.LFB11
 894 01eb A4000000 		.4byte	.LFE11
 895 01ef 02       		.byte	0x2
 896 01f0 7D       		.byte	0x7d
 897 01f1 00       		.sleb128 0
 898 01f2 01       		.byte	0x1
 899 01f3 14020000 		.4byte	0x214
 900 01f7 14       		.uleb128 0x14
 901 01f8 50030000 		.4byte	0x350
 902 01fc 86000000 		.4byte	.LBI14
 903 0200 02       		.byte	.LVU46
 904 0201 86000000 		.4byte	.LBB14
 905 0205 96000000 		.4byte	.LBE14
 906 0209 01       		.byte	0x1
 907 020a 6B01     		.2byte	0x16b
 908 020c 02       		.byte	0x2
ARM GAS  /tmp/ccVTlJpC.s 			page 33


 909 020d 0F       		.uleb128 0xf
 910 020e 5E030000 		.4byte	0x35e
 911 0212 00       		.byte	0
 912 0213 00       		.byte	0
 913 0214 0B       		.uleb128 0xb
 914 0215 01       		.byte	0x1
 915 0216 2C000000 		.4byte	.LASF23
 916 021a 01       		.byte	0x1
 917 021b 6101     		.2byte	0x161
 918 021d 06       		.byte	0x6
 919 021e 01       		.byte	0x1
 920 021f 84000000 		.4byte	.LFB10
 921 0223 86000000 		.4byte	.LFE10
 922 0227 02       		.byte	0x2
 923 0228 7D       		.byte	0x7d
 924 0229 00       		.sleb128 0
 925 022a 01       		.byte	0x1
 926 022b 15       		.uleb128 0x15
 927 022c 01       		.byte	0x1
 928 022d 11030000 		.4byte	.LASF27
 929 0231 01       		.byte	0x1
 930 0232 0101     		.2byte	0x101
 931 0234 0C       		.byte	0xc
 932 0235 01       		.byte	0x1
 933 0236 BB000000 		.4byte	0xbb
 934 023a 46010000 		.4byte	.LFB9
 935 023e 84010000 		.4byte	.LFE9
 936 0242 4C000000 		.4byte	.LLST6
 937 0246 01       		.byte	0x1
 938 0247 70020000 		.4byte	0x270
 939 024b 12       		.uleb128 0x12
 940 024c 6A010000 		.4byte	.LVL13
 941 0250 FE000000 		.4byte	0xfe
 942 0254 12       		.uleb128 0x12
 943 0255 72010000 		.4byte	.LVL14
 944 0259 70020000 		.4byte	0x270
 945 025d 12       		.uleb128 0x12
 946 025e 76010000 		.4byte	.LVL15
 947 0262 7A030000 		.4byte	0x37a
 948 0266 12       		.uleb128 0x12
 949 0267 7A010000 		.4byte	.LVL16
 950 026b 9B020000 		.4byte	0x29b
 951 026f 00       		.byte	0
 952 0270 16       		.uleb128 0x16
 953 0271 E3020000 		.4byte	.LASF38
 954 0275 01       		.byte	0x1
 955 0276 ED       		.byte	0xed
 956 0277 0D       		.byte	0xd
 957 0278 01       		.byte	0x1
 958 0279 20000000 		.4byte	.LFB8
 959 027d 3A000000 		.4byte	.LFE8
 960 0281 02       		.byte	0x2
 961 0282 7D       		.byte	0x7d
 962 0283 00       		.sleb128 0
 963 0284 01       		.byte	0x1
 964 0285 17       		.uleb128 0x17
 965 0286 01       		.byte	0x1
ARM GAS  /tmp/ccVTlJpC.s 			page 34


 966 0287 7F020000 		.4byte	.LASF24
 967 028b 01       		.byte	0x1
 968 028c D9       		.byte	0xd9
 969 028d 06       		.byte	0x6
 970 028e 01       		.byte	0x1
 971 028f 5C000000 		.4byte	.LFB7
 972 0293 84000000 		.4byte	.LFE7
 973 0297 02       		.byte	0x2
 974 0298 7D       		.byte	0x7d
 975 0299 00       		.sleb128 0
 976 029a 01       		.byte	0x1
 977 029b 18       		.uleb128 0x18
 978 029c A7000000 		.4byte	.LASF39
 979 02a0 01       		.byte	0x1
 980 02a1 C0       		.byte	0xc0
 981 02a2 0D       		.byte	0xd
 982 02a3 01       		.byte	0x1
 983 02a4 00000000 		.4byte	.LFB6
 984 02a8 20000000 		.4byte	.LFE6
 985 02ac 6C000000 		.4byte	.LLST0
 986 02b0 01       		.byte	0x1
 987 02b1 E0020000 		.4byte	0x2e0
 988 02b5 0A       		.uleb128 0xa
 989 02b6 C7000000 		.4byte	.LASF26
 990 02ba 01       		.byte	0x1
 991 02bb C2       		.byte	0xc2
 992 02bc 13       		.byte	0x13
 993 02bd 8A000000 		.4byte	0x8a
 994 02c1 02       		.byte	0x2
 995 02c2 91       		.byte	0x91
 996 02c3 7C       		.sleb128 -4
 997 02c4 19       		.uleb128 0x19
 998 02c5 50030000 		.4byte	0x350
 999 02c9 06000000 		.4byte	.LBI12
 1000 02cd 02       		.byte	.LVU7
 1001 02ce 06000000 		.4byte	.LBB12
 1002 02d2 16000000 		.4byte	.LBE12
 1003 02d6 01       		.byte	0x1
 1004 02d7 CB       		.byte	0xcb
 1005 02d8 02       		.byte	0x2
 1006 02d9 0F       		.uleb128 0xf
 1007 02da 5E030000 		.4byte	0x35e
 1008 02de 00       		.byte	0
 1009 02df 00       		.byte	0
 1010 02e0 1A       		.uleb128 0x1a
 1011 02e1 01       		.byte	0x1
 1012 02e2 1A010000 		.4byte	.LASF28
 1013 02e6 01       		.byte	0x1
 1014 02e7 AE       		.byte	0xae
 1015 02e8 0E       		.byte	0xe
 1016 02e9 01       		.byte	0x1
 1017 02ea E6000000 		.4byte	0xe6
 1018 02ee 3A000000 		.4byte	.LFB5
 1019 02f2 5C000000 		.4byte	.LFE5
 1020 02f6 02       		.byte	0x2
 1021 02f7 7D       		.byte	0x7d
 1022 02f8 00       		.sleb128 0
ARM GAS  /tmp/ccVTlJpC.s 			page 35


 1023 02f9 01       		.byte	0x1
 1024 02fa 35030000 		.4byte	0x335
 1025 02fe 1B       		.uleb128 0x1b
 1026 02ff 98020000 		.4byte	.LASF29
 1027 0303 01       		.byte	0x1
 1028 0304 AE       		.byte	0xae
 1029 0305 32       		.byte	0x32
 1030 0306 E6000000 		.4byte	0xe6
 1031 030a A6000000 		.4byte	.LLST1
 1032 030e 98000000 		.4byte	.LVUS1
 1033 0312 1B       		.uleb128 0x1b
 1034 0313 25000000 		.4byte	.LASF30
 1035 0317 01       		.byte	0x1
 1036 0318 AE       		.byte	0xae
 1037 0319 4F       		.byte	0x4f
 1038 031a 8F000000 		.4byte	0x8f
 1039 031e 09010000 		.4byte	.LLST2
 1040 0322 05010000 		.4byte	.LVUS2
 1041 0326 1C       		.uleb128 0x1c
 1042 0327 8B020000 		.4byte	.LASF40
 1043 032b 01       		.byte	0x1
 1044 032c AE       		.byte	0xae
 1045 032d 5D       		.byte	0x5d
 1046 032e AD000000 		.4byte	0xad
 1047 0332 01       		.byte	0x1
 1048 0333 52       		.byte	0x52
 1049 0334 00       		.byte	0
 1050 0335 1D       		.uleb128 0x1d
 1051 0336 43010000 		.4byte	.LASF31
 1052 033a 02       		.byte	0x2
 1053 033b E3       		.byte	0xe3
 1054 033c 1E       		.byte	0x1e
 1055 033d 01       		.byte	0x1
 1056 033e 03       		.byte	0x3
 1057 033f 50030000 		.4byte	0x350
 1058 0343 1E       		.uleb128 0x1e
 1059 0344 CF020000 		.4byte	.LASF41
 1060 0348 02       		.byte	0x2
 1061 0349 E3       		.byte	0xe3
 1062 034a 38       		.byte	0x38
 1063 034b 7E000000 		.4byte	0x7e
 1064 034f 00       		.byte	0
 1065 0350 1D       		.uleb128 0x1d
 1066 0351 83010000 		.4byte	.LASF32
 1067 0355 02       		.byte	0x2
 1068 0356 BF       		.byte	0xbf
 1069 0357 1E       		.byte	0x1e
 1070 0358 01       		.byte	0x1
 1071 0359 03       		.byte	0x3
 1072 035a 6B030000 		.4byte	0x36b
 1073 035e 1F       		.uleb128 0x1f
 1074 035f 0D010000 		.4byte	.LASF42
 1075 0363 02       		.byte	0x2
 1076 0364 C1       		.byte	0xc1
 1077 0365 0A       		.byte	0xa
 1078 0366 7E000000 		.4byte	0x7e
 1079 036a 00       		.byte	0
ARM GAS  /tmp/ccVTlJpC.s 			page 36


 1080 036b 20       		.uleb128 0x20
 1081 036c 01       		.byte	0x1
 1082 036d 01       		.byte	0x1
 1083 036e 30010000 		.4byte	.LASF33
 1084 0372 30010000 		.4byte	.LASF33
 1085 0376 06       		.byte	0x6
 1086 0377 AF08     		.2byte	0x8af
 1087 0379 0C       		.byte	0xc
 1088 037a 20       		.uleb128 0x20
 1089 037b 01       		.byte	0x1
 1090 037c 01       		.byte	0x1
 1091 037d 49000000 		.4byte	.LASF34
 1092 0381 49000000 		.4byte	.LASF34
 1093 0385 06       		.byte	0x6
 1094 0386 0309     		.2byte	0x903
 1095 0388 17       		.byte	0x17
 1096 0389 00       		.byte	0
 1097              		.section	.debug_abbrev,"",%progbits
 1098              	.Ldebug_abbrev0:
 1099 0000 01       		.uleb128 0x1
 1100 0001 11       		.uleb128 0x11
 1101 0002 01       		.byte	0x1
 1102 0003 25       		.uleb128 0x25
 1103 0004 0E       		.uleb128 0xe
 1104 0005 13       		.uleb128 0x13
 1105 0006 0B       		.uleb128 0xb
 1106 0007 03       		.uleb128 0x3
 1107 0008 0E       		.uleb128 0xe
 1108 0009 1B       		.uleb128 0x1b
 1109 000a 0E       		.uleb128 0xe
 1110 000b 11       		.uleb128 0x11
 1111 000c 01       		.uleb128 0x1
 1112 000d 12       		.uleb128 0x12
 1113 000e 01       		.uleb128 0x1
 1114 000f 10       		.uleb128 0x10
 1115 0010 06       		.uleb128 0x6
 1116 0011 00       		.byte	0
 1117 0012 00       		.byte	0
 1118 0013 02       		.uleb128 0x2
 1119 0014 24       		.uleb128 0x24
 1120 0015 00       		.byte	0
 1121 0016 0B       		.uleb128 0xb
 1122 0017 0B       		.uleb128 0xb
 1123 0018 3E       		.uleb128 0x3e
 1124 0019 0B       		.uleb128 0xb
 1125 001a 03       		.uleb128 0x3
 1126 001b 08       		.uleb128 0x8
 1127 001c 00       		.byte	0
 1128 001d 00       		.byte	0
 1129 001e 03       		.uleb128 0x3
 1130 001f 24       		.uleb128 0x24
 1131 0020 00       		.byte	0
 1132 0021 0B       		.uleb128 0xb
 1133 0022 0B       		.uleb128 0xb
 1134 0023 3E       		.uleb128 0x3e
 1135 0024 0B       		.uleb128 0xb
 1136 0025 03       		.uleb128 0x3
ARM GAS  /tmp/ccVTlJpC.s 			page 37


 1137 0026 0E       		.uleb128 0xe
 1138 0027 00       		.byte	0
 1139 0028 00       		.byte	0
 1140 0029 04       		.uleb128 0x4
 1141 002a 16       		.uleb128 0x16
 1142 002b 00       		.byte	0
 1143 002c 03       		.uleb128 0x3
 1144 002d 0E       		.uleb128 0xe
 1145 002e 3A       		.uleb128 0x3a
 1146 002f 0B       		.uleb128 0xb
 1147 0030 3B       		.uleb128 0x3b
 1148 0031 0B       		.uleb128 0xb
 1149 0032 39       		.uleb128 0x39
 1150 0033 0B       		.uleb128 0xb
 1151 0034 49       		.uleb128 0x49
 1152 0035 13       		.uleb128 0x13
 1153 0036 00       		.byte	0
 1154 0037 00       		.byte	0
 1155 0038 05       		.uleb128 0x5
 1156 0039 35       		.uleb128 0x35
 1157 003a 00       		.byte	0
 1158 003b 49       		.uleb128 0x49
 1159 003c 13       		.uleb128 0x13
 1160 003d 00       		.byte	0
 1161 003e 00       		.byte	0
 1162 003f 06       		.uleb128 0x6
 1163 0040 0F       		.uleb128 0xf
 1164 0041 00       		.byte	0
 1165 0042 0B       		.uleb128 0xb
 1166 0043 0B       		.uleb128 0xb
 1167 0044 49       		.uleb128 0x49
 1168 0045 13       		.uleb128 0x13
 1169 0046 00       		.byte	0
 1170 0047 00       		.byte	0
 1171 0048 07       		.uleb128 0x7
 1172 0049 15       		.uleb128 0x15
 1173 004a 01       		.byte	0x1
 1174 004b 27       		.uleb128 0x27
 1175 004c 0C       		.uleb128 0xc
 1176 004d 01       		.uleb128 0x1
 1177 004e 13       		.uleb128 0x13
 1178 004f 00       		.byte	0
 1179 0050 00       		.byte	0
 1180 0051 08       		.uleb128 0x8
 1181 0052 05       		.uleb128 0x5
 1182 0053 00       		.byte	0
 1183 0054 49       		.uleb128 0x49
 1184 0055 13       		.uleb128 0x13
 1185 0056 00       		.byte	0
 1186 0057 00       		.byte	0
 1187 0058 09       		.uleb128 0x9
 1188 0059 0F       		.uleb128 0xf
 1189 005a 00       		.byte	0
 1190 005b 0B       		.uleb128 0xb
 1191 005c 0B       		.uleb128 0xb
 1192 005d 00       		.byte	0
 1193 005e 00       		.byte	0
ARM GAS  /tmp/ccVTlJpC.s 			page 38


 1194 005f 0A       		.uleb128 0xa
 1195 0060 34       		.uleb128 0x34
 1196 0061 00       		.byte	0
 1197 0062 03       		.uleb128 0x3
 1198 0063 0E       		.uleb128 0xe
 1199 0064 3A       		.uleb128 0x3a
 1200 0065 0B       		.uleb128 0xb
 1201 0066 3B       		.uleb128 0x3b
 1202 0067 0B       		.uleb128 0xb
 1203 0068 39       		.uleb128 0x39
 1204 0069 0B       		.uleb128 0xb
 1205 006a 49       		.uleb128 0x49
 1206 006b 13       		.uleb128 0x13
 1207 006c 02       		.uleb128 0x2
 1208 006d 0A       		.uleb128 0xa
 1209 006e 00       		.byte	0
 1210 006f 00       		.byte	0
 1211 0070 0B       		.uleb128 0xb
 1212 0071 2E       		.uleb128 0x2e
 1213 0072 00       		.byte	0
 1214 0073 3F       		.uleb128 0x3f
 1215 0074 0C       		.uleb128 0xc
 1216 0075 03       		.uleb128 0x3
 1217 0076 0E       		.uleb128 0xe
 1218 0077 3A       		.uleb128 0x3a
 1219 0078 0B       		.uleb128 0xb
 1220 0079 3B       		.uleb128 0x3b
 1221 007a 05       		.uleb128 0x5
 1222 007b 39       		.uleb128 0x39
 1223 007c 0B       		.uleb128 0xb
 1224 007d 27       		.uleb128 0x27
 1225 007e 0C       		.uleb128 0xc
 1226 007f 11       		.uleb128 0x11
 1227 0080 01       		.uleb128 0x1
 1228 0081 12       		.uleb128 0x12
 1229 0082 01       		.uleb128 0x1
 1230 0083 40       		.uleb128 0x40
 1231 0084 0A       		.uleb128 0xa
 1232 0085 9742     		.uleb128 0x2117
 1233 0087 0C       		.uleb128 0xc
 1234 0088 00       		.byte	0
 1235 0089 00       		.byte	0
 1236 008a 0C       		.uleb128 0xc
 1237 008b 2E       		.uleb128 0x2e
 1238 008c 01       		.byte	0x1
 1239 008d 3F       		.uleb128 0x3f
 1240 008e 0C       		.uleb128 0xc
 1241 008f 03       		.uleb128 0x3
 1242 0090 0E       		.uleb128 0xe
 1243 0091 3A       		.uleb128 0x3a
 1244 0092 0B       		.uleb128 0xb
 1245 0093 3B       		.uleb128 0x3b
 1246 0094 05       		.uleb128 0x5
 1247 0095 39       		.uleb128 0x39
 1248 0096 0B       		.uleb128 0xb
 1249 0097 27       		.uleb128 0x27
 1250 0098 0C       		.uleb128 0xc
ARM GAS  /tmp/ccVTlJpC.s 			page 39


 1251 0099 11       		.uleb128 0x11
 1252 009a 01       		.uleb128 0x1
 1253 009b 12       		.uleb128 0x12
 1254 009c 01       		.uleb128 0x1
 1255 009d 40       		.uleb128 0x40
 1256 009e 06       		.uleb128 0x6
 1257 009f 9742     		.uleb128 0x2117
 1258 00a1 0C       		.uleb128 0xc
 1259 00a2 01       		.uleb128 0x1
 1260 00a3 13       		.uleb128 0x13
 1261 00a4 00       		.byte	0
 1262 00a5 00       		.byte	0
 1263 00a6 0D       		.uleb128 0xd
 1264 00a7 1D       		.uleb128 0x1d
 1265 00a8 01       		.byte	0x1
 1266 00a9 31       		.uleb128 0x31
 1267 00aa 13       		.uleb128 0x13
 1268 00ab 52       		.uleb128 0x52
 1269 00ac 01       		.uleb128 0x1
 1270 00ad B842     		.uleb128 0x2138
 1271 00af 0B       		.uleb128 0xb
 1272 00b0 55       		.uleb128 0x55
 1273 00b1 06       		.uleb128 0x6
 1274 00b2 58       		.uleb128 0x58
 1275 00b3 0B       		.uleb128 0xb
 1276 00b4 59       		.uleb128 0x59
 1277 00b5 05       		.uleb128 0x5
 1278 00b6 57       		.uleb128 0x57
 1279 00b7 0B       		.uleb128 0xb
 1280 00b8 01       		.uleb128 0x1
 1281 00b9 13       		.uleb128 0x13
 1282 00ba 00       		.byte	0
 1283 00bb 00       		.byte	0
 1284 00bc 0E       		.uleb128 0xe
 1285 00bd 0B       		.uleb128 0xb
 1286 00be 01       		.byte	0x1
 1287 00bf 55       		.uleb128 0x55
 1288 00c0 06       		.uleb128 0x6
 1289 00c1 00       		.byte	0
 1290 00c2 00       		.byte	0
 1291 00c3 0F       		.uleb128 0xf
 1292 00c4 34       		.uleb128 0x34
 1293 00c5 00       		.byte	0
 1294 00c6 31       		.uleb128 0x31
 1295 00c7 13       		.uleb128 0x13
 1296 00c8 00       		.byte	0
 1297 00c9 00       		.byte	0
 1298 00ca 10       		.uleb128 0x10
 1299 00cb 1D       		.uleb128 0x1d
 1300 00cc 01       		.byte	0x1
 1301 00cd 31       		.uleb128 0x31
 1302 00ce 13       		.uleb128 0x13
 1303 00cf 52       		.uleb128 0x52
 1304 00d0 01       		.uleb128 0x1
 1305 00d1 B842     		.uleb128 0x2138
 1306 00d3 0B       		.uleb128 0xb
 1307 00d4 11       		.uleb128 0x11
ARM GAS  /tmp/ccVTlJpC.s 			page 40


 1308 00d5 01       		.uleb128 0x1
 1309 00d6 12       		.uleb128 0x12
 1310 00d7 01       		.uleb128 0x1
 1311 00d8 58       		.uleb128 0x58
 1312 00d9 0B       		.uleb128 0xb
 1313 00da 59       		.uleb128 0x59
 1314 00db 05       		.uleb128 0x5
 1315 00dc 57       		.uleb128 0x57
 1316 00dd 0B       		.uleb128 0xb
 1317 00de 01       		.uleb128 0x1
 1318 00df 13       		.uleb128 0x13
 1319 00e0 00       		.byte	0
 1320 00e1 00       		.byte	0
 1321 00e2 11       		.uleb128 0x11
 1322 00e3 05       		.uleb128 0x5
 1323 00e4 00       		.byte	0
 1324 00e5 31       		.uleb128 0x31
 1325 00e6 13       		.uleb128 0x13
 1326 00e7 02       		.uleb128 0x2
 1327 00e8 06       		.uleb128 0x6
 1328 00e9 B742     		.uleb128 0x2137
 1329 00eb 06       		.uleb128 0x6
 1330 00ec 00       		.byte	0
 1331 00ed 00       		.byte	0
 1332 00ee 12       		.uleb128 0x12
 1333 00ef 898201   		.uleb128 0x4109
 1334 00f2 00       		.byte	0
 1335 00f3 11       		.uleb128 0x11
 1336 00f4 01       		.uleb128 0x1
 1337 00f5 31       		.uleb128 0x31
 1338 00f6 13       		.uleb128 0x13
 1339 00f7 00       		.byte	0
 1340 00f8 00       		.byte	0
 1341 00f9 13       		.uleb128 0x13
 1342 00fa 2E       		.uleb128 0x2e
 1343 00fb 01       		.byte	0x1
 1344 00fc 3F       		.uleb128 0x3f
 1345 00fd 0C       		.uleb128 0xc
 1346 00fe 03       		.uleb128 0x3
 1347 00ff 0E       		.uleb128 0xe
 1348 0100 3A       		.uleb128 0x3a
 1349 0101 0B       		.uleb128 0xb
 1350 0102 3B       		.uleb128 0x3b
 1351 0103 05       		.uleb128 0x5
 1352 0104 39       		.uleb128 0x39
 1353 0105 0B       		.uleb128 0xb
 1354 0106 27       		.uleb128 0x27
 1355 0107 0C       		.uleb128 0xc
 1356 0108 11       		.uleb128 0x11
 1357 0109 01       		.uleb128 0x1
 1358 010a 12       		.uleb128 0x12
 1359 010b 01       		.uleb128 0x1
 1360 010c 40       		.uleb128 0x40
 1361 010d 0A       		.uleb128 0xa
 1362 010e 9742     		.uleb128 0x2117
 1363 0110 0C       		.uleb128 0xc
 1364 0111 01       		.uleb128 0x1
ARM GAS  /tmp/ccVTlJpC.s 			page 41


 1365 0112 13       		.uleb128 0x13
 1366 0113 00       		.byte	0
 1367 0114 00       		.byte	0
 1368 0115 14       		.uleb128 0x14
 1369 0116 1D       		.uleb128 0x1d
 1370 0117 01       		.byte	0x1
 1371 0118 31       		.uleb128 0x31
 1372 0119 13       		.uleb128 0x13
 1373 011a 52       		.uleb128 0x52
 1374 011b 01       		.uleb128 0x1
 1375 011c B842     		.uleb128 0x2138
 1376 011e 0B       		.uleb128 0xb
 1377 011f 11       		.uleb128 0x11
 1378 0120 01       		.uleb128 0x1
 1379 0121 12       		.uleb128 0x12
 1380 0122 01       		.uleb128 0x1
 1381 0123 58       		.uleb128 0x58
 1382 0124 0B       		.uleb128 0xb
 1383 0125 59       		.uleb128 0x59
 1384 0126 05       		.uleb128 0x5
 1385 0127 57       		.uleb128 0x57
 1386 0128 0B       		.uleb128 0xb
 1387 0129 00       		.byte	0
 1388 012a 00       		.byte	0
 1389 012b 15       		.uleb128 0x15
 1390 012c 2E       		.uleb128 0x2e
 1391 012d 01       		.byte	0x1
 1392 012e 3F       		.uleb128 0x3f
 1393 012f 0C       		.uleb128 0xc
 1394 0130 03       		.uleb128 0x3
 1395 0131 0E       		.uleb128 0xe
 1396 0132 3A       		.uleb128 0x3a
 1397 0133 0B       		.uleb128 0xb
 1398 0134 3B       		.uleb128 0x3b
 1399 0135 05       		.uleb128 0x5
 1400 0136 39       		.uleb128 0x39
 1401 0137 0B       		.uleb128 0xb
 1402 0138 27       		.uleb128 0x27
 1403 0139 0C       		.uleb128 0xc
 1404 013a 49       		.uleb128 0x49
 1405 013b 13       		.uleb128 0x13
 1406 013c 11       		.uleb128 0x11
 1407 013d 01       		.uleb128 0x1
 1408 013e 12       		.uleb128 0x12
 1409 013f 01       		.uleb128 0x1
 1410 0140 40       		.uleb128 0x40
 1411 0141 06       		.uleb128 0x6
 1412 0142 9742     		.uleb128 0x2117
 1413 0144 0C       		.uleb128 0xc
 1414 0145 01       		.uleb128 0x1
 1415 0146 13       		.uleb128 0x13
 1416 0147 00       		.byte	0
 1417 0148 00       		.byte	0
 1418 0149 16       		.uleb128 0x16
 1419 014a 2E       		.uleb128 0x2e
 1420 014b 00       		.byte	0
 1421 014c 03       		.uleb128 0x3
ARM GAS  /tmp/ccVTlJpC.s 			page 42


 1422 014d 0E       		.uleb128 0xe
 1423 014e 3A       		.uleb128 0x3a
 1424 014f 0B       		.uleb128 0xb
 1425 0150 3B       		.uleb128 0x3b
 1426 0151 0B       		.uleb128 0xb
 1427 0152 39       		.uleb128 0x39
 1428 0153 0B       		.uleb128 0xb
 1429 0154 27       		.uleb128 0x27
 1430 0155 0C       		.uleb128 0xc
 1431 0156 11       		.uleb128 0x11
 1432 0157 01       		.uleb128 0x1
 1433 0158 12       		.uleb128 0x12
 1434 0159 01       		.uleb128 0x1
 1435 015a 40       		.uleb128 0x40
 1436 015b 0A       		.uleb128 0xa
 1437 015c 9742     		.uleb128 0x2117
 1438 015e 0C       		.uleb128 0xc
 1439 015f 00       		.byte	0
 1440 0160 00       		.byte	0
 1441 0161 17       		.uleb128 0x17
 1442 0162 2E       		.uleb128 0x2e
 1443 0163 00       		.byte	0
 1444 0164 3F       		.uleb128 0x3f
 1445 0165 0C       		.uleb128 0xc
 1446 0166 03       		.uleb128 0x3
 1447 0167 0E       		.uleb128 0xe
 1448 0168 3A       		.uleb128 0x3a
 1449 0169 0B       		.uleb128 0xb
 1450 016a 3B       		.uleb128 0x3b
 1451 016b 0B       		.uleb128 0xb
 1452 016c 39       		.uleb128 0x39
 1453 016d 0B       		.uleb128 0xb
 1454 016e 27       		.uleb128 0x27
 1455 016f 0C       		.uleb128 0xc
 1456 0170 11       		.uleb128 0x11
 1457 0171 01       		.uleb128 0x1
 1458 0172 12       		.uleb128 0x12
 1459 0173 01       		.uleb128 0x1
 1460 0174 40       		.uleb128 0x40
 1461 0175 0A       		.uleb128 0xa
 1462 0176 9742     		.uleb128 0x2117
 1463 0178 0C       		.uleb128 0xc
 1464 0179 00       		.byte	0
 1465 017a 00       		.byte	0
 1466 017b 18       		.uleb128 0x18
 1467 017c 2E       		.uleb128 0x2e
 1468 017d 01       		.byte	0x1
 1469 017e 03       		.uleb128 0x3
 1470 017f 0E       		.uleb128 0xe
 1471 0180 3A       		.uleb128 0x3a
 1472 0181 0B       		.uleb128 0xb
 1473 0182 3B       		.uleb128 0x3b
 1474 0183 0B       		.uleb128 0xb
 1475 0184 39       		.uleb128 0x39
 1476 0185 0B       		.uleb128 0xb
 1477 0186 27       		.uleb128 0x27
 1478 0187 0C       		.uleb128 0xc
ARM GAS  /tmp/ccVTlJpC.s 			page 43


 1479 0188 11       		.uleb128 0x11
 1480 0189 01       		.uleb128 0x1
 1481 018a 12       		.uleb128 0x12
 1482 018b 01       		.uleb128 0x1
 1483 018c 40       		.uleb128 0x40
 1484 018d 06       		.uleb128 0x6
 1485 018e 9742     		.uleb128 0x2117
 1486 0190 0C       		.uleb128 0xc
 1487 0191 01       		.uleb128 0x1
 1488 0192 13       		.uleb128 0x13
 1489 0193 00       		.byte	0
 1490 0194 00       		.byte	0
 1491 0195 19       		.uleb128 0x19
 1492 0196 1D       		.uleb128 0x1d
 1493 0197 01       		.byte	0x1
 1494 0198 31       		.uleb128 0x31
 1495 0199 13       		.uleb128 0x13
 1496 019a 52       		.uleb128 0x52
 1497 019b 01       		.uleb128 0x1
 1498 019c B842     		.uleb128 0x2138
 1499 019e 0B       		.uleb128 0xb
 1500 019f 11       		.uleb128 0x11
 1501 01a0 01       		.uleb128 0x1
 1502 01a1 12       		.uleb128 0x12
 1503 01a2 01       		.uleb128 0x1
 1504 01a3 58       		.uleb128 0x58
 1505 01a4 0B       		.uleb128 0xb
 1506 01a5 59       		.uleb128 0x59
 1507 01a6 0B       		.uleb128 0xb
 1508 01a7 57       		.uleb128 0x57
 1509 01a8 0B       		.uleb128 0xb
 1510 01a9 00       		.byte	0
 1511 01aa 00       		.byte	0
 1512 01ab 1A       		.uleb128 0x1a
 1513 01ac 2E       		.uleb128 0x2e
 1514 01ad 01       		.byte	0x1
 1515 01ae 3F       		.uleb128 0x3f
 1516 01af 0C       		.uleb128 0xc
 1517 01b0 03       		.uleb128 0x3
 1518 01b1 0E       		.uleb128 0xe
 1519 01b2 3A       		.uleb128 0x3a
 1520 01b3 0B       		.uleb128 0xb
 1521 01b4 3B       		.uleb128 0x3b
 1522 01b5 0B       		.uleb128 0xb
 1523 01b6 39       		.uleb128 0x39
 1524 01b7 0B       		.uleb128 0xb
 1525 01b8 27       		.uleb128 0x27
 1526 01b9 0C       		.uleb128 0xc
 1527 01ba 49       		.uleb128 0x49
 1528 01bb 13       		.uleb128 0x13
 1529 01bc 11       		.uleb128 0x11
 1530 01bd 01       		.uleb128 0x1
 1531 01be 12       		.uleb128 0x12
 1532 01bf 01       		.uleb128 0x1
 1533 01c0 40       		.uleb128 0x40
 1534 01c1 0A       		.uleb128 0xa
 1535 01c2 9742     		.uleb128 0x2117
ARM GAS  /tmp/ccVTlJpC.s 			page 44


 1536 01c4 0C       		.uleb128 0xc
 1537 01c5 01       		.uleb128 0x1
 1538 01c6 13       		.uleb128 0x13
 1539 01c7 00       		.byte	0
 1540 01c8 00       		.byte	0
 1541 01c9 1B       		.uleb128 0x1b
 1542 01ca 05       		.uleb128 0x5
 1543 01cb 00       		.byte	0
 1544 01cc 03       		.uleb128 0x3
 1545 01cd 0E       		.uleb128 0xe
 1546 01ce 3A       		.uleb128 0x3a
 1547 01cf 0B       		.uleb128 0xb
 1548 01d0 3B       		.uleb128 0x3b
 1549 01d1 0B       		.uleb128 0xb
 1550 01d2 39       		.uleb128 0x39
 1551 01d3 0B       		.uleb128 0xb
 1552 01d4 49       		.uleb128 0x49
 1553 01d5 13       		.uleb128 0x13
 1554 01d6 02       		.uleb128 0x2
 1555 01d7 06       		.uleb128 0x6
 1556 01d8 B742     		.uleb128 0x2137
 1557 01da 06       		.uleb128 0x6
 1558 01db 00       		.byte	0
 1559 01dc 00       		.byte	0
 1560 01dd 1C       		.uleb128 0x1c
 1561 01de 05       		.uleb128 0x5
 1562 01df 00       		.byte	0
 1563 01e0 03       		.uleb128 0x3
 1564 01e1 0E       		.uleb128 0xe
 1565 01e2 3A       		.uleb128 0x3a
 1566 01e3 0B       		.uleb128 0xb
 1567 01e4 3B       		.uleb128 0x3b
 1568 01e5 0B       		.uleb128 0xb
 1569 01e6 39       		.uleb128 0x39
 1570 01e7 0B       		.uleb128 0xb
 1571 01e8 49       		.uleb128 0x49
 1572 01e9 13       		.uleb128 0x13
 1573 01ea 02       		.uleb128 0x2
 1574 01eb 0A       		.uleb128 0xa
 1575 01ec 00       		.byte	0
 1576 01ed 00       		.byte	0
 1577 01ee 1D       		.uleb128 0x1d
 1578 01ef 2E       		.uleb128 0x2e
 1579 01f0 01       		.byte	0x1
 1580 01f1 03       		.uleb128 0x3
 1581 01f2 0E       		.uleb128 0xe
 1582 01f3 3A       		.uleb128 0x3a
 1583 01f4 0B       		.uleb128 0xb
 1584 01f5 3B       		.uleb128 0x3b
 1585 01f6 0B       		.uleb128 0xb
 1586 01f7 39       		.uleb128 0x39
 1587 01f8 0B       		.uleb128 0xb
 1588 01f9 27       		.uleb128 0x27
 1589 01fa 0C       		.uleb128 0xc
 1590 01fb 20       		.uleb128 0x20
 1591 01fc 0B       		.uleb128 0xb
 1592 01fd 01       		.uleb128 0x1
ARM GAS  /tmp/ccVTlJpC.s 			page 45


 1593 01fe 13       		.uleb128 0x13
 1594 01ff 00       		.byte	0
 1595 0200 00       		.byte	0
 1596 0201 1E       		.uleb128 0x1e
 1597 0202 05       		.uleb128 0x5
 1598 0203 00       		.byte	0
 1599 0204 03       		.uleb128 0x3
 1600 0205 0E       		.uleb128 0xe
 1601 0206 3A       		.uleb128 0x3a
 1602 0207 0B       		.uleb128 0xb
 1603 0208 3B       		.uleb128 0x3b
 1604 0209 0B       		.uleb128 0xb
 1605 020a 39       		.uleb128 0x39
 1606 020b 0B       		.uleb128 0xb
 1607 020c 49       		.uleb128 0x49
 1608 020d 13       		.uleb128 0x13
 1609 020e 00       		.byte	0
 1610 020f 00       		.byte	0
 1611 0210 1F       		.uleb128 0x1f
 1612 0211 34       		.uleb128 0x34
 1613 0212 00       		.byte	0
 1614 0213 03       		.uleb128 0x3
 1615 0214 0E       		.uleb128 0xe
 1616 0215 3A       		.uleb128 0x3a
 1617 0216 0B       		.uleb128 0xb
 1618 0217 3B       		.uleb128 0x3b
 1619 0218 0B       		.uleb128 0xb
 1620 0219 39       		.uleb128 0x39
 1621 021a 0B       		.uleb128 0xb
 1622 021b 49       		.uleb128 0x49
 1623 021c 13       		.uleb128 0x13
 1624 021d 00       		.byte	0
 1625 021e 00       		.byte	0
 1626 021f 20       		.uleb128 0x20
 1627 0220 2E       		.uleb128 0x2e
 1628 0221 00       		.byte	0
 1629 0222 3F       		.uleb128 0x3f
 1630 0223 0C       		.uleb128 0xc
 1631 0224 3C       		.uleb128 0x3c
 1632 0225 0C       		.uleb128 0xc
 1633 0226 8740     		.uleb128 0x2007
 1634 0228 0E       		.uleb128 0xe
 1635 0229 03       		.uleb128 0x3
 1636 022a 0E       		.uleb128 0xe
 1637 022b 3A       		.uleb128 0x3a
 1638 022c 0B       		.uleb128 0xb
 1639 022d 3B       		.uleb128 0x3b
 1640 022e 05       		.uleb128 0x5
 1641 022f 39       		.uleb128 0x39
 1642 0230 0B       		.uleb128 0xb
 1643 0231 00       		.byte	0
 1644 0232 00       		.byte	0
 1645 0233 00       		.byte	0
 1646              		.section	.debug_loc,"",%progbits
 1647              	.Ldebug_loc0:
 1648              	.LLST4:
 1649 0000 04010000 		.4byte	.LFB14-.Ltext0
ARM GAS  /tmp/ccVTlJpC.s 			page 46


 1650 0004 06010000 		.4byte	.LCFI2-.Ltext0
 1651 0008 0200     		.2byte	0x2
 1652 000a 7D       		.byte	0x7d
 1653 000b 00       		.sleb128 0
 1654 000c 06010000 		.4byte	.LCFI2-.Ltext0
 1655 0010 30010000 		.4byte	.LFE14-.Ltext0
 1656 0014 0200     		.2byte	0x2
 1657 0016 7D       		.byte	0x7d
 1658 0017 08       		.sleb128 8
 1659 0018 00000000 		.4byte	0
 1660 001c 00000000 		.4byte	0
 1661              	.LVUS5:
 1662 0020 01       		.uleb128 .LVU81
 1663 0021 00       		.uleb128 .LVU83
 1664              	.LLST5:
 1665 0022 28010000 		.4byte	.LVL11-.Ltext0
 1666 0026 2E010000 		.4byte	.LVL12-.Ltext0
 1667 002a 0200     		.2byte	0x2
 1668 002c 30       		.byte	0x30
 1669 002d 9F       		.byte	0x9f
 1670 002e 00000000 		.4byte	0
 1671 0032 00000000 		.4byte	0
 1672              	.LVUS3:
 1673 0036 01       		.uleb128 .LVU61
 1674 0037 00       		.uleb128 .LVU63
 1675              	.LLST3:
 1676 0038 AE000000 		.4byte	.LVL8-.Ltext0
 1677 003c B2000000 		.4byte	.LVL9-.Ltext0
 1678 0040 0200     		.2byte	0x2
 1679 0042 30       		.byte	0x30
 1680 0043 9F       		.byte	0x9f
 1681 0044 00000000 		.4byte	0
 1682 0048 00000000 		.4byte	0
 1683              	.LLST6:
 1684 004c 46010000 		.4byte	.LFB9-.Ltext0
 1685 0050 4C010000 		.4byte	.LCFI3-.Ltext0
 1686 0054 0200     		.2byte	0x2
 1687 0056 7D       		.byte	0x7d
 1688 0057 00       		.sleb128 0
 1689 0058 4C010000 		.4byte	.LCFI3-.Ltext0
 1690 005c 84010000 		.4byte	.LFE9-.Ltext0
 1691 0060 0200     		.2byte	0x2
 1692 0062 7D       		.byte	0x7d
 1693 0063 08       		.sleb128 8
 1694 0064 00000000 		.4byte	0
 1695 0068 00000000 		.4byte	0
 1696              	.LLST0:
 1697 006c 00000000 		.4byte	.LFB6-.Ltext0
 1698 0070 04000000 		.4byte	.LCFI0-.Ltext0
 1699 0074 0200     		.2byte	0x2
 1700 0076 7D       		.byte	0x7d
 1701 0077 00       		.sleb128 0
 1702 0078 04000000 		.4byte	.LCFI0-.Ltext0
 1703 007c 1E000000 		.4byte	.LCFI1-.Ltext0
 1704 0080 0200     		.2byte	0x2
 1705 0082 7D       		.byte	0x7d
 1706 0083 08       		.sleb128 8
ARM GAS  /tmp/ccVTlJpC.s 			page 47


 1707 0084 1E000000 		.4byte	.LCFI1-.Ltext0
 1708 0088 20000000 		.4byte	.LFE6-.Ltext0
 1709 008c 0200     		.2byte	0x2
 1710 008e 7D       		.byte	0x7d
 1711 008f 00       		.sleb128 0
 1712 0090 00000000 		.4byte	0
 1713 0094 00000000 		.4byte	0
 1714              	.LVUS1:
 1715 0098 00       		.uleb128 0
 1716 0099 02       		.uleb128 .LVU21
 1717 009a 02       		.uleb128 .LVU21
 1718 009b 01       		.uleb128 .LVU24
 1719 009c 01       		.uleb128 .LVU24
 1720 009d 01       		.uleb128 .LVU29
 1721 009e 01       		.uleb128 .LVU29
 1722 009f 01       		.uleb128 .LVU32
 1723 00a0 01       		.uleb128 .LVU32
 1724 00a1 01       		.uleb128 .LVU35
 1725 00a2 01       		.uleb128 .LVU35
 1726 00a3 00       		.uleb128 .LVU37
 1727 00a4 00       		.uleb128 .LVU37
 1728 00a5 00       		.uleb128 0
 1729              	.LLST1:
 1730 00a6 3A000000 		.4byte	.LVL1-.Ltext0
 1731 00aa 3A000000 		.4byte	.LVL1-.Ltext0
 1732 00ae 0100     		.2byte	0x1
 1733 00b0 50       		.byte	0x50
 1734 00b1 3A000000 		.4byte	.LVL1-.Ltext0
 1735 00b5 42000000 		.4byte	.LVL2-.Ltext0
 1736 00b9 0300     		.2byte	0x3
 1737 00bb 70       		.byte	0x70
 1738 00bc 7C       		.sleb128 -4
 1739 00bd 9F       		.byte	0x9f
 1740 00be 42000000 		.4byte	.LVL2-.Ltext0
 1741 00c2 4C000000 		.4byte	.LVL4-.Ltext0
 1742 00c6 0300     		.2byte	0x3
 1743 00c8 70       		.byte	0x70
 1744 00c9 78       		.sleb128 -8
 1745 00ca 9F       		.byte	0x9f
 1746 00cb 4C000000 		.4byte	.LVL4-.Ltext0
 1747 00cf 50000000 		.4byte	.LVL5-.Ltext0
 1748 00d3 0300     		.2byte	0x3
 1749 00d5 70       		.byte	0x70
 1750 00d6 74       		.sleb128 -12
 1751 00d7 9F       		.byte	0x9f
 1752 00d8 50000000 		.4byte	.LVL5-.Ltext0
 1753 00dc 54000000 		.4byte	.LVL6-.Ltext0
 1754 00e0 0300     		.2byte	0x3
 1755 00e2 70       		.byte	0x70
 1756 00e3 60       		.sleb128 -32
 1757 00e4 9F       		.byte	0x9f
 1758 00e5 54000000 		.4byte	.LVL6-.Ltext0
 1759 00e9 56000000 		.4byte	.LVL7-.Ltext0
 1760 00ed 0300     		.2byte	0x3
 1761 00ef 70       		.byte	0x70
 1762 00f0 40       		.sleb128 -64
 1763 00f1 9F       		.byte	0x9f
ARM GAS  /tmp/ccVTlJpC.s 			page 48


 1764 00f2 56000000 		.4byte	.LVL7-.Ltext0
 1765 00f6 5C000000 		.4byte	.LFE5-.Ltext0
 1766 00fa 0100     		.2byte	0x1
 1767 00fc 50       		.byte	0x50
 1768 00fd 00000000 		.4byte	0
 1769 0101 00000000 		.4byte	0
 1770              	.LVUS2:
 1771 0105 00       		.uleb128 0
 1772 0106 00       		.uleb128 .LVU27
 1773 0107 00       		.uleb128 .LVU27
 1774 0108 00       		.uleb128 0
 1775              	.LLST2:
 1776 0109 3A000000 		.4byte	.LVL1-.Ltext0
 1777 010d 48000000 		.4byte	.LVL3-.Ltext0
 1778 0111 0100     		.2byte	0x1
 1779 0113 51       		.byte	0x51
 1780 0114 48000000 		.4byte	.LVL3-.Ltext0
 1781 0118 5C000000 		.4byte	.LFE5-.Ltext0
 1782 011c 0400     		.2byte	0x4
 1783 011e F3       		.byte	0xf3
 1784 011f 01       		.uleb128 0x1
 1785 0120 51       		.byte	0x51
 1786 0121 9F       		.byte	0x9f
 1787 0122 00000000 		.4byte	0
 1788 0126 00000000 		.4byte	0
 1789              		.section	.debug_aranges,"",%progbits
 1790 0000 1C000000 		.4byte	0x1c
 1791 0004 0200     		.2byte	0x2
 1792 0006 00000000 		.4byte	.Ldebug_info0
 1793 000a 04       		.byte	0x4
 1794 000b 00       		.byte	0
 1795 000c 0000     		.2byte	0
 1796 000e 0000     		.2byte	0
 1797 0010 00000000 		.4byte	.Ltext0
 1798 0014 84010000 		.4byte	.Letext0-.Ltext0
 1799 0018 00000000 		.4byte	0
 1800 001c 00000000 		.4byte	0
 1801              		.section	.debug_ranges,"",%progbits
 1802              	.Ldebug_ranges0:
 1803 0000 04010000 		.4byte	.LBB18-.Ltext0
 1804 0004 04010000 		.4byte	.LBE18-.Ltext0
 1805 0008 06010000 		.4byte	.LBB21-.Ltext0
 1806 000c 16010000 		.4byte	.LBE21-.Ltext0
 1807 0010 00000000 		.4byte	0
 1808 0014 00000000 		.4byte	0
 1809              		.section	.debug_line,"",%progbits
 1810              	.Ldebug_line0:
 1811 0000 00030000 		.section	.debug_str,"MS",%progbits,1
 1811      0300DC00 
 1811      00000201 
 1811      FB0E0D00 
 1811      01010101 
 1812              	.LASF25:
 1813 0000 75784372 		.ascii	"uxCriticalNesting\000"
 1813      69746963 
 1813      616C4E65 
 1813      7374696E 
ARM GAS  /tmp/ccVTlJpC.s 			page 49


 1813      6700
 1814              	.LASF22:
 1815 0012 76506F72 		.ascii	"vPortEnterCritical\000"
 1815      74456E74 
 1815      65724372 
 1815      69746963 
 1815      616C00
 1816              	.LASF30:
 1817 0025 7078436F 		.ascii	"pxCode\000"
 1817      646500
 1818              	.LASF23:
 1819 002c 76506F72 		.ascii	"vPortEndScheduler\000"
 1819      74456E64 
 1819      53636865 
 1819      64756C65 
 1819      7200
 1820              	.LASF16:
 1821 003e 5469636B 		.ascii	"TickType_t\000"
 1821      54797065 
 1821      5F7400
 1822              	.LASF34:
 1823 0049 76546173 		.ascii	"vTaskSwitchContext\000"
 1823      6B537769 
 1823      74636843 
 1823      6F6E7465 
 1823      787400
 1824              	.LASF20:
 1825 005c 53797354 		.ascii	"SysTick_Handler\000"
 1825      69636B5F 
 1825      48616E64 
 1825      6C657200 
 1826              	.LASF7:
 1827 006c 6C6F6E67 		.ascii	"long int\000"
 1827      20696E74 
 1827      00
 1828              	.LASF5:
 1829 0075 73686F72 		.ascii	"short int\000"
 1829      7420696E 
 1829      7400
 1830              	.LASF36:
 1831 007f 2E2E2F66 		.ascii	"../freertos/portable/GCC/ARM_CM3/port.c\000"
 1831      72656572 
 1831      746F732F 
 1831      706F7274 
 1831      61626C65 
 1832              	.LASF39:
 1833 00a7 70727654 		.ascii	"prvTaskExitError\000"
 1833      61736B45 
 1833      78697445 
 1833      72726F72 
 1833      00
 1834              	.LASF12:
 1835 00b8 5461736B 		.ascii	"TaskFunction_t\000"
 1835      46756E63 
 1835      74696F6E 
 1835      5F7400
 1836              	.LASF26:
ARM GAS  /tmp/ccVTlJpC.s 			page 50


 1837 00c7 756C4475 		.ascii	"ulDummy\000"
 1837      6D6D7900 
 1838              	.LASF4:
 1839 00cf 756E7369 		.ascii	"unsigned char\000"
 1839      676E6564 
 1839      20636861 
 1839      7200
 1840              	.LASF8:
 1841 00dd 6C6F6E67 		.ascii	"long unsigned int\000"
 1841      20756E73 
 1841      69676E65 
 1841      6420696E 
 1841      7400
 1842              	.LASF6:
 1843 00ef 73686F72 		.ascii	"short unsigned int\000"
 1843      7420756E 
 1843      7369676E 
 1843      65642069 
 1843      6E7400
 1844              	.LASF10:
 1845 0102 5F5F7569 		.ascii	"__uint32_t\000"
 1845      6E743332 
 1845      5F7400
 1846              	.LASF42:
 1847 010d 756C4E65 		.ascii	"ulNewBASEPRI\000"
 1847      77424153 
 1847      45505249 
 1847      00
 1848              	.LASF28:
 1849 011a 7078506F 		.ascii	"pxPortInitialiseStack\000"
 1849      7274496E 
 1849      69746961 
 1849      6C697365 
 1849      53746163 
 1850              	.LASF33:
 1851 0130 78546173 		.ascii	"xTaskIncrementTick\000"
 1851      6B496E63 
 1851      72656D65 
 1851      6E745469 
 1851      636B00
 1852              	.LASF31:
 1853 0143 76506F72 		.ascii	"vPortSetBASEPRI\000"
 1853      74536574 
 1853      42415345 
 1853      50524900 
 1854              	.LASF13:
 1855 0153 53746163 		.ascii	"StackType_t\000"
 1855      6B547970 
 1855      655F7400 
 1856              	.LASF0:
 1857 015f 756E7369 		.ascii	"unsigned int\000"
 1857      676E6564 
 1857      20696E74 
 1857      00
 1858              	.LASF9:
 1859 016c 6C6F6E67 		.ascii	"long long unsigned int\000"
 1859      206C6F6E 
ARM GAS  /tmp/ccVTlJpC.s 			page 51


 1859      6720756E 
 1859      7369676E 
 1859      65642069 
 1860              	.LASF32:
 1861 0183 76506F72 		.ascii	"vPortRaiseBASEPRI\000"
 1861      74526169 
 1861      73654241 
 1861      53455052 
 1861      4900
 1862              	.LASF37:
 1863 0195 2F686F6D 		.ascii	"/home/junior/Codigos/6-Stm32_GCC_FreeRTOS10.2.1/5-T"
 1863      652F6A75 
 1863      6E696F72 
 1863      2F436F64 
 1863      69676F73 
 1864 01c8 656D7052 		.ascii	"empR_LCD_Serial\000"
 1864      5F4C4344 
 1864      5F536572 
 1864      69616C00 
 1865              	.LASF35:
 1866 01d8 474E5520 		.ascii	"GNU C17 10.3.1 20210824 (release) -mcpu=cortex-m3 -"
 1866      43313720 
 1866      31302E33 
 1866      2E312032 
 1866      30323130 
 1867 020b 6D746875 		.ascii	"mthumb -mfloat-abi=soft -march=armv7-m -g -gdwarf-2"
 1867      6D62202D 
 1867      6D666C6F 
 1867      61742D61 
 1867      62693D73 
 1868 023e 202D4F73 		.ascii	" -Os -fomit-frame-pointer\000"
 1868      202D666F 
 1868      6D69742D 
 1868      6672616D 
 1868      652D706F 
 1869              	.LASF18:
 1870 0258 76506F72 		.ascii	"vPortSetupTimerInterrupt\000"
 1870      74536574 
 1870      75705469 
 1870      6D657249 
 1870      6E746572 
 1871              	.LASF1:
 1872 0271 6C6F6E67 		.ascii	"long long int\000"
 1872      206C6F6E 
 1872      6720696E 
 1872      7400
 1873              	.LASF24:
 1874 027f 5356435F 		.ascii	"SVC_Handler\000"
 1874      48616E64 
 1874      6C657200 
 1875              	.LASF40:
 1876 028b 70765061 		.ascii	"pvParameters\000"
 1876      72616D65 
 1876      74657273 
 1876      00
 1877              	.LASF29:
 1878 0298 7078546F 		.ascii	"pxTopOfStack\000"
ARM GAS  /tmp/ccVTlJpC.s 			page 52


 1878      704F6653 
 1878      7461636B 
 1878      00
 1879              	.LASF19:
 1880 02a5 50656E64 		.ascii	"PendSV_Handler\000"
 1880      53565F48 
 1880      616E646C 
 1880      657200
 1881              	.LASF21:
 1882 02b4 76506F72 		.ascii	"vPortExitCritical\000"
 1882      74457869 
 1882      74437269 
 1882      74696361 
 1882      6C00
 1883              	.LASF11:
 1884 02c6 75696E74 		.ascii	"uint32_t\000"
 1884      33325F74 
 1884      00
 1885              	.LASF41:
 1886 02cf 756C4E65 		.ascii	"ulNewMaskValue\000"
 1886      774D6173 
 1886      6B56616C 
 1886      756500
 1887              	.LASF17:
 1888 02de 63686172 		.ascii	"char\000"
 1888      00
 1889              	.LASF38:
 1890 02e3 70727650 		.ascii	"prvPortStartFirstTask\000"
 1890      6F727453 
 1890      74617274 
 1890      46697273 
 1890      74546173 
 1891              	.LASF2:
 1892 02f9 6C6F6E67 		.ascii	"long double\000"
 1892      20646F75 
 1892      626C6500 
 1893              	.LASF3:
 1894 0305 7369676E 		.ascii	"signed char\000"
 1894      65642063 
 1894      68617200 
 1895              	.LASF27:
 1896 0311 78506F72 		.ascii	"xPortStartScheduler\000"
 1896      74537461 
 1896      72745363 
 1896      68656475 
 1896      6C657200 
 1897              	.LASF15:
 1898 0325 55426173 		.ascii	"UBaseType_t\000"
 1898      65547970 
 1898      655F7400 
 1899              	.LASF14:
 1900 0331 42617365 		.ascii	"BaseType_t\000"
 1900      54797065 
 1900      5F7400
 1901              		.ident	"GCC: (GNU Arm Embedded Toolchain 10.3-2021.10) 10.3.1 20210824 (release)"
ARM GAS  /tmp/ccVTlJpC.s 			page 53


DEFINED SYMBOLS
                            *ABS*:0000000000000000 port.c
     /tmp/ccVTlJpC.s:78     .text:0000000000000000 $t
     /tmp/ccVTlJpC.s:83     .text:0000000000000000 prvTaskExitError
     /tmp/ccVTlJpC.s:151    .text:0000000000000020 prvPortStartFirstTask
     /tmp/ccVTlJpC.s:186    .text:000000000000003a pxPortInitialiseStack
     /tmp/ccVTlJpC.s:237    .text:0000000000000058 $d
     /tmp/ccVTlJpC.s:241    .text:000000000000005c $t
     /tmp/ccVTlJpC.s:247    .text:000000000000005c SVC_Handler
     /tmp/ccVTlJpC.s:269    .text:0000000000000080 pxCurrentTCBConst2
     /tmp/ccVTlJpC.s:269    .text:0000000000000080 $d
     /tmp/ccVTlJpC.s:279    .text:0000000000000084 $t
     /tmp/ccVTlJpC.s:285    .text:0000000000000084 vPortEndScheduler
     /tmp/ccVTlJpC.s:305    .text:0000000000000086 vPortEnterCritical
     /tmp/ccVTlJpC.s:346    .text:00000000000000a0 $d
     /tmp/ccVTlJpC.s:350    .text:00000000000000a4 $t
     /tmp/ccVTlJpC.s:356    .text:00000000000000a4 vPortExitCritical
     /tmp/ccVTlJpC.s:399    .text:00000000000000b4 $d
     /tmp/ccVTlJpC.s:403    .text:00000000000000b8 $t
     /tmp/ccVTlJpC.s:409    .text:00000000000000b8 PendSV_Handler
     /tmp/ccVTlJpC.s:444    .text:0000000000000100 pxCurrentTCBConst
     /tmp/ccVTlJpC.s:444    .text:0000000000000100 $d
     /tmp/ccVTlJpC.s:454    .text:0000000000000104 $t
     /tmp/ccVTlJpC.s:460    .text:0000000000000104 SysTick_Handler
     /tmp/ccVTlJpC.s:543    .text:0000000000000130 vPortSetupTimerInterrupt
     /tmp/ccVTlJpC.s:582    .text:0000000000000146 xPortStartScheduler
     /tmp/ccVTlJpC.s:639    .text:0000000000000180 $d
     /tmp/ccVTlJpC.s:644    .data:0000000000000000 $d
     /tmp/ccVTlJpC.s:648    .data:0000000000000000 uxCriticalNesting
     /tmp/ccVTlJpC.s:1901   .text:0000000000000184 $d

UNDEFINED SYMBOLS
pxCurrentTCB
vTaskSwitchContext
xTaskIncrementTick
