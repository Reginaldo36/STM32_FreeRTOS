ARM GAS  /tmp/ccIusuWx.s 			page 1


   1              		.cpu cortex-m3
   2              		.arch armv7-m
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1	@ Tag_ABI_FP_denormal
   5              		.eabi_attribute 21, 1	@ Tag_ABI_FP_exceptions
   6              		.eabi_attribute 23, 3	@ Tag_ABI_FP_number_model
   7              		.eabi_attribute 24, 1	@ Tag_ABI_align8_needed
   8              		.eabi_attribute 25, 1	@ Tag_ABI_align8_preserved
   9              		.eabi_attribute 26, 1	@ Tag_ABI_enum_size
  10              		.eabi_attribute 30, 4	@ Tag_ABI_optimization_goals
  11              		.eabi_attribute 34, 1	@ Tag_CPU_unaligned_access
  12              		.eabi_attribute 18, 4	@ Tag_ABI_PCS_wchar_t
  13              		.file	"port.c"
  14              	@ GNU C17 (Arch Repository) version 13.2.0 (arm-none-eabi)
  15              	@	compiled by GNU C version 13.2.1 20230730, GMP version 6.2.1, MPFR version 4.2.0-p12, MPC version
  16              	
  17              	@ warning: GMP header version 6.2.1 differs from library version 6.3.0.
  18              	@ GGC heuristics: --param ggc-min-expand=100 --param ggc-min-heapsize=131072
  19              	@ options passed: -mcpu=cortex-m3 -mthumb -mfloat-abi=soft -march=armv7-m -g -gdwarf-2 -Os -fomit-f
  20              		.text
  21              	.Ltext0:
  22              		.cfi_sections	.debug_frame
  23              		.file 1 "../freertos/portable/GCC/ARM_CM3/port.c"
  24              		.align	1
  25              		.syntax unified
  26              		.thumb
  27              		.thumb_func
  28              		.type	prvTaskExitError, %function
  29              	prvTaskExitError:
  30              	.LFB6:
   1:../freertos/portable/GCC/ARM_CM3/port.c **** /*
   2:../freertos/portable/GCC/ARM_CM3/port.c ****  * FreeRTOS Kernel V10.2.1
   3:../freertos/portable/GCC/ARM_CM3/port.c ****  * Copyright (C) 2019 Amazon.com, Inc. or its affiliates.  All Rights Reserved.
   4:../freertos/portable/GCC/ARM_CM3/port.c ****  *
   5:../freertos/portable/GCC/ARM_CM3/port.c ****  * Permission is hereby granted, free of charge, to any person obtaining a copy of
   6:../freertos/portable/GCC/ARM_CM3/port.c ****  * this software and associated documentation files (the "Software"), to deal in
   7:../freertos/portable/GCC/ARM_CM3/port.c ****  * the Software without restriction, including without limitation the rights to
   8:../freertos/portable/GCC/ARM_CM3/port.c ****  * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of
   9:../freertos/portable/GCC/ARM_CM3/port.c ****  * the Software, and to permit persons to whom the Software is furnished to do so,
  10:../freertos/portable/GCC/ARM_CM3/port.c ****  * subject to the following conditions:
  11:../freertos/portable/GCC/ARM_CM3/port.c ****  *
  12:../freertos/portable/GCC/ARM_CM3/port.c ****  * The above copyright notice and this permission notice shall be included in all
  13:../freertos/portable/GCC/ARM_CM3/port.c ****  * copies or substantial portions of the Software.
  14:../freertos/portable/GCC/ARM_CM3/port.c ****  *
  15:../freertos/portable/GCC/ARM_CM3/port.c ****  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  16:../freertos/portable/GCC/ARM_CM3/port.c ****  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
  17:../freertos/portable/GCC/ARM_CM3/port.c ****  * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
  18:../freertos/portable/GCC/ARM_CM3/port.c ****  * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
  19:../freertos/portable/GCC/ARM_CM3/port.c ****  * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
  20:../freertos/portable/GCC/ARM_CM3/port.c ****  * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
  21:../freertos/portable/GCC/ARM_CM3/port.c ****  *
  22:../freertos/portable/GCC/ARM_CM3/port.c ****  * http://www.FreeRTOS.org
  23:../freertos/portable/GCC/ARM_CM3/port.c ****  * http://aws.amazon.com/freertos
  24:../freertos/portable/GCC/ARM_CM3/port.c ****  *
  25:../freertos/portable/GCC/ARM_CM3/port.c ****  * 1 tab == 4 spaces!
  26:../freertos/portable/GCC/ARM_CM3/port.c ****  */
  27:../freertos/portable/GCC/ARM_CM3/port.c **** 
ARM GAS  /tmp/ccIusuWx.s 			page 2


  28:../freertos/portable/GCC/ARM_CM3/port.c **** /*-----------------------------------------------------------
  29:../freertos/portable/GCC/ARM_CM3/port.c ****  * Implementation of functions defined in portable.h for the ARM CM3 port.
  30:../freertos/portable/GCC/ARM_CM3/port.c ****  *----------------------------------------------------------*/
  31:../freertos/portable/GCC/ARM_CM3/port.c **** 
  32:../freertos/portable/GCC/ARM_CM3/port.c **** /* Scheduler includes. */
  33:../freertos/portable/GCC/ARM_CM3/port.c **** #include "FreeRTOS.h"
  34:../freertos/portable/GCC/ARM_CM3/port.c **** #include "task.h"
  35:../freertos/portable/GCC/ARM_CM3/port.c **** 
  36:../freertos/portable/GCC/ARM_CM3/port.c **** /* For backward compatibility, ensure configKERNEL_INTERRUPT_PRIORITY is
  37:../freertos/portable/GCC/ARM_CM3/port.c **** defined.  The value should also ensure backward compatibility.
  38:../freertos/portable/GCC/ARM_CM3/port.c **** FreeRTOS.org versions prior to V4.4.0 did not include this definition. */
  39:../freertos/portable/GCC/ARM_CM3/port.c **** #ifndef configKERNEL_INTERRUPT_PRIORITY
  40:../freertos/portable/GCC/ARM_CM3/port.c **** 	#define configKERNEL_INTERRUPT_PRIORITY 255
  41:../freertos/portable/GCC/ARM_CM3/port.c **** #endif
  42:../freertos/portable/GCC/ARM_CM3/port.c **** 
  43:../freertos/portable/GCC/ARM_CM3/port.c **** #ifndef configSYSTICK_CLOCK_HZ
  44:../freertos/portable/GCC/ARM_CM3/port.c **** 	#define configSYSTICK_CLOCK_HZ configCPU_CLOCK_HZ
  45:../freertos/portable/GCC/ARM_CM3/port.c **** 	/* Ensure the SysTick is clocked at the same frequency as the core. */
  46:../freertos/portable/GCC/ARM_CM3/port.c **** 	#define portNVIC_SYSTICK_CLK_BIT	( 1UL << 2UL )
  47:../freertos/portable/GCC/ARM_CM3/port.c **** #else
  48:../freertos/portable/GCC/ARM_CM3/port.c **** 	/* The way the SysTick is clocked is not modified in case it is not the same
  49:../freertos/portable/GCC/ARM_CM3/port.c **** 	as the core. */
  50:../freertos/portable/GCC/ARM_CM3/port.c **** 	#define portNVIC_SYSTICK_CLK_BIT	( 0 )
  51:../freertos/portable/GCC/ARM_CM3/port.c **** #endif
  52:../freertos/portable/GCC/ARM_CM3/port.c **** 
  53:../freertos/portable/GCC/ARM_CM3/port.c **** /* Constants required to manipulate the core.  Registers first... */
  54:../freertos/portable/GCC/ARM_CM3/port.c **** #define portNVIC_SYSTICK_CTRL_REG			( * ( ( volatile uint32_t * ) 0xe000e010 ) )
  55:../freertos/portable/GCC/ARM_CM3/port.c **** #define portNVIC_SYSTICK_LOAD_REG			( * ( ( volatile uint32_t * ) 0xe000e014 ) )
  56:../freertos/portable/GCC/ARM_CM3/port.c **** #define portNVIC_SYSTICK_CURRENT_VALUE_REG	( * ( ( volatile uint32_t * ) 0xe000e018 ) )
  57:../freertos/portable/GCC/ARM_CM3/port.c **** #define portNVIC_SYSPRI2_REG				( * ( ( volatile uint32_t * ) 0xe000ed20 ) )
  58:../freertos/portable/GCC/ARM_CM3/port.c **** /* ...then bits in the registers. */
  59:../freertos/portable/GCC/ARM_CM3/port.c **** #define portNVIC_SYSTICK_INT_BIT			( 1UL << 1UL )
  60:../freertos/portable/GCC/ARM_CM3/port.c **** #define portNVIC_SYSTICK_ENABLE_BIT			( 1UL << 0UL )
  61:../freertos/portable/GCC/ARM_CM3/port.c **** #define portNVIC_SYSTICK_COUNT_FLAG_BIT		( 1UL << 16UL )
  62:../freertos/portable/GCC/ARM_CM3/port.c **** #define portNVIC_PENDSVCLEAR_BIT 			( 1UL << 27UL )
  63:../freertos/portable/GCC/ARM_CM3/port.c **** #define portNVIC_PEND_SYSTICK_CLEAR_BIT		( 1UL << 25UL )
  64:../freertos/portable/GCC/ARM_CM3/port.c **** 
  65:../freertos/portable/GCC/ARM_CM3/port.c **** #define portNVIC_PENDSV_PRI					( ( ( uint32_t ) configKERNEL_INTERRUPT_PRIORITY ) << 16UL )
  66:../freertos/portable/GCC/ARM_CM3/port.c **** #define portNVIC_SYSTICK_PRI				( ( ( uint32_t ) configKERNEL_INTERRUPT_PRIORITY ) << 24UL )
  67:../freertos/portable/GCC/ARM_CM3/port.c **** 
  68:../freertos/portable/GCC/ARM_CM3/port.c **** /* Constants required to check the validity of an interrupt priority. */
  69:../freertos/portable/GCC/ARM_CM3/port.c **** #define portFIRST_USER_INTERRUPT_NUMBER		( 16 )
  70:../freertos/portable/GCC/ARM_CM3/port.c **** #define portNVIC_IP_REGISTERS_OFFSET_16 	( 0xE000E3F0 )
  71:../freertos/portable/GCC/ARM_CM3/port.c **** #define portAIRCR_REG						( * ( ( volatile uint32_t * ) 0xE000ED0C ) )
  72:../freertos/portable/GCC/ARM_CM3/port.c **** #define portMAX_8_BIT_VALUE					( ( uint8_t ) 0xff )
  73:../freertos/portable/GCC/ARM_CM3/port.c **** #define portTOP_BIT_OF_BYTE					( ( uint8_t ) 0x80 )
  74:../freertos/portable/GCC/ARM_CM3/port.c **** #define portMAX_PRIGROUP_BITS				( ( uint8_t ) 7 )
  75:../freertos/portable/GCC/ARM_CM3/port.c **** #define portPRIORITY_GROUP_MASK				( 0x07UL << 8UL )
  76:../freertos/portable/GCC/ARM_CM3/port.c **** #define portPRIGROUP_SHIFT					( 8UL )
  77:../freertos/portable/GCC/ARM_CM3/port.c **** 
  78:../freertos/portable/GCC/ARM_CM3/port.c **** /* Masks off all bits but the VECTACTIVE bits in the ICSR register. */
  79:../freertos/portable/GCC/ARM_CM3/port.c **** #define portVECTACTIVE_MASK					( 0xFFUL )
  80:../freertos/portable/GCC/ARM_CM3/port.c **** 
  81:../freertos/portable/GCC/ARM_CM3/port.c **** /* Constants required to set up the initial stack. */
  82:../freertos/portable/GCC/ARM_CM3/port.c **** #define portINITIAL_XPSR					( 0x01000000UL )
  83:../freertos/portable/GCC/ARM_CM3/port.c **** 
  84:../freertos/portable/GCC/ARM_CM3/port.c **** /* The systick is a 24-bit counter. */
ARM GAS  /tmp/ccIusuWx.s 			page 3


  85:../freertos/portable/GCC/ARM_CM3/port.c **** #define portMAX_24_BIT_NUMBER				( 0xffffffUL )
  86:../freertos/portable/GCC/ARM_CM3/port.c **** 
  87:../freertos/portable/GCC/ARM_CM3/port.c **** /* A fiddle factor to estimate the number of SysTick counts that would have
  88:../freertos/portable/GCC/ARM_CM3/port.c **** occurred while the SysTick counter is stopped during tickless idle
  89:../freertos/portable/GCC/ARM_CM3/port.c **** calculations. */
  90:../freertos/portable/GCC/ARM_CM3/port.c **** #define portMISSED_COUNTS_FACTOR			( 45UL )
  91:../freertos/portable/GCC/ARM_CM3/port.c **** 
  92:../freertos/portable/GCC/ARM_CM3/port.c **** /* For strict compliance with the Cortex-M spec the task start address should
  93:../freertos/portable/GCC/ARM_CM3/port.c **** have bit-0 clear, as it is loaded into the PC on exit from an ISR. */
  94:../freertos/portable/GCC/ARM_CM3/port.c **** #define portSTART_ADDRESS_MASK				( ( StackType_t ) 0xfffffffeUL )
  95:../freertos/portable/GCC/ARM_CM3/port.c **** 
  96:../freertos/portable/GCC/ARM_CM3/port.c **** /* Let the user override the pre-loading of the initial LR with the address of
  97:../freertos/portable/GCC/ARM_CM3/port.c **** prvTaskExitError() in case it messes up unwinding of the stack in the
  98:../freertos/portable/GCC/ARM_CM3/port.c **** debugger. */
  99:../freertos/portable/GCC/ARM_CM3/port.c **** #ifdef configTASK_RETURN_ADDRESS
 100:../freertos/portable/GCC/ARM_CM3/port.c **** 	#define portTASK_RETURN_ADDRESS	configTASK_RETURN_ADDRESS
 101:../freertos/portable/GCC/ARM_CM3/port.c **** #else
 102:../freertos/portable/GCC/ARM_CM3/port.c **** 	#define portTASK_RETURN_ADDRESS	prvTaskExitError
 103:../freertos/portable/GCC/ARM_CM3/port.c **** #endif
 104:../freertos/portable/GCC/ARM_CM3/port.c **** 
 105:../freertos/portable/GCC/ARM_CM3/port.c **** /*
 106:../freertos/portable/GCC/ARM_CM3/port.c ****  * Setup the timer to generate the tick interrupts.  The implementation in this
 107:../freertos/portable/GCC/ARM_CM3/port.c ****  * file is weak to allow application writers to change the timer used to
 108:../freertos/portable/GCC/ARM_CM3/port.c ****  * generate the tick interrupt.
 109:../freertos/portable/GCC/ARM_CM3/port.c ****  */
 110:../freertos/portable/GCC/ARM_CM3/port.c **** void vPortSetupTimerInterrupt( void );
 111:../freertos/portable/GCC/ARM_CM3/port.c **** 
 112:../freertos/portable/GCC/ARM_CM3/port.c **** /*
 113:../freertos/portable/GCC/ARM_CM3/port.c ****  * Exception handlers.
 114:../freertos/portable/GCC/ARM_CM3/port.c ****  */
 115:../freertos/portable/GCC/ARM_CM3/port.c **** void xPortPendSVHandler( void ) __attribute__ (( naked ));
 116:../freertos/portable/GCC/ARM_CM3/port.c **** void xPortSysTickHandler( void );
 117:../freertos/portable/GCC/ARM_CM3/port.c **** void vPortSVCHandler( void ) __attribute__ (( naked ));
 118:../freertos/portable/GCC/ARM_CM3/port.c **** 
 119:../freertos/portable/GCC/ARM_CM3/port.c **** /*
 120:../freertos/portable/GCC/ARM_CM3/port.c ****  * Start first task is a separate function so it can be tested in isolation.
 121:../freertos/portable/GCC/ARM_CM3/port.c ****  */
 122:../freertos/portable/GCC/ARM_CM3/port.c **** static void prvPortStartFirstTask( void ) __attribute__ (( naked ));
 123:../freertos/portable/GCC/ARM_CM3/port.c **** 
 124:../freertos/portable/GCC/ARM_CM3/port.c **** /*
 125:../freertos/portable/GCC/ARM_CM3/port.c ****  * Used to catch tasks that attempt to return from their implementing function.
 126:../freertos/portable/GCC/ARM_CM3/port.c ****  */
 127:../freertos/portable/GCC/ARM_CM3/port.c **** static void prvTaskExitError( void );
 128:../freertos/portable/GCC/ARM_CM3/port.c **** 
 129:../freertos/portable/GCC/ARM_CM3/port.c **** /*-----------------------------------------------------------*/
 130:../freertos/portable/GCC/ARM_CM3/port.c **** 
 131:../freertos/portable/GCC/ARM_CM3/port.c **** /* Each task maintains its own interrupt status in the critical nesting
 132:../freertos/portable/GCC/ARM_CM3/port.c **** variable. */
 133:../freertos/portable/GCC/ARM_CM3/port.c **** static UBaseType_t uxCriticalNesting = 0xaaaaaaaa;
 134:../freertos/portable/GCC/ARM_CM3/port.c **** 
 135:../freertos/portable/GCC/ARM_CM3/port.c **** /*
 136:../freertos/portable/GCC/ARM_CM3/port.c ****  * The number of SysTick increments that make up one tick period.
 137:../freertos/portable/GCC/ARM_CM3/port.c ****  */
 138:../freertos/portable/GCC/ARM_CM3/port.c **** #if( configUSE_TICKLESS_IDLE == 1 )
 139:../freertos/portable/GCC/ARM_CM3/port.c **** 	static uint32_t ulTimerCountsForOneTick = 0;
 140:../freertos/portable/GCC/ARM_CM3/port.c **** #endif /* configUSE_TICKLESS_IDLE */
 141:../freertos/portable/GCC/ARM_CM3/port.c **** 
ARM GAS  /tmp/ccIusuWx.s 			page 4


 142:../freertos/portable/GCC/ARM_CM3/port.c **** /*
 143:../freertos/portable/GCC/ARM_CM3/port.c ****  * The maximum number of tick periods that can be suppressed is limited by the
 144:../freertos/portable/GCC/ARM_CM3/port.c ****  * 24 bit resolution of the SysTick timer.
 145:../freertos/portable/GCC/ARM_CM3/port.c ****  */
 146:../freertos/portable/GCC/ARM_CM3/port.c **** #if( configUSE_TICKLESS_IDLE == 1 )
 147:../freertos/portable/GCC/ARM_CM3/port.c **** 	static uint32_t xMaximumPossibleSuppressedTicks = 0;
 148:../freertos/portable/GCC/ARM_CM3/port.c **** #endif /* configUSE_TICKLESS_IDLE */
 149:../freertos/portable/GCC/ARM_CM3/port.c **** 
 150:../freertos/portable/GCC/ARM_CM3/port.c **** /*
 151:../freertos/portable/GCC/ARM_CM3/port.c ****  * Compensate for the CPU cycles that pass while the SysTick is stopped (low
 152:../freertos/portable/GCC/ARM_CM3/port.c ****  * power functionality only.
 153:../freertos/portable/GCC/ARM_CM3/port.c ****  */
 154:../freertos/portable/GCC/ARM_CM3/port.c **** #if( configUSE_TICKLESS_IDLE == 1 )
 155:../freertos/portable/GCC/ARM_CM3/port.c **** 	static uint32_t ulStoppedTimerCompensation = 0;
 156:../freertos/portable/GCC/ARM_CM3/port.c **** #endif /* configUSE_TICKLESS_IDLE */
 157:../freertos/portable/GCC/ARM_CM3/port.c **** 
 158:../freertos/portable/GCC/ARM_CM3/port.c **** /*
 159:../freertos/portable/GCC/ARM_CM3/port.c ****  * Used by the portASSERT_IF_INTERRUPT_PRIORITY_INVALID() macro to ensure
 160:../freertos/portable/GCC/ARM_CM3/port.c ****  * FreeRTOS API functions are not called from interrupts that have been assigned
 161:../freertos/portable/GCC/ARM_CM3/port.c ****  * a priority above configMAX_SYSCALL_INTERRUPT_PRIORITY.
 162:../freertos/portable/GCC/ARM_CM3/port.c ****  */
 163:../freertos/portable/GCC/ARM_CM3/port.c **** #if( configASSERT_DEFINED == 1 )
 164:../freertos/portable/GCC/ARM_CM3/port.c **** 	 static uint8_t ucMaxSysCallPriority = 0;
 165:../freertos/portable/GCC/ARM_CM3/port.c **** 	 static uint32_t ulMaxPRIGROUPValue = 0;
 166:../freertos/portable/GCC/ARM_CM3/port.c **** 	 static const volatile uint8_t * const pcInterruptPriorityRegisters = ( const volatile uint8_t * c
 167:../freertos/portable/GCC/ARM_CM3/port.c **** #endif /* configASSERT_DEFINED */
 168:../freertos/portable/GCC/ARM_CM3/port.c **** 
 169:../freertos/portable/GCC/ARM_CM3/port.c **** /*-----------------------------------------------------------*/
 170:../freertos/portable/GCC/ARM_CM3/port.c **** 
 171:../freertos/portable/GCC/ARM_CM3/port.c **** /*
 172:../freertos/portable/GCC/ARM_CM3/port.c ****  * See header file for description.
 173:../freertos/portable/GCC/ARM_CM3/port.c ****  */
 174:../freertos/portable/GCC/ARM_CM3/port.c **** StackType_t *pxPortInitialiseStack( StackType_t *pxTopOfStack, TaskFunction_t pxCode, void *pvParam
 175:../freertos/portable/GCC/ARM_CM3/port.c **** {
 176:../freertos/portable/GCC/ARM_CM3/port.c **** 	/* Simulate the stack frame as it would be created by a context switch
 177:../freertos/portable/GCC/ARM_CM3/port.c **** 	interrupt. */
 178:../freertos/portable/GCC/ARM_CM3/port.c **** 	pxTopOfStack--; /* Offset added to account for the way the MCU uses the stack on entry/exit of int
 179:../freertos/portable/GCC/ARM_CM3/port.c **** 	*pxTopOfStack = portINITIAL_XPSR;	/* xPSR */
 180:../freertos/portable/GCC/ARM_CM3/port.c **** 	pxTopOfStack--;
 181:../freertos/portable/GCC/ARM_CM3/port.c **** 	*pxTopOfStack = ( ( StackType_t ) pxCode ) & portSTART_ADDRESS_MASK;	/* PC */
 182:../freertos/portable/GCC/ARM_CM3/port.c **** 	pxTopOfStack--;
 183:../freertos/portable/GCC/ARM_CM3/port.c **** 	*pxTopOfStack = ( StackType_t ) portTASK_RETURN_ADDRESS;	/* LR */
 184:../freertos/portable/GCC/ARM_CM3/port.c **** 	pxTopOfStack -= 5;	/* R12, R3, R2 and R1. */
 185:../freertos/portable/GCC/ARM_CM3/port.c **** 	*pxTopOfStack = ( StackType_t ) pvParameters;	/* R0 */
 186:../freertos/portable/GCC/ARM_CM3/port.c **** 	pxTopOfStack -= 8;	/* R11, R10, R9, R8, R7, R6, R5 and R4. */
 187:../freertos/portable/GCC/ARM_CM3/port.c **** 
 188:../freertos/portable/GCC/ARM_CM3/port.c **** 	return pxTopOfStack;
 189:../freertos/portable/GCC/ARM_CM3/port.c **** }
 190:../freertos/portable/GCC/ARM_CM3/port.c **** /*-----------------------------------------------------------*/
 191:../freertos/portable/GCC/ARM_CM3/port.c **** 
 192:../freertos/portable/GCC/ARM_CM3/port.c **** static void prvTaskExitError( void )
 193:../freertos/portable/GCC/ARM_CM3/port.c **** {
  31              		.loc 1 193 1 view -0
  32              		.cfi_startproc
  33              		@ args = 0, pretend = 0, frame = 8
  34              		@ frame_needed = 0, uses_anonymous_args = 0
  35              		@ link register save eliminated.
ARM GAS  /tmp/ccIusuWx.s 			page 5


 194:../freertos/portable/GCC/ARM_CM3/port.c **** volatile uint32_t ulDummy = 0UL;
  36              		.loc 1 194 1 view .LVU1
  37              	@ ../freertos/portable/GCC/ARM_CM3/port.c:194: volatile uint32_t ulDummy = 0UL;
  38              		.loc 1 194 19 is_stmt 0 view .LVU2
  39 0000 0023     		movs	r3, #0	@ tmp116,
  40              	@ ../freertos/portable/GCC/ARM_CM3/port.c:193: {
 193:../freertos/portable/GCC/ARM_CM3/port.c **** volatile uint32_t ulDummy = 0UL;
  41              		.loc 1 193 1 view .LVU3
  42 0002 82B0     		sub	sp, sp, #8	@,,
  43              	.LCFI0:
  44              		.cfi_def_cfa_offset 8
  45              	@ ../freertos/portable/GCC/ARM_CM3/port.c:194: volatile uint32_t ulDummy = 0UL;
  46              		.loc 1 194 19 view .LVU4
  47 0004 0193     		str	r3, [sp, #4]	@ tmp116, ulDummy
 195:../freertos/portable/GCC/ARM_CM3/port.c **** 
 196:../freertos/portable/GCC/ARM_CM3/port.c **** 	/* A function that implements a task must not exit or attempt to return to
 197:../freertos/portable/GCC/ARM_CM3/port.c **** 	its caller as there is nothing to return to.  If a task wants to exit it
 198:../freertos/portable/GCC/ARM_CM3/port.c **** 	should instead call vTaskDelete( NULL ).
 199:../freertos/portable/GCC/ARM_CM3/port.c **** 
 200:../freertos/portable/GCC/ARM_CM3/port.c **** 	Artificially force an assert() to be triggered if configASSERT() is
 201:../freertos/portable/GCC/ARM_CM3/port.c **** 	defined, then stop here so application writers can catch the error. */
 202:../freertos/portable/GCC/ARM_CM3/port.c **** 	configASSERT( uxCriticalNesting == ~0UL );
  48              		.loc 1 202 43 is_stmt 1 view .LVU5
 203:../freertos/portable/GCC/ARM_CM3/port.c **** 	portDISABLE_INTERRUPTS();
  49              		.loc 1 203 2 view .LVU6
  50              	.LBB12:
  51              	.LBI12:
  52              		.file 2 "../freertos/portable/GCC/ARM_CM3/portmacro.h"
   1:../freertos/portable/GCC/ARM_CM3/portmacro.h **** /*
   2:../freertos/portable/GCC/ARM_CM3/portmacro.h ****  * FreeRTOS Kernel V10.2.1
   3:../freertos/portable/GCC/ARM_CM3/portmacro.h ****  * Copyright (C) 2019 Amazon.com, Inc. or its affiliates.  All Rights Reserved.
   4:../freertos/portable/GCC/ARM_CM3/portmacro.h ****  *
   5:../freertos/portable/GCC/ARM_CM3/portmacro.h ****  * Permission is hereby granted, free of charge, to any person obtaining a copy of
   6:../freertos/portable/GCC/ARM_CM3/portmacro.h ****  * this software and associated documentation files (the "Software"), to deal in
   7:../freertos/portable/GCC/ARM_CM3/portmacro.h ****  * the Software without restriction, including without limitation the rights to
   8:../freertos/portable/GCC/ARM_CM3/portmacro.h ****  * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of
   9:../freertos/portable/GCC/ARM_CM3/portmacro.h ****  * the Software, and to permit persons to whom the Software is furnished to do so,
  10:../freertos/portable/GCC/ARM_CM3/portmacro.h ****  * subject to the following conditions:
  11:../freertos/portable/GCC/ARM_CM3/portmacro.h ****  *
  12:../freertos/portable/GCC/ARM_CM3/portmacro.h ****  * The above copyright notice and this permission notice shall be included in all
  13:../freertos/portable/GCC/ARM_CM3/portmacro.h ****  * copies or substantial portions of the Software.
  14:../freertos/portable/GCC/ARM_CM3/portmacro.h ****  *
  15:../freertos/portable/GCC/ARM_CM3/portmacro.h ****  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  16:../freertos/portable/GCC/ARM_CM3/portmacro.h ****  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
  17:../freertos/portable/GCC/ARM_CM3/portmacro.h ****  * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
  18:../freertos/portable/GCC/ARM_CM3/portmacro.h ****  * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
  19:../freertos/portable/GCC/ARM_CM3/portmacro.h ****  * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
  20:../freertos/portable/GCC/ARM_CM3/portmacro.h ****  * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
  21:../freertos/portable/GCC/ARM_CM3/portmacro.h ****  *
  22:../freertos/portable/GCC/ARM_CM3/portmacro.h ****  * http://www.FreeRTOS.org
  23:../freertos/portable/GCC/ARM_CM3/portmacro.h ****  * http://aws.amazon.com/freertos
  24:../freertos/portable/GCC/ARM_CM3/portmacro.h ****  *
  25:../freertos/portable/GCC/ARM_CM3/portmacro.h ****  * 1 tab == 4 spaces!
  26:../freertos/portable/GCC/ARM_CM3/portmacro.h ****  */
  27:../freertos/portable/GCC/ARM_CM3/portmacro.h **** 
  28:../freertos/portable/GCC/ARM_CM3/portmacro.h **** 
  29:../freertos/portable/GCC/ARM_CM3/portmacro.h **** #ifndef PORTMACRO_H
ARM GAS  /tmp/ccIusuWx.s 			page 6


  30:../freertos/portable/GCC/ARM_CM3/portmacro.h **** #define PORTMACRO_H
  31:../freertos/portable/GCC/ARM_CM3/portmacro.h **** 
  32:../freertos/portable/GCC/ARM_CM3/portmacro.h **** #ifdef __cplusplus
  33:../freertos/portable/GCC/ARM_CM3/portmacro.h **** extern "C" {
  34:../freertos/portable/GCC/ARM_CM3/portmacro.h **** #endif
  35:../freertos/portable/GCC/ARM_CM3/portmacro.h **** 
  36:../freertos/portable/GCC/ARM_CM3/portmacro.h **** /*-----------------------------------------------------------
  37:../freertos/portable/GCC/ARM_CM3/portmacro.h ****  * Port specific definitions.
  38:../freertos/portable/GCC/ARM_CM3/portmacro.h ****  *
  39:../freertos/portable/GCC/ARM_CM3/portmacro.h ****  * The settings in this file configure FreeRTOS correctly for the
  40:../freertos/portable/GCC/ARM_CM3/portmacro.h ****  * given hardware and compiler.
  41:../freertos/portable/GCC/ARM_CM3/portmacro.h ****  *
  42:../freertos/portable/GCC/ARM_CM3/portmacro.h ****  * These settings should not be altered.
  43:../freertos/portable/GCC/ARM_CM3/portmacro.h ****  *-----------------------------------------------------------
  44:../freertos/portable/GCC/ARM_CM3/portmacro.h ****  */
  45:../freertos/portable/GCC/ARM_CM3/portmacro.h **** 
  46:../freertos/portable/GCC/ARM_CM3/portmacro.h **** /* Type definitions. */
  47:../freertos/portable/GCC/ARM_CM3/portmacro.h **** #define portCHAR		char
  48:../freertos/portable/GCC/ARM_CM3/portmacro.h **** #define portFLOAT		float
  49:../freertos/portable/GCC/ARM_CM3/portmacro.h **** #define portDOUBLE		double
  50:../freertos/portable/GCC/ARM_CM3/portmacro.h **** #define portLONG		long
  51:../freertos/portable/GCC/ARM_CM3/portmacro.h **** #define portSHORT		short
  52:../freertos/portable/GCC/ARM_CM3/portmacro.h **** #define portSTACK_TYPE	uint32_t
  53:../freertos/portable/GCC/ARM_CM3/portmacro.h **** #define portBASE_TYPE	long
  54:../freertos/portable/GCC/ARM_CM3/portmacro.h **** 
  55:../freertos/portable/GCC/ARM_CM3/portmacro.h **** typedef portSTACK_TYPE StackType_t;
  56:../freertos/portable/GCC/ARM_CM3/portmacro.h **** typedef long BaseType_t;
  57:../freertos/portable/GCC/ARM_CM3/portmacro.h **** typedef unsigned long UBaseType_t;
  58:../freertos/portable/GCC/ARM_CM3/portmacro.h **** 
  59:../freertos/portable/GCC/ARM_CM3/portmacro.h **** #if( configUSE_16_BIT_TICKS == 1 )
  60:../freertos/portable/GCC/ARM_CM3/portmacro.h **** 	typedef uint16_t TickType_t;
  61:../freertos/portable/GCC/ARM_CM3/portmacro.h **** 	#define portMAX_DELAY ( TickType_t ) 0xffff
  62:../freertos/portable/GCC/ARM_CM3/portmacro.h **** #else
  63:../freertos/portable/GCC/ARM_CM3/portmacro.h **** 	typedef uint32_t TickType_t;
  64:../freertos/portable/GCC/ARM_CM3/portmacro.h **** 	#define portMAX_DELAY ( TickType_t ) 0xffffffffUL
  65:../freertos/portable/GCC/ARM_CM3/portmacro.h **** 
  66:../freertos/portable/GCC/ARM_CM3/portmacro.h **** 	/* 32-bit tick type on a 32-bit architecture, so reads of the tick count do
  67:../freertos/portable/GCC/ARM_CM3/portmacro.h **** 	not need to be guarded with a critical section. */
  68:../freertos/portable/GCC/ARM_CM3/portmacro.h **** 	#define portTICK_TYPE_IS_ATOMIC 1
  69:../freertos/portable/GCC/ARM_CM3/portmacro.h **** #endif
  70:../freertos/portable/GCC/ARM_CM3/portmacro.h **** /*-----------------------------------------------------------*/
  71:../freertos/portable/GCC/ARM_CM3/portmacro.h **** 
  72:../freertos/portable/GCC/ARM_CM3/portmacro.h **** /* Architecture specifics. */
  73:../freertos/portable/GCC/ARM_CM3/portmacro.h **** #define portSTACK_GROWTH			( -1 )
  74:../freertos/portable/GCC/ARM_CM3/portmacro.h **** #define portTICK_PERIOD_MS			( ( TickType_t ) 1000 / configTICK_RATE_HZ )
  75:../freertos/portable/GCC/ARM_CM3/portmacro.h **** #define portBYTE_ALIGNMENT			8
  76:../freertos/portable/GCC/ARM_CM3/portmacro.h **** /*-----------------------------------------------------------*/
  77:../freertos/portable/GCC/ARM_CM3/portmacro.h **** 
  78:../freertos/portable/GCC/ARM_CM3/portmacro.h **** /* Scheduler utilities. */
  79:../freertos/portable/GCC/ARM_CM3/portmacro.h **** #define portYIELD() 															\
  80:../freertos/portable/GCC/ARM_CM3/portmacro.h **** {																				\
  81:../freertos/portable/GCC/ARM_CM3/portmacro.h **** 	/* Set a PendSV to request a context switch. */								\
  82:../freertos/portable/GCC/ARM_CM3/portmacro.h **** 	portNVIC_INT_CTRL_REG = portNVIC_PENDSVSET_BIT;								\
  83:../freertos/portable/GCC/ARM_CM3/portmacro.h **** 																				\
  84:../freertos/portable/GCC/ARM_CM3/portmacro.h **** 	/* Barriers are normally not required but do ensure the code is completely	\
  85:../freertos/portable/GCC/ARM_CM3/portmacro.h **** 	within the specified behaviour for the architecture. */						\
  86:../freertos/portable/GCC/ARM_CM3/portmacro.h **** 	__asm volatile( "dsb" ::: "memory" );										\
ARM GAS  /tmp/ccIusuWx.s 			page 7


  87:../freertos/portable/GCC/ARM_CM3/portmacro.h **** 	__asm volatile( "isb" );													\
  88:../freertos/portable/GCC/ARM_CM3/portmacro.h **** }
  89:../freertos/portable/GCC/ARM_CM3/portmacro.h **** 
  90:../freertos/portable/GCC/ARM_CM3/portmacro.h **** #define portNVIC_INT_CTRL_REG		( * ( ( volatile uint32_t * ) 0xe000ed04 ) )
  91:../freertos/portable/GCC/ARM_CM3/portmacro.h **** #define portNVIC_PENDSVSET_BIT		( 1UL << 28UL )
  92:../freertos/portable/GCC/ARM_CM3/portmacro.h **** #define portEND_SWITCHING_ISR( xSwitchRequired ) if( xSwitchRequired != pdFALSE ) portYIELD()
  93:../freertos/portable/GCC/ARM_CM3/portmacro.h **** #define portYIELD_FROM_ISR( x ) portEND_SWITCHING_ISR( x )
  94:../freertos/portable/GCC/ARM_CM3/portmacro.h **** /*-----------------------------------------------------------*/
  95:../freertos/portable/GCC/ARM_CM3/portmacro.h **** 
  96:../freertos/portable/GCC/ARM_CM3/portmacro.h **** /* Critical section management. */
  97:../freertos/portable/GCC/ARM_CM3/portmacro.h **** extern void vPortEnterCritical( void );
  98:../freertos/portable/GCC/ARM_CM3/portmacro.h **** extern void vPortExitCritical( void );
  99:../freertos/portable/GCC/ARM_CM3/portmacro.h **** #define portSET_INTERRUPT_MASK_FROM_ISR()		ulPortRaiseBASEPRI()
 100:../freertos/portable/GCC/ARM_CM3/portmacro.h **** #define portCLEAR_INTERRUPT_MASK_FROM_ISR(x)	vPortSetBASEPRI(x)
 101:../freertos/portable/GCC/ARM_CM3/portmacro.h **** #define portDISABLE_INTERRUPTS()				vPortRaiseBASEPRI()
 102:../freertos/portable/GCC/ARM_CM3/portmacro.h **** #define portENABLE_INTERRUPTS()					vPortSetBASEPRI(0)
 103:../freertos/portable/GCC/ARM_CM3/portmacro.h **** #define portENTER_CRITICAL()					vPortEnterCritical()
 104:../freertos/portable/GCC/ARM_CM3/portmacro.h **** #define portEXIT_CRITICAL()						vPortExitCritical()
 105:../freertos/portable/GCC/ARM_CM3/portmacro.h **** 
 106:../freertos/portable/GCC/ARM_CM3/portmacro.h **** /*-----------------------------------------------------------*/
 107:../freertos/portable/GCC/ARM_CM3/portmacro.h **** 
 108:../freertos/portable/GCC/ARM_CM3/portmacro.h **** /* Task function macros as described on the FreeRTOS.org WEB site.  These are
 109:../freertos/portable/GCC/ARM_CM3/portmacro.h **** not necessary for to use this port.  They are defined so the common demo files
 110:../freertos/portable/GCC/ARM_CM3/portmacro.h **** (which build with all the ports) will build. */
 111:../freertos/portable/GCC/ARM_CM3/portmacro.h **** #define portTASK_FUNCTION_PROTO( vFunction, pvParameters ) void vFunction( void *pvParameters )
 112:../freertos/portable/GCC/ARM_CM3/portmacro.h **** #define portTASK_FUNCTION( vFunction, pvParameters ) void vFunction( void *pvParameters )
 113:../freertos/portable/GCC/ARM_CM3/portmacro.h **** /*-----------------------------------------------------------*/
 114:../freertos/portable/GCC/ARM_CM3/portmacro.h **** 
 115:../freertos/portable/GCC/ARM_CM3/portmacro.h **** /* Tickless idle/low power functionality. */
 116:../freertos/portable/GCC/ARM_CM3/portmacro.h **** #ifndef portSUPPRESS_TICKS_AND_SLEEP
 117:../freertos/portable/GCC/ARM_CM3/portmacro.h **** 	extern void vPortSuppressTicksAndSleep( TickType_t xExpectedIdleTime );
 118:../freertos/portable/GCC/ARM_CM3/portmacro.h **** 	#define portSUPPRESS_TICKS_AND_SLEEP( xExpectedIdleTime ) vPortSuppressTicksAndSleep( xExpectedIdl
 119:../freertos/portable/GCC/ARM_CM3/portmacro.h **** #endif
 120:../freertos/portable/GCC/ARM_CM3/portmacro.h **** /*-----------------------------------------------------------*/
 121:../freertos/portable/GCC/ARM_CM3/portmacro.h **** 
 122:../freertos/portable/GCC/ARM_CM3/portmacro.h **** /* Architecture specific optimisations. */
 123:../freertos/portable/GCC/ARM_CM3/portmacro.h **** #ifndef configUSE_PORT_OPTIMISED_TASK_SELECTION
 124:../freertos/portable/GCC/ARM_CM3/portmacro.h **** 	#define configUSE_PORT_OPTIMISED_TASK_SELECTION 1
 125:../freertos/portable/GCC/ARM_CM3/portmacro.h **** #endif
 126:../freertos/portable/GCC/ARM_CM3/portmacro.h **** 
 127:../freertos/portable/GCC/ARM_CM3/portmacro.h **** #if configUSE_PORT_OPTIMISED_TASK_SELECTION == 1
 128:../freertos/portable/GCC/ARM_CM3/portmacro.h **** 
 129:../freertos/portable/GCC/ARM_CM3/portmacro.h **** 	/* Generic helper function. */
 130:../freertos/portable/GCC/ARM_CM3/portmacro.h **** 	__attribute__( ( always_inline ) ) static inline uint8_t ucPortCountLeadingZeros( uint32_t ulBitma
 131:../freertos/portable/GCC/ARM_CM3/portmacro.h **** 	{
 132:../freertos/portable/GCC/ARM_CM3/portmacro.h **** 	uint8_t ucReturn;
 133:../freertos/portable/GCC/ARM_CM3/portmacro.h **** 
 134:../freertos/portable/GCC/ARM_CM3/portmacro.h **** 		__asm volatile ( "clz %0, %1" : "=r" ( ucReturn ) : "r" ( ulBitmap ) : "memory" );
 135:../freertos/portable/GCC/ARM_CM3/portmacro.h **** 		return ucReturn;
 136:../freertos/portable/GCC/ARM_CM3/portmacro.h **** 	}
 137:../freertos/portable/GCC/ARM_CM3/portmacro.h **** 
 138:../freertos/portable/GCC/ARM_CM3/portmacro.h **** 	/* Check the configuration. */
 139:../freertos/portable/GCC/ARM_CM3/portmacro.h **** 	#if( configMAX_PRIORITIES > 32 )
 140:../freertos/portable/GCC/ARM_CM3/portmacro.h **** 		#error configUSE_PORT_OPTIMISED_TASK_SELECTION can only be set to 1 when configMAX_PRIORITIES is 
 141:../freertos/portable/GCC/ARM_CM3/portmacro.h **** 	#endif
 142:../freertos/portable/GCC/ARM_CM3/portmacro.h **** 
 143:../freertos/portable/GCC/ARM_CM3/portmacro.h **** 	/* Store/clear the ready priorities in a bit map. */
ARM GAS  /tmp/ccIusuWx.s 			page 8


 144:../freertos/portable/GCC/ARM_CM3/portmacro.h **** 	#define portRECORD_READY_PRIORITY( uxPriority, uxReadyPriorities ) ( uxReadyPriorities ) |= ( 1UL 
 145:../freertos/portable/GCC/ARM_CM3/portmacro.h **** 	#define portRESET_READY_PRIORITY( uxPriority, uxReadyPriorities ) ( uxReadyPriorities ) &= ~( 1UL 
 146:../freertos/portable/GCC/ARM_CM3/portmacro.h **** 
 147:../freertos/portable/GCC/ARM_CM3/portmacro.h **** 	/*-----------------------------------------------------------*/
 148:../freertos/portable/GCC/ARM_CM3/portmacro.h **** 
 149:../freertos/portable/GCC/ARM_CM3/portmacro.h **** 	#define portGET_HIGHEST_PRIORITY( uxTopPriority, uxReadyPriorities ) uxTopPriority = ( 31UL - ( ui
 150:../freertos/portable/GCC/ARM_CM3/portmacro.h **** 
 151:../freertos/portable/GCC/ARM_CM3/portmacro.h **** #endif /* configUSE_PORT_OPTIMISED_TASK_SELECTION */
 152:../freertos/portable/GCC/ARM_CM3/portmacro.h **** 
 153:../freertos/portable/GCC/ARM_CM3/portmacro.h **** /*-----------------------------------------------------------*/
 154:../freertos/portable/GCC/ARM_CM3/portmacro.h **** 
 155:../freertos/portable/GCC/ARM_CM3/portmacro.h **** #ifdef configASSERT
 156:../freertos/portable/GCC/ARM_CM3/portmacro.h **** 	void vPortValidateInterruptPriority( void );
 157:../freertos/portable/GCC/ARM_CM3/portmacro.h **** 	#define portASSERT_IF_INTERRUPT_PRIORITY_INVALID() 	vPortValidateInterruptPriority()
 158:../freertos/portable/GCC/ARM_CM3/portmacro.h **** #endif
 159:../freertos/portable/GCC/ARM_CM3/portmacro.h **** 
 160:../freertos/portable/GCC/ARM_CM3/portmacro.h **** /* portNOP() is not required by this port. */
 161:../freertos/portable/GCC/ARM_CM3/portmacro.h **** #define portNOP()
 162:../freertos/portable/GCC/ARM_CM3/portmacro.h **** 
 163:../freertos/portable/GCC/ARM_CM3/portmacro.h **** #define portINLINE	__inline
 164:../freertos/portable/GCC/ARM_CM3/portmacro.h **** 
 165:../freertos/portable/GCC/ARM_CM3/portmacro.h **** #ifndef portFORCE_INLINE
 166:../freertos/portable/GCC/ARM_CM3/portmacro.h **** 	#define portFORCE_INLINE inline __attribute__(( always_inline))
 167:../freertos/portable/GCC/ARM_CM3/portmacro.h **** #endif
 168:../freertos/portable/GCC/ARM_CM3/portmacro.h **** 
 169:../freertos/portable/GCC/ARM_CM3/portmacro.h **** portFORCE_INLINE static BaseType_t xPortIsInsideInterrupt( void )
 170:../freertos/portable/GCC/ARM_CM3/portmacro.h **** {
 171:../freertos/portable/GCC/ARM_CM3/portmacro.h **** uint32_t ulCurrentInterrupt;
 172:../freertos/portable/GCC/ARM_CM3/portmacro.h **** BaseType_t xReturn;
 173:../freertos/portable/GCC/ARM_CM3/portmacro.h **** 
 174:../freertos/portable/GCC/ARM_CM3/portmacro.h **** 	/* Obtain the number of the currently executing interrupt. */
 175:../freertos/portable/GCC/ARM_CM3/portmacro.h **** 	__asm volatile( "mrs %0, ipsr" : "=r"( ulCurrentInterrupt ) :: "memory" );
 176:../freertos/portable/GCC/ARM_CM3/portmacro.h **** 
 177:../freertos/portable/GCC/ARM_CM3/portmacro.h **** 	if( ulCurrentInterrupt == 0 )
 178:../freertos/portable/GCC/ARM_CM3/portmacro.h **** 	{
 179:../freertos/portable/GCC/ARM_CM3/portmacro.h **** 		xReturn = pdFALSE;
 180:../freertos/portable/GCC/ARM_CM3/portmacro.h **** 	}
 181:../freertos/portable/GCC/ARM_CM3/portmacro.h **** 	else
 182:../freertos/portable/GCC/ARM_CM3/portmacro.h **** 	{
 183:../freertos/portable/GCC/ARM_CM3/portmacro.h **** 		xReturn = pdTRUE;
 184:../freertos/portable/GCC/ARM_CM3/portmacro.h **** 	}
 185:../freertos/portable/GCC/ARM_CM3/portmacro.h **** 
 186:../freertos/portable/GCC/ARM_CM3/portmacro.h **** 	return xReturn;
 187:../freertos/portable/GCC/ARM_CM3/portmacro.h **** }
 188:../freertos/portable/GCC/ARM_CM3/portmacro.h **** 
 189:../freertos/portable/GCC/ARM_CM3/portmacro.h **** /*-----------------------------------------------------------*/
 190:../freertos/portable/GCC/ARM_CM3/portmacro.h **** 
 191:../freertos/portable/GCC/ARM_CM3/portmacro.h **** portFORCE_INLINE static void vPortRaiseBASEPRI( void )
  53              		.loc 2 191 30 view .LVU7
  54              	.LBB13:
 192:../freertos/portable/GCC/ARM_CM3/portmacro.h **** {
 193:../freertos/portable/GCC/ARM_CM3/portmacro.h **** uint32_t ulNewBASEPRI;
  55              		.loc 2 193 1 view .LVU8
 194:../freertos/portable/GCC/ARM_CM3/portmacro.h **** 
 195:../freertos/portable/GCC/ARM_CM3/portmacro.h **** 	__asm volatile
  56              		.loc 2 195 2 view .LVU9
  57              		.syntax unified
ARM GAS  /tmp/ccIusuWx.s 			page 9


  58              	@ 195 "../freertos/portable/GCC/ARM_CM3/portmacro.h" 1
  59 0006 4FF01003 			mov r3, #16													@ ulNewBASEPRI,
  60 000a 83F31188 		msr basepri, r3												@ ulNewBASEPRI
  61 000e BFF36F8F 		isb														
  62 0012 BFF34F8F 		dsb														
  63              	
  64              	@ 0 "" 2
  65              		.thumb
  66              		.syntax unified
  67              	.LBE13:
  68              	.LBE12:
 204:../freertos/portable/GCC/ARM_CM3/port.c **** 	while( ulDummy == 0 )
  69              		.loc 1 204 2 view .LVU10
  70              	.L2:
 205:../freertos/portable/GCC/ARM_CM3/port.c **** 	{
 206:../freertos/portable/GCC/ARM_CM3/port.c **** 		/* This file calls prvTaskExitError() after the scheduler has been
 207:../freertos/portable/GCC/ARM_CM3/port.c **** 		started to remove a compiler warning about the function being defined
 208:../freertos/portable/GCC/ARM_CM3/port.c **** 		but never called.  ulDummy is used purely to quieten other warnings
 209:../freertos/portable/GCC/ARM_CM3/port.c **** 		about code appearing after this function is called - making ulDummy
 210:../freertos/portable/GCC/ARM_CM3/port.c **** 		volatile makes the compiler think the function could return and
 211:../freertos/portable/GCC/ARM_CM3/port.c **** 		therefore not output an 'unreachable code' warning for code that appears
 212:../freertos/portable/GCC/ARM_CM3/port.c **** 		after it. */
 213:../freertos/portable/GCC/ARM_CM3/port.c **** 	}
  71              		.loc 1 213 2 view .LVU11
 204:../freertos/portable/GCC/ARM_CM3/port.c **** 	while( ulDummy == 0 )
  72              		.loc 1 204 17 discriminator 1 view .LVU12
  73 0016 019B     		ldr	r3, [sp, #4]	@ ulDummy.3_1, ulDummy
  74 0018 002B     		cmp	r3, #0	@ ulDummy.3_1
  75 001a FCD0     		beq	.L2	@
  76              	@ ../freertos/portable/GCC/ARM_CM3/port.c:214: }
 214:../freertos/portable/GCC/ARM_CM3/port.c **** }
  77              		.loc 1 214 1 is_stmt 0 view .LVU13
  78 001c 02B0     		add	sp, sp, #8	@,,
  79              	.LCFI1:
  80              		.cfi_def_cfa_offset 0
  81              		@ sp needed	@
  82 001e 7047     		bx	lr	@
  83              		.cfi_endproc
  84              	.LFE6:
  85              		.size	prvTaskExitError, .-prvTaskExitError
  86              		.align	1
  87              		.syntax unified
  88              		.thumb
  89              		.thumb_func
  90              		.type	prvPortStartFirstTask, %function
  91              	prvPortStartFirstTask:
  92              	.LFB8:
 215:../freertos/portable/GCC/ARM_CM3/port.c **** /*-----------------------------------------------------------*/
 216:../freertos/portable/GCC/ARM_CM3/port.c **** 
 217:../freertos/portable/GCC/ARM_CM3/port.c **** void vPortSVCHandler( void )
 218:../freertos/portable/GCC/ARM_CM3/port.c **** {
 219:../freertos/portable/GCC/ARM_CM3/port.c **** 	__asm volatile (
 220:../freertos/portable/GCC/ARM_CM3/port.c **** 					"	ldr	r3, pxCurrentTCBConst2		\n" /* Restore the context. */
 221:../freertos/portable/GCC/ARM_CM3/port.c **** 					"	ldr r1, [r3]					\n" /* Use pxCurrentTCBConst to get the pxCurrentTCB address. */
 222:../freertos/portable/GCC/ARM_CM3/port.c **** 					"	ldr r0, [r1]					\n" /* The first item in pxCurrentTCB is the task top of stack. */
 223:../freertos/portable/GCC/ARM_CM3/port.c **** 					"	ldmia r0!, {r4-r11}				\n" /* Pop the registers that are not automatically saved on exceptio
 224:../freertos/portable/GCC/ARM_CM3/port.c **** 					"	msr psp, r0						\n" /* Restore the task stack pointer. */
ARM GAS  /tmp/ccIusuWx.s 			page 10


 225:../freertos/portable/GCC/ARM_CM3/port.c **** 					"	isb								\n"
 226:../freertos/portable/GCC/ARM_CM3/port.c **** 					"	mov r0, #0 						\n"
 227:../freertos/portable/GCC/ARM_CM3/port.c **** 					"	msr	basepri, r0					\n"
 228:../freertos/portable/GCC/ARM_CM3/port.c **** 					"	orr r14, #0xd					\n"
 229:../freertos/portable/GCC/ARM_CM3/port.c **** 					"	bx r14							\n"
 230:../freertos/portable/GCC/ARM_CM3/port.c **** 					"									\n"
 231:../freertos/portable/GCC/ARM_CM3/port.c **** 					"	.align 4						\n"
 232:../freertos/portable/GCC/ARM_CM3/port.c **** 					"pxCurrentTCBConst2: .word pxCurrentTCB				\n"
 233:../freertos/portable/GCC/ARM_CM3/port.c **** 				);
 234:../freertos/portable/GCC/ARM_CM3/port.c **** }
 235:../freertos/portable/GCC/ARM_CM3/port.c **** /*-----------------------------------------------------------*/
 236:../freertos/portable/GCC/ARM_CM3/port.c **** 
 237:../freertos/portable/GCC/ARM_CM3/port.c **** static void prvPortStartFirstTask( void )
 238:../freertos/portable/GCC/ARM_CM3/port.c **** {
  93              		.loc 1 238 1 is_stmt 1 view -0
  94              		.cfi_startproc
  95              		@ Naked Function: prologue and epilogue provided by programmer.
  96              		@ args = 0, pretend = 0, frame = 0
  97              		@ frame_needed = 0, uses_anonymous_args = 0
 239:../freertos/portable/GCC/ARM_CM3/port.c **** 	__asm volatile(
  98              		.loc 1 239 2 view .LVU15
  99              		.syntax unified
 100              	@ 239 "../freertos/portable/GCC/ARM_CM3/port.c" 1
 101 0020 5848     		 ldr r0, =0xE000ED08 	
 102 0022 0068     	 ldr r0, [r0] 			
 103 0024 0068     	 ldr r0, [r0] 			
 104 0026 80F30888 	 msr msp, r0			
 105 002a 62B6     	 cpsie i				
 106 002c 61B6     	 cpsie f				
 107 002e BFF34F8F 	 dsb					
 108 0032 BFF36F8F 	 isb					
 109 0036 00DF     	 svc 0					
 110 0038 00BF     	 nop					
 111              	
 112              	@ 0 "" 2
 113              	@ ../freertos/portable/GCC/ARM_CM3/port.c:251: }
 240:../freertos/portable/GCC/ARM_CM3/port.c **** 					" ldr r0, =0xE000ED08 	\n" /* Use the NVIC offset register to locate the stack. */
 241:../freertos/portable/GCC/ARM_CM3/port.c **** 					" ldr r0, [r0] 			\n"
 242:../freertos/portable/GCC/ARM_CM3/port.c **** 					" ldr r0, [r0] 			\n"
 243:../freertos/portable/GCC/ARM_CM3/port.c **** 					" msr msp, r0			\n" /* Set the msp back to the start of the stack. */
 244:../freertos/portable/GCC/ARM_CM3/port.c **** 					" cpsie i				\n" /* Globally enable interrupts. */
 245:../freertos/portable/GCC/ARM_CM3/port.c **** 					" cpsie f				\n"
 246:../freertos/portable/GCC/ARM_CM3/port.c **** 					" dsb					\n"
 247:../freertos/portable/GCC/ARM_CM3/port.c **** 					" isb					\n"
 248:../freertos/portable/GCC/ARM_CM3/port.c **** 					" svc 0					\n" /* System call to start first task. */
 249:../freertos/portable/GCC/ARM_CM3/port.c **** 					" nop					\n"
 250:../freertos/portable/GCC/ARM_CM3/port.c **** 				);
 251:../freertos/portable/GCC/ARM_CM3/port.c **** }
 114              		.loc 1 251 1 is_stmt 0 view .LVU16
 115              		.thumb
 116              		.syntax unified
 117              		.cfi_endproc
 118              	.LFE8:
 119              		.size	prvPortStartFirstTask, .-prvPortStartFirstTask
 120              		.align	1
 121              		.global	pxPortInitialiseStack
 122              		.syntax unified
ARM GAS  /tmp/ccIusuWx.s 			page 11


 123              		.thumb
 124              		.thumb_func
 125              		.type	pxPortInitialiseStack, %function
 126              	pxPortInitialiseStack:
 127              	.LVL0:
 128              	.LFB5:
 175:../freertos/portable/GCC/ARM_CM3/port.c **** 	/* Simulate the stack frame as it would be created by a context switch
 129              		.loc 1 175 1 is_stmt 1 view -0
 130              		.cfi_startproc
 131              		@ args = 0, pretend = 0, frame = 0
 132              		@ frame_needed = 0, uses_anonymous_args = 0
 133              		@ link register save eliminated.
 178:../freertos/portable/GCC/ARM_CM3/port.c **** 	*pxTopOfStack = portINITIAL_XPSR;	/* xPSR */
 134              		.loc 1 178 2 view .LVU18
 179:../freertos/portable/GCC/ARM_CM3/port.c **** 	pxTopOfStack--;
 135              		.loc 1 179 2 view .LVU19
 136              	@ ../freertos/portable/GCC/ARM_CM3/port.c:179: 	*pxTopOfStack = portINITIAL_XPSR;	/* xPSR */
 179:../freertos/portable/GCC/ARM_CM3/port.c **** 	pxTopOfStack--;
 137              		.loc 1 179 16 is_stmt 0 view .LVU20
 138 003a 4FF08073 		mov	r3, #16777216	@ tmp122,
 139 003e 40F8043C 		str	r3, [r0, #-4]	@ tmp122, MEM[(StackType_t *)pxTopOfStack_5(D) + 4294967292B]
 180:../freertos/portable/GCC/ARM_CM3/port.c **** 	*pxTopOfStack = ( ( StackType_t ) pxCode ) & portSTART_ADDRESS_MASK;	/* PC */
 140              		.loc 1 180 2 is_stmt 1 view .LVU21
 141              	.LVL1:
 181:../freertos/portable/GCC/ARM_CM3/port.c **** 	pxTopOfStack--;
 142              		.loc 1 181 2 view .LVU22
 143              	@ ../freertos/portable/GCC/ARM_CM3/port.c:183: 	*pxTopOfStack = ( StackType_t ) portTASK_RETURN_ADD
 183:../freertos/portable/GCC/ARM_CM3/port.c **** 	pxTopOfStack -= 5;	/* R12, R3, R2 and R1. */
 144              		.loc 1 183 16 is_stmt 0 view .LVU23
 145 0042 054B     		ldr	r3, .L7	@ tmp124,
 146              	@ ../freertos/portable/GCC/ARM_CM3/port.c:181: 	*pxTopOfStack = ( ( StackType_t ) pxCode ) & portST
 181:../freertos/portable/GCC/ARM_CM3/port.c **** 	pxTopOfStack--;
 147              		.loc 1 181 45 view .LVU24
 148 0044 21F00101 		bic	r1, r1, #1	@ tmp123, tmp127,
 149              	.LVL2:
 150              	@ ../freertos/portable/GCC/ARM_CM3/port.c:181: 	*pxTopOfStack = ( ( StackType_t ) pxCode ) & portST
 181:../freertos/portable/GCC/ARM_CM3/port.c **** 	pxTopOfStack--;
 151              		.loc 1 181 16 view .LVU25
 152 0048 40F8081C 		str	r1, [r0, #-8]	@ tmp123, MEM[(StackType_t *)pxTopOfStack_5(D) + 4294967288B]
 182:../freertos/portable/GCC/ARM_CM3/port.c **** 	*pxTopOfStack = ( StackType_t ) portTASK_RETURN_ADDRESS;	/* LR */
 153              		.loc 1 182 2 is_stmt 1 view .LVU26
 154              	.LVL3:
 183:../freertos/portable/GCC/ARM_CM3/port.c **** 	pxTopOfStack -= 5;	/* R12, R3, R2 and R1. */
 155              		.loc 1 183 2 view .LVU27
 156              	@ ../freertos/portable/GCC/ARM_CM3/port.c:183: 	*pxTopOfStack = ( StackType_t ) portTASK_RETURN_ADD
 183:../freertos/portable/GCC/ARM_CM3/port.c **** 	pxTopOfStack -= 5;	/* R12, R3, R2 and R1. */
 157              		.loc 1 183 16 is_stmt 0 view .LVU28
 158 004c 40F80C3C 		str	r3, [r0, #-12]	@ tmp124, MEM[(StackType_t *)pxTopOfStack_5(D) + 4294967284B]
 184:../freertos/portable/GCC/ARM_CM3/port.c **** 	*pxTopOfStack = ( StackType_t ) pvParameters;	/* R0 */
 159              		.loc 1 184 2 is_stmt 1 view .LVU29
 160              	.LVL4:
 185:../freertos/portable/GCC/ARM_CM3/port.c **** 	pxTopOfStack -= 8;	/* R11, R10, R9, R8, R7, R6, R5 and R4. */
 161              		.loc 1 185 2 view .LVU30
 162              	@ ../freertos/portable/GCC/ARM_CM3/port.c:185: 	*pxTopOfStack = ( StackType_t ) pvParameters;	/* R0
 185:../freertos/portable/GCC/ARM_CM3/port.c **** 	pxTopOfStack -= 8;	/* R11, R10, R9, R8, R7, R6, R5 and R4. */
 163              		.loc 1 185 16 is_stmt 0 view .LVU31
 164 0050 40F8202C 		str	r2, [r0, #-32]	@ tmp128, MEM[(StackType_t *)pxTopOfStack_5(D) + 4294967264B]
ARM GAS  /tmp/ccIusuWx.s 			page 12


 186:../freertos/portable/GCC/ARM_CM3/port.c **** 
 165              		.loc 1 186 2 is_stmt 1 view .LVU32
 166              	.LVL5:
 188:../freertos/portable/GCC/ARM_CM3/port.c **** }
 167              		.loc 1 188 2 view .LVU33
 168              	@ ../freertos/portable/GCC/ARM_CM3/port.c:189: }
 189:../freertos/portable/GCC/ARM_CM3/port.c **** /*-----------------------------------------------------------*/
 169              		.loc 1 189 1 is_stmt 0 view .LVU34
 170 0054 4038     		subs	r0, r0, #64	@, pxTopOfStack,
 171              	.LVL6:
 189:../freertos/portable/GCC/ARM_CM3/port.c **** /*-----------------------------------------------------------*/
 172              		.loc 1 189 1 view .LVU35
 173 0056 7047     		bx	lr	@
 174              	.L8:
 175              		.align	2
 176              	.L7:
 177 0058 00000000 		.word	prvTaskExitError
 178              		.cfi_endproc
 179              	.LFE5:
 180              		.size	pxPortInitialiseStack, .-pxPortInitialiseStack
 181              		.align	1
 182              		.global	SVC_Handler
 183              		.syntax unified
 184              		.thumb
 185              		.thumb_func
 186              		.type	SVC_Handler, %function
 187              	SVC_Handler:
 188              	.LFB7:
 218:../freertos/portable/GCC/ARM_CM3/port.c **** 	__asm volatile (
 189              		.loc 1 218 1 is_stmt 1 view -0
 190              		.cfi_startproc
 191              		@ Naked Function: prologue and epilogue provided by programmer.
 192              		@ args = 0, pretend = 0, frame = 0
 193              		@ frame_needed = 0, uses_anonymous_args = 0
 219:../freertos/portable/GCC/ARM_CM3/port.c **** 					"	ldr	r3, pxCurrentTCBConst2		\n" /* Restore the context. */
 194              		.loc 1 219 2 view .LVU37
 195              		.syntax unified
 196              	@ 219 "../freertos/portable/GCC/ARM_CM3/port.c" 1
 197 005c 084B     			ldr	r3, pxCurrentTCBConst2		
 198 005e 1968     		ldr r1, [r3]					
 199 0060 0868     		ldr r0, [r1]					
 200 0062 B0E8F00F 		ldmia r0!, {r4-r11}				
 201 0066 80F30988 		msr psp, r0						
 202 006a BFF36F8F 		isb								
 203 006e 4FF00000 		mov r0, #0 						
 204 0072 80F31188 		msr	basepri, r0					
 205 0076 4EF00D0E 		orr r14, #0xd					
 206 007a 7047     		bx r14							
 207              										
 208 007c AFF30080 		.align 4						
 209 0080 00000000 	pxCurrentTCBConst2: .word pxCurrentTCB				
 210              	
 211              	@ 0 "" 2
 212              	@ ../freertos/portable/GCC/ARM_CM3/port.c:234: }
 234:../freertos/portable/GCC/ARM_CM3/port.c **** /*-----------------------------------------------------------*/
 213              		.loc 1 234 1 is_stmt 0 view .LVU38
 214              		.thumb
ARM GAS  /tmp/ccIusuWx.s 			page 13


 215              		.syntax unified
 216              		.cfi_endproc
 217              	.LFE7:
 218              		.size	SVC_Handler, .-SVC_Handler
 219              		.align	1
 220              		.global	vPortEndScheduler
 221              		.syntax unified
 222              		.thumb
 223              		.thumb_func
 224              		.type	vPortEndScheduler, %function
 225              	vPortEndScheduler:
 226              	.LFB10:
 252:../freertos/portable/GCC/ARM_CM3/port.c **** /*-----------------------------------------------------------*/
 253:../freertos/portable/GCC/ARM_CM3/port.c **** 
 254:../freertos/portable/GCC/ARM_CM3/port.c **** /*
 255:../freertos/portable/GCC/ARM_CM3/port.c ****  * See header file for description.
 256:../freertos/portable/GCC/ARM_CM3/port.c ****  */
 257:../freertos/portable/GCC/ARM_CM3/port.c **** BaseType_t xPortStartScheduler( void )
 258:../freertos/portable/GCC/ARM_CM3/port.c **** {
 259:../freertos/portable/GCC/ARM_CM3/port.c **** 	/* configMAX_SYSCALL_INTERRUPT_PRIORITY must not be set to 0.
 260:../freertos/portable/GCC/ARM_CM3/port.c **** 	See http://www.FreeRTOS.org/RTOS-Cortex-M3-M4.html */
 261:../freertos/portable/GCC/ARM_CM3/port.c **** 	configASSERT( configMAX_SYSCALL_INTERRUPT_PRIORITY );
 262:../freertos/portable/GCC/ARM_CM3/port.c **** 
 263:../freertos/portable/GCC/ARM_CM3/port.c **** 	#if( configASSERT_DEFINED == 1 )
 264:../freertos/portable/GCC/ARM_CM3/port.c **** 	{
 265:../freertos/portable/GCC/ARM_CM3/port.c **** 		volatile uint32_t ulOriginalPriority;
 266:../freertos/portable/GCC/ARM_CM3/port.c **** 		volatile uint8_t * const pucFirstUserPriorityRegister = ( volatile uint8_t * const ) ( portNVIC_I
 267:../freertos/portable/GCC/ARM_CM3/port.c **** 		volatile uint8_t ucMaxPriorityValue;
 268:../freertos/portable/GCC/ARM_CM3/port.c **** 
 269:../freertos/portable/GCC/ARM_CM3/port.c **** 		/* Determine the maximum priority from which ISR safe FreeRTOS API
 270:../freertos/portable/GCC/ARM_CM3/port.c **** 		functions can be called.  ISR safe functions are those that end in
 271:../freertos/portable/GCC/ARM_CM3/port.c **** 		"FromISR".  FreeRTOS maintains separate thread and ISR API functions to
 272:../freertos/portable/GCC/ARM_CM3/port.c **** 		ensure interrupt entry is as fast and simple as possible.
 273:../freertos/portable/GCC/ARM_CM3/port.c **** 
 274:../freertos/portable/GCC/ARM_CM3/port.c **** 		Save the interrupt priority value that is about to be clobbered. */
 275:../freertos/portable/GCC/ARM_CM3/port.c **** 		ulOriginalPriority = *pucFirstUserPriorityRegister;
 276:../freertos/portable/GCC/ARM_CM3/port.c **** 
 277:../freertos/portable/GCC/ARM_CM3/port.c **** 		/* Determine the number of priority bits available.  First write to all
 278:../freertos/portable/GCC/ARM_CM3/port.c **** 		possible bits. */
 279:../freertos/portable/GCC/ARM_CM3/port.c **** 		*pucFirstUserPriorityRegister = portMAX_8_BIT_VALUE;
 280:../freertos/portable/GCC/ARM_CM3/port.c **** 
 281:../freertos/portable/GCC/ARM_CM3/port.c **** 		/* Read the value back to see how many bits stuck. */
 282:../freertos/portable/GCC/ARM_CM3/port.c **** 		ucMaxPriorityValue = *pucFirstUserPriorityRegister;
 283:../freertos/portable/GCC/ARM_CM3/port.c **** 
 284:../freertos/portable/GCC/ARM_CM3/port.c **** 		/* Use the same mask on the maximum system call priority. */
 285:../freertos/portable/GCC/ARM_CM3/port.c **** 		ucMaxSysCallPriority = configMAX_SYSCALL_INTERRUPT_PRIORITY & ucMaxPriorityValue;
 286:../freertos/portable/GCC/ARM_CM3/port.c **** 
 287:../freertos/portable/GCC/ARM_CM3/port.c **** 		/* Calculate the maximum acceptable priority group value for the number
 288:../freertos/portable/GCC/ARM_CM3/port.c **** 		of bits read back. */
 289:../freertos/portable/GCC/ARM_CM3/port.c **** 		ulMaxPRIGROUPValue = portMAX_PRIGROUP_BITS;
 290:../freertos/portable/GCC/ARM_CM3/port.c **** 		while( ( ucMaxPriorityValue & portTOP_BIT_OF_BYTE ) == portTOP_BIT_OF_BYTE )
 291:../freertos/portable/GCC/ARM_CM3/port.c **** 		{
 292:../freertos/portable/GCC/ARM_CM3/port.c **** 			ulMaxPRIGROUPValue--;
 293:../freertos/portable/GCC/ARM_CM3/port.c **** 			ucMaxPriorityValue <<= ( uint8_t ) 0x01;
 294:../freertos/portable/GCC/ARM_CM3/port.c **** 		}
 295:../freertos/portable/GCC/ARM_CM3/port.c **** 
 296:../freertos/portable/GCC/ARM_CM3/port.c **** 		#ifdef __NVIC_PRIO_BITS
ARM GAS  /tmp/ccIusuWx.s 			page 14


 297:../freertos/portable/GCC/ARM_CM3/port.c **** 		{
 298:../freertos/portable/GCC/ARM_CM3/port.c **** 			/* Check the CMSIS configuration that defines the number of
 299:../freertos/portable/GCC/ARM_CM3/port.c **** 			priority bits matches the number of priority bits actually queried
 300:../freertos/portable/GCC/ARM_CM3/port.c **** 			from the hardware. */
 301:../freertos/portable/GCC/ARM_CM3/port.c **** 			configASSERT( ( portMAX_PRIGROUP_BITS - ulMaxPRIGROUPValue ) == __NVIC_PRIO_BITS );
 302:../freertos/portable/GCC/ARM_CM3/port.c **** 		}
 303:../freertos/portable/GCC/ARM_CM3/port.c **** 		#endif
 304:../freertos/portable/GCC/ARM_CM3/port.c **** 
 305:../freertos/portable/GCC/ARM_CM3/port.c **** 		#ifdef configPRIO_BITS
 306:../freertos/portable/GCC/ARM_CM3/port.c **** 		{
 307:../freertos/portable/GCC/ARM_CM3/port.c **** 			/* Check the FreeRTOS configuration that defines the number of
 308:../freertos/portable/GCC/ARM_CM3/port.c **** 			priority bits matches the number of priority bits actually queried
 309:../freertos/portable/GCC/ARM_CM3/port.c **** 			from the hardware. */
 310:../freertos/portable/GCC/ARM_CM3/port.c **** 			configASSERT( ( portMAX_PRIGROUP_BITS - ulMaxPRIGROUPValue ) == configPRIO_BITS );
 311:../freertos/portable/GCC/ARM_CM3/port.c **** 		}
 312:../freertos/portable/GCC/ARM_CM3/port.c **** 		#endif
 313:../freertos/portable/GCC/ARM_CM3/port.c **** 
 314:../freertos/portable/GCC/ARM_CM3/port.c **** 		/* Shift the priority group value back to its position within the AIRCR
 315:../freertos/portable/GCC/ARM_CM3/port.c **** 		register. */
 316:../freertos/portable/GCC/ARM_CM3/port.c **** 		ulMaxPRIGROUPValue <<= portPRIGROUP_SHIFT;
 317:../freertos/portable/GCC/ARM_CM3/port.c **** 		ulMaxPRIGROUPValue &= portPRIORITY_GROUP_MASK;
 318:../freertos/portable/GCC/ARM_CM3/port.c **** 
 319:../freertos/portable/GCC/ARM_CM3/port.c **** 		/* Restore the clobbered interrupt priority register to its original
 320:../freertos/portable/GCC/ARM_CM3/port.c **** 		value. */
 321:../freertos/portable/GCC/ARM_CM3/port.c **** 		*pucFirstUserPriorityRegister = ulOriginalPriority;
 322:../freertos/portable/GCC/ARM_CM3/port.c **** 	}
 323:../freertos/portable/GCC/ARM_CM3/port.c **** 	#endif /* conifgASSERT_DEFINED */
 324:../freertos/portable/GCC/ARM_CM3/port.c **** 
 325:../freertos/portable/GCC/ARM_CM3/port.c **** 	/* Make PendSV and SysTick the lowest priority interrupts. */
 326:../freertos/portable/GCC/ARM_CM3/port.c **** 	portNVIC_SYSPRI2_REG |= portNVIC_PENDSV_PRI;
 327:../freertos/portable/GCC/ARM_CM3/port.c **** 	portNVIC_SYSPRI2_REG |= portNVIC_SYSTICK_PRI;
 328:../freertos/portable/GCC/ARM_CM3/port.c **** 
 329:../freertos/portable/GCC/ARM_CM3/port.c **** 	/* Start the timer that generates the tick ISR.  Interrupts are disabled
 330:../freertos/portable/GCC/ARM_CM3/port.c **** 	here already. */
 331:../freertos/portable/GCC/ARM_CM3/port.c **** 	vPortSetupTimerInterrupt();
 332:../freertos/portable/GCC/ARM_CM3/port.c **** 
 333:../freertos/portable/GCC/ARM_CM3/port.c **** 	/* Initialise the critical nesting count ready for the first task. */
 334:../freertos/portable/GCC/ARM_CM3/port.c **** 	uxCriticalNesting = 0;
 335:../freertos/portable/GCC/ARM_CM3/port.c **** 
 336:../freertos/portable/GCC/ARM_CM3/port.c **** 	/* Start the first task. */
 337:../freertos/portable/GCC/ARM_CM3/port.c **** 	prvPortStartFirstTask();
 338:../freertos/portable/GCC/ARM_CM3/port.c **** 
 339:../freertos/portable/GCC/ARM_CM3/port.c **** 	/* Should never get here as the tasks will now be executing!  Call the task
 340:../freertos/portable/GCC/ARM_CM3/port.c **** 	exit error function to prevent compiler warnings about a static function
 341:../freertos/portable/GCC/ARM_CM3/port.c **** 	not being called in the case that the application writer overrides this
 342:../freertos/portable/GCC/ARM_CM3/port.c **** 	functionality by defining configTASK_RETURN_ADDRESS.  Call
 343:../freertos/portable/GCC/ARM_CM3/port.c **** 	vTaskSwitchContext() so link time optimisation does not remove the
 344:../freertos/portable/GCC/ARM_CM3/port.c **** 	symbol. */
 345:../freertos/portable/GCC/ARM_CM3/port.c **** 	vTaskSwitchContext();
 346:../freertos/portable/GCC/ARM_CM3/port.c **** 	prvTaskExitError();
 347:../freertos/portable/GCC/ARM_CM3/port.c **** 
 348:../freertos/portable/GCC/ARM_CM3/port.c **** 	/* Should not get here! */
 349:../freertos/portable/GCC/ARM_CM3/port.c **** 	return 0;
 350:../freertos/portable/GCC/ARM_CM3/port.c **** }
 351:../freertos/portable/GCC/ARM_CM3/port.c **** /*-----------------------------------------------------------*/
 352:../freertos/portable/GCC/ARM_CM3/port.c **** 
 353:../freertos/portable/GCC/ARM_CM3/port.c **** void vPortEndScheduler( void )
ARM GAS  /tmp/ccIusuWx.s 			page 15


 354:../freertos/portable/GCC/ARM_CM3/port.c **** {
 227              		.loc 1 354 1 is_stmt 1 view -0
 228              		.cfi_startproc
 229              		@ args = 0, pretend = 0, frame = 0
 230              		@ frame_needed = 0, uses_anonymous_args = 0
 231              		@ link register save eliminated.
 355:../freertos/portable/GCC/ARM_CM3/port.c **** 	/* Not implemented in ports where there is nothing to return to.
 356:../freertos/portable/GCC/ARM_CM3/port.c **** 	Artificially force an assert. */
 357:../freertos/portable/GCC/ARM_CM3/port.c **** 	configASSERT( uxCriticalNesting == 1000UL );
 232              		.loc 1 357 45 view .LVU40
 233              	@ ../freertos/portable/GCC/ARM_CM3/port.c:358: }
 358:../freertos/portable/GCC/ARM_CM3/port.c **** }
 234              		.loc 1 358 1 is_stmt 0 view .LVU41
 235 0084 7047     		bx	lr	@
 236              		.cfi_endproc
 237              	.LFE10:
 238              		.size	vPortEndScheduler, .-vPortEndScheduler
 239              		.align	1
 240              		.global	vPortEnterCritical
 241              		.syntax unified
 242              		.thumb
 243              		.thumb_func
 244              		.type	vPortEnterCritical, %function
 245              	vPortEnterCritical:
 246              	.LFB11:
 359:../freertos/portable/GCC/ARM_CM3/port.c **** /*-----------------------------------------------------------*/
 360:../freertos/portable/GCC/ARM_CM3/port.c **** 
 361:../freertos/portable/GCC/ARM_CM3/port.c **** void vPortEnterCritical( void )
 362:../freertos/portable/GCC/ARM_CM3/port.c **** {
 247              		.loc 1 362 1 is_stmt 1 view -0
 248              		.cfi_startproc
 249              		@ args = 0, pretend = 0, frame = 0
 250              		@ frame_needed = 0, uses_anonymous_args = 0
 251              		@ link register save eliminated.
 363:../freertos/portable/GCC/ARM_CM3/port.c **** 	portDISABLE_INTERRUPTS();
 252              		.loc 1 363 2 view .LVU43
 253              	.LBB14:
 254              	.LBI14:
 191:../freertos/portable/GCC/ARM_CM3/portmacro.h **** {
 255              		.loc 2 191 30 view .LVU44
 256              	.LBB15:
 193:../freertos/portable/GCC/ARM_CM3/portmacro.h **** 
 257              		.loc 2 193 1 view .LVU45
 258              		.loc 2 195 2 view .LVU46
 259              		.syntax unified
 260              	@ 195 "../freertos/portable/GCC/ARM_CM3/portmacro.h" 1
 261 0086 4FF01003 			mov r3, #16													@ ulNewBASEPRI,
 262 008a 83F31188 		msr basepri, r3												@ ulNewBASEPRI
 263 008e BFF36F8F 		isb														
 264 0092 BFF34F8F 		dsb														
 265              	
 266              	@ 0 "" 2
 267              		.thumb
 268              		.syntax unified
 269              	.LBE15:
 270              	.LBE14:
 364:../freertos/portable/GCC/ARM_CM3/port.c **** 	uxCriticalNesting++;
ARM GAS  /tmp/ccIusuWx.s 			page 16


 271              		.loc 1 364 2 view .LVU47
 272              	@ ../freertos/portable/GCC/ARM_CM3/port.c:364: 	uxCriticalNesting++;
 273              		.loc 1 364 19 is_stmt 0 view .LVU48
 274 0096 024A     		ldr	r2, .L12	@ tmp118,
 275 0098 1368     		ldr	r3, [r2]	@ uxCriticalNesting, uxCriticalNesting
 276 009a 0133     		adds	r3, r3, #1	@ tmp120, uxCriticalNesting,
 277 009c 1360     		str	r3, [r2]	@ tmp120, uxCriticalNesting
 365:../freertos/portable/GCC/ARM_CM3/port.c **** 
 366:../freertos/portable/GCC/ARM_CM3/port.c **** 	/* This is not the interrupt safe version of the enter critical function so
 367:../freertos/portable/GCC/ARM_CM3/port.c **** 	assert() if it is being called from an interrupt context.  Only API
 368:../freertos/portable/GCC/ARM_CM3/port.c **** 	functions that end in "FromISR" can be used in an interrupt.  Only assert if
 369:../freertos/portable/GCC/ARM_CM3/port.c **** 	the critical nesting count is 1 to protect against recursive calls if the
 370:../freertos/portable/GCC/ARM_CM3/port.c **** 	assert function also uses a critical section. */
 371:../freertos/portable/GCC/ARM_CM3/port.c **** 	if( uxCriticalNesting == 1 )
 278              		.loc 1 371 2 is_stmt 1 view .LVU49
 372:../freertos/portable/GCC/ARM_CM3/port.c **** 	{
 373:../freertos/portable/GCC/ARM_CM3/port.c **** 		configASSERT( ( portNVIC_INT_CTRL_REG & portVECTACTIVE_MASK ) == 0 );
 279              		.loc 1 373 71 view .LVU50
 280              	@ ../freertos/portable/GCC/ARM_CM3/port.c:375: }
 374:../freertos/portable/GCC/ARM_CM3/port.c **** 	}
 375:../freertos/portable/GCC/ARM_CM3/port.c **** }
 281              		.loc 1 375 1 is_stmt 0 view .LVU51
 282 009e 7047     		bx	lr	@
 283              	.L13:
 284              		.align	2
 285              	.L12:
 286 00a0 00000000 		.word	.LANCHOR0
 287              		.cfi_endproc
 288              	.LFE11:
 289              		.size	vPortEnterCritical, .-vPortEnterCritical
 290              		.align	1
 291              		.global	vPortExitCritical
 292              		.syntax unified
 293              		.thumb
 294              		.thumb_func
 295              		.type	vPortExitCritical, %function
 296              	vPortExitCritical:
 297              	.LFB12:
 376:../freertos/portable/GCC/ARM_CM3/port.c **** /*-----------------------------------------------------------*/
 377:../freertos/portable/GCC/ARM_CM3/port.c **** 
 378:../freertos/portable/GCC/ARM_CM3/port.c **** void vPortExitCritical( void )
 379:../freertos/portable/GCC/ARM_CM3/port.c **** {
 298              		.loc 1 379 1 is_stmt 1 view -0
 299              		.cfi_startproc
 300              		@ args = 0, pretend = 0, frame = 0
 301              		@ frame_needed = 0, uses_anonymous_args = 0
 302              		@ link register save eliminated.
 380:../freertos/portable/GCC/ARM_CM3/port.c **** 	configASSERT( uxCriticalNesting );
 303              		.loc 1 380 35 view .LVU53
 381:../freertos/portable/GCC/ARM_CM3/port.c **** 	uxCriticalNesting--;
 304              		.loc 1 381 2 view .LVU54
 305              	@ ../freertos/portable/GCC/ARM_CM3/port.c:381: 	uxCriticalNesting--;
 306              		.loc 1 381 19 is_stmt 0 view .LVU55
 307 00a4 034A     		ldr	r2, .L16	@ tmp116,
 308 00a6 1368     		ldr	r3, [r2]	@ uxCriticalNesting, uxCriticalNesting
 309 00a8 013B     		subs	r3, r3, #1	@ _2, uxCriticalNesting,
 310 00aa 1360     		str	r3, [r2]	@ _2, uxCriticalNesting
ARM GAS  /tmp/ccIusuWx.s 			page 17


 382:../freertos/portable/GCC/ARM_CM3/port.c **** 	if( uxCriticalNesting == 0 )
 311              		.loc 1 382 2 is_stmt 1 view .LVU56
 312              	@ ../freertos/portable/GCC/ARM_CM3/port.c:382: 	if( uxCriticalNesting == 0 )
 313              		.loc 1 382 4 is_stmt 0 view .LVU57
 314 00ac 0BB9     		cbnz	r3, .L14	@ _2,
 383:../freertos/portable/GCC/ARM_CM3/port.c **** 	{
 384:../freertos/portable/GCC/ARM_CM3/port.c **** 		portENABLE_INTERRUPTS();
 315              		.loc 1 384 3 is_stmt 1 view .LVU58
 316              	.LVL7:
 317              	.LBB16:
 318              	.LBI16:
 196:../freertos/portable/GCC/ARM_CM3/portmacro.h **** 	(
 197:../freertos/portable/GCC/ARM_CM3/portmacro.h **** 		"	mov %0, %1												\n" \
 198:../freertos/portable/GCC/ARM_CM3/portmacro.h **** 		"	msr basepri, %0											\n" \
 199:../freertos/portable/GCC/ARM_CM3/portmacro.h **** 		"	isb														\n" \
 200:../freertos/portable/GCC/ARM_CM3/portmacro.h **** 		"	dsb														\n" \
 201:../freertos/portable/GCC/ARM_CM3/portmacro.h **** 		:"=r" (ulNewBASEPRI) : "i" ( configMAX_SYSCALL_INTERRUPT_PRIORITY ) : "memory"
 202:../freertos/portable/GCC/ARM_CM3/portmacro.h **** 	);
 203:../freertos/portable/GCC/ARM_CM3/portmacro.h **** }
 204:../freertos/portable/GCC/ARM_CM3/portmacro.h **** 
 205:../freertos/portable/GCC/ARM_CM3/portmacro.h **** /*-----------------------------------------------------------*/
 206:../freertos/portable/GCC/ARM_CM3/portmacro.h **** 
 207:../freertos/portable/GCC/ARM_CM3/portmacro.h **** portFORCE_INLINE static uint32_t ulPortRaiseBASEPRI( void )
 208:../freertos/portable/GCC/ARM_CM3/portmacro.h **** {
 209:../freertos/portable/GCC/ARM_CM3/portmacro.h **** uint32_t ulOriginalBASEPRI, ulNewBASEPRI;
 210:../freertos/portable/GCC/ARM_CM3/portmacro.h **** 
 211:../freertos/portable/GCC/ARM_CM3/portmacro.h **** 	__asm volatile
 212:../freertos/portable/GCC/ARM_CM3/portmacro.h **** 	(
 213:../freertos/portable/GCC/ARM_CM3/portmacro.h **** 		"	mrs %0, basepri											\n" \
 214:../freertos/portable/GCC/ARM_CM3/portmacro.h **** 		"	mov %1, %2												\n" \
 215:../freertos/portable/GCC/ARM_CM3/portmacro.h **** 		"	msr basepri, %1											\n" \
 216:../freertos/portable/GCC/ARM_CM3/portmacro.h **** 		"	isb														\n" \
 217:../freertos/portable/GCC/ARM_CM3/portmacro.h **** 		"	dsb														\n" \
 218:../freertos/portable/GCC/ARM_CM3/portmacro.h **** 		:"=r" (ulOriginalBASEPRI), "=r" (ulNewBASEPRI) : "i" ( configMAX_SYSCALL_INTERRUPT_PRIORITY ) : "
 219:../freertos/portable/GCC/ARM_CM3/portmacro.h **** 	);
 220:../freertos/portable/GCC/ARM_CM3/portmacro.h **** 
 221:../freertos/portable/GCC/ARM_CM3/portmacro.h **** 	/* This return will not be reached but is necessary to prevent compiler
 222:../freertos/portable/GCC/ARM_CM3/portmacro.h **** 	warnings. */
 223:../freertos/portable/GCC/ARM_CM3/portmacro.h **** 	return ulOriginalBASEPRI;
 224:../freertos/portable/GCC/ARM_CM3/portmacro.h **** }
 225:../freertos/portable/GCC/ARM_CM3/portmacro.h **** /*-----------------------------------------------------------*/
 226:../freertos/portable/GCC/ARM_CM3/portmacro.h **** 
 227:../freertos/portable/GCC/ARM_CM3/portmacro.h **** portFORCE_INLINE static void vPortSetBASEPRI( uint32_t ulNewMaskValue )
 319              		.loc 2 227 30 view .LVU59
 320              	.LBB17:
 228:../freertos/portable/GCC/ARM_CM3/portmacro.h **** {
 229:../freertos/portable/GCC/ARM_CM3/portmacro.h **** 	__asm volatile
 321              		.loc 2 229 2 view .LVU60
 322              		.syntax unified
 323              	@ 229 "../freertos/portable/GCC/ARM_CM3/portmacro.h" 1
 324 00ae 83F31188 			msr basepri, r3		@ _2
 325              	@ 0 "" 2
 326              	.LVL8:
 327              		.thumb
 328              		.syntax unified
 329              	.L14:
 330              		.loc 2 229 2 is_stmt 0 view .LVU61
ARM GAS  /tmp/ccIusuWx.s 			page 18


 331              	.LBE17:
 332              	.LBE16:
 333              	@ ../freertos/portable/GCC/ARM_CM3/port.c:386: }
 385:../freertos/portable/GCC/ARM_CM3/port.c **** 	}
 386:../freertos/portable/GCC/ARM_CM3/port.c **** }
 334              		.loc 1 386 1 view .LVU62
 335 00b2 7047     		bx	lr	@
 336              	.L17:
 337              		.align	2
 338              	.L16:
 339 00b4 00000000 		.word	.LANCHOR0
 340              		.cfi_endproc
 341              	.LFE12:
 342              		.size	vPortExitCritical, .-vPortExitCritical
 343              		.align	1
 344              		.global	PendSV_Handler
 345              		.syntax unified
 346              		.thumb
 347              		.thumb_func
 348              		.type	PendSV_Handler, %function
 349              	PendSV_Handler:
 350              	.LFB13:
 387:../freertos/portable/GCC/ARM_CM3/port.c **** /*-----------------------------------------------------------*/
 388:../freertos/portable/GCC/ARM_CM3/port.c **** 
 389:../freertos/portable/GCC/ARM_CM3/port.c **** void xPortPendSVHandler( void )
 390:../freertos/portable/GCC/ARM_CM3/port.c **** {
 351              		.loc 1 390 1 is_stmt 1 view -0
 352              		.cfi_startproc
 353              		@ Naked Function: prologue and epilogue provided by programmer.
 354              		@ args = 0, pretend = 0, frame = 0
 355              		@ frame_needed = 0, uses_anonymous_args = 0
 391:../freertos/portable/GCC/ARM_CM3/port.c **** 	/* This is a naked function. */
 392:../freertos/portable/GCC/ARM_CM3/port.c **** 
 393:../freertos/portable/GCC/ARM_CM3/port.c **** 	__asm volatile
 356              		.loc 1 393 2 view .LVU64
 357              		.syntax unified
 358              	@ 393 "../freertos/portable/GCC/ARM_CM3/port.c" 1
 359 00b8 EFF30980 			mrs r0, psp							
 360 00bc BFF36F8F 		isb									
 361              											
 362 00c0 0F4B     		ldr	r3, pxCurrentTCBConst			
 363 00c2 1A68     		ldr	r2, [r3]						
 364              											
 365 00c4 20E9F00F 		stmdb r0!, {r4-r11}					
 366 00c8 1060     		str r0, [r2]						
 367              											
 368 00ca 2DE90840 		stmdb sp!, {r3, r14}				
 369 00ce 4FF01000 		mov r0, #16								@
 370 00d2 80F31188 		msr basepri, r0						
 371 00d6 FFF7FEFF 		bl vTaskSwitchContext				
 372 00da 4FF00000 		mov r0, #0							
 373 00de 80F31188 		msr basepri, r0						
 374 00e2 BDE80840 		ldmia sp!, {r3, r14}				
 375              											
 376 00e6 1968     		ldr r1, [r3]						
 377 00e8 0868     		ldr r0, [r1]						
 378 00ea B0E8F00F 		ldmia r0!, {r4-r11}					
ARM GAS  /tmp/ccIusuWx.s 			page 19


 379 00ee 80F30988 		msr psp, r0							
 380 00f2 BFF36F8F 		isb									
 381 00f6 7047     		bx r14								
 382              											
 383 00f8 AFF30080 		.align 4							
 383      AFF30080 
 384 0100 00000000 	pxCurrentTCBConst: .word pxCurrentTCB	
 385              	
 386              	@ 0 "" 2
 387              	@ ../freertos/portable/GCC/ARM_CM3/port.c:423: }
 394:../freertos/portable/GCC/ARM_CM3/port.c **** 	(
 395:../freertos/portable/GCC/ARM_CM3/port.c **** 	"	mrs r0, psp							\n"
 396:../freertos/portable/GCC/ARM_CM3/port.c **** 	"	isb									\n"
 397:../freertos/portable/GCC/ARM_CM3/port.c **** 	"										\n"
 398:../freertos/portable/GCC/ARM_CM3/port.c **** 	"	ldr	r3, pxCurrentTCBConst			\n" /* Get the location of the current TCB. */
 399:../freertos/portable/GCC/ARM_CM3/port.c **** 	"	ldr	r2, [r3]						\n"
 400:../freertos/portable/GCC/ARM_CM3/port.c **** 	"										\n"
 401:../freertos/portable/GCC/ARM_CM3/port.c **** 	"	stmdb r0!, {r4-r11}					\n" /* Save the remaining registers. */
 402:../freertos/portable/GCC/ARM_CM3/port.c **** 	"	str r0, [r2]						\n" /* Save the new top of stack into the first member of the TCB. */
 403:../freertos/portable/GCC/ARM_CM3/port.c **** 	"										\n"
 404:../freertos/portable/GCC/ARM_CM3/port.c **** 	"	stmdb sp!, {r3, r14}				\n"
 405:../freertos/portable/GCC/ARM_CM3/port.c **** 	"	mov r0, %0							\n"
 406:../freertos/portable/GCC/ARM_CM3/port.c **** 	"	msr basepri, r0						\n"
 407:../freertos/portable/GCC/ARM_CM3/port.c **** 	"	bl vTaskSwitchContext				\n"
 408:../freertos/portable/GCC/ARM_CM3/port.c **** 	"	mov r0, #0							\n"
 409:../freertos/portable/GCC/ARM_CM3/port.c **** 	"	msr basepri, r0						\n"
 410:../freertos/portable/GCC/ARM_CM3/port.c **** 	"	ldmia sp!, {r3, r14}				\n"
 411:../freertos/portable/GCC/ARM_CM3/port.c **** 	"										\n" /* Restore the context, including the critical nesting count. */
 412:../freertos/portable/GCC/ARM_CM3/port.c **** 	"	ldr r1, [r3]						\n"
 413:../freertos/portable/GCC/ARM_CM3/port.c **** 	"	ldr r0, [r1]						\n" /* The first item in pxCurrentTCB is the task top of stack. */
 414:../freertos/portable/GCC/ARM_CM3/port.c **** 	"	ldmia r0!, {r4-r11}					\n" /* Pop the registers. */
 415:../freertos/portable/GCC/ARM_CM3/port.c **** 	"	msr psp, r0							\n"
 416:../freertos/portable/GCC/ARM_CM3/port.c **** 	"	isb									\n"
 417:../freertos/portable/GCC/ARM_CM3/port.c **** 	"	bx r14								\n"
 418:../freertos/portable/GCC/ARM_CM3/port.c **** 	"										\n"
 419:../freertos/portable/GCC/ARM_CM3/port.c **** 	"	.align 4							\n"
 420:../freertos/portable/GCC/ARM_CM3/port.c **** 	"pxCurrentTCBConst: .word pxCurrentTCB	\n"
 421:../freertos/portable/GCC/ARM_CM3/port.c **** 	::"i"(configMAX_SYSCALL_INTERRUPT_PRIORITY)
 422:../freertos/portable/GCC/ARM_CM3/port.c **** 	);
 423:../freertos/portable/GCC/ARM_CM3/port.c **** }
 388              		.loc 1 423 1 is_stmt 0 view .LVU65
 389              		.thumb
 390              		.syntax unified
 391              		.cfi_endproc
 392              	.LFE13:
 393              		.size	PendSV_Handler, .-PendSV_Handler
 394              		.align	1
 395              		.global	SysTick_Handler
 396              		.syntax unified
 397              		.thumb
 398              		.thumb_func
 399              		.type	SysTick_Handler, %function
 400              	SysTick_Handler:
 401              	.LFB14:
 424:../freertos/portable/GCC/ARM_CM3/port.c **** /*-----------------------------------------------------------*/
 425:../freertos/portable/GCC/ARM_CM3/port.c **** 
 426:../freertos/portable/GCC/ARM_CM3/port.c **** void xPortSysTickHandler( void )
ARM GAS  /tmp/ccIusuWx.s 			page 20


 427:../freertos/portable/GCC/ARM_CM3/port.c **** {
 402              		.loc 1 427 1 is_stmt 1 view -0
 403              		.cfi_startproc
 404              		@ args = 0, pretend = 0, frame = 0
 405              		@ frame_needed = 0, uses_anonymous_args = 0
 428:../freertos/portable/GCC/ARM_CM3/port.c **** 	/* The SysTick runs at the lowest interrupt priority, so when this interrupt
 429:../freertos/portable/GCC/ARM_CM3/port.c **** 	executes all interrupts must be unmasked.  There is therefore no need to
 430:../freertos/portable/GCC/ARM_CM3/port.c **** 	save and then restore the interrupt mask value as its value is already
 431:../freertos/portable/GCC/ARM_CM3/port.c **** 	known. */
 432:../freertos/portable/GCC/ARM_CM3/port.c **** 	portDISABLE_INTERRUPTS();
 406              		.loc 1 432 2 view .LVU67
 407              	.LBB18:
 408              	.LBI18:
 191:../freertos/portable/GCC/ARM_CM3/portmacro.h **** {
 409              		.loc 2 191 30 view .LVU68
 410              	.LBB19:
 193:../freertos/portable/GCC/ARM_CM3/portmacro.h **** 
 411              		.loc 2 193 1 view .LVU69
 195:../freertos/portable/GCC/ARM_CM3/portmacro.h **** 	(
 412              		.loc 2 195 2 view .LVU70
 413              	.LBE19:
 414              	.LBE18:
 415              	@ ../freertos/portable/GCC/ARM_CM3/port.c:427: {
 427:../freertos/portable/GCC/ARM_CM3/port.c **** 	/* The SysTick runs at the lowest interrupt priority, so when this interrupt
 416              		.loc 1 427 1 is_stmt 0 view .LVU71
 417 0104 08B5     		push	{r3, lr}	@
 418              	.LCFI2:
 419              		.cfi_def_cfa_offset 8
 420              		.cfi_offset 3, -8
 421              		.cfi_offset 14, -4
 422              	.LBB21:
 423              	.LBB20:
 424              	@ ../freertos/portable/GCC/ARM_CM3/portmacro.h:195: 	__asm volatile
 195:../freertos/portable/GCC/ARM_CM3/portmacro.h **** 	(
 425              		.loc 2 195 2 view .LVU72
 426              		.syntax unified
 427              	@ 195 "../freertos/portable/GCC/ARM_CM3/portmacro.h" 1
 428 0106 4FF01003 			mov r3, #16													@ ulNewBASEPRI,
 429 010a 83F31188 		msr basepri, r3												@ ulNewBASEPRI
 430 010e BFF36F8F 		isb														
 431 0112 BFF34F8F 		dsb														
 432              	
 433              	@ 0 "" 2
 434              		.thumb
 435              		.syntax unified
 436              	.LBE20:
 437              	.LBE21:
 433:../freertos/portable/GCC/ARM_CM3/port.c **** 	{
 434:../freertos/portable/GCC/ARM_CM3/port.c **** 		/* Increment the RTOS tick. */
 435:../freertos/portable/GCC/ARM_CM3/port.c **** 		if( xTaskIncrementTick() != pdFALSE )
 438              		.loc 1 435 3 is_stmt 1 view .LVU73
 439              	@ ../freertos/portable/GCC/ARM_CM3/port.c:435: 		if( xTaskIncrementTick() != pdFALSE )
 440              		.loc 1 435 7 is_stmt 0 view .LVU74
 441 0116 FFF7FEFF 		bl	xTaskIncrementTick		@
 442              	.LVL9:
 443              	@ ../freertos/portable/GCC/ARM_CM3/port.c:435: 		if( xTaskIncrementTick() != pdFALSE )
 444              		.loc 1 435 5 discriminator 1 view .LVU75
ARM GAS  /tmp/ccIusuWx.s 			page 21


 445 011a 28B1     		cbz	r0, .L20	@ tmp120,
 436:../freertos/portable/GCC/ARM_CM3/port.c **** 		{
 437:../freertos/portable/GCC/ARM_CM3/port.c **** 			/* A context switch is required.  Context switching is performed in
 438:../freertos/portable/GCC/ARM_CM3/port.c **** 			the PendSV interrupt.  Pend the PendSV interrupt. */
 439:../freertos/portable/GCC/ARM_CM3/port.c **** 			portNVIC_INT_CTRL_REG = portNVIC_PENDSVSET_BIT;
 446              		.loc 1 439 4 is_stmt 1 view .LVU76
 447              	@ ../freertos/portable/GCC/ARM_CM3/port.c:439: 			portNVIC_INT_CTRL_REG = portNVIC_PENDSVSET_BIT;
 448              		.loc 1 439 26 is_stmt 0 view .LVU77
 449 011c 4FF0E023 		mov	r3, #-536813568	@ tmp117,
 450 0120 4FF08052 		mov	r2, #268435456	@ tmp118,
 451 0124 C3F8042D 		str	r2, [r3, #3332]	@ tmp118, MEM[(volatile uint32_t *)3758157060B]
 452              	.L20:
 440:../freertos/portable/GCC/ARM_CM3/port.c **** 		}
 441:../freertos/portable/GCC/ARM_CM3/port.c **** 	}
 442:../freertos/portable/GCC/ARM_CM3/port.c **** 	portENABLE_INTERRUPTS();
 453              		.loc 1 442 2 is_stmt 1 view .LVU78
 454              	.LVL10:
 455              	.LBB22:
 456              	.LBI22:
 227:../freertos/portable/GCC/ARM_CM3/portmacro.h **** {
 457              		.loc 2 227 30 view .LVU79
 458              	.LBB23:
 459              		.loc 2 229 2 view .LVU80
 460 0128 0023     		movs	r3, #0	@ tmp119,
 461              		.syntax unified
 462              	@ 229 "../freertos/portable/GCC/ARM_CM3/portmacro.h" 1
 463 012a 83F31188 			msr basepri, r3		@ tmp119
 464              	@ 0 "" 2
 465              	.LVL11:
 466              		.loc 2 229 2 is_stmt 0 view .LVU81
 467              		.thumb
 468              		.syntax unified
 469              	.LBE23:
 470              	.LBE22:
 471              	@ ../freertos/portable/GCC/ARM_CM3/port.c:443: }
 443:../freertos/portable/GCC/ARM_CM3/port.c **** }
 472              		.loc 1 443 1 view .LVU82
 473 012e 08BD     		pop	{r3, pc}	@
 474              		.cfi_endproc
 475              	.LFE14:
 476              		.size	SysTick_Handler, .-SysTick_Handler
 477              		.align	1
 478              		.weak	vPortSetupTimerInterrupt
 479              		.syntax unified
 480              		.thumb
 481              		.thumb_func
 482              		.type	vPortSetupTimerInterrupt, %function
 483              	vPortSetupTimerInterrupt:
 484              	.LFB15:
 444:../freertos/portable/GCC/ARM_CM3/port.c **** /*-----------------------------------------------------------*/
 445:../freertos/portable/GCC/ARM_CM3/port.c **** 
 446:../freertos/portable/GCC/ARM_CM3/port.c **** #if( configUSE_TICKLESS_IDLE == 1 )
 447:../freertos/portable/GCC/ARM_CM3/port.c **** 
 448:../freertos/portable/GCC/ARM_CM3/port.c **** 	__attribute__((weak)) void vPortSuppressTicksAndSleep( TickType_t xExpectedIdleTime )
 449:../freertos/portable/GCC/ARM_CM3/port.c **** 	{
 450:../freertos/portable/GCC/ARM_CM3/port.c **** 	uint32_t ulReloadValue, ulCompleteTickPeriods, ulCompletedSysTickDecrements;
 451:../freertos/portable/GCC/ARM_CM3/port.c **** 	TickType_t xModifiableIdleTime;
ARM GAS  /tmp/ccIusuWx.s 			page 22


 452:../freertos/portable/GCC/ARM_CM3/port.c **** 
 453:../freertos/portable/GCC/ARM_CM3/port.c **** 		/* Make sure the SysTick reload value does not overflow the counter. */
 454:../freertos/portable/GCC/ARM_CM3/port.c **** 		if( xExpectedIdleTime > xMaximumPossibleSuppressedTicks )
 455:../freertos/portable/GCC/ARM_CM3/port.c **** 		{
 456:../freertos/portable/GCC/ARM_CM3/port.c **** 			xExpectedIdleTime = xMaximumPossibleSuppressedTicks;
 457:../freertos/portable/GCC/ARM_CM3/port.c **** 		}
 458:../freertos/portable/GCC/ARM_CM3/port.c **** 
 459:../freertos/portable/GCC/ARM_CM3/port.c **** 		/* Stop the SysTick momentarily.  The time the SysTick is stopped for
 460:../freertos/portable/GCC/ARM_CM3/port.c **** 		is accounted for as best it can be, but using the tickless mode will
 461:../freertos/portable/GCC/ARM_CM3/port.c **** 		inevitably result in some tiny drift of the time maintained by the
 462:../freertos/portable/GCC/ARM_CM3/port.c **** 		kernel with respect to calendar time. */
 463:../freertos/portable/GCC/ARM_CM3/port.c **** 		portNVIC_SYSTICK_CTRL_REG &= ~portNVIC_SYSTICK_ENABLE_BIT;
 464:../freertos/portable/GCC/ARM_CM3/port.c **** 
 465:../freertos/portable/GCC/ARM_CM3/port.c **** 		/* Calculate the reload value required to wait xExpectedIdleTime
 466:../freertos/portable/GCC/ARM_CM3/port.c **** 		tick periods.  -1 is used because this code will execute part way
 467:../freertos/portable/GCC/ARM_CM3/port.c **** 		through one of the tick periods. */
 468:../freertos/portable/GCC/ARM_CM3/port.c **** 		ulReloadValue = portNVIC_SYSTICK_CURRENT_VALUE_REG + ( ulTimerCountsForOneTick * ( xExpectedIdleT
 469:../freertos/portable/GCC/ARM_CM3/port.c **** 		if( ulReloadValue > ulStoppedTimerCompensation )
 470:../freertos/portable/GCC/ARM_CM3/port.c **** 		{
 471:../freertos/portable/GCC/ARM_CM3/port.c **** 			ulReloadValue -= ulStoppedTimerCompensation;
 472:../freertos/portable/GCC/ARM_CM3/port.c **** 		}
 473:../freertos/portable/GCC/ARM_CM3/port.c **** 
 474:../freertos/portable/GCC/ARM_CM3/port.c **** 		/* Enter a critical section but don't use the taskENTER_CRITICAL()
 475:../freertos/portable/GCC/ARM_CM3/port.c **** 		method as that will mask interrupts that should exit sleep mode. */
 476:../freertos/portable/GCC/ARM_CM3/port.c **** 		__asm volatile( "cpsid i" ::: "memory" );
 477:../freertos/portable/GCC/ARM_CM3/port.c **** 		__asm volatile( "dsb" );
 478:../freertos/portable/GCC/ARM_CM3/port.c **** 		__asm volatile( "isb" );
 479:../freertos/portable/GCC/ARM_CM3/port.c **** 
 480:../freertos/portable/GCC/ARM_CM3/port.c **** 		/* If a context switch is pending or a task is waiting for the scheduler
 481:../freertos/portable/GCC/ARM_CM3/port.c **** 		to be unsuspended then abandon the low power entry. */
 482:../freertos/portable/GCC/ARM_CM3/port.c **** 		if( eTaskConfirmSleepModeStatus() == eAbortSleep )
 483:../freertos/portable/GCC/ARM_CM3/port.c **** 		{
 484:../freertos/portable/GCC/ARM_CM3/port.c **** 			/* Restart from whatever is left in the count register to complete
 485:../freertos/portable/GCC/ARM_CM3/port.c **** 			this tick period. */
 486:../freertos/portable/GCC/ARM_CM3/port.c **** 			portNVIC_SYSTICK_LOAD_REG = portNVIC_SYSTICK_CURRENT_VALUE_REG;
 487:../freertos/portable/GCC/ARM_CM3/port.c **** 
 488:../freertos/portable/GCC/ARM_CM3/port.c **** 			/* Restart SysTick. */
 489:../freertos/portable/GCC/ARM_CM3/port.c **** 			portNVIC_SYSTICK_CTRL_REG |= portNVIC_SYSTICK_ENABLE_BIT;
 490:../freertos/portable/GCC/ARM_CM3/port.c **** 
 491:../freertos/portable/GCC/ARM_CM3/port.c **** 			/* Reset the reload register to the value required for normal tick
 492:../freertos/portable/GCC/ARM_CM3/port.c **** 			periods. */
 493:../freertos/portable/GCC/ARM_CM3/port.c **** 			portNVIC_SYSTICK_LOAD_REG = ulTimerCountsForOneTick - 1UL;
 494:../freertos/portable/GCC/ARM_CM3/port.c **** 
 495:../freertos/portable/GCC/ARM_CM3/port.c **** 			/* Re-enable interrupts - see comments above the cpsid instruction()
 496:../freertos/portable/GCC/ARM_CM3/port.c **** 			above. */
 497:../freertos/portable/GCC/ARM_CM3/port.c **** 			__asm volatile( "cpsie i" ::: "memory" );
 498:../freertos/portable/GCC/ARM_CM3/port.c **** 		}
 499:../freertos/portable/GCC/ARM_CM3/port.c **** 		else
 500:../freertos/portable/GCC/ARM_CM3/port.c **** 		{
 501:../freertos/portable/GCC/ARM_CM3/port.c **** 			/* Set the new reload value. */
 502:../freertos/portable/GCC/ARM_CM3/port.c **** 			portNVIC_SYSTICK_LOAD_REG = ulReloadValue;
 503:../freertos/portable/GCC/ARM_CM3/port.c **** 
 504:../freertos/portable/GCC/ARM_CM3/port.c **** 			/* Clear the SysTick count flag and set the count value back to
 505:../freertos/portable/GCC/ARM_CM3/port.c **** 			zero. */
 506:../freertos/portable/GCC/ARM_CM3/port.c **** 			portNVIC_SYSTICK_CURRENT_VALUE_REG = 0UL;
 507:../freertos/portable/GCC/ARM_CM3/port.c **** 
 508:../freertos/portable/GCC/ARM_CM3/port.c **** 			/* Restart SysTick. */
ARM GAS  /tmp/ccIusuWx.s 			page 23


 509:../freertos/portable/GCC/ARM_CM3/port.c **** 			portNVIC_SYSTICK_CTRL_REG |= portNVIC_SYSTICK_ENABLE_BIT;
 510:../freertos/portable/GCC/ARM_CM3/port.c **** 
 511:../freertos/portable/GCC/ARM_CM3/port.c **** 			/* Sleep until something happens.  configPRE_SLEEP_PROCESSING() can
 512:../freertos/portable/GCC/ARM_CM3/port.c **** 			set its parameter to 0 to indicate that its implementation contains
 513:../freertos/portable/GCC/ARM_CM3/port.c **** 			its own wait for interrupt or wait for event instruction, and so wfi
 514:../freertos/portable/GCC/ARM_CM3/port.c **** 			should not be executed again.  However, the original expected idle
 515:../freertos/portable/GCC/ARM_CM3/port.c **** 			time variable must remain unmodified, so a copy is taken. */
 516:../freertos/portable/GCC/ARM_CM3/port.c **** 			xModifiableIdleTime = xExpectedIdleTime;
 517:../freertos/portable/GCC/ARM_CM3/port.c **** 			configPRE_SLEEP_PROCESSING( xModifiableIdleTime );
 518:../freertos/portable/GCC/ARM_CM3/port.c **** 			if( xModifiableIdleTime > 0 )
 519:../freertos/portable/GCC/ARM_CM3/port.c **** 			{
 520:../freertos/portable/GCC/ARM_CM3/port.c **** 				__asm volatile( "dsb" ::: "memory" );
 521:../freertos/portable/GCC/ARM_CM3/port.c **** 				__asm volatile( "wfi" );
 522:../freertos/portable/GCC/ARM_CM3/port.c **** 				__asm volatile( "isb" );
 523:../freertos/portable/GCC/ARM_CM3/port.c **** 			}
 524:../freertos/portable/GCC/ARM_CM3/port.c **** 			configPOST_SLEEP_PROCESSING( xExpectedIdleTime );
 525:../freertos/portable/GCC/ARM_CM3/port.c **** 
 526:../freertos/portable/GCC/ARM_CM3/port.c **** 			/* Re-enable interrupts to allow the interrupt that brought the MCU
 527:../freertos/portable/GCC/ARM_CM3/port.c **** 			out of sleep mode to execute immediately.  see comments above
 528:../freertos/portable/GCC/ARM_CM3/port.c **** 			__disable_interrupt() call above. */
 529:../freertos/portable/GCC/ARM_CM3/port.c **** 			__asm volatile( "cpsie i" ::: "memory" );
 530:../freertos/portable/GCC/ARM_CM3/port.c **** 			__asm volatile( "dsb" );
 531:../freertos/portable/GCC/ARM_CM3/port.c **** 			__asm volatile( "isb" );
 532:../freertos/portable/GCC/ARM_CM3/port.c **** 
 533:../freertos/portable/GCC/ARM_CM3/port.c **** 			/* Disable interrupts again because the clock is about to be stopped
 534:../freertos/portable/GCC/ARM_CM3/port.c **** 			and interrupts that execute while the clock is stopped will increase
 535:../freertos/portable/GCC/ARM_CM3/port.c **** 			any slippage between the time maintained by the RTOS and calendar
 536:../freertos/portable/GCC/ARM_CM3/port.c **** 			time. */
 537:../freertos/portable/GCC/ARM_CM3/port.c **** 			__asm volatile( "cpsid i" ::: "memory" );
 538:../freertos/portable/GCC/ARM_CM3/port.c **** 			__asm volatile( "dsb" );
 539:../freertos/portable/GCC/ARM_CM3/port.c **** 			__asm volatile( "isb" );
 540:../freertos/portable/GCC/ARM_CM3/port.c **** 
 541:../freertos/portable/GCC/ARM_CM3/port.c **** 			/* Disable the SysTick clock without reading the
 542:../freertos/portable/GCC/ARM_CM3/port.c **** 			portNVIC_SYSTICK_CTRL_REG register to ensure the
 543:../freertos/portable/GCC/ARM_CM3/port.c **** 			portNVIC_SYSTICK_COUNT_FLAG_BIT is not cleared if it is set.  Again,
 544:../freertos/portable/GCC/ARM_CM3/port.c **** 			the time the SysTick is stopped for is accounted for as best it can
 545:../freertos/portable/GCC/ARM_CM3/port.c **** 			be, but using the tickless mode will inevitably result in some tiny
 546:../freertos/portable/GCC/ARM_CM3/port.c **** 			drift of the time maintained by the kernel with respect to calendar
 547:../freertos/portable/GCC/ARM_CM3/port.c **** 			time*/
 548:../freertos/portable/GCC/ARM_CM3/port.c **** 			portNVIC_SYSTICK_CTRL_REG = ( portNVIC_SYSTICK_CLK_BIT | portNVIC_SYSTICK_INT_BIT );
 549:../freertos/portable/GCC/ARM_CM3/port.c **** 
 550:../freertos/portable/GCC/ARM_CM3/port.c **** 			/* Determine if the SysTick clock has already counted to zero and
 551:../freertos/portable/GCC/ARM_CM3/port.c **** 			been set back to the current reload value (the reload back being
 552:../freertos/portable/GCC/ARM_CM3/port.c **** 			correct for the entire expected idle time) or if the SysTick is yet
 553:../freertos/portable/GCC/ARM_CM3/port.c **** 			to count to zero (in which case an interrupt other than the SysTick
 554:../freertos/portable/GCC/ARM_CM3/port.c **** 			must have brought the system out of sleep mode). */
 555:../freertos/portable/GCC/ARM_CM3/port.c **** 			if( ( portNVIC_SYSTICK_CTRL_REG & portNVIC_SYSTICK_COUNT_FLAG_BIT ) != 0 )
 556:../freertos/portable/GCC/ARM_CM3/port.c **** 			{
 557:../freertos/portable/GCC/ARM_CM3/port.c **** 				uint32_t ulCalculatedLoadValue;
 558:../freertos/portable/GCC/ARM_CM3/port.c **** 
 559:../freertos/portable/GCC/ARM_CM3/port.c **** 				/* The tick interrupt is already pending, and the SysTick count
 560:../freertos/portable/GCC/ARM_CM3/port.c **** 				reloaded with ulReloadValue.  Reset the
 561:../freertos/portable/GCC/ARM_CM3/port.c **** 				portNVIC_SYSTICK_LOAD_REG with whatever remains of this tick
 562:../freertos/portable/GCC/ARM_CM3/port.c **** 				period. */
 563:../freertos/portable/GCC/ARM_CM3/port.c **** 				ulCalculatedLoadValue = ( ulTimerCountsForOneTick - 1UL ) - ( ulReloadValue - portNVIC_SYSTICK_
 564:../freertos/portable/GCC/ARM_CM3/port.c **** 
 565:../freertos/portable/GCC/ARM_CM3/port.c **** 				/* Don't allow a tiny value, or values that have somehow
ARM GAS  /tmp/ccIusuWx.s 			page 24


 566:../freertos/portable/GCC/ARM_CM3/port.c **** 				underflowed because the post sleep hook did something
 567:../freertos/portable/GCC/ARM_CM3/port.c **** 				that took too long. */
 568:../freertos/portable/GCC/ARM_CM3/port.c **** 				if( ( ulCalculatedLoadValue < ulStoppedTimerCompensation ) || ( ulCalculatedLoadValue > ulTimer
 569:../freertos/portable/GCC/ARM_CM3/port.c **** 				{
 570:../freertos/portable/GCC/ARM_CM3/port.c **** 					ulCalculatedLoadValue = ( ulTimerCountsForOneTick - 1UL );
 571:../freertos/portable/GCC/ARM_CM3/port.c **** 				}
 572:../freertos/portable/GCC/ARM_CM3/port.c **** 
 573:../freertos/portable/GCC/ARM_CM3/port.c **** 				portNVIC_SYSTICK_LOAD_REG = ulCalculatedLoadValue;
 574:../freertos/portable/GCC/ARM_CM3/port.c **** 
 575:../freertos/portable/GCC/ARM_CM3/port.c **** 				/* As the pending tick will be processed as soon as this
 576:../freertos/portable/GCC/ARM_CM3/port.c **** 				function exits, the tick value maintained by the tick is stepped
 577:../freertos/portable/GCC/ARM_CM3/port.c **** 				forward by one less than the time spent waiting. */
 578:../freertos/portable/GCC/ARM_CM3/port.c **** 				ulCompleteTickPeriods = xExpectedIdleTime - 1UL;
 579:../freertos/portable/GCC/ARM_CM3/port.c **** 			}
 580:../freertos/portable/GCC/ARM_CM3/port.c **** 			else
 581:../freertos/portable/GCC/ARM_CM3/port.c **** 			{
 582:../freertos/portable/GCC/ARM_CM3/port.c **** 				/* Something other than the tick interrupt ended the sleep.
 583:../freertos/portable/GCC/ARM_CM3/port.c **** 				Work out how long the sleep lasted rounded to complete tick
 584:../freertos/portable/GCC/ARM_CM3/port.c **** 				periods (not the ulReload value which accounted for part
 585:../freertos/portable/GCC/ARM_CM3/port.c **** 				ticks). */
 586:../freertos/portable/GCC/ARM_CM3/port.c **** 				ulCompletedSysTickDecrements = ( xExpectedIdleTime * ulTimerCountsForOneTick ) - portNVIC_SYSTI
 587:../freertos/portable/GCC/ARM_CM3/port.c **** 
 588:../freertos/portable/GCC/ARM_CM3/port.c **** 				/* How many complete tick periods passed while the processor
 589:../freertos/portable/GCC/ARM_CM3/port.c **** 				was waiting? */
 590:../freertos/portable/GCC/ARM_CM3/port.c **** 				ulCompleteTickPeriods = ulCompletedSysTickDecrements / ulTimerCountsForOneTick;
 591:../freertos/portable/GCC/ARM_CM3/port.c **** 
 592:../freertos/portable/GCC/ARM_CM3/port.c **** 				/* The reload value is set to whatever fraction of a single tick
 593:../freertos/portable/GCC/ARM_CM3/port.c **** 				period remains. */
 594:../freertos/portable/GCC/ARM_CM3/port.c **** 				portNVIC_SYSTICK_LOAD_REG = ( ( ulCompleteTickPeriods + 1UL ) * ulTimerCountsForOneTick ) - ulC
 595:../freertos/portable/GCC/ARM_CM3/port.c **** 			}
 596:../freertos/portable/GCC/ARM_CM3/port.c **** 
 597:../freertos/portable/GCC/ARM_CM3/port.c **** 			/* Restart SysTick so it runs from portNVIC_SYSTICK_LOAD_REG
 598:../freertos/portable/GCC/ARM_CM3/port.c **** 			again, then set portNVIC_SYSTICK_LOAD_REG back to its standard
 599:../freertos/portable/GCC/ARM_CM3/port.c **** 			value. */
 600:../freertos/portable/GCC/ARM_CM3/port.c **** 			portNVIC_SYSTICK_CURRENT_VALUE_REG = 0UL;
 601:../freertos/portable/GCC/ARM_CM3/port.c **** 			portNVIC_SYSTICK_CTRL_REG |= portNVIC_SYSTICK_ENABLE_BIT;
 602:../freertos/portable/GCC/ARM_CM3/port.c **** 			vTaskStepTick( ulCompleteTickPeriods );
 603:../freertos/portable/GCC/ARM_CM3/port.c **** 			portNVIC_SYSTICK_LOAD_REG = ulTimerCountsForOneTick - 1UL;
 604:../freertos/portable/GCC/ARM_CM3/port.c **** 
 605:../freertos/portable/GCC/ARM_CM3/port.c **** 			/* Exit with interrpts enabled. */
 606:../freertos/portable/GCC/ARM_CM3/port.c **** 			__asm volatile( "cpsie i" ::: "memory" );
 607:../freertos/portable/GCC/ARM_CM3/port.c **** 		}
 608:../freertos/portable/GCC/ARM_CM3/port.c **** 	}
 609:../freertos/portable/GCC/ARM_CM3/port.c **** 
 610:../freertos/portable/GCC/ARM_CM3/port.c **** #endif /* configUSE_TICKLESS_IDLE */
 611:../freertos/portable/GCC/ARM_CM3/port.c **** /*-----------------------------------------------------------*/
 612:../freertos/portable/GCC/ARM_CM3/port.c **** 
 613:../freertos/portable/GCC/ARM_CM3/port.c **** /*
 614:../freertos/portable/GCC/ARM_CM3/port.c ****  * Setup the systick timer to generate the tick interrupts at the required
 615:../freertos/portable/GCC/ARM_CM3/port.c ****  * frequency.
 616:../freertos/portable/GCC/ARM_CM3/port.c ****  */
 617:../freertos/portable/GCC/ARM_CM3/port.c **** __attribute__(( weak )) void vPortSetupTimerInterrupt( void )
 618:../freertos/portable/GCC/ARM_CM3/port.c **** {
 485              		.loc 1 618 1 is_stmt 1 view -0
 486              		.cfi_startproc
 487              		@ args = 0, pretend = 0, frame = 0
 488              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  /tmp/ccIusuWx.s 			page 25


 489              		@ link register save eliminated.
 619:../freertos/portable/GCC/ARM_CM3/port.c **** 	/* Calculate the constants required to configure the tick interrupt. */
 620:../freertos/portable/GCC/ARM_CM3/port.c **** 	#if( configUSE_TICKLESS_IDLE == 1 )
 621:../freertos/portable/GCC/ARM_CM3/port.c **** 	{
 622:../freertos/portable/GCC/ARM_CM3/port.c **** 		ulTimerCountsForOneTick = ( configSYSTICK_CLOCK_HZ / configTICK_RATE_HZ );
 623:../freertos/portable/GCC/ARM_CM3/port.c **** 		xMaximumPossibleSuppressedTicks = portMAX_24_BIT_NUMBER / ulTimerCountsForOneTick;
 624:../freertos/portable/GCC/ARM_CM3/port.c **** 		ulStoppedTimerCompensation = portMISSED_COUNTS_FACTOR / ( configCPU_CLOCK_HZ / configSYSTICK_CLOC
 625:../freertos/portable/GCC/ARM_CM3/port.c **** 	}
 626:../freertos/portable/GCC/ARM_CM3/port.c **** 	#endif /* configUSE_TICKLESS_IDLE */
 627:../freertos/portable/GCC/ARM_CM3/port.c **** 
 628:../freertos/portable/GCC/ARM_CM3/port.c **** 	/* Stop and clear the SysTick. */
 629:../freertos/portable/GCC/ARM_CM3/port.c **** 	portNVIC_SYSTICK_CTRL_REG = 0UL;
 490              		.loc 1 629 2 view .LVU84
 491              	@ ../freertos/portable/GCC/ARM_CM3/port.c:629: 	portNVIC_SYSTICK_CTRL_REG = 0UL;
 492              		.loc 1 629 28 is_stmt 0 view .LVU85
 493 0130 4FF0E023 		mov	r3, #-536813568	@ tmp114,
 494 0134 0022     		movs	r2, #0	@ tmp115,
 495 0136 1A61     		str	r2, [r3, #16]	@ tmp115, MEM[(volatile uint32_t *)3758153744B]
 630:../freertos/portable/GCC/ARM_CM3/port.c **** 	portNVIC_SYSTICK_CURRENT_VALUE_REG = 0UL;
 496              		.loc 1 630 2 is_stmt 1 view .LVU86
 497              	@ ../freertos/portable/GCC/ARM_CM3/port.c:630: 	portNVIC_SYSTICK_CURRENT_VALUE_REG = 0UL;
 498              		.loc 1 630 37 is_stmt 0 view .LVU87
 499 0138 9A61     		str	r2, [r3, #24]	@ tmp115, MEM[(volatile uint32_t *)3758153752B]
 631:../freertos/portable/GCC/ARM_CM3/port.c **** 
 632:../freertos/portable/GCC/ARM_CM3/port.c **** 	/* Configure SysTick to interrupt at the requested rate. */
 633:../freertos/portable/GCC/ARM_CM3/port.c **** 	portNVIC_SYSTICK_LOAD_REG = ( configSYSTICK_CLOCK_HZ / configTICK_RATE_HZ ) - 1UL;
 500              		.loc 1 633 2 is_stmt 1 view .LVU88
 501              	@ ../freertos/portable/GCC/ARM_CM3/port.c:633: 	portNVIC_SYSTICK_LOAD_REG = ( configSYSTICK_CLOCK_H
 502              		.loc 1 633 28 is_stmt 0 view .LVU89
 503 013a 40F2CF22 		movw	r2, #719	@ tmp119,
 504 013e 5A61     		str	r2, [r3, #20]	@ tmp119, MEM[(volatile uint32_t *)3758153748B]
 634:../freertos/portable/GCC/ARM_CM3/port.c **** 	portNVIC_SYSTICK_CTRL_REG = ( portNVIC_SYSTICK_CLK_BIT | portNVIC_SYSTICK_INT_BIT | portNVIC_SYSTI
 505              		.loc 1 634 2 is_stmt 1 view .LVU90
 506              	@ ../freertos/portable/GCC/ARM_CM3/port.c:634: 	portNVIC_SYSTICK_CTRL_REG = ( portNVIC_SYSTICK_CLK_
 507              		.loc 1 634 28 is_stmt 0 view .LVU91
 508 0140 0722     		movs	r2, #7	@ tmp121,
 509 0142 1A61     		str	r2, [r3, #16]	@ tmp121, MEM[(volatile uint32_t *)3758153744B]
 510              	@ ../freertos/portable/GCC/ARM_CM3/port.c:635: }
 635:../freertos/portable/GCC/ARM_CM3/port.c **** }
 511              		.loc 1 635 1 view .LVU92
 512 0144 7047     		bx	lr	@
 513              		.cfi_endproc
 514              	.LFE15:
 515              		.size	vPortSetupTimerInterrupt, .-vPortSetupTimerInterrupt
 516              		.align	1
 517              		.global	xPortStartScheduler
 518              		.syntax unified
 519              		.thumb
 520              		.thumb_func
 521              		.type	xPortStartScheduler, %function
 522              	xPortStartScheduler:
 523              	.LFB9:
 258:../freertos/portable/GCC/ARM_CM3/port.c **** 	/* configMAX_SYSCALL_INTERRUPT_PRIORITY must not be set to 0.
 524              		.loc 1 258 1 is_stmt 1 view -0
 525              		.cfi_startproc
 526              		@ args = 0, pretend = 0, frame = 0
 527              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  /tmp/ccIusuWx.s 			page 26


 261:../freertos/portable/GCC/ARM_CM3/port.c **** 
 528              		.loc 1 261 54 view .LVU94
 326:../freertos/portable/GCC/ARM_CM3/port.c **** 	portNVIC_SYSPRI2_REG |= portNVIC_SYSTICK_PRI;
 529              		.loc 1 326 2 view .LVU95
 530 0146 4FF0E023 		mov	r3, #-536813568	@ tmp119,
 531              	@ ../freertos/portable/GCC/ARM_CM3/port.c:258: {
 258:../freertos/portable/GCC/ARM_CM3/port.c **** 	/* configMAX_SYSCALL_INTERRUPT_PRIORITY must not be set to 0.
 532              		.loc 1 258 1 is_stmt 0 view .LVU96
 533 014a 10B5     		push	{r4, lr}	@
 534              	.LCFI3:
 535              		.cfi_def_cfa_offset 8
 536              		.cfi_offset 4, -8
 537              		.cfi_offset 14, -4
 538              	@ ../freertos/portable/GCC/ARM_CM3/port.c:334: 	uxCriticalNesting = 0;
 334:../freertos/portable/GCC/ARM_CM3/port.c **** 
 539              		.loc 1 334 20 view .LVU97
 540 014c 0024     		movs	r4, #0	@ tmp124,
 541              	@ ../freertos/portable/GCC/ARM_CM3/port.c:326: 	portNVIC_SYSPRI2_REG |= portNVIC_PENDSV_PRI;
 326:../freertos/portable/GCC/ARM_CM3/port.c **** 	portNVIC_SYSPRI2_REG |= portNVIC_SYSTICK_PRI;
 542              		.loc 1 326 2 view .LVU98
 543 014e D3F8202D 		ldr	r2, [r3, #3360]	@ _1, MEM[(volatile uint32_t *)3758157088B]
 544              	@ ../freertos/portable/GCC/ARM_CM3/port.c:326: 	portNVIC_SYSPRI2_REG |= portNVIC_PENDSV_PRI;
 326:../freertos/portable/GCC/ARM_CM3/port.c **** 	portNVIC_SYSPRI2_REG |= portNVIC_SYSTICK_PRI;
 545              		.loc 1 326 23 view .LVU99
 546 0152 42F47002 		orr	r2, r2, #15728640	@ _2, _1,
 547 0156 C3F8202D 		str	r2, [r3, #3360]	@ _2, MEM[(volatile uint32_t *)3758157088B]
 327:../freertos/portable/GCC/ARM_CM3/port.c **** 
 548              		.loc 1 327 2 is_stmt 1 view .LVU100
 549 015a D3F8202D 		ldr	r2, [r3, #3360]	@ _3, MEM[(volatile uint32_t *)3758157088B]
 550              	@ ../freertos/portable/GCC/ARM_CM3/port.c:327: 	portNVIC_SYSPRI2_REG |= portNVIC_SYSTICK_PRI;
 327:../freertos/portable/GCC/ARM_CM3/port.c **** 
 551              		.loc 1 327 23 is_stmt 0 view .LVU101
 552 015e 42F07042 		orr	r2, r2, #-268435456	@ _4, _3,
 553 0162 C3F8202D 		str	r2, [r3, #3360]	@ _4, MEM[(volatile uint32_t *)3758157088B]
 331:../freertos/portable/GCC/ARM_CM3/port.c **** 
 554              		.loc 1 331 2 is_stmt 1 view .LVU102
 555 0166 FFF7FEFF 		bl	vPortSetupTimerInterrupt		@
 556              	.LVL12:
 334:../freertos/portable/GCC/ARM_CM3/port.c **** 
 557              		.loc 1 334 2 view .LVU103
 558              	@ ../freertos/portable/GCC/ARM_CM3/port.c:334: 	uxCriticalNesting = 0;
 334:../freertos/portable/GCC/ARM_CM3/port.c **** 
 559              		.loc 1 334 20 is_stmt 0 view .LVU104
 560 016a 054B     		ldr	r3, .L26	@ tmp123,
 561 016c 1C60     		str	r4, [r3]	@ tmp124, uxCriticalNesting
 337:../freertos/portable/GCC/ARM_CM3/port.c **** 
 562              		.loc 1 337 2 is_stmt 1 view .LVU105
 563 016e FFF757FF 		bl	prvPortStartFirstTask		@
 564              	.LVL13:
 345:../freertos/portable/GCC/ARM_CM3/port.c **** 	prvTaskExitError();
 565              		.loc 1 345 2 view .LVU106
 566 0172 FFF7FEFF 		bl	vTaskSwitchContext		@
 567              	.LVL14:
 346:../freertos/portable/GCC/ARM_CM3/port.c **** 
 568              		.loc 1 346 2 view .LVU107
 569 0176 FFF743FF 		bl	prvTaskExitError		@
 570              	.LVL15:
ARM GAS  /tmp/ccIusuWx.s 			page 27


 349:../freertos/portable/GCC/ARM_CM3/port.c **** }
 571              		.loc 1 349 2 view .LVU108
 572              	@ ../freertos/portable/GCC/ARM_CM3/port.c:350: }
 350:../freertos/portable/GCC/ARM_CM3/port.c **** /*-----------------------------------------------------------*/
 573              		.loc 1 350 1 is_stmt 0 view .LVU109
 574 017a 2046     		mov	r0, r4	@, tmp124
 575 017c 10BD     		pop	{r4, pc}	@
 576              	.L27:
 577 017e 00BF     		.align	2
 578              	.L26:
 579 0180 00000000 		.word	.LANCHOR0
 580              		.cfi_endproc
 581              	.LFE9:
 582              		.size	xPortStartScheduler, .-xPortStartScheduler
 583              		.data
 584              		.align	2
 585              		.set	.LANCHOR0,. + 0
 586              		.type	uxCriticalNesting, %object
 587              		.size	uxCriticalNesting, 4
 588              	uxCriticalNesting:
 589 0000 AAAAAAAA 		.word	-1431655766
 590              		.text
 591              	.Letext0:
 592              		.file 3 "/usr/arm-none-eabi/include/machine/_default_types.h"
 593              		.file 4 "/usr/arm-none-eabi/include/sys/_stdint.h"
 594              		.file 5 "../freertos/include/projdefs.h"
 595              		.file 6 "../freertos/include/task.h"
 596              		.section	.debug_info,"",%progbits
 597              	.Ldebug_info0:
 598 0000 80030000 		.4byte	0x380
 599 0004 0200     		.2byte	0x2
 600 0006 00000000 		.4byte	.Ldebug_abbrev0
 601 000a 04       		.byte	0x4
 602 000b 01       		.uleb128 0x1
 603 000c 36010000 		.4byte	.LASF31
 604 0010 0C       		.byte	0xc
 605 0011 A8000000 		.4byte	.LASF32
 606 0015 6D000000 		.4byte	.LASF33
 607 0019 00000000 		.4byte	.Ltext0
 608 001d 84010000 		.4byte	.Letext0
 609 0021 00000000 		.4byte	.Ldebug_line0
 610 0025 02       		.uleb128 0x2
 611 0026 08       		.byte	0x8
 612 0027 07       		.byte	0x7
 613 0028 02020000 		.4byte	.LASF0
 614 002c 02       		.uleb128 0x2
 615 002d 04       		.byte	0x4
 616 002e 07       		.byte	0x7
 617 002f F5010000 		.4byte	.LASF1
 618 0033 03       		.uleb128 0x3
 619 0034 04       		.byte	0x4
 620 0035 05       		.byte	0x5
 621 0036 696E7400 		.ascii	"int\000"
 622 003a 02       		.uleb128 0x2
 623 003b 08       		.byte	0x8
 624 003c 05       		.byte	0x5
 625 003d 56020000 		.4byte	.LASF2
ARM GAS  /tmp/ccIusuWx.s 			page 28


 626 0041 02       		.uleb128 0x2
 627 0042 08       		.byte	0x8
 628 0043 04       		.byte	0x4
 629 0044 DE020000 		.4byte	.LASF3
 630 0048 02       		.uleb128 0x2
 631 0049 01       		.byte	0x1
 632 004a 06       		.byte	0x6
 633 004b EA020000 		.4byte	.LASF4
 634 004f 02       		.uleb128 0x2
 635 0050 01       		.byte	0x1
 636 0051 08       		.byte	0x8
 637 0052 F8000000 		.4byte	.LASF5
 638 0056 02       		.uleb128 0x2
 639 0057 02       		.byte	0x2
 640 0058 05       		.byte	0x5
 641 0059 63000000 		.4byte	.LASF6
 642 005d 02       		.uleb128 0x2
 643 005e 02       		.byte	0x2
 644 005f 07       		.byte	0x7
 645 0060 23010000 		.4byte	.LASF7
 646 0064 02       		.uleb128 0x2
 647 0065 04       		.byte	0x4
 648 0066 05       		.byte	0x5
 649 0067 5A000000 		.4byte	.LASF8
 650 006b 04       		.uleb128 0x4
 651 006c 06010000 		.4byte	.LASF10
 652 0070 03       		.byte	0x3
 653 0071 4F       		.byte	0x4f
 654 0072 19       		.byte	0x19
 655 0073 77000000 		.4byte	0x77
 656 0077 02       		.uleb128 0x2
 657 0078 04       		.byte	0x4
 658 0079 07       		.byte	0x7
 659 007a 11010000 		.4byte	.LASF9
 660 007e 04       		.uleb128 0x4
 661 007f AB020000 		.4byte	.LASF11
 662 0083 04       		.byte	0x4
 663 0084 30       		.byte	0x30
 664 0085 14       		.byte	0x14
 665 0086 6B000000 		.4byte	0x6b
 666 008a 05       		.uleb128 0x5
 667 008b 7E000000 		.4byte	0x7e
 668 008f 04       		.uleb128 0x4
 669 0090 E1000000 		.4byte	.LASF12
 670 0094 05       		.byte	0x5
 671 0095 23       		.byte	0x23
 672 0096 10       		.byte	0x10
 673 0097 9B000000 		.4byte	0x9b
 674 009b 06       		.uleb128 0x6
 675 009c 04       		.byte	0x4
 676 009d A1000000 		.4byte	0xa1
 677 00a1 07       		.uleb128 0x7
 678 00a2 01       		.byte	0x1
 679 00a3 AD000000 		.4byte	0xad
 680 00a7 08       		.uleb128 0x8
 681 00a8 AD000000 		.4byte	0xad
 682 00ac 00       		.byte	0
ARM GAS  /tmp/ccIusuWx.s 			page 29


 683 00ad 09       		.uleb128 0x9
 684 00ae 04       		.byte	0x4
 685 00af 04       		.uleb128 0x4
 686 00b0 E9010000 		.4byte	.LASF13
 687 00b4 02       		.byte	0x2
 688 00b5 37       		.byte	0x37
 689 00b6 18       		.byte	0x18
 690 00b7 7E000000 		.4byte	0x7e
 691 00bb 04       		.uleb128 0x4
 692 00bc 16030000 		.4byte	.LASF14
 693 00c0 02       		.byte	0x2
 694 00c1 38       		.byte	0x38
 695 00c2 0E       		.byte	0xe
 696 00c3 64000000 		.4byte	0x64
 697 00c7 04       		.uleb128 0x4
 698 00c8 0A030000 		.4byte	.LASF15
 699 00cc 02       		.byte	0x2
 700 00cd 39       		.byte	0x39
 701 00ce 17       		.byte	0x17
 702 00cf 77000000 		.4byte	0x77
 703 00d3 04       		.uleb128 0x4
 704 00d4 2C000000 		.4byte	.LASF16
 705 00d8 02       		.byte	0x2
 706 00d9 3F       		.byte	0x3f
 707 00da 13       		.byte	0x13
 708 00db 7E000000 		.4byte	0x7e
 709 00df 02       		.uleb128 0x2
 710 00e0 01       		.byte	0x1
 711 00e1 08       		.byte	0x8
 712 00e2 C3020000 		.4byte	.LASF17
 713 00e6 06       		.uleb128 0x6
 714 00e7 04       		.byte	0x4
 715 00e8 AF000000 		.4byte	0xaf
 716 00ec 0A       		.uleb128 0xa
 717 00ed 2B020000 		.4byte	.LASF25
 718 00f1 01       		.byte	0x1
 719 00f2 85       		.byte	0x85
 720 00f3 14       		.byte	0x14
 721 00f4 C7000000 		.4byte	0xc7
 722 00f8 05       		.byte	0x5
 723 00f9 03       		.byte	0x3
 724 00fa 00000000 		.4byte	uxCriticalNesting
 725 00fe 0B       		.uleb128 0xb
 726 00ff 01       		.byte	0x1
 727 0100 C6010000 		.4byte	.LASF34
 728 0104 06       		.byte	0x6
 729 0105 AF08     		.2byte	0x8af
 730 0107 0C       		.byte	0xc
 731 0108 01       		.byte	0x1
 732 0109 BB000000 		.4byte	0xbb
 733 010d 01       		.byte	0x1
 734 010e 0C       		.uleb128 0xc
 735 010f 01       		.byte	0x1
 736 0110 37000000 		.4byte	.LASF35
 737 0114 06       		.byte	0x6
 738 0115 0309     		.2byte	0x903
 739 0117 17       		.byte	0x17
ARM GAS  /tmp/ccIusuWx.s 			page 30


 740 0118 01       		.byte	0x1
 741 0119 01       		.byte	0x1
 742 011a 0D       		.uleb128 0xd
 743 011b 01       		.byte	0x1
 744 011c 3D020000 		.4byte	.LASF18
 745 0120 01       		.byte	0x1
 746 0121 6902     		.2byte	0x269
 747 0123 1E       		.byte	0x1e
 748 0124 01       		.byte	0x1
 749 0125 30010000 		.4byte	.LFB15
 750 0129 46010000 		.4byte	.LFE15
 751 012d 02       		.byte	0x2
 752 012e 7D       		.byte	0x7d
 753 012f 00       		.sleb128 0
 754 0130 01       		.byte	0x1
 755 0131 0E       		.uleb128 0xe
 756 0132 01       		.byte	0x1
 757 0133 4A000000 		.4byte	.LASF20
 758 0137 01       		.byte	0x1
 759 0138 AA01     		.2byte	0x1aa
 760 013a 06       		.byte	0x6
 761 013b 01       		.byte	0x1
 762 013c 04010000 		.4byte	.LFB14
 763 0140 30010000 		.4byte	.LFE14
 764 0144 00000000 		.4byte	.LLST4
 765 0148 01       		.byte	0x1
 766 0149 A1010000 		.4byte	0x1a1
 767 014d 0F       		.uleb128 0xf
 768 014e 6C030000 		.4byte	0x36c
 769 0152 04010000 		.4byte	.LBI18
 770 0156 02       		.byte	.LVU68
 771 0157 00000000 		.4byte	.Ldebug_ranges0+0
 772 015b 01       		.byte	0x1
 773 015c B001     		.2byte	0x1b0
 774 015e 02       		.byte	0x2
 775 015f 6F010000 		.4byte	0x16f
 776 0163 10       		.uleb128 0x10
 777 0164 00000000 		.4byte	.Ldebug_ranges0+0
 778 0168 11       		.uleb128 0x11
 779 0169 76030000 		.4byte	0x376
 780 016d 00       		.byte	0
 781 016e 00       		.byte	0
 782 016f 12       		.uleb128 0x12
 783 0170 51030000 		.4byte	0x351
 784 0174 28010000 		.4byte	.LBI22
 785 0178 01       		.byte	.LVU79
 786 0179 28010000 		.4byte	.LBB22
 787 017d 2E010000 		.4byte	.LBE22
 788 0181 01       		.byte	0x1
 789 0182 BA01     		.2byte	0x1ba
 790 0184 02       		.byte	0x2
 791 0185 97010000 		.4byte	0x197
 792 0189 13       		.uleb128 0x13
 793 018a 5F030000 		.4byte	0x35f
 794 018e 22000000 		.4byte	.LLST5
 795 0192 20000000 		.4byte	.LVUS5
 796 0196 00       		.byte	0
ARM GAS  /tmp/ccIusuWx.s 			page 31


 797 0197 14       		.uleb128 0x14
 798 0198 1A010000 		.4byte	.LVL9
 799 019c FE000000 		.4byte	0xfe
 800 01a0 00       		.byte	0
 801 01a1 0D       		.uleb128 0xd
 802 01a2 01       		.byte	0x1
 803 01a3 8A020000 		.4byte	.LASF19
 804 01a7 01       		.byte	0x1
 805 01a8 8501     		.2byte	0x185
 806 01aa 06       		.byte	0x6
 807 01ab 01       		.byte	0x1
 808 01ac B8000000 		.4byte	.LFB13
 809 01b0 04010000 		.4byte	.LFE13
 810 01b4 02       		.byte	0x2
 811 01b5 7D       		.byte	0x7d
 812 01b6 00       		.sleb128 0
 813 01b7 01       		.byte	0x1
 814 01b8 15       		.uleb128 0x15
 815 01b9 01       		.byte	0x1
 816 01ba 99020000 		.4byte	.LASF21
 817 01be 01       		.byte	0x1
 818 01bf 7A01     		.2byte	0x17a
 819 01c1 06       		.byte	0x6
 820 01c2 01       		.byte	0x1
 821 01c3 A4000000 		.4byte	.LFB12
 822 01c7 B8000000 		.4byte	.LFE12
 823 01cb 02       		.byte	0x2
 824 01cc 7D       		.byte	0x7d
 825 01cd 00       		.sleb128 0
 826 01ce 01       		.byte	0x1
 827 01cf F8010000 		.4byte	0x1f8
 828 01d3 16       		.uleb128 0x16
 829 01d4 51030000 		.4byte	0x351
 830 01d8 AE000000 		.4byte	.LBI16
 831 01dc 01       		.byte	.LVU59
 832 01dd AE000000 		.4byte	.LBB16
 833 01e1 B2000000 		.4byte	.LBE16
 834 01e5 01       		.byte	0x1
 835 01e6 8001     		.2byte	0x180
 836 01e8 03       		.byte	0x3
 837 01e9 13       		.uleb128 0x13
 838 01ea 5F030000 		.4byte	0x35f
 839 01ee 38000000 		.4byte	.LLST3
 840 01f2 36000000 		.4byte	.LVUS3
 841 01f6 00       		.byte	0
 842 01f7 00       		.byte	0
 843 01f8 15       		.uleb128 0x15
 844 01f9 01       		.byte	0x1
 845 01fa 00000000 		.4byte	.LASF22
 846 01fe 01       		.byte	0x1
 847 01ff 6901     		.2byte	0x169
 848 0201 06       		.byte	0x6
 849 0202 01       		.byte	0x1
 850 0203 86000000 		.4byte	.LFB11
 851 0207 A4000000 		.4byte	.LFE11
 852 020b 02       		.byte	0x2
 853 020c 7D       		.byte	0x7d
ARM GAS  /tmp/ccIusuWx.s 			page 32


 854 020d 00       		.sleb128 0
 855 020e 01       		.byte	0x1
 856 020f 30020000 		.4byte	0x230
 857 0213 16       		.uleb128 0x16
 858 0214 6C030000 		.4byte	0x36c
 859 0218 86000000 		.4byte	.LBI14
 860 021c 02       		.byte	.LVU44
 861 021d 86000000 		.4byte	.LBB14
 862 0221 96000000 		.4byte	.LBE14
 863 0225 01       		.byte	0x1
 864 0226 6B01     		.2byte	0x16b
 865 0228 02       		.byte	0x2
 866 0229 11       		.uleb128 0x11
 867 022a 76030000 		.4byte	0x376
 868 022e 00       		.byte	0
 869 022f 00       		.byte	0
 870 0230 0D       		.uleb128 0xd
 871 0231 01       		.byte	0x1
 872 0232 1A000000 		.4byte	.LASF23
 873 0236 01       		.byte	0x1
 874 0237 6101     		.2byte	0x161
 875 0239 06       		.byte	0x6
 876 023a 01       		.byte	0x1
 877 023b 84000000 		.4byte	.LFB10
 878 023f 86000000 		.4byte	.LFE10
 879 0243 02       		.byte	0x2
 880 0244 7D       		.byte	0x7d
 881 0245 00       		.sleb128 0
 882 0246 01       		.byte	0x1
 883 0247 17       		.uleb128 0x17
 884 0248 01       		.byte	0x1
 885 0249 F6020000 		.4byte	.LASF27
 886 024d 01       		.byte	0x1
 887 024e 0101     		.2byte	0x101
 888 0250 0C       		.byte	0xc
 889 0251 01       		.byte	0x1
 890 0252 BB000000 		.4byte	0xbb
 891 0256 46010000 		.4byte	.LFB9
 892 025a 84010000 		.4byte	.LFE9
 893 025e 4C000000 		.4byte	.LLST6
 894 0262 01       		.byte	0x1
 895 0263 8C020000 		.4byte	0x28c
 896 0267 14       		.uleb128 0x14
 897 0268 6A010000 		.4byte	.LVL12
 898 026c 1A010000 		.4byte	0x11a
 899 0270 14       		.uleb128 0x14
 900 0271 72010000 		.4byte	.LVL13
 901 0275 8C020000 		.4byte	0x28c
 902 0279 14       		.uleb128 0x14
 903 027a 76010000 		.4byte	.LVL14
 904 027e 0E010000 		.4byte	0x10e
 905 0282 14       		.uleb128 0x14
 906 0283 7A010000 		.4byte	.LVL15
 907 0287 B7020000 		.4byte	0x2b7
 908 028b 00       		.byte	0
 909 028c 18       		.uleb128 0x18
 910 028d C8020000 		.4byte	.LASF36
ARM GAS  /tmp/ccIusuWx.s 			page 33


 911 0291 01       		.byte	0x1
 912 0292 ED       		.byte	0xed
 913 0293 0D       		.byte	0xd
 914 0294 01       		.byte	0x1
 915 0295 20000000 		.4byte	.LFB8
 916 0299 3A000000 		.4byte	.LFE8
 917 029d 02       		.byte	0x2
 918 029e 7D       		.byte	0x7d
 919 029f 00       		.sleb128 0
 920 02a0 01       		.byte	0x1
 921 02a1 19       		.uleb128 0x19
 922 02a2 01       		.byte	0x1
 923 02a3 64020000 		.4byte	.LASF24
 924 02a7 01       		.byte	0x1
 925 02a8 D9       		.byte	0xd9
 926 02a9 06       		.byte	0x6
 927 02aa 01       		.byte	0x1
 928 02ab 5C000000 		.4byte	.LFB7
 929 02af 84000000 		.4byte	.LFE7
 930 02b3 02       		.byte	0x2
 931 02b4 7D       		.byte	0x7d
 932 02b5 00       		.sleb128 0
 933 02b6 01       		.byte	0x1
 934 02b7 1A       		.uleb128 0x1a
 935 02b8 D0000000 		.4byte	.LASF37
 936 02bc 01       		.byte	0x1
 937 02bd C0       		.byte	0xc0
 938 02be 0D       		.byte	0xd
 939 02bf 01       		.byte	0x1
 940 02c0 00000000 		.4byte	.LFB6
 941 02c4 20000000 		.4byte	.LFE6
 942 02c8 6C000000 		.4byte	.LLST0
 943 02cc 01       		.byte	0x1
 944 02cd FC020000 		.4byte	0x2fc
 945 02d1 0A       		.uleb128 0xa
 946 02d2 F0000000 		.4byte	.LASF26
 947 02d6 01       		.byte	0x1
 948 02d7 C2       		.byte	0xc2
 949 02d8 13       		.byte	0x13
 950 02d9 8A000000 		.4byte	0x8a
 951 02dd 02       		.byte	0x2
 952 02de 91       		.byte	0x91
 953 02df 7C       		.sleb128 -4
 954 02e0 1B       		.uleb128 0x1b
 955 02e1 6C030000 		.4byte	0x36c
 956 02e5 06000000 		.4byte	.LBI12
 957 02e9 02       		.byte	.LVU7
 958 02ea 06000000 		.4byte	.LBB12
 959 02ee 16000000 		.4byte	.LBE12
 960 02f2 01       		.byte	0x1
 961 02f3 CB       		.byte	0xcb
 962 02f4 02       		.byte	0x2
 963 02f5 11       		.uleb128 0x11
 964 02f6 76030000 		.4byte	0x376
 965 02fa 00       		.byte	0
 966 02fb 00       		.byte	0
 967 02fc 1C       		.uleb128 0x1c
ARM GAS  /tmp/ccIusuWx.s 			page 34


 968 02fd 01       		.byte	0x1
 969 02fe B0010000 		.4byte	.LASF28
 970 0302 01       		.byte	0x1
 971 0303 AE       		.byte	0xae
 972 0304 0E       		.byte	0xe
 973 0305 01       		.byte	0x1
 974 0306 E6000000 		.4byte	0xe6
 975 030a 3A000000 		.4byte	.LFB5
 976 030e 5C000000 		.4byte	.LFE5
 977 0312 02       		.byte	0x2
 978 0313 7D       		.byte	0x7d
 979 0314 00       		.sleb128 0
 980 0315 01       		.byte	0x1
 981 0316 51030000 		.4byte	0x351
 982 031a 1D       		.uleb128 0x1d
 983 031b 7D020000 		.4byte	.LASF29
 984 031f 01       		.byte	0x1
 985 0320 AE       		.byte	0xae
 986 0321 32       		.byte	0x32
 987 0322 E6000000 		.4byte	0xe6
 988 0326 A6000000 		.4byte	.LLST1
 989 032a 98000000 		.4byte	.LVUS1
 990 032e 1D       		.uleb128 0x1d
 991 032f 13000000 		.4byte	.LASF30
 992 0333 01       		.byte	0x1
 993 0334 AE       		.byte	0xae
 994 0335 4F       		.byte	0x4f
 995 0336 8F000000 		.4byte	0x8f
 996 033a 09010000 		.4byte	.LLST2
 997 033e 05010000 		.4byte	.LVUS2
 998 0342 1E       		.uleb128 0x1e
 999 0343 70020000 		.4byte	.LASF38
 1000 0347 01       		.byte	0x1
 1001 0348 AE       		.byte	0xae
 1002 0349 5D       		.byte	0x5d
 1003 034a AD000000 		.4byte	0xad
 1004 034e 01       		.byte	0x1
 1005 034f 52       		.byte	0x52
 1006 0350 00       		.byte	0
 1007 0351 1F       		.uleb128 0x1f
 1008 0352 D9010000 		.4byte	.LASF39
 1009 0356 02       		.byte	0x2
 1010 0357 E3       		.byte	0xe3
 1011 0358 1E       		.byte	0x1e
 1012 0359 01       		.byte	0x1
 1013 035a 03       		.byte	0x3
 1014 035b 6C030000 		.4byte	0x36c
 1015 035f 20       		.uleb128 0x20
 1016 0360 B4020000 		.4byte	.LASF40
 1017 0364 02       		.byte	0x2
 1018 0365 E3       		.byte	0xe3
 1019 0366 38       		.byte	0x38
 1020 0367 7E000000 		.4byte	0x7e
 1021 036b 00       		.byte	0
 1022 036c 21       		.uleb128 0x21
 1023 036d 19020000 		.4byte	.LASF41
 1024 0371 02       		.byte	0x2
ARM GAS  /tmp/ccIusuWx.s 			page 35


 1025 0372 BF       		.byte	0xbf
 1026 0373 1E       		.byte	0x1e
 1027 0374 01       		.byte	0x1
 1028 0375 03       		.byte	0x3
 1029 0376 22       		.uleb128 0x22
 1030 0377 A3010000 		.4byte	.LASF42
 1031 037b 02       		.byte	0x2
 1032 037c C1       		.byte	0xc1
 1033 037d 0A       		.byte	0xa
 1034 037e 7E000000 		.4byte	0x7e
 1035 0382 00       		.byte	0
 1036 0383 00       		.byte	0
 1037              		.section	.debug_abbrev,"",%progbits
 1038              	.Ldebug_abbrev0:
 1039 0000 01       		.uleb128 0x1
 1040 0001 11       		.uleb128 0x11
 1041 0002 01       		.byte	0x1
 1042 0003 25       		.uleb128 0x25
 1043 0004 0E       		.uleb128 0xe
 1044 0005 13       		.uleb128 0x13
 1045 0006 0B       		.uleb128 0xb
 1046 0007 03       		.uleb128 0x3
 1047 0008 0E       		.uleb128 0xe
 1048 0009 1B       		.uleb128 0x1b
 1049 000a 0E       		.uleb128 0xe
 1050 000b 11       		.uleb128 0x11
 1051 000c 01       		.uleb128 0x1
 1052 000d 12       		.uleb128 0x12
 1053 000e 01       		.uleb128 0x1
 1054 000f 10       		.uleb128 0x10
 1055 0010 06       		.uleb128 0x6
 1056 0011 00       		.byte	0
 1057 0012 00       		.byte	0
 1058 0013 02       		.uleb128 0x2
 1059 0014 24       		.uleb128 0x24
 1060 0015 00       		.byte	0
 1061 0016 0B       		.uleb128 0xb
 1062 0017 0B       		.uleb128 0xb
 1063 0018 3E       		.uleb128 0x3e
 1064 0019 0B       		.uleb128 0xb
 1065 001a 03       		.uleb128 0x3
 1066 001b 0E       		.uleb128 0xe
 1067 001c 00       		.byte	0
 1068 001d 00       		.byte	0
 1069 001e 03       		.uleb128 0x3
 1070 001f 24       		.uleb128 0x24
 1071 0020 00       		.byte	0
 1072 0021 0B       		.uleb128 0xb
 1073 0022 0B       		.uleb128 0xb
 1074 0023 3E       		.uleb128 0x3e
 1075 0024 0B       		.uleb128 0xb
 1076 0025 03       		.uleb128 0x3
 1077 0026 08       		.uleb128 0x8
 1078 0027 00       		.byte	0
 1079 0028 00       		.byte	0
 1080 0029 04       		.uleb128 0x4
 1081 002a 16       		.uleb128 0x16
ARM GAS  /tmp/ccIusuWx.s 			page 36


 1082 002b 00       		.byte	0
 1083 002c 03       		.uleb128 0x3
 1084 002d 0E       		.uleb128 0xe
 1085 002e 3A       		.uleb128 0x3a
 1086 002f 0B       		.uleb128 0xb
 1087 0030 3B       		.uleb128 0x3b
 1088 0031 0B       		.uleb128 0xb
 1089 0032 39       		.uleb128 0x39
 1090 0033 0B       		.uleb128 0xb
 1091 0034 49       		.uleb128 0x49
 1092 0035 13       		.uleb128 0x13
 1093 0036 00       		.byte	0
 1094 0037 00       		.byte	0
 1095 0038 05       		.uleb128 0x5
 1096 0039 35       		.uleb128 0x35
 1097 003a 00       		.byte	0
 1098 003b 49       		.uleb128 0x49
 1099 003c 13       		.uleb128 0x13
 1100 003d 00       		.byte	0
 1101 003e 00       		.byte	0
 1102 003f 06       		.uleb128 0x6
 1103 0040 0F       		.uleb128 0xf
 1104 0041 00       		.byte	0
 1105 0042 0B       		.uleb128 0xb
 1106 0043 0B       		.uleb128 0xb
 1107 0044 49       		.uleb128 0x49
 1108 0045 13       		.uleb128 0x13
 1109 0046 00       		.byte	0
 1110 0047 00       		.byte	0
 1111 0048 07       		.uleb128 0x7
 1112 0049 15       		.uleb128 0x15
 1113 004a 01       		.byte	0x1
 1114 004b 27       		.uleb128 0x27
 1115 004c 0C       		.uleb128 0xc
 1116 004d 01       		.uleb128 0x1
 1117 004e 13       		.uleb128 0x13
 1118 004f 00       		.byte	0
 1119 0050 00       		.byte	0
 1120 0051 08       		.uleb128 0x8
 1121 0052 05       		.uleb128 0x5
 1122 0053 00       		.byte	0
 1123 0054 49       		.uleb128 0x49
 1124 0055 13       		.uleb128 0x13
 1125 0056 00       		.byte	0
 1126 0057 00       		.byte	0
 1127 0058 09       		.uleb128 0x9
 1128 0059 0F       		.uleb128 0xf
 1129 005a 00       		.byte	0
 1130 005b 0B       		.uleb128 0xb
 1131 005c 0B       		.uleb128 0xb
 1132 005d 00       		.byte	0
 1133 005e 00       		.byte	0
 1134 005f 0A       		.uleb128 0xa
 1135 0060 34       		.uleb128 0x34
 1136 0061 00       		.byte	0
 1137 0062 03       		.uleb128 0x3
 1138 0063 0E       		.uleb128 0xe
ARM GAS  /tmp/ccIusuWx.s 			page 37


 1139 0064 3A       		.uleb128 0x3a
 1140 0065 0B       		.uleb128 0xb
 1141 0066 3B       		.uleb128 0x3b
 1142 0067 0B       		.uleb128 0xb
 1143 0068 39       		.uleb128 0x39
 1144 0069 0B       		.uleb128 0xb
 1145 006a 49       		.uleb128 0x49
 1146 006b 13       		.uleb128 0x13
 1147 006c 02       		.uleb128 0x2
 1148 006d 0A       		.uleb128 0xa
 1149 006e 00       		.byte	0
 1150 006f 00       		.byte	0
 1151 0070 0B       		.uleb128 0xb
 1152 0071 2E       		.uleb128 0x2e
 1153 0072 00       		.byte	0
 1154 0073 3F       		.uleb128 0x3f
 1155 0074 0C       		.uleb128 0xc
 1156 0075 03       		.uleb128 0x3
 1157 0076 0E       		.uleb128 0xe
 1158 0077 3A       		.uleb128 0x3a
 1159 0078 0B       		.uleb128 0xb
 1160 0079 3B       		.uleb128 0x3b
 1161 007a 05       		.uleb128 0x5
 1162 007b 39       		.uleb128 0x39
 1163 007c 0B       		.uleb128 0xb
 1164 007d 27       		.uleb128 0x27
 1165 007e 0C       		.uleb128 0xc
 1166 007f 49       		.uleb128 0x49
 1167 0080 13       		.uleb128 0x13
 1168 0081 3C       		.uleb128 0x3c
 1169 0082 0C       		.uleb128 0xc
 1170 0083 00       		.byte	0
 1171 0084 00       		.byte	0
 1172 0085 0C       		.uleb128 0xc
 1173 0086 2E       		.uleb128 0x2e
 1174 0087 00       		.byte	0
 1175 0088 3F       		.uleb128 0x3f
 1176 0089 0C       		.uleb128 0xc
 1177 008a 03       		.uleb128 0x3
 1178 008b 0E       		.uleb128 0xe
 1179 008c 3A       		.uleb128 0x3a
 1180 008d 0B       		.uleb128 0xb
 1181 008e 3B       		.uleb128 0x3b
 1182 008f 05       		.uleb128 0x5
 1183 0090 39       		.uleb128 0x39
 1184 0091 0B       		.uleb128 0xb
 1185 0092 27       		.uleb128 0x27
 1186 0093 0C       		.uleb128 0xc
 1187 0094 3C       		.uleb128 0x3c
 1188 0095 0C       		.uleb128 0xc
 1189 0096 00       		.byte	0
 1190 0097 00       		.byte	0
 1191 0098 0D       		.uleb128 0xd
 1192 0099 2E       		.uleb128 0x2e
 1193 009a 00       		.byte	0
 1194 009b 3F       		.uleb128 0x3f
 1195 009c 0C       		.uleb128 0xc
ARM GAS  /tmp/ccIusuWx.s 			page 38


 1196 009d 03       		.uleb128 0x3
 1197 009e 0E       		.uleb128 0xe
 1198 009f 3A       		.uleb128 0x3a
 1199 00a0 0B       		.uleb128 0xb
 1200 00a1 3B       		.uleb128 0x3b
 1201 00a2 05       		.uleb128 0x5
 1202 00a3 39       		.uleb128 0x39
 1203 00a4 0B       		.uleb128 0xb
 1204 00a5 27       		.uleb128 0x27
 1205 00a6 0C       		.uleb128 0xc
 1206 00a7 11       		.uleb128 0x11
 1207 00a8 01       		.uleb128 0x1
 1208 00a9 12       		.uleb128 0x12
 1209 00aa 01       		.uleb128 0x1
 1210 00ab 40       		.uleb128 0x40
 1211 00ac 0A       		.uleb128 0xa
 1212 00ad 9742     		.uleb128 0x2117
 1213 00af 0C       		.uleb128 0xc
 1214 00b0 00       		.byte	0
 1215 00b1 00       		.byte	0
 1216 00b2 0E       		.uleb128 0xe
 1217 00b3 2E       		.uleb128 0x2e
 1218 00b4 01       		.byte	0x1
 1219 00b5 3F       		.uleb128 0x3f
 1220 00b6 0C       		.uleb128 0xc
 1221 00b7 03       		.uleb128 0x3
 1222 00b8 0E       		.uleb128 0xe
 1223 00b9 3A       		.uleb128 0x3a
 1224 00ba 0B       		.uleb128 0xb
 1225 00bb 3B       		.uleb128 0x3b
 1226 00bc 05       		.uleb128 0x5
 1227 00bd 39       		.uleb128 0x39
 1228 00be 0B       		.uleb128 0xb
 1229 00bf 27       		.uleb128 0x27
 1230 00c0 0C       		.uleb128 0xc
 1231 00c1 11       		.uleb128 0x11
 1232 00c2 01       		.uleb128 0x1
 1233 00c3 12       		.uleb128 0x12
 1234 00c4 01       		.uleb128 0x1
 1235 00c5 40       		.uleb128 0x40
 1236 00c6 06       		.uleb128 0x6
 1237 00c7 9742     		.uleb128 0x2117
 1238 00c9 0C       		.uleb128 0xc
 1239 00ca 01       		.uleb128 0x1
 1240 00cb 13       		.uleb128 0x13
 1241 00cc 00       		.byte	0
 1242 00cd 00       		.byte	0
 1243 00ce 0F       		.uleb128 0xf
 1244 00cf 1D       		.uleb128 0x1d
 1245 00d0 01       		.byte	0x1
 1246 00d1 31       		.uleb128 0x31
 1247 00d2 13       		.uleb128 0x13
 1248 00d3 52       		.uleb128 0x52
 1249 00d4 01       		.uleb128 0x1
 1250 00d5 B842     		.uleb128 0x2138
 1251 00d7 0B       		.uleb128 0xb
 1252 00d8 55       		.uleb128 0x55
ARM GAS  /tmp/ccIusuWx.s 			page 39


 1253 00d9 06       		.uleb128 0x6
 1254 00da 58       		.uleb128 0x58
 1255 00db 0B       		.uleb128 0xb
 1256 00dc 59       		.uleb128 0x59
 1257 00dd 05       		.uleb128 0x5
 1258 00de 57       		.uleb128 0x57
 1259 00df 0B       		.uleb128 0xb
 1260 00e0 01       		.uleb128 0x1
 1261 00e1 13       		.uleb128 0x13
 1262 00e2 00       		.byte	0
 1263 00e3 00       		.byte	0
 1264 00e4 10       		.uleb128 0x10
 1265 00e5 0B       		.uleb128 0xb
 1266 00e6 01       		.byte	0x1
 1267 00e7 55       		.uleb128 0x55
 1268 00e8 06       		.uleb128 0x6
 1269 00e9 00       		.byte	0
 1270 00ea 00       		.byte	0
 1271 00eb 11       		.uleb128 0x11
 1272 00ec 34       		.uleb128 0x34
 1273 00ed 00       		.byte	0
 1274 00ee 31       		.uleb128 0x31
 1275 00ef 13       		.uleb128 0x13
 1276 00f0 00       		.byte	0
 1277 00f1 00       		.byte	0
 1278 00f2 12       		.uleb128 0x12
 1279 00f3 1D       		.uleb128 0x1d
 1280 00f4 01       		.byte	0x1
 1281 00f5 31       		.uleb128 0x31
 1282 00f6 13       		.uleb128 0x13
 1283 00f7 52       		.uleb128 0x52
 1284 00f8 01       		.uleb128 0x1
 1285 00f9 B842     		.uleb128 0x2138
 1286 00fb 0B       		.uleb128 0xb
 1287 00fc 11       		.uleb128 0x11
 1288 00fd 01       		.uleb128 0x1
 1289 00fe 12       		.uleb128 0x12
 1290 00ff 01       		.uleb128 0x1
 1291 0100 58       		.uleb128 0x58
 1292 0101 0B       		.uleb128 0xb
 1293 0102 59       		.uleb128 0x59
 1294 0103 05       		.uleb128 0x5
 1295 0104 57       		.uleb128 0x57
 1296 0105 0B       		.uleb128 0xb
 1297 0106 01       		.uleb128 0x1
 1298 0107 13       		.uleb128 0x13
 1299 0108 00       		.byte	0
 1300 0109 00       		.byte	0
 1301 010a 13       		.uleb128 0x13
 1302 010b 05       		.uleb128 0x5
 1303 010c 00       		.byte	0
 1304 010d 31       		.uleb128 0x31
 1305 010e 13       		.uleb128 0x13
 1306 010f 02       		.uleb128 0x2
 1307 0110 06       		.uleb128 0x6
 1308 0111 B742     		.uleb128 0x2137
 1309 0113 06       		.uleb128 0x6
ARM GAS  /tmp/ccIusuWx.s 			page 40


 1310 0114 00       		.byte	0
 1311 0115 00       		.byte	0
 1312 0116 14       		.uleb128 0x14
 1313 0117 898201   		.uleb128 0x4109
 1314 011a 00       		.byte	0
 1315 011b 11       		.uleb128 0x11
 1316 011c 01       		.uleb128 0x1
 1317 011d 31       		.uleb128 0x31
 1318 011e 13       		.uleb128 0x13
 1319 011f 00       		.byte	0
 1320 0120 00       		.byte	0
 1321 0121 15       		.uleb128 0x15
 1322 0122 2E       		.uleb128 0x2e
 1323 0123 01       		.byte	0x1
 1324 0124 3F       		.uleb128 0x3f
 1325 0125 0C       		.uleb128 0xc
 1326 0126 03       		.uleb128 0x3
 1327 0127 0E       		.uleb128 0xe
 1328 0128 3A       		.uleb128 0x3a
 1329 0129 0B       		.uleb128 0xb
 1330 012a 3B       		.uleb128 0x3b
 1331 012b 05       		.uleb128 0x5
 1332 012c 39       		.uleb128 0x39
 1333 012d 0B       		.uleb128 0xb
 1334 012e 27       		.uleb128 0x27
 1335 012f 0C       		.uleb128 0xc
 1336 0130 11       		.uleb128 0x11
 1337 0131 01       		.uleb128 0x1
 1338 0132 12       		.uleb128 0x12
 1339 0133 01       		.uleb128 0x1
 1340 0134 40       		.uleb128 0x40
 1341 0135 0A       		.uleb128 0xa
 1342 0136 9742     		.uleb128 0x2117
 1343 0138 0C       		.uleb128 0xc
 1344 0139 01       		.uleb128 0x1
 1345 013a 13       		.uleb128 0x13
 1346 013b 00       		.byte	0
 1347 013c 00       		.byte	0
 1348 013d 16       		.uleb128 0x16
 1349 013e 1D       		.uleb128 0x1d
 1350 013f 01       		.byte	0x1
 1351 0140 31       		.uleb128 0x31
 1352 0141 13       		.uleb128 0x13
 1353 0142 52       		.uleb128 0x52
 1354 0143 01       		.uleb128 0x1
 1355 0144 B842     		.uleb128 0x2138
 1356 0146 0B       		.uleb128 0xb
 1357 0147 11       		.uleb128 0x11
 1358 0148 01       		.uleb128 0x1
 1359 0149 12       		.uleb128 0x12
 1360 014a 01       		.uleb128 0x1
 1361 014b 58       		.uleb128 0x58
 1362 014c 0B       		.uleb128 0xb
 1363 014d 59       		.uleb128 0x59
 1364 014e 05       		.uleb128 0x5
 1365 014f 57       		.uleb128 0x57
 1366 0150 0B       		.uleb128 0xb
ARM GAS  /tmp/ccIusuWx.s 			page 41


 1367 0151 00       		.byte	0
 1368 0152 00       		.byte	0
 1369 0153 17       		.uleb128 0x17
 1370 0154 2E       		.uleb128 0x2e
 1371 0155 01       		.byte	0x1
 1372 0156 3F       		.uleb128 0x3f
 1373 0157 0C       		.uleb128 0xc
 1374 0158 03       		.uleb128 0x3
 1375 0159 0E       		.uleb128 0xe
 1376 015a 3A       		.uleb128 0x3a
 1377 015b 0B       		.uleb128 0xb
 1378 015c 3B       		.uleb128 0x3b
 1379 015d 05       		.uleb128 0x5
 1380 015e 39       		.uleb128 0x39
 1381 015f 0B       		.uleb128 0xb
 1382 0160 27       		.uleb128 0x27
 1383 0161 0C       		.uleb128 0xc
 1384 0162 49       		.uleb128 0x49
 1385 0163 13       		.uleb128 0x13
 1386 0164 11       		.uleb128 0x11
 1387 0165 01       		.uleb128 0x1
 1388 0166 12       		.uleb128 0x12
 1389 0167 01       		.uleb128 0x1
 1390 0168 40       		.uleb128 0x40
 1391 0169 06       		.uleb128 0x6
 1392 016a 9742     		.uleb128 0x2117
 1393 016c 0C       		.uleb128 0xc
 1394 016d 01       		.uleb128 0x1
 1395 016e 13       		.uleb128 0x13
 1396 016f 00       		.byte	0
 1397 0170 00       		.byte	0
 1398 0171 18       		.uleb128 0x18
 1399 0172 2E       		.uleb128 0x2e
 1400 0173 00       		.byte	0
 1401 0174 03       		.uleb128 0x3
 1402 0175 0E       		.uleb128 0xe
 1403 0176 3A       		.uleb128 0x3a
 1404 0177 0B       		.uleb128 0xb
 1405 0178 3B       		.uleb128 0x3b
 1406 0179 0B       		.uleb128 0xb
 1407 017a 39       		.uleb128 0x39
 1408 017b 0B       		.uleb128 0xb
 1409 017c 27       		.uleb128 0x27
 1410 017d 0C       		.uleb128 0xc
 1411 017e 11       		.uleb128 0x11
 1412 017f 01       		.uleb128 0x1
 1413 0180 12       		.uleb128 0x12
 1414 0181 01       		.uleb128 0x1
 1415 0182 40       		.uleb128 0x40
 1416 0183 0A       		.uleb128 0xa
 1417 0184 9742     		.uleb128 0x2117
 1418 0186 0C       		.uleb128 0xc
 1419 0187 00       		.byte	0
 1420 0188 00       		.byte	0
 1421 0189 19       		.uleb128 0x19
 1422 018a 2E       		.uleb128 0x2e
 1423 018b 00       		.byte	0
ARM GAS  /tmp/ccIusuWx.s 			page 42


 1424 018c 3F       		.uleb128 0x3f
 1425 018d 0C       		.uleb128 0xc
 1426 018e 03       		.uleb128 0x3
 1427 018f 0E       		.uleb128 0xe
 1428 0190 3A       		.uleb128 0x3a
 1429 0191 0B       		.uleb128 0xb
 1430 0192 3B       		.uleb128 0x3b
 1431 0193 0B       		.uleb128 0xb
 1432 0194 39       		.uleb128 0x39
 1433 0195 0B       		.uleb128 0xb
 1434 0196 27       		.uleb128 0x27
 1435 0197 0C       		.uleb128 0xc
 1436 0198 11       		.uleb128 0x11
 1437 0199 01       		.uleb128 0x1
 1438 019a 12       		.uleb128 0x12
 1439 019b 01       		.uleb128 0x1
 1440 019c 40       		.uleb128 0x40
 1441 019d 0A       		.uleb128 0xa
 1442 019e 9742     		.uleb128 0x2117
 1443 01a0 0C       		.uleb128 0xc
 1444 01a1 00       		.byte	0
 1445 01a2 00       		.byte	0
 1446 01a3 1A       		.uleb128 0x1a
 1447 01a4 2E       		.uleb128 0x2e
 1448 01a5 01       		.byte	0x1
 1449 01a6 03       		.uleb128 0x3
 1450 01a7 0E       		.uleb128 0xe
 1451 01a8 3A       		.uleb128 0x3a
 1452 01a9 0B       		.uleb128 0xb
 1453 01aa 3B       		.uleb128 0x3b
 1454 01ab 0B       		.uleb128 0xb
 1455 01ac 39       		.uleb128 0x39
 1456 01ad 0B       		.uleb128 0xb
 1457 01ae 27       		.uleb128 0x27
 1458 01af 0C       		.uleb128 0xc
 1459 01b0 11       		.uleb128 0x11
 1460 01b1 01       		.uleb128 0x1
 1461 01b2 12       		.uleb128 0x12
 1462 01b3 01       		.uleb128 0x1
 1463 01b4 40       		.uleb128 0x40
 1464 01b5 06       		.uleb128 0x6
 1465 01b6 9742     		.uleb128 0x2117
 1466 01b8 0C       		.uleb128 0xc
 1467 01b9 01       		.uleb128 0x1
 1468 01ba 13       		.uleb128 0x13
 1469 01bb 00       		.byte	0
 1470 01bc 00       		.byte	0
 1471 01bd 1B       		.uleb128 0x1b
 1472 01be 1D       		.uleb128 0x1d
 1473 01bf 01       		.byte	0x1
 1474 01c0 31       		.uleb128 0x31
 1475 01c1 13       		.uleb128 0x13
 1476 01c2 52       		.uleb128 0x52
 1477 01c3 01       		.uleb128 0x1
 1478 01c4 B842     		.uleb128 0x2138
 1479 01c6 0B       		.uleb128 0xb
 1480 01c7 11       		.uleb128 0x11
ARM GAS  /tmp/ccIusuWx.s 			page 43


 1481 01c8 01       		.uleb128 0x1
 1482 01c9 12       		.uleb128 0x12
 1483 01ca 01       		.uleb128 0x1
 1484 01cb 58       		.uleb128 0x58
 1485 01cc 0B       		.uleb128 0xb
 1486 01cd 59       		.uleb128 0x59
 1487 01ce 0B       		.uleb128 0xb
 1488 01cf 57       		.uleb128 0x57
 1489 01d0 0B       		.uleb128 0xb
 1490 01d1 00       		.byte	0
 1491 01d2 00       		.byte	0
 1492 01d3 1C       		.uleb128 0x1c
 1493 01d4 2E       		.uleb128 0x2e
 1494 01d5 01       		.byte	0x1
 1495 01d6 3F       		.uleb128 0x3f
 1496 01d7 0C       		.uleb128 0xc
 1497 01d8 03       		.uleb128 0x3
 1498 01d9 0E       		.uleb128 0xe
 1499 01da 3A       		.uleb128 0x3a
 1500 01db 0B       		.uleb128 0xb
 1501 01dc 3B       		.uleb128 0x3b
 1502 01dd 0B       		.uleb128 0xb
 1503 01de 39       		.uleb128 0x39
 1504 01df 0B       		.uleb128 0xb
 1505 01e0 27       		.uleb128 0x27
 1506 01e1 0C       		.uleb128 0xc
 1507 01e2 49       		.uleb128 0x49
 1508 01e3 13       		.uleb128 0x13
 1509 01e4 11       		.uleb128 0x11
 1510 01e5 01       		.uleb128 0x1
 1511 01e6 12       		.uleb128 0x12
 1512 01e7 01       		.uleb128 0x1
 1513 01e8 40       		.uleb128 0x40
 1514 01e9 0A       		.uleb128 0xa
 1515 01ea 9742     		.uleb128 0x2117
 1516 01ec 0C       		.uleb128 0xc
 1517 01ed 01       		.uleb128 0x1
 1518 01ee 13       		.uleb128 0x13
 1519 01ef 00       		.byte	0
 1520 01f0 00       		.byte	0
 1521 01f1 1D       		.uleb128 0x1d
 1522 01f2 05       		.uleb128 0x5
 1523 01f3 00       		.byte	0
 1524 01f4 03       		.uleb128 0x3
 1525 01f5 0E       		.uleb128 0xe
 1526 01f6 3A       		.uleb128 0x3a
 1527 01f7 0B       		.uleb128 0xb
 1528 01f8 3B       		.uleb128 0x3b
 1529 01f9 0B       		.uleb128 0xb
 1530 01fa 39       		.uleb128 0x39
 1531 01fb 0B       		.uleb128 0xb
 1532 01fc 49       		.uleb128 0x49
 1533 01fd 13       		.uleb128 0x13
 1534 01fe 02       		.uleb128 0x2
 1535 01ff 06       		.uleb128 0x6
 1536 0200 B742     		.uleb128 0x2137
 1537 0202 06       		.uleb128 0x6
ARM GAS  /tmp/ccIusuWx.s 			page 44


 1538 0203 00       		.byte	0
 1539 0204 00       		.byte	0
 1540 0205 1E       		.uleb128 0x1e
 1541 0206 05       		.uleb128 0x5
 1542 0207 00       		.byte	0
 1543 0208 03       		.uleb128 0x3
 1544 0209 0E       		.uleb128 0xe
 1545 020a 3A       		.uleb128 0x3a
 1546 020b 0B       		.uleb128 0xb
 1547 020c 3B       		.uleb128 0x3b
 1548 020d 0B       		.uleb128 0xb
 1549 020e 39       		.uleb128 0x39
 1550 020f 0B       		.uleb128 0xb
 1551 0210 49       		.uleb128 0x49
 1552 0211 13       		.uleb128 0x13
 1553 0212 02       		.uleb128 0x2
 1554 0213 0A       		.uleb128 0xa
 1555 0214 00       		.byte	0
 1556 0215 00       		.byte	0
 1557 0216 1F       		.uleb128 0x1f
 1558 0217 2E       		.uleb128 0x2e
 1559 0218 01       		.byte	0x1
 1560 0219 03       		.uleb128 0x3
 1561 021a 0E       		.uleb128 0xe
 1562 021b 3A       		.uleb128 0x3a
 1563 021c 0B       		.uleb128 0xb
 1564 021d 3B       		.uleb128 0x3b
 1565 021e 0B       		.uleb128 0xb
 1566 021f 39       		.uleb128 0x39
 1567 0220 0B       		.uleb128 0xb
 1568 0221 27       		.uleb128 0x27
 1569 0222 0C       		.uleb128 0xc
 1570 0223 20       		.uleb128 0x20
 1571 0224 0B       		.uleb128 0xb
 1572 0225 01       		.uleb128 0x1
 1573 0226 13       		.uleb128 0x13
 1574 0227 00       		.byte	0
 1575 0228 00       		.byte	0
 1576 0229 20       		.uleb128 0x20
 1577 022a 05       		.uleb128 0x5
 1578 022b 00       		.byte	0
 1579 022c 03       		.uleb128 0x3
 1580 022d 0E       		.uleb128 0xe
 1581 022e 3A       		.uleb128 0x3a
 1582 022f 0B       		.uleb128 0xb
 1583 0230 3B       		.uleb128 0x3b
 1584 0231 0B       		.uleb128 0xb
 1585 0232 39       		.uleb128 0x39
 1586 0233 0B       		.uleb128 0xb
 1587 0234 49       		.uleb128 0x49
 1588 0235 13       		.uleb128 0x13
 1589 0236 00       		.byte	0
 1590 0237 00       		.byte	0
 1591 0238 21       		.uleb128 0x21
 1592 0239 2E       		.uleb128 0x2e
 1593 023a 01       		.byte	0x1
 1594 023b 03       		.uleb128 0x3
ARM GAS  /tmp/ccIusuWx.s 			page 45


 1595 023c 0E       		.uleb128 0xe
 1596 023d 3A       		.uleb128 0x3a
 1597 023e 0B       		.uleb128 0xb
 1598 023f 3B       		.uleb128 0x3b
 1599 0240 0B       		.uleb128 0xb
 1600 0241 39       		.uleb128 0x39
 1601 0242 0B       		.uleb128 0xb
 1602 0243 27       		.uleb128 0x27
 1603 0244 0C       		.uleb128 0xc
 1604 0245 20       		.uleb128 0x20
 1605 0246 0B       		.uleb128 0xb
 1606 0247 00       		.byte	0
 1607 0248 00       		.byte	0
 1608 0249 22       		.uleb128 0x22
 1609 024a 34       		.uleb128 0x34
 1610 024b 00       		.byte	0
 1611 024c 03       		.uleb128 0x3
 1612 024d 0E       		.uleb128 0xe
 1613 024e 3A       		.uleb128 0x3a
 1614 024f 0B       		.uleb128 0xb
 1615 0250 3B       		.uleb128 0x3b
 1616 0251 0B       		.uleb128 0xb
 1617 0252 39       		.uleb128 0x39
 1618 0253 0B       		.uleb128 0xb
 1619 0254 49       		.uleb128 0x49
 1620 0255 13       		.uleb128 0x13
 1621 0256 00       		.byte	0
 1622 0257 00       		.byte	0
 1623 0258 00       		.byte	0
 1624              		.section	.debug_loc,"",%progbits
 1625              	.Ldebug_loc0:
 1626              	.LLST4:
 1627 0000 04010000 		.4byte	.LFB14-.Ltext0
 1628 0004 06010000 		.4byte	.LCFI2-.Ltext0
 1629 0008 0200     		.2byte	0x2
 1630 000a 7D       		.byte	0x7d
 1631 000b 00       		.sleb128 0
 1632 000c 06010000 		.4byte	.LCFI2-.Ltext0
 1633 0010 30010000 		.4byte	.LFE14-.Ltext0
 1634 0014 0200     		.2byte	0x2
 1635 0016 7D       		.byte	0x7d
 1636 0017 08       		.sleb128 8
 1637 0018 00000000 		.4byte	0
 1638 001c 00000000 		.4byte	0
 1639              	.LVUS5:
 1640 0020 01       		.uleb128 .LVU79
 1641 0021 00       		.uleb128 .LVU81
 1642              	.LLST5:
 1643 0022 28010000 		.4byte	.LVL10-.Ltext0
 1644 0026 2E010000 		.4byte	.LVL11-.Ltext0
 1645 002a 0200     		.2byte	0x2
 1646 002c 30       		.byte	0x30
 1647 002d 9F       		.byte	0x9f
 1648 002e 00000000 		.4byte	0
 1649 0032 00000000 		.4byte	0
 1650              	.LVUS3:
 1651 0036 01       		.uleb128 .LVU59
ARM GAS  /tmp/ccIusuWx.s 			page 46


 1652 0037 00       		.uleb128 .LVU61
 1653              	.LLST3:
 1654 0038 AE000000 		.4byte	.LVL7-.Ltext0
 1655 003c B2000000 		.4byte	.LVL8-.Ltext0
 1656 0040 0200     		.2byte	0x2
 1657 0042 30       		.byte	0x30
 1658 0043 9F       		.byte	0x9f
 1659 0044 00000000 		.4byte	0
 1660 0048 00000000 		.4byte	0
 1661              	.LLST6:
 1662 004c 46010000 		.4byte	.LFB9-.Ltext0
 1663 0050 4C010000 		.4byte	.LCFI3-.Ltext0
 1664 0054 0200     		.2byte	0x2
 1665 0056 7D       		.byte	0x7d
 1666 0057 00       		.sleb128 0
 1667 0058 4C010000 		.4byte	.LCFI3-.Ltext0
 1668 005c 84010000 		.4byte	.LFE9-.Ltext0
 1669 0060 0200     		.2byte	0x2
 1670 0062 7D       		.byte	0x7d
 1671 0063 08       		.sleb128 8
 1672 0064 00000000 		.4byte	0
 1673 0068 00000000 		.4byte	0
 1674              	.LLST0:
 1675 006c 00000000 		.4byte	.LFB6-.Ltext0
 1676 0070 04000000 		.4byte	.LCFI0-.Ltext0
 1677 0074 0200     		.2byte	0x2
 1678 0076 7D       		.byte	0x7d
 1679 0077 00       		.sleb128 0
 1680 0078 04000000 		.4byte	.LCFI0-.Ltext0
 1681 007c 1E000000 		.4byte	.LCFI1-.Ltext0
 1682 0080 0200     		.2byte	0x2
 1683 0082 7D       		.byte	0x7d
 1684 0083 08       		.sleb128 8
 1685 0084 1E000000 		.4byte	.LCFI1-.Ltext0
 1686 0088 20000000 		.4byte	.LFE6-.Ltext0
 1687 008c 0200     		.2byte	0x2
 1688 008e 7D       		.byte	0x7d
 1689 008f 00       		.sleb128 0
 1690 0090 00000000 		.4byte	0
 1691 0094 00000000 		.4byte	0
 1692              	.LVUS1:
 1693 0098 00       		.uleb128 0
 1694 0099 02       		.uleb128 .LVU19
 1695 009a 02       		.uleb128 .LVU19
 1696 009b 01       		.uleb128 .LVU22
 1697 009c 01       		.uleb128 .LVU22
 1698 009d 01       		.uleb128 .LVU27
 1699 009e 01       		.uleb128 .LVU27
 1700 009f 01       		.uleb128 .LVU30
 1701 00a0 01       		.uleb128 .LVU30
 1702 00a1 01       		.uleb128 .LVU33
 1703 00a2 01       		.uleb128 .LVU33
 1704 00a3 00       		.uleb128 .LVU35
 1705 00a4 00       		.uleb128 .LVU35
 1706 00a5 00       		.uleb128 0
 1707              	.LLST1:
 1708 00a6 3A000000 		.4byte	.LVL0-.Ltext0
ARM GAS  /tmp/ccIusuWx.s 			page 47


 1709 00aa 3A000000 		.4byte	.LVL0-.Ltext0
 1710 00ae 0100     		.2byte	0x1
 1711 00b0 50       		.byte	0x50
 1712 00b1 3A000000 		.4byte	.LVL0-.Ltext0
 1713 00b5 42000000 		.4byte	.LVL1-.Ltext0
 1714 00b9 0300     		.2byte	0x3
 1715 00bb 70       		.byte	0x70
 1716 00bc 7C       		.sleb128 -4
 1717 00bd 9F       		.byte	0x9f
 1718 00be 42000000 		.4byte	.LVL1-.Ltext0
 1719 00c2 4C000000 		.4byte	.LVL3-.Ltext0
 1720 00c6 0300     		.2byte	0x3
 1721 00c8 70       		.byte	0x70
 1722 00c9 78       		.sleb128 -8
 1723 00ca 9F       		.byte	0x9f
 1724 00cb 4C000000 		.4byte	.LVL3-.Ltext0
 1725 00cf 50000000 		.4byte	.LVL4-.Ltext0
 1726 00d3 0300     		.2byte	0x3
 1727 00d5 70       		.byte	0x70
 1728 00d6 74       		.sleb128 -12
 1729 00d7 9F       		.byte	0x9f
 1730 00d8 50000000 		.4byte	.LVL4-.Ltext0
 1731 00dc 54000000 		.4byte	.LVL5-.Ltext0
 1732 00e0 0300     		.2byte	0x3
 1733 00e2 70       		.byte	0x70
 1734 00e3 60       		.sleb128 -32
 1735 00e4 9F       		.byte	0x9f
 1736 00e5 54000000 		.4byte	.LVL5-.Ltext0
 1737 00e9 56000000 		.4byte	.LVL6-.Ltext0
 1738 00ed 0300     		.2byte	0x3
 1739 00ef 70       		.byte	0x70
 1740 00f0 40       		.sleb128 -64
 1741 00f1 9F       		.byte	0x9f
 1742 00f2 56000000 		.4byte	.LVL6-.Ltext0
 1743 00f6 5C000000 		.4byte	.LFE5-.Ltext0
 1744 00fa 0100     		.2byte	0x1
 1745 00fc 50       		.byte	0x50
 1746 00fd 00000000 		.4byte	0
 1747 0101 00000000 		.4byte	0
 1748              	.LVUS2:
 1749 0105 00       		.uleb128 0
 1750 0106 00       		.uleb128 .LVU25
 1751 0107 00       		.uleb128 .LVU25
 1752 0108 00       		.uleb128 0
 1753              	.LLST2:
 1754 0109 3A000000 		.4byte	.LVL0-.Ltext0
 1755 010d 48000000 		.4byte	.LVL2-.Ltext0
 1756 0111 0100     		.2byte	0x1
 1757 0113 51       		.byte	0x51
 1758 0114 48000000 		.4byte	.LVL2-.Ltext0
 1759 0118 5C000000 		.4byte	.LFE5-.Ltext0
 1760 011c 0A00     		.2byte	0xa
 1761 011e F3       		.byte	0xf3
 1762 011f 03       		.uleb128 0x3
 1763 0120 F5       		.byte	0xf5
 1764 0121 01       		.uleb128 0x1
 1765 0122 25       		.uleb128 0x25
ARM GAS  /tmp/ccIusuWx.s 			page 48


 1766 0123 F7       		.byte	0xf7
 1767 0124 2C       		.uleb128 0x2c
 1768 0125 F7       		.byte	0xf7
 1769 0126 00       		.uleb128 0
 1770 0127 9F       		.byte	0x9f
 1771 0128 00000000 		.4byte	0
 1772 012c 00000000 		.4byte	0
 1773              		.section	.debug_aranges,"",%progbits
 1774 0000 1C000000 		.4byte	0x1c
 1775 0004 0200     		.2byte	0x2
 1776 0006 00000000 		.4byte	.Ldebug_info0
 1777 000a 04       		.byte	0x4
 1778 000b 00       		.byte	0
 1779 000c 0000     		.2byte	0
 1780 000e 0000     		.2byte	0
 1781 0010 00000000 		.4byte	.Ltext0
 1782 0014 84010000 		.4byte	.Letext0-.Ltext0
 1783 0018 00000000 		.4byte	0
 1784 001c 00000000 		.4byte	0
 1785              		.section	.debug_ranges,"",%progbits
 1786              	.Ldebug_ranges0:
 1787 0000 04010000 		.4byte	.LBB18-.Ltext0
 1788 0004 04010000 		.4byte	.LBE18-.Ltext0
 1789 0008 06010000 		.4byte	.LBB21-.Ltext0
 1790 000c 16010000 		.4byte	.LBE21-.Ltext0
 1791 0010 00000000 		.4byte	0
 1792 0014 00000000 		.4byte	0
 1793              		.section	.debug_line,"",%progbits
 1794              	.Ldebug_line0:
 1795 0000 F2020000 		.section	.debug_str,"MS",%progbits,1
 1795      0300DC00 
 1795      00000201 
 1795      FB0E0D00 
 1795      01010101 
 1796              	.LASF22:
 1797 0000 76506F72 		.ascii	"vPortEnterCritical\000"
 1797      74456E74 
 1797      65724372 
 1797      69746963 
 1797      616C00
 1798              	.LASF30:
 1799 0013 7078436F 		.ascii	"pxCode\000"
 1799      646500
 1800              	.LASF23:
 1801 001a 76506F72 		.ascii	"vPortEndScheduler\000"
 1801      74456E64 
 1801      53636865 
 1801      64756C65 
 1801      7200
 1802              	.LASF16:
 1803 002c 5469636B 		.ascii	"TickType_t\000"
 1803      54797065 
 1803      5F7400
 1804              	.LASF35:
 1805 0037 76546173 		.ascii	"vTaskSwitchContext\000"
 1805      6B537769 
 1805      74636843 
ARM GAS  /tmp/ccIusuWx.s 			page 49


 1805      6F6E7465 
 1805      787400
 1806              	.LASF20:
 1807 004a 53797354 		.ascii	"SysTick_Handler\000"
 1807      69636B5F 
 1807      48616E64 
 1807      6C657200 
 1808              	.LASF8:
 1809 005a 6C6F6E67 		.ascii	"long int\000"
 1809      20696E74 
 1809      00
 1810              	.LASF6:
 1811 0063 73686F72 		.ascii	"short int\000"
 1811      7420696E 
 1811      7400
 1812              	.LASF33:
 1813 006d 2F686F6D 		.ascii	"/home/me/Codigos/6-Stm32_GCC_FreeRTOS10.2.1/3-ComPr"
 1813      652F6D65 
 1813      2F436F64 
 1813      69676F73 
 1813      2F362D53 
 1814 00a0 6F636573 		.ascii	"ocessos\000"
 1814      736F7300 
 1815              	.LASF32:
 1816 00a8 2E2E2F66 		.ascii	"../freertos/portable/GCC/ARM_CM3/port.c\000"
 1816      72656572 
 1816      746F732F 
 1816      706F7274 
 1816      61626C65 
 1817              	.LASF37:
 1818 00d0 70727654 		.ascii	"prvTaskExitError\000"
 1818      61736B45 
 1818      78697445 
 1818      72726F72 
 1818      00
 1819              	.LASF12:
 1820 00e1 5461736B 		.ascii	"TaskFunction_t\000"
 1820      46756E63 
 1820      74696F6E 
 1820      5F7400
 1821              	.LASF26:
 1822 00f0 756C4475 		.ascii	"ulDummy\000"
 1822      6D6D7900 
 1823              	.LASF5:
 1824 00f8 756E7369 		.ascii	"unsigned char\000"
 1824      676E6564 
 1824      20636861 
 1824      7200
 1825              	.LASF10:
 1826 0106 5F5F7569 		.ascii	"__uint32_t\000"
 1826      6E743332 
 1826      5F7400
 1827              	.LASF9:
 1828 0111 6C6F6E67 		.ascii	"long unsigned int\000"
 1828      20756E73 
 1828      69676E65 
 1828      6420696E 
ARM GAS  /tmp/ccIusuWx.s 			page 50


 1828      7400
 1829              	.LASF7:
 1830 0123 73686F72 		.ascii	"short unsigned int\000"
 1830      7420756E 
 1830      7369676E 
 1830      65642069 
 1830      6E7400
 1831              	.LASF31:
 1832 0136 474E5520 		.ascii	"GNU C17 13.2.0 -mcpu=cortex-m3 -mthumb -mfloat-abi="
 1832      43313720 
 1832      31332E32 
 1832      2E30202D 
 1832      6D637075 
 1833 0169 736F6674 		.ascii	"soft -march=armv7-m -g -gdwarf-2 -Os -fomit-frame-p"
 1833      202D6D61 
 1833      7263683D 
 1833      61726D76 
 1833      372D6D20 
 1834 019c 6F696E74 		.ascii	"ointer\000"
 1834      657200
 1835              	.LASF42:
 1836 01a3 756C4E65 		.ascii	"ulNewBASEPRI\000"
 1836      77424153 
 1836      45505249 
 1836      00
 1837              	.LASF28:
 1838 01b0 7078506F 		.ascii	"pxPortInitialiseStack\000"
 1838      7274496E 
 1838      69746961 
 1838      6C697365 
 1838      53746163 
 1839              	.LASF34:
 1840 01c6 78546173 		.ascii	"xTaskIncrementTick\000"
 1840      6B496E63 
 1840      72656D65 
 1840      6E745469 
 1840      636B00
 1841              	.LASF39:
 1842 01d9 76506F72 		.ascii	"vPortSetBASEPRI\000"
 1842      74536574 
 1842      42415345 
 1842      50524900 
 1843              	.LASF13:
 1844 01e9 53746163 		.ascii	"StackType_t\000"
 1844      6B547970 
 1844      655F7400 
 1845              	.LASF1:
 1846 01f5 756E7369 		.ascii	"unsigned int\000"
 1846      676E6564 
 1846      20696E74 
 1846      00
 1847              	.LASF0:
 1848 0202 6C6F6E67 		.ascii	"long long unsigned int\000"
 1848      206C6F6E 
 1848      6720756E 
 1848      7369676E 
 1848      65642069 
ARM GAS  /tmp/ccIusuWx.s 			page 51


 1849              	.LASF41:
 1850 0219 76506F72 		.ascii	"vPortRaiseBASEPRI\000"
 1850      74526169 
 1850      73654241 
 1850      53455052 
 1850      4900
 1851              	.LASF25:
 1852 022b 75784372 		.ascii	"uxCriticalNesting\000"
 1852      69746963 
 1852      616C4E65 
 1852      7374696E 
 1852      6700
 1853              	.LASF18:
 1854 023d 76506F72 		.ascii	"vPortSetupTimerInterrupt\000"
 1854      74536574 
 1854      75705469 
 1854      6D657249 
 1854      6E746572 
 1855              	.LASF2:
 1856 0256 6C6F6E67 		.ascii	"long long int\000"
 1856      206C6F6E 
 1856      6720696E 
 1856      7400
 1857              	.LASF24:
 1858 0264 5356435F 		.ascii	"SVC_Handler\000"
 1858      48616E64 
 1858      6C657200 
 1859              	.LASF38:
 1860 0270 70765061 		.ascii	"pvParameters\000"
 1860      72616D65 
 1860      74657273 
 1860      00
 1861              	.LASF29:
 1862 027d 7078546F 		.ascii	"pxTopOfStack\000"
 1862      704F6653 
 1862      7461636B 
 1862      00
 1863              	.LASF19:
 1864 028a 50656E64 		.ascii	"PendSV_Handler\000"
 1864      53565F48 
 1864      616E646C 
 1864      657200
 1865              	.LASF21:
 1866 0299 76506F72 		.ascii	"vPortExitCritical\000"
 1866      74457869 
 1866      74437269 
 1866      74696361 
 1866      6C00
 1867              	.LASF11:
 1868 02ab 75696E74 		.ascii	"uint32_t\000"
 1868      33325F74 
 1868      00
 1869              	.LASF40:
 1870 02b4 756C4E65 		.ascii	"ulNewMaskValue\000"
 1870      774D6173 
 1870      6B56616C 
 1870      756500
ARM GAS  /tmp/ccIusuWx.s 			page 52


 1871              	.LASF17:
 1872 02c3 63686172 		.ascii	"char\000"
 1872      00
 1873              	.LASF36:
 1874 02c8 70727650 		.ascii	"prvPortStartFirstTask\000"
 1874      6F727453 
 1874      74617274 
 1874      46697273 
 1874      74546173 
 1875              	.LASF3:
 1876 02de 6C6F6E67 		.ascii	"long double\000"
 1876      20646F75 
 1876      626C6500 
 1877              	.LASF4:
 1878 02ea 7369676E 		.ascii	"signed char\000"
 1878      65642063 
 1878      68617200 
 1879              	.LASF27:
 1880 02f6 78506F72 		.ascii	"xPortStartScheduler\000"
 1880      74537461 
 1880      72745363 
 1880      68656475 
 1880      6C657200 
 1881              	.LASF15:
 1882 030a 55426173 		.ascii	"UBaseType_t\000"
 1882      65547970 
 1882      655F7400 
 1883              	.LASF14:
 1884 0316 42617365 		.ascii	"BaseType_t\000"
 1884      54797065 
 1884      5F7400
 1885              		.ident	"GCC: (Arch Repository) 13.2.0"
ARM GAS  /tmp/ccIusuWx.s 			page 53


DEFINED SYMBOLS
                            *ABS*:00000000 port.c
     /tmp/ccIusuWx.s:24     .text:00000000 $t
     /tmp/ccIusuWx.s:29     .text:00000000 prvTaskExitError
     /tmp/ccIusuWx.s:91     .text:00000020 prvPortStartFirstTask
     /tmp/ccIusuWx.s:126    .text:0000003a pxPortInitialiseStack
     /tmp/ccIusuWx.s:177    .text:00000058 $d
     /tmp/ccIusuWx.s:181    .text:0000005c $t
     /tmp/ccIusuWx.s:187    .text:0000005c SVC_Handler
     /tmp/ccIusuWx.s:209    .text:00000080 pxCurrentTCBConst2
     /tmp/ccIusuWx.s:209    .text:00000080 $d
     /tmp/ccIusuWx.s:219    .text:00000084 $t
     /tmp/ccIusuWx.s:225    .text:00000084 vPortEndScheduler
     /tmp/ccIusuWx.s:245    .text:00000086 vPortEnterCritical
     /tmp/ccIusuWx.s:286    .text:000000a0 $d
     /tmp/ccIusuWx.s:290    .text:000000a4 $t
     /tmp/ccIusuWx.s:296    .text:000000a4 vPortExitCritical
     /tmp/ccIusuWx.s:339    .text:000000b4 $d
     /tmp/ccIusuWx.s:343    .text:000000b8 $t
     /tmp/ccIusuWx.s:349    .text:000000b8 PendSV_Handler
     /tmp/ccIusuWx.s:384    .text:00000100 pxCurrentTCBConst
     /tmp/ccIusuWx.s:384    .text:00000100 $d
     /tmp/ccIusuWx.s:394    .text:00000104 $t
     /tmp/ccIusuWx.s:400    .text:00000104 SysTick_Handler
     /tmp/ccIusuWx.s:483    .text:00000130 vPortSetupTimerInterrupt
     /tmp/ccIusuWx.s:522    .text:00000146 xPortStartScheduler
     /tmp/ccIusuWx.s:579    .text:00000180 $d
     /tmp/ccIusuWx.s:584    .data:00000000 $d
     /tmp/ccIusuWx.s:588    .data:00000000 uxCriticalNesting
     /tmp/ccIusuWx.s:1885   .text:00000184 $d

UNDEFINED SYMBOLS
pxCurrentTCB
vTaskSwitchContext
xTaskIncrementTick
