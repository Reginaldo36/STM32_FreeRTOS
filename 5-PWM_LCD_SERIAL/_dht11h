#define DHT11_SUCCESS         1
#define DHT11_ERROR_CHECKSUM  2
#define DHT11_ERROR_TIMEOUT   3

typedef struct DHT11_Dev {
	uint8_t temparature;
	uint8_t humidity;
} DHT11_Dev;

int DHT11_init(struct DHT11_Dev* dev);
int DHT11_read(struct DHT11_Dev* dev);

/*==========================================================*/

#define IN_GPIO  GPIOA->CRH     |= (0x4<<16 )
#define OU_GPIO GPIOA->CRH     |= (0x3<<16 )

#define SET_PIN GPIOA->ODR		|= 1<<12
#define RESET_PIN GPIOA->ODR		&=~(1<<12)
#define LE_PIN	(GPIOA->IDR & (1<<12))

int DHT11_init(struct DHT11_Dev* dev) {

	RCC->APB2ENR	|= (1<<2); // GPIOA
	OU_GPIO;

	return 0;
}

int DHT11_read(struct DHT11_Dev* dev) {
	
	//Initialisation
	uint8_t i, j;
	uint8_t data[5] = {0x00, 0x00, 0x00, 0x00, 0x00};

	OU_GPIO;

	// GPIO_ResetBits(dev->port, dev->pin);
	RESET_PIN;

	//wait 18ms
	__delay_ms(18);
	
	//Put HIGH for 20-40us
	// GPIO_SetBits(dev->port, dev->pin);
	SET_PIN;

	//wait 40us
	//End start condition
	__delay(40);
	
	//io();
	//Input mode to receive data
	IN_GPIO;
	
	//DHT11 ACK
	//should be LOW for at least 80us

	u8 K =0 ; 
	while(!(LE_PIN)) {
		__delay(1);
		K++;
		if(K > 100) 
			return DHT11_ERROR_TIMEOUT;
	}
	K =0 ; 
	
	//should be HIGH for at least 80us
	//while(GPIO_ReadInputDataBit(dev->port, dev->pin));		
	while(LE_PIN) {
		__delay(1);
		K++;
		if(K > 100) 
			return DHT11_ERROR_TIMEOUT;
	}
	
	//Read 40 bits (8*5)
	for(j = 0; j < 5; ++j) {
		for(i = 0; i < 8; ++i) {
			
			//LOW for 50us
			while(!(LE_PIN));
			/*TIM2->CNT = 0;
			while(!GPIO_ReadInputDataBit(dev->port, dev->pin)) {
				if(TIM2->CNT > 60)
					return DHT11_ERROR_TIMEOUT;
			}*/
			
			//Start counter
			//-- TIM_SetCounter(TIM2, 0);
			
			//HIGH for 26-28us = 0 / 70us = 1
			while(LE_PIN);
			/*while(!GPIO_ReadInputDataBit(dev->port, dev->pin)) {
				if(TIM2->CNT > 100)
					return DHT11_ERROR_TIMEOUT;
			}*/
			
			//Calc amount of time passed
			
			//shift 0
			data[j] = data[j] << 1;
			
			//if > 30us it's 1
		__delay(1);
		K++;
		if(K > 40) 
				data[j] = data[j]+1;
		}
	}
	
	//verify the Checksum
	if(data[4] != (data[0] + data[2]))
		return DHT11_ERROR_CHECKSUM;
	
	//set data
	dev->temparature = data[2];
	dev->humidity = data[0];
	
	return DHT11_SUCCESS;
}

